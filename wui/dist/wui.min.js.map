{"version":3,"sources":["core.js","method.js","widget.js","object.js","page.js","data.js","cookie.js","timer.js","skin.js","init.js","form.js","log.js","modalDialog.js","layer.js","notice.js","tabs.js","validate.js","wui.tag.js","wui.option.js","wui.date.js","wui.selectBox.js","wui.tagsinput.js","wui.chooseBox.js","wui.selectComboBox.js","wui.file.js","wui.img.js","wui.tagBox.js","wui.tagComboBox.js","wui.tree.js","wui.grid.js","wui.ueditor.js"],"names":["libs","window","jQuery","$","FRAME_NAME","wui","undefined","VERSION","VERSIONDATE","wuiGlobalConfig","WUI_CONFIG","wuiGlobalParams","WUI_PARAMS","wuiGlobalLanguage","WUI_LANGUAGE","CONTEXT","CONTEXTPATH","document","location","protocol","host","SCRIPTS","getElementsByTagName","WUI_SCRIPT","length","WUI_SCRIPT_PATH","querySelector","src","getAttribute","lastIndex","lastIndexOf","WUI_PROJECT_PATH","substring","defaultValidateStyle","error","theElement","tipSetting","attr","widgetName","widgetId","parent","widgetValue","get","ui","isArray","hide","tips","innerHTML","next","children","labelValidateStyle","uiType","insertAfter","is","prop","parents","theParents","place","isDebug","context","fileContext","contextPath","FRAME_PATH","commonPageBasePath","uploadFlashUrl","logUtilConfig","isLog","isLogMethodCalled","isLogParamValue","isLogMessage","isLogError","isLogWarn","debugLog","className","methodName","debugConfig","CONSTANTS","EMPTYFUNC","KEYS","CLEAR","ENTER","NEXT","END","HOME","LEFT","UP","RIGHT","DOWN","OTHER","DELETE","BACKSPACE","ISCODEURLVALUE","DATAATTRIBUTEFIELD","DATAINITWIDGETFIELD","SKINNAMEFIELD","URLVALUEEXTSTRING","OMODALWINDOW","validateUtilConfig","errorTipStyles","label","errorTipStyle","isAddRequiredStar","labelErrorClass","elementErrorClass","elementSuccessClass","starDirection","validateAttributeField","serviceInterface","orgServiceAPI","subOrgServiceAPI","userServiceAPI","chooseUserServiceAPI","gridFileUploadServiceAPI","gridImportServiceAPI","opinionBoxSource","skinConfig","skinFileName","skinId","isAddSkin","isInitSkin","isInitPage","modalWindow","pageHeight","pageWidth","selectBoxSetting","isTriggerSelectEvent","gridSetting","defaultColConfig","key","name","align","hidden","hidedlg","frozen","fixed","drap","sortable","editable","formatter","wstype","search","stype","searchoptions","searchhidden","formatDate","searchDefVal","searchSort","searchrules","dictCodeSetting","items","text","commonOpinions","commonOpinionsSetting","isAddRandomCode","extVariables","browser","isIE","userAgent","navigator","rMsie","ua","toLowerCase","match","exec","isChrome","rChrome","isMozila","rFirefox","isOpera","rOpera","isSafari","rSafari","isIE7","isIE8","isIE9","isIE10","extend","ISSUPPORTH5","FILE_STATUS","Dropzone","QUEUED","PROCESSING","CANCELED","ERROR","SUCCESS","SWFUpload","IN_PROGRESS","CANCELLED","COMPLETE","layerSetting","title","url","skin","width","height","offset","icon","shade","closeBtn","time","maxWidth","maxHeight","zIndex","isShadeClose","isMaxmin","isFixed","isResize","isShowMultipleTips","isScrollbar","isFull","onResizing","onPoped","onSure","onCancel","onClosed","onFull","onMin","onRestore","each","language","date","days","daysShort","daysMin","months","monthsShort","today","clear","suffix","meridiem","clearBtn","chooseBox","editBtn","file","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictUploadCanceled","dictCancelUploadConfirmation","dictRemoveFile","dictUploadFile","dictDownloadFile","dictCancelUpload","dictMaxFilesExceeded","img","dictEditFile","grid","searchBar","searchBtn","resetBtn","showMoreBtn","hideMoreBtn","toolBar","showFilterBtn","highSearchBtn","exportBtn","importBtn","screenBtn","filterShowString","filterHideString","importPageTitle","treeIcon","plus","minus","leaf","defaultText","emptyrowstext","recordtext","emptyrecords","loadtext","savetext","pgtext","pgfirst","pglast","pgnext","pgprev","pgrecs","showhide","overPageNumberText","pagerCaption","pageText","recordPage","nomorerecs","scrollPullup","scrollPulldown","scrollRefresh","singleColHead","selectBox","noneSelected","noneResults","deselectAll","selectAll","doneButton","liveSearchPlaceholder","selectComboBox","tagBox","placeholder","noneItem","tagComboBox","tagsinput","tree","virtualRootTitle","ueditor","initialContent","wordOverFlowMsg","version","versionDate","stopPropagation","e","logMethodCalled","event","preventDefault","addEventListener","element","eType","handle","useCapture","attachEvent","removeEventListener","detachEvent","ready","callback","scroll","params","$elements","logError","isJQuery","size","color","autohidemode","cursoropacitymax","cursoropacitymin","oneaxismousemode","config","cursorborder","cursorwidth","cursorcolor","cursorborderradius","horizrailenabled","enablekeyboard","oNiceScrollArr","oNiceScroll","this","niceScroll","index","elem","onresize","resize","push","$dom","resizeFun","logMessage","on","setFullScreenHeight","selector","isScroll","exist","viewSize","getViewSize","wScrollLeft","scrollLeft","wScrollTop","scrollTop","offsetSize","left","top","right","bottom","parseInt","getFullScreenSize","winW","winH","innerHeight","innerWidth","documentElement","clientHeight","clientWidth","body","getBrowserVersion","guid","S4","Math","random","toString","getTimeFormat","dt","formatStr","timeStamp","getTime","Date","str","week","weekShort","replace","getFullYear","getYear","getMonth","getDay","getDate","getHours","hour","getMinutes","getSeconds","day","format","Number","now","result","setTime","parse","createElement","html","div","childNodes","getChooseBoxNode","chooseBoxNodes","getChooseBoxNodes","chooseBoxNode","node","emptyChooseBoxNode","removeChooseBoxNode","pop","addChooseBoxNode","selectId","modalWindowIndex","indexOf","windowModal","call","logParamValue","paramName","paramValue","val","defval","isNaN","re","slice","logWarn","formatOtherParam","otherParam","parseToObj","formatParamToBool","param","formatParamToNumberBool","formatMaxNumber","maxNumber","formatMaxChars","init","initParams","isJson","widgets","i","theInitParam","isUndefined","getAttributeParams","$element","dataAttributeField","datas","data","value","number","checkIsLoadPlugins","isLoadPlugin","appendTo","fn","datetimepicker","err","fancytree","addToolBar","obj","btnContents","nodePosition","$btnToolBar","oBtn","cssClass","type","$btn","action","append","mask","isShow","opacityNum","maskHtml","show","deleteDataByIds","ids","deleteCallback","content","options","yes","closeIndex","confirm","warnNotice","textarea","extra","getStyle","thatElement","currentStyle","rect","getBoundingClientRect","parseFloat","getComputedStyle","change","minHeight","padding","style","_length","scrollHeight","overflowY","currHeight","that","input","minWidth","eleFontSize","css","eleFontFamily","border","valueWidth","eleWidth","getTextField","textField","textFields","reg","_len","_i","jField","oField","split","NaN","ex","isFunction","isObject","isString","isNumber","isBoolean","isEmptyType","getLength","isEmptyObject","deepCopy","json","returnObject","objStr","returnValue","eval","console","info","isEqualObject","objA","objB","compareObj","isDom","isTheDOM","HTMLElement","nodeType","nodeName","isTheJQuery","getJqueryObject","JSON","stringify","_hasOwnProperty","object","Object","prototype","count","flag","hasOwnProperty","oA","oB","k","openWindow","setting","pageUrl","pageParams","pageName","pageSetting","buildUrl","WUI_WINDOW_FLAG","open","closeWindow","onBeforeClose","isRefresh","opener","closed","close","backhome","page","href","encodeURI","uri","encodeURIComponent","decodeURI","decodeURIComponent","encodeURLParamValue","isCodeUrlValue","urlVal","extString","isDecodeUrlValue","matchReg","RegExp","test","decodeURLParamValue","realValue","urlValue","paramObject","addRandomCode","subStrFlag","randomCode","valueOf","queryString","urlQueryString","getQueryString","charAt","substr","urlString","q","temp","getQueryStringByName","ajax","onSuccess","onError","async","dataType","method","onBeforeSend","onComplete","args","Array","arguments","contentType","successCallback","errorCallback","processData","beforeSend","XMLHttpRequest","success","response","status","complete","textStatus","errorThrown","errorNotice","getAjax","patchAjax","deleteAjax","submitByForm","form","submit","remove","setCookie","expiresDays","cookie","escape","toGMTString","deleteCookie","getCookie","strCookie","arrCookie","_cookie","unescape","getLocalStorage","localStorage","getItem","setLocalStorage","setItem","deleteLocalStorage","removeItem","setTimeout","onDone","timeout","clearTimeout","timeoutID","setInterval","cycle","clearInterval","timerID","setSkins","skinName","onDoThings","win","readyState","iframes","contentWindow","setSkin","onEnd","skinElement","getSkinElement","currentSkinName","basePath","removeSkin","getSkin","cssURL","linkTag","getElementById","tagName","initPage","components","dataIsInitPage","$initConSelector","invalidControls","_initHandle","isRTL","addClass","_initScroll","_initValidControls","hasClass","_initInvalidControls","find","_initUiWidget","_initElement","_initValidate","formId","validate","_initSkins","_init","initWidgetParams","initDesign","_initButton","prepend","isInitDesign","getForm","ignore","ueditorType","$select","not","id","oWidget","join","theVal","fillForm","onBeforeFill","onFilled","arr","x","isFillSuccess","ret","theWidget","empty","set","select","emptyForm","isValidate","readonly","commonLabel","readwrite","removeAttr","removeClass","disabled","enabled","message","appName","log","warn","openModalDialog","option","_getDefault","full","maxmin","closedCallback","cancelCallback","shadeClose","area","end","getModalDialogs","cancel","layero","isClose","use","layer","addModalDialog","modalDialog","modalDialogIndex","res","closeModalDialog","modalDialogs","dialogOff","cancelModalDialog","getWindowModal","dialogIndex","getFrameIndex","deleteDialog","closeAll","closeDialog","setLayerSetting","defaultParam","returnParam","theParam","openHtml","htmlContent","scrollbar","openIframe","load","param1","param2","follow","tipsMore","closeFunc","msg","alert","btn","prompt","setTopLayer","setTop","getToastrDefaults","closeButton","debug","progressBar","positionClass","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","target","tapToDismiss","successNotice","notice","toastr","tabs","uiTabs","_executeMethod","funcName","_pluginDataName","_widgetName","apply","_on","eventType","func","_off","_add","tabPage","_remove","_index","onOpened","_option","_hide","tabPanels","_show","_disabled","_enabled","_empty","_refresh","_destroy","opt","_pluginName","_widgetEventType","direction","navStyle","tabStyle","isShowTabDrop","isFullScreen","offsetV","navWidth","navMargin","isDynamicLoading","isEnableRemove","isShowTitle","tabPages","isAccordion","onBeforeShow","onShown","onBeforeHide","onHidden","defaults","deleteIcon","WinReszier","timer","registered","inited","ev","notify","cnt","register","bind","unregister","constructor","pluginName","hasDom","initDom","AttributeParams","_opt","liNavTmpl","tabContentTmpl","deleteTpml","iframeTmpl","$Maxcontainer","$navBox","$tabsPageBox","$dropdownBox","navBoxItemList","listeners","handlers","_formatParams","dom","_buildContainer","self","_createContainer","prependTo","proxy","layout","_getList","_setEnableRemove","_setTabdrop","_shown","_hidden","tab","$i","len","_setHeight","_bindEvent","$li","oLi","emit","collection","lastNode","offsetTop","unshift","visibleNavLen","nav","navHeight","fullScreenSize","tabContentHeight","tabContentWidth","margin-left","margin-right","padding-top","padding-bottom","padding-left","padding-right","tabContentId","isRepeat","nextIndex","navItem","$liNav","aria-controls","$tabContent","$temp","iframeId","_iframe","relatedtarget","_src","off","_html","add","isSuccess","$a","ind","panelInd","panel","_lists","newOptions","_resetOption","eq","toggleTabElement","childrenDom","activeIndex","thisEl","el","splice","newBoxItemList","destroy","replaceWith","removeData","refresh","$iframe","handler","_j","_listeners","_handlers","formValidate","_resetForm","_valid","_rules","command","argument","_validElement","errorTipSetting","errorElement","validClass","textTdClassName","rules","messages","onkeyup","errorPlacement","highlight","unhighlight","submitHandler","required","widgetRequired","remote","email","dateISO","digits","creditcard","equalTo","extension","maxlength","validator","minlength","rangelength","range","max","min","ruleAttribute","dataAttribute","messageAttribute","messageSplitString","$form","requiredHtml","_validate","_initDom","_getOptions","thatOpions","errorClass","onfocusin","onfocusout","onsubmit","focusInvalid","focusCleanup","_addWidgetValidateMethod","_bindNameAttribute","_validateRuleSettings","addMethod","_normalizeAttributeRule","execValue","validateElement","rulesConfig","messagesConfig","requireStr","theRulesString","theMessagesString","theRegRules","theRules","theMessages","theRule","theRuleObject","theMessageObject","v","theTemp","theLabel","closest","prev","optRules","optMessages","resetForm","valid","validElement","addValidateMethod","validateName","validateMethod","errorMessage","setValidateDefault","validateDefaultParams","setDefaults","addValidateErrorTipStyle","styleName","styleMethod","TagNode","component","active","item","enable","jTextField","isClosable","tagTmp","renderNode","itemsName","renderTitle","tagClass","$input","before","$viewBox","nodeRenderStatus","removeNode","setEnable","trigger","classNames","nodes","itemData","showTitle","normChars","maxChars","ellipsis","isEnable","enter","focus","blur","setActive","isActive","_global","module","exports","define","amd","SelectNode","parentNode","getInitOpt","jsonReader","group","selected","childrens","optionTmp","pickerNodes","classList","checked","optgroupTmp","dividerTmp","isSelectGroup","$divider1","addPickerItem","click","hover","keydown","keyup","keynum","keyCode","which","nextSiblingNode","getNextSibling","isHidden","prevSiblingNode","getPrevSibling","setSelected","isSelected","setNodeSelected","isExcute","isGroup","isContinue","srcElement","getEnableChildrens","getComponentNodes","isFilter","childNode","addComponentNodes","removeComponentNodes","closePicker","resultNode","lastSelectedNode","popNodes","isMaxNumber","renderResult","setNodeHidden","isHiddenGroup","setHidden","uiDate","_readonly","_readwrite","_component","_pluginEventType","isFreeInput","isShowBtnGroup","pickerPosition","isShowClearBtn","isShowTodayBtn","isHighlightToday","weekStart","minuteStep","startDate","endDate","startView","emptyText","isForceParseValue","minView","maxView","isAutoclose","_initLanguage","dates","$selector","_checkView","$container","$toolBar","nextAll","parentDiv","wrap","dateParam","autoclose","formatType","todayBtn","todayHighlight","forceParse","hoursDisabled","_date","isResetWidget","unwrap","param3","uiSelectBox","initComponentAttributes","renderComponent","_set","isTriggerUnselectEvent","_get","_select","_unselect","_selectAll","_unselectAll","_reload","defaultSetting","loadUrl","loadData","source","isShowCloseBtn","multipleSeparator","isEnabledLiveSearch","isShowActionsBox","menuWidth","noneSelectedText","noneResultsText","deselectAllText","selectAllText","doneButtonText","noneOptionText","queryErrorText","root","lazy","lazySetting","onLoadComplete","expanded","activeNodes","itemsArray","itemsText","searchBoxTmp","actionsBoxTmp","closeButtonTmp","tipTmp","$buttonBox","$resultBox","$selectContentBox","ext","$caret","after","renderSearchBox","renderSelectButton","renderDropdownBox","hide.bs.dropdown","hidden.bs.dropdown","show.bs.dropdown","shown.bs.dropdown","htmlDom","codes","-1","code","otherHeight","filter","outerHeight","max-height","$searchBox","searchKeyword","keypress","removeSearchBox","$actionsbox","unselectAll","removeSelectButton","renderCloseButton","$closeBtn","openPicker","removeCloseButton","createNode","keyword","showNodes","removeNoneOptionTip","tipText","renderNoneOptionTip","renderNodes","childItem","subNode","getShowNodes","nodeTexts","itemValue","noneOptionTipText","querySuccess","0","1","getItemsFromSelect","queryError","getItemFromOption","itemText","hasAttribute","subOption","subItem","optionNode","getEnableSelectNodes","getEnableNodes","ajaxParam","reload","2","3","4","6","record","isHasNode","unselect","reoption","isLoadData","selectItems","keyObject","result1","result2","method2","toUpperCase","currentHandlers","uiTagsinput","modalIndex","formatParams","_getMaxNumber","isTriggerSelectedEvent","isTriggerUnselectedEvent","isAll","initHeight","isAddRemoveLink","isAllowDuplicates","isShowAnimate","placeholderText","noneItemText","onInput","onEnter","viewBoxTmp","inputBoxTmp","containerWidth","containerHeight","containerMaxHeight","renderInputBox","addNodes","updatedNodes","addNode","5","fadeIn","newNode","theNode","removeNodes","inputString","isStop","$lastNode","isResetHeight","isClear","isResetText","firstNode","getMaxNumber","_fillForm","itemJson","_close","isVoluation","uiChooseBox","_openPopup","newParam","popPageUrl","isClickTriggerPopup","isShowInputBar","isOpenWithNodes","isDisableRemove","pageTitle","treeTitle","treeUrl","lazyField","isEnabledSearch","tabTitle","tabUrl","gridTitle","gridUrl","isFilterable","filterUrl","filterData","filterPickerWidth","filterPickerMaxHeight","filterSourceReader","filterField","filterDirection","filterMaxHeight","filterMenuWidth","filterClassList","onBeforeOpenPopup","onClosedLayer","onSuccessCallback","onCancelCallback","onEmpty","onEmptyBtn","isRewrite","treeExtSetting","tabsExtSetting","gridExtSetting","tagsExtSetting","modalExtSetting","isRendPickerNode","viewConTmp","pickerTmp","$viewCon","renderToolbar","renderPicker","keyDelete","keyDown","keyUp","keyEnd","keyLeft","keyRight","lastEnableNode","findLastEnableNode","loadPickerNodes","pickerNode","viewWidth","viewHeight","emptyPicker","createSelectNode","renderPickerNodes","rootField","filterPicker","isRenderInput","urlParams","selectorId","returnParams","beforeOpenPop","commonPageUrl","modalDialogParams","openPopup","uiSelectComboBox","isReload","beforeIframeLoad","updateSubpageItem","maxOptionsText","iframe","_setDirection","_initDropDownBox","_initSelectContentBox","_loadIframe","comboBoxId","_value","_data","_checkDropdownPosition","noop","offsetHeight","_parseText","showText","field","textFiled","textJson","textTemp","_addItem","itemName","_removeItem","isIndex","isRefreshDowndropPage","_getPreviewTemplate","previewTemplate","_getPrevIcon","fileName","archive","audio","excel","image","video","pdf","powerpoint","word","strs","postfix","fileIcon","uiFile","_getFilesWithStatus","fielStatus","_selectFile","_addFilesPreview","files","_upload","_cancel","_widget","acceptedFiles","maxFilesize","isCreateImageThumbnails","isAutoProcessQueue","isAddRemoveLinks","isAddUploadLinks","TestTags","conMinWidth","conMinHeight","thumbnailWidth","thumbnailHeight","flashUrl","buttonSetting","imageUrl","falshImageSuffix","headers","filePath","fileUrl","downloadUrl","downloadServiceParams","subPath","isRename","onAddedFile","onMaxFilesReached","onRemovedFile","onCancelFile","onFail","containerTmp","parallelUploads","uploadMultiple","maxThumbnailFilesize","clickable","filesizeBase","minThumbnailHeight","minThumbnailWidth","inputSelectorId","fileSelectorId","isSupport","_file","filesFormMethod","queuedFiles","successFiles","errorFiles","uploadNext","clickBoxTmp","previewsContainer","$clickBoxView","_initFileInfo","fileInfo","accepted","isAddFormMethod","lastModified","lastModifiedDate","previewElement","processing","upload","progress","total","bytesSent","webkitRelativePath","_createElement","_initSize","tempId","_initWidget","apiParams","serviceParam","autoDiscover","fileParam","maxFiles","createImageThumbnails","autoProcessQueue","addRemoveLinks","_initDropzoneEvent","file_types_description","use_query_string","file_size_limit","pointCharIndex","falshImageUrl","insert","falshBtnWidth","falshBtnHeight","upload_url","flash_url","file_post_name","post_params","prevent_swf_caching","file_types","file_upload_limit","file_queue_limit","button_placeholder_id","button_text","button_text_style","button_text_left_padding","button_text_top_padding","button_image_url","button_width","button_height","button_action","BUTTON_ACTION","SELECT_FILES","button_disabled","button_cursor","CURSOR","HAND","button_window_mode","WINDOW_MODE","TRANSPARENT","swfupload_load_failed_handler","swfupload_loaded_handler","file_dialog_start_handler","file_queued_handler","_addedFileEvent","file_queue_error_handler","queueErrorCode","-100","-110","-120","-130","file_dialog_complete_handler","selectedFilesNumber","queuedFilesNumber","allQueuedFilesNumber","upload_start_handler","upload_progress_handler","completeBytes","totalBytes","_progress","upload_error_handler","_error","upload_success_handler","_success","upload_complete_handler","_complete","debug_handler","custom_settings","thumbnailElement","_ref","_ref1","myDropzone","querySelectorAll","iElement","_uploadLink","appendChild","processFile","isEnableDownload","_downloadLink","onDownloadFile","_downloadFile","dzImageElement","_maxFilesReached","_len0","insertBefore","_renameFilename","_filesize","_addFileAction","$iElement","startUpload","_resize","_results","textContent","file_id","_files","__file","filestatus","jsonRoot","jsonMessage","jsonStatus","results","theData","jsonFileUrl","downloadHostAddress","setAttribute","serviceParams","_removeFile","_without","cancelUpload","stopUpload","successfulUploadsNumber","getStats","successful_uploads","setStats","uploadErrorsNumber","upload_errors","reset","min-height","theClickElem","_removeLink","progressWidth","_queuedFiles","xhr","formData","_updateMaxFilesReachedClass","string","list","rejectedItem","renameFilename","cutoff","selectedSize","selectedUnit","unit","units","pow","round","addFilePreview","isComplete","_len1","_ref2","addFilesPreview","addSuccessFiles","isSuccessFile","selectFile","hiddenFileInput","processQueue","getAcceptedFiles","_status","theTempFile","removeFile","_editLink","disable","setButtonDisabled","setButtonCursor","ARROW","filesArray","getFilesWithStatus","getQueuedFiles","getUploadingFiles","_reoption","setUploadUrl","setUploadURL","setPostParams","objectParams","setFileTypes","types","description","setFileSizeLimit","limitSize","endWith","ceil","setFileUploadLimit","limitMaxFilesNumber","isResetUrl","removeAllFiles","theFile","widget","uiImage","_addImagesPreview","images","_setEdit","isAddEditLinks","isEnablePreview","editPageUrl","resolutions","allAcceptedFiles","_addImgAction","editFile","link","container","links","blueimp","Gallery","removeChild","jsonFileName","jsonFilePath","_onSuccess","_addImgPrev","fileServerData","fileShowPath","hostAddress","_name","path","$thumbnails","thumbnail","cropSrc","alt","_onFail","_onAddedFile","_onRemovedFile","_onCancelFile","otherParams","_getAcceptedFiles","_updateImgPreview","onload","addImagesPreview","theImages","setEdit","pageParam","handleUrl","picSrc","imageName","imagePath","serviceResult","imgInfo","refreshFile","Image","imgWidth","imgHeight","selectorAll","uiTagBox","isShowDropdown","isEnableInput","prmNames","searchField","onBeforeItemAdd","onItemAddError","onItemAdded","onBeforeItemRemove","onItemRemoveError","onItemRemoved","dynamicLoading","dropdownMaxHeight","dropdownMinHeight","$tip","activeItem","inputAddEvent","searchKey","render","dropdown","theHeight","$optionBox","$button","dropdownHeight","_textWidth","sensor","display","outerWidth","_checkTextIsOverConWidth","theTag","conWidth","btnRemoveWidth","tagMaxWidth","addItem","KeyDown","KeyUp","KeyEnd","isTellMeWhyAreYouSoLong","errorCode","_text","trimValue","trim","$item","_count","$option","mouseenter","siblings","mouseleave","serverDataKey","searchData","_fail","searchUrl","isInit","nextItem","first","prevItem","prevAll","lastItem","last","setHeight","liHeight","$items","uiTagComboBox","isUpdateNode","_setIsFreeInput","_getTextJson","_target","isChecked","gridPopupCommonService","updateResultNode","updateSelectedNode","uiTree","isLeave","_getNodeStatus","_visitTree","_filter","filterParams","_getTree","_getActiveNode","_activateKey","isEnabledAll","_method","loadDataUrl","isResetActiveNode","minExpandLevel","glyph","preset","map","_addClass","checkbox","checkboxSelected","checkboxUnknown","dragHelper","dropMarker","expanderClosed","expanderLazy","expanderOpen","loading","nodata","noExpander","radio","radioSelected","doc","docOpen","folder","folderOpen","isAddRoot","rootSetting","expand","isShowCheckBox","isChangeAllChildren","isStrictFilter","isClickFirstNode","activeNode","searchBarSetting","searchText","clearText","isLocalData","searchBtnClass","clearBtnClass","expandLevel","contextMenu","autoApply","autoExpand","counter","fuzzy","hideExpandedCounter","hideExpanders","leavesOnly","mode","branchId","branchName","leaveId","leaveName","synch","onActivate","onLazyLoad","onAfterLoad","onSelectedNode","onBeforeSelect","onCreateNode","onRenderNode","onRenderTitle","onClick","onCreated","onInit","onLoadError","extensions","selectMode","_tree","searchInput","_prependSearchGroup","_bindSearchEvent","searchValue","_initTree","_bindResetEvent","_setTreeSize","treeHeight","siblingsHeight2","_setTreeFullScreen","siblingsHeight","treeElementHeight","keyArr","_extensions","_FancytreeNodeClass","isSynchChildrensEnable","setSynchChildrensEnable","hasChildren","getChildren","isSynch","isExecution","synchChildrensEnable","getSelectedChildrenNodes","isIncludeDisabledNode","isFolder","childrenNode","selectedChildrenNodes","getUnselectedChildrenNodes","unselectedChildrenNodes","getChildrenNodes","childrenNodes","setPartSelect","isChangeParents","isRoot","partSelect","isPartSelect","_postProcessSource","rootNode","rootTreeNode","_formatSource","isFirstLoad","nodesArray","create","postProcess","jsonData","theRoot","getActiveNode","_expandNode","setExpanded","visit","getRootNode","w","h","activate","isMatched","beforeSelect","loadChildren","afterLoad","loadError","getParent","selectFun","logSetting","nodeKey","selectedItemIndex","beforeExpand","onBeforeExpand","collapse","onCollapse","onExpand","lazyLoad","_onLazyLoad","lazyData","debugDelay","newParams","activateKey","actionNode","lookup","isExpanded","_setUnselected","defaultName","isExist","keyValue","_setSelected","leaves","leaveNames","leaveTexts","leaveArray","getNodeStatus","visitTree","visitFunc","filters","filterMode","isResetCheckbox","filterNumber","filterNodes","filterBranches","isUnselectable","unselectable","span","getTree","isChangeAll","uiGrid","_selectRows","rowids","isTriggerOnselectedrow","_selectAllRows","_deleteSelectedRows","isLocal","_getSelectedRows","isRealData","_getRowsDataById","_addRowsData","rows","_customSearchBar","searchColModel","_searchGrid","colFilters","postSearchJson","_scroll","_getSearchFiltersData","_searchGridFromSearchBar","groupOp","_showSearchBarRow","_hideSearchBarRow","_resetGrid","_refreshGrid","_refreshData","_disableRows","_enableRows","_mergerRows","cellName","_exportGrid","_showSearchGrid","_showFilterSearch","_setGroupHeaders","localData","isShowPageBar","gridPageId","gridToolbar","isEnableSelectAll","mtype","colModel","sortname","sortorder","rowNum","rowList","rowNumbersTitle","isShowRowNumbers","mergerRowsField","altclass","colMenu","altRows","pagerpos","recordpos","multiSort","shrinkToFit","autowidth","searchColNum","resetText","showMoreText","hideMoreText","fieldIdPrefix","labelClass","contentClass","btnCellClass","isSetWidth","titleColWidthRec","contentColWidthRec","btnColWidth","actions","isSortable","caption","exportUrl","toolBarSetting","btnResetText","btnShowFilterText","btnShowSearchText","btnExportText","btnImportText","btnScreenText","btnFilterShowText","btnFilterHideText","maxShowNumber","pageBarSetting","leftCellWidth","centerCellWidth","rightCellWidth","btnReset","btnShowSearch","btnShowFilter","btnScreen","btnExport","btnImport","importSetting","fileUploadUrl","importUrl","exportSetting","defaultMode","isShowSearchBar","isHideSearchRows","isShowSearchOperator","isShowRecords","isLoadonce","isEnableCellEdit","isClickRow","sort","order","nd","oper","editoper","addoper","deloper","subgridid","npage","totalrows","records","repeatitems","cell","userdata","subgrid","isTreeGrid","treeGridModel","treeExpandColumn","isClickNodeExpandCol","treeIconsSetting","treeReader","level_field","parent_id_field","leaf_field","expanded_field","lazy_field","grouping","groupingView","groupField","groupColumnShow","groupText","groupCollapse","groupDataSorted","groupOrder","groupSummary","summaryType","summaryTpl","groupSummaryPos","showSummaryOnHide","singleColSetting","resizable","onBeforePage","onBeforeExport","onGridComplete","onSelectedAll","onBeforeSelectedRow","onSelectedRow","onBeforeExpandTreeGridNode","onAfterExpandTreeGridNode","onBeforeCollapseTreeGridNode","onAfterCollapseTreeGridNode","onBeforeSearchGrid","onOverMaxNumber","onClickGroup","onResizeStart","onResizeStop","responsive","operandTitle","defaultSearch","operands","ne","lt","le","gt","ge","bw","bn","in","ni","ew","en","cn","nc","nu","nn","bt","searchFormAttr","cellValueEmpty","colModels","styleUI","keyField","_grid","btnTemplate","btnDdTemplate","_extendGrid","jgrid","regional","_formatChooseTmp","cellValue","row","keyName","jqGrid","isFrozen","theColModel","gridToolbarId","isShowToolbar","gridPage","_initGrid","Find","Reset","odata","groupOps","op","resetTitle","edit","addCaption","editCaption","bSubmit","bCancel","bClose","saveData","bYes","bNo","bExit","minValue","maxValue","integer","nodefined","novalue","customarray","customfcheck","view","del","edittext","edittitle","addtext","addtitle","deltext","deltitle","searchtext","searchtitle","refreshtext","refreshtitle","alertcap","alerttext","viewtext","viewtitle","savetitle","canceltext","canceltitle","selectcaption","col","errors","errcap","nourl","norecords","model","thousandsSeparator","defaultValue","decimalSeparator","decimalPlaces","currency","prefix","dayNames","monthNames","AmPm","S","j","srcformat","newformat","parseRe","masks","ISO8601Long","ISO8601Short","ShortDate","LongDate","FullDateTime","MonthDay","ShortTime","LongTime","SortableDateTime","UniversalSortableDateTime","YearMonth","reformatAfterEdit","userLocalTime","baseLinkUrl","showAction","idName","colmenu","sortasc","sortdesc","columns","ungrouping","searchTitle","freeze","unfreeze","reorder","wuiUI","common","cornerall","icon_base","button","base","pgInput","pgSelectBox","icon_asc","icon_desc","icon_caption_open","icon_caption_close","modal","icon_close","icon_resizable","celledit","inputClass","inlinedit","icon_edit_nav","icon_add_nav","icon_save_nav","icon_cancel_nav","formedit","icon_save","icon_del","icon_cancel","icon_del_nav","icon_search_nav","icon_refresh_nav","icon_view_nav","icon_newbutton_nav","icon_plus","icon_minus","srSelect","srInput","icon_search","icon_reset","icon_query","icon_open","treegrid","icon_leaf","fmatter","icon_edit","icon_add","filter_select","filter_input","icon_sort_asc","icon_sort_desc","icon_columns","icon_filter","icon_group","icon_freeze","icon_move","jQueryUI","_initFormatter","sFormatter","sopt","_getSopt","dataInit","_buildDate","elementId","rowObject","formatCellValue","searchOptions","optionValue","dirctValue","theName","theText","formatterOption","_createColModel","colConfig","cellattr","rowId","arrData","_initColModel","buildSearchBar","buildToolbar","theGridParams","datatype","postData","defaultColWidth","rownumbers","multiselect","scrollOffset","viewrecords","loadonce","cellEdit","pager","localReader","treeGrid","ExpandColumn","ExpandColClick","treeIcons","hid","collapsed","_setGridFullScreen","_setGridSize","onPaging","pgButton","_this","jumpPageNumber","totalPageNumber","p","lastpage","loadComplete","num","gridComplete","isNoneData","radios","rowid","selectedIDs","getGridParam","check","selectedId","text-align","mergerRows","_gridplueFrozen","onSelectAll","aRowids","rowsData","rowData","getRowDataById","beforeSelectRow","onSelectRow","afterInsertRow","beforeRequest","ts","getSearchFiltersData","ruleGroup","_buildFilters","ruleTemp1","ruleTemp2","beforeExpandTreeGridNode","rc","isLazy","afterExpandTreeGridNode","beforeCollapseTreeGridNode","afterCollapseTreeGridNode","resizeStart","resizeStop","newwidth","navGrid","multipleSearch","getRowData","selectedRowIds","selectedRowNumber","toElement","$myGrid","getCellIndex","cm","lazyRes","nodeid","expandData","cellNames","mya","getDataIDs","mergerRowsObject","mergerRowsStart","n","theCellName","setCell","rowHeight","tbodyHei","gridHeight","gridWidth","theRows","horizontalScrollbarHeight","offssetHeight","gridTableId","toolbarBtnIndex","template","_screenGrid","toolbarDdMenu","toolbarBtnGroup","resetGrid","changeShowOrHideText","showFilterSearch","showSearchGrid","serviceData","doExport","exportType","selectedIds","SelectedIds","exportGrid","reloadGridByFilters","newPostData","returnPostData","nm","sop","so","gi","rule","buildRuleMenu","theSearchCol","selclass","ina","fs","aoprs","soptions","inArray","classes","menu_widget","$t","triggerHandler","autosearch","inpelm","triggerToolbar","_createSearchElement","$parent","searchCol","fieldId","fieldName","customSearchName","$theInput","searchGridFromSearchBar","optionArr","_loadData","uiPlugin","dateParams","customConfig","startFieldName","endFieldName","startFieldId","endFieldId","rangeHtml","dateConfig","uiPlugin1","uiPlugin2","$theInputs","_optionValue","theIndex","dataSource","_dataSource","_loadUrl","chooseBoxSetting","dictionaryCode","widgetSetting","_addSearchCondition","$tr","st","$tdSopt","$tdContent","showSearchBarRow","$tbody","hideSearchBarRow","buildSearchBarLayout","$table","recordWidth","theTitleColsWidth","theContentColWidth","$thead","sTh","buildSearchBarDOMByData","searchColLength","searchColCount","formHtml","suppleSearchColCount","$theLastTr","lastRowTdNumber","searchRowCount","theMaxColNum","_setSearchBarButtons","colgrid","searchToolValue","theSearchRule","theSearchValue","insertResult","usedata","allCountID","sdata","searchOper","searchString","oldSearchUrl","tdButton","rowsCount","refreshGrid","customSearchBar","_hackHeight","frozenTdHeight","normalHeight","space","divTop","bdivTop","$frozenBDiv","$frozenDiv","$jqgridBDiv","btnhtml","lihtml","theGridCol","isScreenCol","showCol","hideCol","pWidth","thePage","refreshData","getSelectedRows","rowDatas","getRowsDataById","selectRows","theRadio","selectedRowids","selectAllRows","disableRows","enableRows","deleteSelectedRows","rowIndex","urlParam","deleteUrl","searchLine","gridDiv","searchLineHei","gridDivHei","searchOnEnter","searchOperators","exportConfig","beforeExport","searchGrid","clearBeforeUnload","_","addRowsData","setGroupHeaders","useColSpanStyle","groupHeaders","gridDestroy","uiUeditor","htmlString","isAppendTo","except","_reset","toolbars","elementPathEnabled","wordCount","maximumWords","initialFrameWidth","initialFrameHeight","allHtmlEnabled","autoSyncData","ueElement","_initUeditor","ueSetting","UE","getEditor","maximumWordsContent","contentTxt","addListener","getContent","contentLength","getContentLength","getContentTxt","onOverMaxWords","maxWords","contents","getAllHtml","getPlainTxt","setContent","setDisabled","setEnabled","containerDom","removeListener","fireEvent"],"mappings":"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","file":"wui.min.js","sourcesContent":["/*!\r\n *  WUI 简介 \r\n *  \r\n *  v0.0.1_beta date: 2018-05-14\r\n *  Now Version: v0.2.0_beta date: 2019-05-20\r\n *  \r\n *  WUI 是 Web User Interface 的简称\r\n *  -----------------------------------------------------------\r\n *  WUI Team\r\n *  部门: 广州擎云创新研发中心\r\n *  -----------------------------------------------------------\r\n *  WUI 反馈邮箱: chenzx@cloudmtr.com\r\n *\r\n *  Copyright (c) 2016-2019\r\n */\r\n\r\n/**\r\n * <h3>WUI核心库</h3>\r\n * <h5>全局可配置变量,详见wui.config.js文件说明(修改默认配置请首先确保已经完全明确该参数的真实用途)</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.isDebug\"}}{{/crossLink}}: 是否开启组件调试模式,默认是false </li>\r\n * <li>{{#crossLink \"wui.isLog\"}}{{/crossLink}}: 是否打印日志,此参数可以一次性关闭方法、参数、消息、错误四类日志的打印 </li>\r\n * <li>{{#crossLink \"wui.isLogMethodCalled\"}}{{/crossLink}}: 是否打印方法日志 </li>\r\n * <li>{{#crossLink \"wui.isLogParamValue\"}}{{/crossLink}}: 是否打印参数日志 </li>\r\n * <li>{{#crossLink \"wui.isLogMessage\"}}{{/crossLink}}: 是否打印消息日志 </li>\r\n * <li>{{#crossLink \"wui.isLogError\"}}{{/crossLink}}: 是否打印错误日志 </li>\r\n * <li>{{#crossLink \"wui.hostAddress\"}}{{/crossLink}}: 全局后台服务主机地址 </li>\r\n * </ol>\r\n * <h5>浏览器兼容性代码(兼容IE8+)</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.stopPropagation\"}}{{/crossLink}}: 阻止事件冒泡stopPropagation的兼容写法 </li>\r\n * <li>{{#crossLink \"wui.preventDefault\"}}{{/crossLink}}: 阻止事件默认行为preventDefault的兼容写法 </li>\r\n * <li>{{#crossLink \"wui.addEventListener\"}}{{/crossLink}}: 事件绑定 </li>\r\n * <li>{{#crossLink \"wui.removeEventListener\"}}{{/crossLink}}: 事件解绑 </li>\r\n * </ol>\r\n * <h5>原型拓展-jQuery(兼容IE8+)</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"jQuery.exist()\"}}{{/crossLink}}: 判断JQuery节点是否存在 </li>\r\n * </ol>\r\n * <h5>原型拓展-String(兼容IE8+)</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"String.startWith(subStr)\"}}{{/crossLink}}: 判断字符串对象是否以传入的str参数开头,若参数为空或不以参数字符串开头,则返回false,否则返回true </li>\r\n * <li>{{#crossLink \"String.endWith(subStr)\"}}{{/crossLink}}: 判断字符串对象是否以传入的str参数结尾,若参数为空或不以参数字符串结尾,则返回false,否则返回true </li>\r\n * <li>{{#crossLink \"String.trim()\"}}{{/crossLink}}:  去除字符串两边空格,并返回去除之后的字符串 </li>\r\n * <li>{{#crossLink \"String.ltrim()\"}}{{/crossLink}}: 去除字符串左边空格,并返回去除之后的字符串 </li>\r\n * <li>{{#crossLink \"String.rtrim()\"}}{{/crossLink}}: 去除字符串右边空格,并返回去除之后的字符串 </li>\r\n * <li>{{#crossLink \"String.insert(insertStr, positionIndex)\"}}{{/crossLink}}: 字符串中插入子字符串,并返回插入之后的字符串,positionIndex默认是从0开始 </li>\r\n * </ol>\r\n * <h5>原型拓展-Array(兼容IE8+)</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"Array.isArray()\"}}{{/crossLink}}: 判断传入参数是否是数组 </li>\r\n * <li>{{#crossLink \"Array.indexOf(element)\"}}{{/crossLink}}: 判断元素是否存在数组中，返回索引或者-1 </li>\r\n * <li>{{#crossLink \"Array.contains(subStr)\"}}{{/crossLink}}: 判断一个字符串是否包含一个子串,返回true或者false </li>\r\n * </ol>\r\n * @module Core\r\n */\r\n\r\n// var objTest = {class: 'class'};\r\n//依赖库\r\nvar libs = window.jQuery || window.$ || $; //如果使用jQuery,需要在这里修改,但同时一些jquery不支持的事件也会不能使用,例如longTap,touchstart\r\nvar FRAME_NAME = \"wui\";\t\t// 框架名\r\n//UI库\r\nvar wui = (function ($, window, undefined) {\r\n\r\n\t// {String} 版本号\r\n\tvar VERSION = \"v0.2.0 内测版\";\r\n    var VERSIONDATE = \"20190610001\";\r\n\r\n\t// wui.config.js\r\n\tvar wuiGlobalConfig = window.WUI_CONFIG || {};\r\n    var wuiGlobalParams = window.WUI_PARAMS || {};\r\n    // 外部文本配置数据\r\n    var wuiGlobalLanguage = window.WUI_LANGUAGE || {};\r\n    /*\r\n     * 框架资源文件上下文路径\r\n     */\r\n    var CONTEXT = \"/\";\r\n\t// var FILECONTEXT = isDev ? CONTEXT : \"/frameworkFile\";\r\n\tvar CONTEXTPATH = document.location.protocol + \"//\" + document.location.host + CONTEXT;\r\n\r\n\t// var pathName = document.location.pathname;\r\n //   \tvar index = pathName.substr(1).indexOf(\"/\");\r\n //   \tvar PATH = pathName.substr(0, index + 1);\r\n   \t// 获取当前脚本路径\r\n   \tvar SCRIPTS = document.getElementsByTagName(\"script\")\r\n\tvar WUI_SCRIPT = SCRIPTS[SCRIPTS.length - 1];\r\n\t// 获取当前正在执行js文件的地址\r\n\tvar WUI_SCRIPT_PATH = document.querySelector ? WUI_SCRIPT.src : WUI_SCRIPT.getAttribute(\"src\", 4);\t//IE8直接.src\r\n\t// console.info(WUI_SCRIPT_PATH);\r\n\tvar lastIndex = WUI_SCRIPT_PATH.lastIndexOf(CONTEXT);\r\n\t// 获取当前WUI框架脚本的文件夹地址\r\n\tvar WUI_PROJECT_PATH = WUI_SCRIPT_PATH.substring(0, lastIndex) + CONTEXT;\r\n\t// console.info(WUI_PROJECT_PATH);\r\n\t\r\n\tvar defaultValidateStyle = function(error, theElement, tipSetting){\r\n\t\ttipSetting = tipSetting || {};\r\n    \tif(theElement.attr(\"ui-type\")){\r\n    \t\tvar widgetName = theElement.attr(\"ui-type\");\r\n\t\t\t\twidgetId = theElement.attr(\"id\") || theElement.attr(\"name\");\r\n\r\n\t\t\tif(widgetName === \"file\" || widgetName === \"img\"){\r\n\t\t\t\twidgetId = theElement.parent().attr(\"_fileId\")\r\n\t\t\t}\r\n\r\n\t\t\tif(wui && wui[widgetName]){\r\n\t\t\t\tvar widgetValue = wui[widgetName](widgetId).get(\"value\");\r\n\t\t\t\t// console.info(widgetValue);\r\n\t\t\t\tif(ui.isArray(widgetValue) && widgetValue.length > 0){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else if(typeof(widgetValue) === \"string\" && widgetValue !== \"\"){\r\n                    return true;\r\n                }\r\n\t\t\t}\r\n            // console.info(theElement.val())\r\n\t\t\terror.hide();\r\n            switch (widgetName) {\r\n                case 'file': // 文件上传\r\n                \t// error.insertAfter(theElement);\r\n                    ui.tips(error[0].innerHTML, theElement.parent(), tipSetting);\r\n                    break;\r\n                case 'date': // 日期选择\r\n                    // error.insertAfter(theElement);\r\n                    ui.tips(error[0].innerHTML, theElement, tipSetting);\r\n                    break;\r\n                case 'img': // 图片上传\r\n                    // error.insertAfter(theElement);\r\n                    ui.tips(error[0].innerHTML, theElement.parent(), tipSetting);\r\n                    break;\r\n                case 'opinionBox':\r\n                    ui.tips(error[0].innerHTML, theElement.next().children(\"textarea\"), tipSetting);\r\n                \tbreak;\r\n                default:\r\n                    // error.insertAfter(theElement.parent());\r\n                \tui.tips(error[0].innerHTML, theElement.parent(), tipSetting);\r\n            }\r\n    \t}else{\r\n            // console.error(theElement);\r\n    \t\tui.tips(error[0].innerHTML, theElement, tipSetting);\r\n    \t}\r\n\t}\r\n\r\n\tvar labelValidateStyle = function(error, theElement, tipSetting){\r\n\t\tif(theElement.attr(\"ui-type\")){\r\n            var uiType = theElement.attr(\"ui-type\");\r\n            switch (uiType) {\r\n                case 'file': // 文件上传\r\n                    error.insertAfter(theElement);\r\n                    break;\r\n                case 'date': // 日期选择\r\n                    error.insertAfter(theElement);\r\n                    break;\r\n                case 'img': // 图片上传\r\n                    error.insertAfter(theElement);\r\n                    break;\r\n                case 'opinionBox':\r\n                \tbreak;\r\n                default:\r\n                    error.insertAfter(theElement.parent());\r\n            }\r\n        }else{\r\n            if (theElement.is(\"select\")) {\r\n                error.insertAfter(theElement);\r\n            } else if (theElement.prop(\"type\") === \"checkbox\") {\r\n            \tif(theElement.parents(\".wui-valid-tip\") && theElement.parents(\".wui-valid-tip\").length > 0){\r\n                \tvar theParents = theElement.parents(\".wui-valid-tip\");\r\n                \tvar place = theParents.attr(\"wui-valid-tip\");\r\n                \ttheParents[place](error);\r\n                }else{\r\n                \terror.insertAfter(theElement);\r\n                }\r\n            } else if (theElement.prop(\"type\") === \"radio\") {\r\n                if(theElement.parents(\".wui-valid-tip\") && theElement.parents(\".wui-valid-tip\").length > 0){\r\n                \tvar theParents = theElement.parents(\".wui-valid-tip\");\r\n                \tvar place = theParents.attr(\"wui-valid-tip\");\r\n                \ttheParents[place](error);\r\n                }else{\r\n                \terror.insertAfter(theElement);\r\n                }\r\n            } else {\r\n                error.insertAfter(theElement);\r\n            }\r\n        }\r\n\t}\r\n    \r\n    var ui = {\r\n        // {Boolean} 是否开启组件调试模式\r\n        isDebug : true\r\n        \r\n\t\t// {String} 框架项目根路径\r\n\t\t, context: CONTEXT\r\n\r\n\t\t// {String} 文件上下文路径\r\n\t\t, fileContext: \"\"\r\n\r\n\t\t// {String} 上下文路径\r\n\t\t, contextPath: CONTEXTPATH\r\n\t\t\r\n\t    // {String} 框架根路径,如\"http://localhost:9090/dist/\"\r\n\t\t// , widgetPath: CONTEXTPATH + \"wui/\"\r\n\t\t, FRAME_PATH: WUI_PROJECT_PATH\r\n\t\t// , widgetPath: WUI_PROJECT_PATH\r\n\r\n\t\t// {String} 公共页面存放文件夹路径(鉴于可能会在不同的页面使用公共页面，所以此参数建议使用绝对路径)\r\n\t\t, commonPageBasePath: CONTEXTPATH + \"common-pages/\"\r\n\r\n        // {string} swf文件的位置，指向swfupload目录下的swfupload.swf文件即可,默认是wui.FRAME_PATH + '/plugins/swfupload/Flash/swfupload.swf'\r\n        , uploadFlashUrl: WUI_PROJECT_PATH + '/plugins/swfupload/Flash/swfupload.swf'\r\n\r\n        // 日志工具全局配置\r\n        , logUtilConfig: {\r\n            // {Boolean} 是否打印开发日志,此参数可以一次性关闭下列四类日志的打印\r\n            isLog : true\r\n\r\n            // {Boolean} 是否打印方法日志\r\n            , isLogMethodCalled : true\r\n\r\n            // {Boolean} 是否打印参数日志\r\n            , isLogParamValue : true \r\n\r\n            // {Boolean} 是否打印消息日志\r\n            , isLogMessage : true\r\n\r\n            // {Boolean} 是否打印错误日志\r\n            , isLogError : true\r\n\r\n            // {Boolean} 是否打印警告日志\r\n            , isLogWarn: true\r\n                \r\n            // {JSON} WUI框架调试日志默认输出参数\r\n            , debugLog: {\r\n                className: FRAME_NAME,\r\n                methodName: \"\",\r\n                isDebug: true\r\n            }\r\n\r\n            // 调试模式下日志输入配置\r\n            , debugConfig: {\r\n\r\n                // {Boolean} 是否打印方法日志\r\n                isLogMethodCalled : false\r\n\r\n                // {Boolean} 是否打印参数日志\r\n                , isLogParamValue : false \r\n\r\n                // {Boolean} 是否打印消息日志\r\n                , isLogMessage : false\r\n\r\n                // {Boolean} 是否打印错误日志\r\n                , isLogError : true\r\n\r\n                // {Boolean} 是否打印警告日志\r\n                , isLogWarn: true\r\n            }\r\n        }\r\n\r\n        // 框架常量\r\n        , CONSTANTS: {\r\n            // {Boolean} 默认的空方法表示参数\r\n            EMPTYFUNC: undefined\r\n            \r\n            // 键盘常用操作按键对应编码\r\n            , KEYS: {\r\n                CLEAR : \"12\",\r\n                ENTER : \"13\",\r\n                NEXT : \"34\",\r\n                END : \"35\",\r\n                HOME : \"36\",\r\n                LEFT : \"37\",\r\n                UP : \"38\",\r\n                RIGHT : \"39\",\r\n                DOWN : \"40\",\r\n                OTHER : \"44\",\r\n                DELETE : \"46\",\r\n                BACKSPACE: \"8\"\r\n            }\r\n\r\n            // 是否对调用buildUrl的链接参数进行编码\r\n            , ISCODEURLVALUE: undefined\r\n                \r\n            // {String} 本文件所在文件夹路径(自动检测),如\"http://localhost:9090/dist/\"\r\n            , WUI_PROJECT_PATH: WUI_PROJECT_PATH\r\n\r\n            // {String} 标签元素上附加参数字段名,默认是\"wui\"，则绑定的属性为\"data-wui-paramName=paramValue\"\r\n            , DATAATTRIBUTEFIELD: \"wui\"\r\n\r\n            // {String} 标签元素上附加初始化组件字段名,默认是\"init-wui\",则绑定的属性为\"data-init-wui=widgetName\"\r\n            , DATAINITWIDGETFIELD: \"init-wui\"\r\n\r\n            // {String} 框架皮肤保存到cookie的key字段名\r\n            , SKINNAMEFIELD: \"wuiSkinName\"\r\n\r\n            // 调用buildUrl的链接参数进行编码时附加的特殊字符串\r\n            , URLVALUEEXTSTRING: \"####\"\r\n\r\n            // 自定义模态框弹出的窗口可选列表: self(本窗口)/parent(父窗口)/top(顶层窗口,默认)\r\n            , OMODALWINDOW: [\"top\", \"parent\", \"self\"]\r\n\r\n        }\r\n\r\n        // 校验全局配置\r\n        , validateUtilConfig: {\r\n            // {Function} 自定义校验错误样式集合\r\n            errorTipStyles: {\r\n                \"tips\": defaultValidateStyle,\r\n                \"label\": labelValidateStyle\r\n            }\r\n\r\n            // {string} 校验出错提示风格,默认是\"tips\",可选\"tips\"(错误提示悬浮展示)、\"label\"(会在出错标签下方显示错误信息)\r\n            , errorTipStyle: \"tips\" \r\n        \r\n            // {Boolean} 是否在必填项的表格列前面追加\"*\"号,默认是true\r\n            , isAddRequiredStar: true\r\n\r\n            // {string} 当errorTipStyle参数值为\"label\"时,校验错误时,提示标签类名,默认是\"valid-emement-error\"\r\n            , labelErrorClass: \"valid-emement-error\" \r\n\r\n            // {string} 当errorTipStyle参数值为\"tips\"时,校验出错时元素类名,默认是\"validate-error\"\r\n            , elementErrorClass: \"validate-error\"       \r\n\r\n            // {string} 当errorTipStyle参数值为\"tips\"时,校验成功时元素类名,默认是\"\"\r\n            // , elementSuccessClass: \"validate-success\" // 绿色框框\r\n            , elementSuccessClass: \"\"   \r\n\r\n            // {String} 当开启isAddRequiredStar时,追加\"*\"号的位置,默认是\"left\"，在左边追加\"*\"，可选值:\"left\"/\"right\"\r\n            , starDirection: \"left\"\r\n        }\r\n\r\n\t\t// {String} 校验标签上关联属性名\r\n\t\t, validateAttributeField: \"validate\"\r\n\r\n        // {JSON} 框架常用服务接口集合\r\n        , serviceInterface: {\r\n            \r\n            // {String} 组织树服务接口地址,默认是\"\",主要用于组织选择和人员选择组件的树结构\r\n            orgServiceAPI: \"\"\r\n\r\n            // {String} 子组织列表服务接口地址,默认是\"\",主要用于组织选择组件全局设置\r\n            , subOrgServiceAPI: \"\"\r\n\r\n            // {String} 用户列表服务接口地址,默认是\"\",主要用于人员选择组件全局设置\r\n            , userServiceAPI: \"\"\r\n\r\n            // {String} 选人公共页面服务接口地址,默认是\"\",主要用于选人公共页面全局设置\r\n            , chooseUserServiceAPI: \"\"\r\n\r\n            // {String} 列表数据文件上传服务接口地址,默认是\"\"\r\n            , gridFileUploadServiceAPI: \"\"\r\n\r\n            // {String} 列表数据导入服务接口地址,默认是\"\"\r\n            , gridImportServiceAPI: \"\"\r\n\r\n            // {Object} 审批意见组件数据源,默认是null\r\n            , opinionBoxSource: null\r\n        }\r\n\r\n        // 皮肤设置\r\n        , skinConfig: {\r\n                \r\n            // {String} 皮肤样式文件名(统一规范名称)\r\n            skinFileName: \"style.css\"\r\n\r\n            // {String} 框架皮肤文件id\r\n            , skinId: \"wuiSkin\"\r\n\r\n            // {Boolean} 假如页面找不到对应的皮肤样式文件节点(即\"#wuiSkin\"),是否引入传入的皮肤文件,默认是false,找不到就不引入\r\n            , isAddSkin: false\r\n            \r\n            // {Boolean} 是否初始化皮肤,默认是true\r\n            , isInitSkin: true \r\n        }\r\n\r\n        // {Boolean} 页面加载完成，是否初始化框架页面\r\n        , isInitPage: false\r\n\r\n        // 自定义模态框弹出的窗口: self(本窗口)/parent(父窗口)/top(顶层窗口,默认)\r\n        , modalWindow: \"top\"\r\n\r\n        // {string} 弹出层页面高度(chooseBox/orgChooseBox/userChooseBox)\r\n        , pageHeight: '570px'\r\n\r\n        // {string} 弹出层页面宽度(chooseBox/orgChooseBox/userChooseBox)\r\n        , pageWidth: '1300px'\r\n\r\n        // {Object} 下拉框默认配置\r\n        , selectBoxSetting: {\r\n            isTriggerSelectEvent: true\r\n        }\r\n\r\n        // {Object} 列表默认配置\r\n        , gridSetting: {\r\n            // 默认Grid列配置参数\r\n            defaultColConfig: {\r\n                /* 字段基础 */\r\n                // 当从服务器端返回的数据中没有id时,将此作为唯一rowid使用只有一个列可以做这项设置。如果设置多于一个,那么只选取第一个,其他被忽略\r\n                key: false,     \r\n                // 如果colNames为空则用此值来作为列的显示名称,如果都没有设置则使用name 值\r\n                label : \"\",\r\n                // 表格列的名称,所有关键字,保留字都不能作为名称使用包括subgrid, cb and rn.\r\n                name : \"\",\r\n                // 水平对齐方式,center,left,right\r\n                align : \"\",\r\n                // 在初始化表格时是否要隐藏此列         \r\n                hidden: false,\r\n                // 是否显示隐藏此列,若设置为true,且hidden为false时,一开始不显示,但是可通过筛选按钮显示出来\r\n                hidedlg: false,\r\n\r\n                /* 列操作 */\r\n                // 是否冻结列\r\n                frozen : false,\r\n                // 列宽度是否要固定不可变\r\n                fixed: true,\r\n                // 默认列的宽度,只能是象素值,不能是百分比\r\n                // width : 100,\r\n                drap: false,\r\n                // 是否允许排序\r\n                sortable : false,\r\n                // 设置列的css。多个class之间用空格分隔,如：'class1 class2' 。表格默认的css属性是ui-ellipsis\r\n                // classes: \"\", \r\n                // ”/”, ”-”, and ”.”都是有效的日期分隔符。y,Y,yyyy 年YY, yy 月m,mm for monthsd,dd 日.默认值ISO Date (Y-m-d)         \r\n                // datefmt: \"Y-m-d\",\r\n                // 查询字段的默认值         \r\n                // defval: \"123\",       \r\n                // 单元格是否可编辑         \r\n                editable: false,\r\n                // 编辑的一系列选项.{name:’__department_id’,index:’__department_id’,width:200,editable:true,edittype:’select’,editoptions: {dataUrl:”${ctx}/admin/deplistforstu.action”}},这个是演示动态从服务器端获取数据  \r\n                // editoptions: {},\r\n                // 编辑的规则{name:’age’,index:’age’, width:90,editable:true,editrules: {edithidden:true,required:true,number:true,minValue:10,maxValue:100}},设定 年龄的最大值为100,最小值为10,而且为数字类型,并且为必输字段         \r\n                // editrules: {},\r\n                // 可以编辑的类型。可选值：text, textarea, select, checkbox, password, button, image and file.         \r\n                // edittype: \"text\",\r\n                // 用在当datatype为local时,定义搜索列的类型,可选值：int/integer - 对integer排序float/number/currency - 排序数字date - 排序日期text - 排序文本         \r\n                // sorttype: \"text\",\r\n                // 对列进行格式化时设置的函数名或者类型           \r\n                formatter: \"\",\r\n\r\n                // 对列进行格式化时设置的类型\r\n                wstype: \"\",\r\n                \r\n                /* 字段搜索 */ \r\n                // 是否允许查询\r\n                search : false,        \r\n                // 搜索数据时的url         \r\n                // surl: \"\",\r\n                // 定义搜索元素的类型\r\n                stype: \"text\",\r\n                // 设置搜索参数   \r\n                searchoptions : { \r\n                    // // {string} 只有当搜索类型为select才起效\r\n                    // dataUrl: \"\",\r\n                    // // {function} 只有当dataUrl设置时此参数才起效，通过一个function来构建下拉框\r\n                    // buildSelect: function(){},\r\n                    // // {function} 初始化时调用,通常用在日期的选择上，用法：dataInit: function(elem) {do something}\r\n                    // dataInit: function (elem) {$(elem).datepicker();},\r\n                    // // {array} 事件列表，用法：dataEvents: [{ type: 'click', data: { i: 7 }, fn: function(e) { console.log(e.data.i); }},{ type: 'keypress', fn: function(e) { console.log('keypress'); } }]\r\n                    // dataEvents: [\r\n                    //     { \r\n                    //         type: 'click', \r\n                    //         data: { i: 7 }, \r\n                    //         fn: function(e) { \r\n                    //             console.log(e.data.i); \r\n                    //         }\r\n                    //     },{ \r\n                    //         type: 'keypress', \r\n                    //         fn: function(e) { \r\n                    //             console.log('keypress'); \r\n                    //         } \r\n                    //     }\r\n                    // ],\r\n                    // // {object} 设置属性值。attr : { title: “Some title” }\r\n                    // attr: { \r\n                    //     title: \"自定义标题属性值\" \r\n                    // },\r\n                    // // {array} 此参数只用到单列搜索上,说明搜索条件\r\n                    // sopt: [],\r\n                    // // {string} 默认值\r\n                    // defaultValue: \"\",\r\n                    // // {mixed} 只用在搜索类型为select下。可以是string或者object；\r\n                    // // 如果为string则格式为value:label，且以“;”结尾；\r\n                    // // 如果为object格式为editoptions:{value:{1:'One';2:'Two'}}\r\n                    // value: \"\",\r\n                    \r\n                    // 自定义搜索字段名\r\n                    // customSearchName: \"\",\r\n\r\n                    // {boolean} 隐藏列是否可在高级查询中作为查询项,默认为true\r\n                    searchhidden: true\r\n                },\r\n                // 当formatter为\"date\"/\"dateRange\"时,显示内容格式\r\n                formatDate: \"yyyy-mm-dd\",\r\n                // 查询字段默认值\r\n                searchDefVal: \"\",\r\n                // 搜索栏排序值,默认是8\r\n                searchSort: 8,\r\n                // 查询格式限制\r\n                searchrules : {}\r\n                // 对于form进行编辑时的属性设置\r\n                // formoptions: {},\r\n                // 对某些列进行格式化的设置         \r\n                // formatoptions: {},\r\n                // 对列进行格式化时设置的函数名或者类型\r\n            }\r\n        }\r\n\r\n        // 数据字典配置\r\n        , dictCodeSetting: {\r\n            // 数据字典项,格式{\"dirctName\": [{\"id\": \"item1\", \"name\": \"itemName1\"}, ...], ...}\r\n            items: null,\r\n\r\n            // 字典项value字段名\r\n            name: \"id\",\r\n\r\n            // 字典项文本字段名\r\n            text: \"name\"\r\n        }\r\n\r\n        // {Array} 审批意见常用意见可选列表\r\n        , commonOpinions: [\"同意。\", \"不同意。\", \"阅。\", \"照拟。\",\"传阅\"]\r\n\r\n        // 审批意见框全局配置\r\n        , commonOpinionsSetting: {}\r\n\r\n        // {Boolean} 是否在wui.ajax()的GET请求和wui.getAjax()的接口后面默认追加时间戳参数,默认是true\r\n        , isAddRandomCode: true\r\n\r\n        // 存放拓展变量\r\n        , extVariables: {}\r\n    };\r\n\r\n    var browser = {\r\n        // 检测是否是IE浏览器\r\n        isIE: function() {\r\n            var userAgent = navigator.userAgent,\r\n                rMsie = /(msie\\s|trident.*rv:)([\\w.]+)/;\r\n            var ua = userAgent.toLowerCase();\r\n            var match = rMsie.exec(ua);\r\n            if (match != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        // 检测是否是chrome浏览器\r\n        isChrome: function() {\r\n            var userAgent = navigator.userAgent,\r\n                rChrome = /(chrome)\\/([\\w.]+)/;\r\n            var ua = userAgent.toLowerCase();\r\n            var match = rChrome.exec(ua);\r\n            if (match != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        // 检测是否是Firefox浏览器\r\n        isMozila: function() {\r\n            var userAgent = navigator.userAgent,\r\n                rFirefox = /(firefox)\\/([\\w.]+)/;\r\n            var ua = userAgent.toLowerCase();\r\n            var match = rFirefox.exec(ua);\r\n            if (match != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        // 检测是否是Firefox浏览器\r\n        isOpera: function() {\r\n            var userAgent = navigator.userAgent,\r\n                rOpera = /(opera).+version\\/([\\w.]+)/;\r\n            var ua = userAgent.toLowerCase();\r\n            var match = rOpera.exec(ua);\r\n            if (match != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        // 检测是否是Safari浏览器\r\n        isSafari: function() {\r\n            var userAgent = navigator.userAgent,\r\n                rSafari = /version\\/([\\w.]+).*(safari)/;\r\n            var ua = userAgent.toLowerCase();\r\n            var match = rSafari.exec(ua);\r\n            if (match != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        isIE7: !!navigator.userAgent.match(/MSIE 7.0/),\r\n        isIE8: !!navigator.userAgent.match(/MSIE 8.0/),\r\n        isIE9: !!navigator.userAgent.match(/MSIE 9.0/),\r\n        isIE10: !!navigator.userAgent.match(/MSIE 10.0/)\r\n    };\r\n\r\n    $.extend(true, ui.CONSTANTS, browser);\r\n    \r\n    // ui.CONSTANTS.isIE8 = !!navigator.userAgent.match(/MSIE 8.0/);\r\n    // ui.CONSTANTS.isIE9 = !!navigator.userAgent.match(/MSIE 9.0/);\r\n    // ui.CONSTANTS.isIE10 = !!navigator.userAgent.match(/MSIE 10.0/);\r\n\r\n    if(ui.CONSTANTS.isIE7 || ui.CONSTANTS.isIE8 || ui.CONSTANTS.isIE9){\r\n        ui.CONSTANTS.ISSUPPORTH5 = false;\r\n    }else{\r\n        ui.CONSTANTS.ISSUPPORTH5 = true;\r\n    }\r\n\r\n    // ui.CONSTANTS.ISSUPPORTH5 = false;    // 测试Flash上传\r\n\r\n    // Dropzone:file.status\r\n    // Dropzone.ADDED = \"added\";\r\n    // ui.CONSTANTS.FILE_STATUS.QUEUED = \"queued\";\r\n    // Dropzone.ACCEPTED = ui.CONSTANTS.FILE_STATUS.QUEUED;\r\n    // Dropzone.UPLOADING = \"uploading\";\r\n    // ui.CONSTANTS.FILE_STATUS.PROCESSING = Dropzone.UPLOADING;\r\n    // ui.CONSTANTS.FILE_STATUS.CANCELED = \"canceled\";\r\n    // ui.CONSTANTS.FILE_STATUS.ERROR = \"error\";\r\n    // ui.CONSTANTS.FILE_STATUS.SUCCESS = \"success\";\r\n\r\n    // SWFUpload.FILE_STATUS = { QUEUED : -1, IN_PROGRESS : -2, ERROR : -3, COMPLETE : -4, CANCELLED : -5 };\r\n    // QUEUED - 指示此文件正在等待上传队列中\r\n    // IN_PROGRESS - 指示此文件现在正在上传中\r\n    // ERROR - 指示此文件引发了一个队列或上传错误\r\n    // COMPLETE - 指示此文件已成功传输给服务器\r\n    // CANCELLED - 指示此文件被取消上传（调用了cancelUpload函数）\r\n    ui.CONSTANTS.FILE_STATUS = {};    // 文件组件中用于表示文件状态\r\n    if(ui.CONSTANTS.ISSUPPORTH5 && window.Dropzone){\r\n        // .getFilesWithStatus(status)\r\n        // wui.CONSTANTS.FILE_STATUS.ADDED = Dropzone.ADDED;\r\n        ui.CONSTANTS.FILE_STATUS.QUEUED = Dropzone.QUEUED;\r\n        // wui.CONSTANTS.FILE_STATUS.ACCEPTED = Dropzone.ACCEPTED;\r\n        // wui.CONSTANTS.FILE_STATUS.UPLOADING = Dropzone.UPLOADING;\r\n        ui.CONSTANTS.FILE_STATUS.PROCESSING = Dropzone.PROCESSING;\r\n        ui.CONSTANTS.FILE_STATUS.CANCELED = Dropzone.CANCELED;\r\n        ui.CONSTANTS.FILE_STATUS.ERROR = Dropzone.ERROR;\r\n        ui.CONSTANTS.FILE_STATUS.SUCCESS = Dropzone.SUCCESS;\r\n    }else if(!ui.CONSTANTS.ISSUPPORTH5 && window.SWFUpload){\r\n        // SWFUpload.FILE_STATUS = { QUEUED : -1, IN_PROGRESS : -2, ERROR : -3, COMPLETE : -4, CANCELLED : -5 };\r\n        ui.CONSTANTS.FILE_STATUS.QUEUED = SWFUpload.FILE_STATUS.QUEUED;   // 指示此文件正在等待上传队列中\r\n        ui.CONSTANTS.FILE_STATUS.PROCESSING = SWFUpload.FILE_STATUS.IN_PROGRESS;  // 指示此文件现在正在上传中\r\n        ui.CONSTANTS.FILE_STATUS.CANCELED = SWFUpload.FILE_STATUS.CANCELLED;      // 指示此文件被取消上传（调用了cancelUpload函数）\r\n        ui.CONSTANTS.FILE_STATUS.ERROR = SWFUpload.FILE_STATUS.ERROR;         // 指示此文件引发了一个队列或上传错误\r\n        ui.CONSTANTS.FILE_STATUS.SUCCESS = SWFUpload.FILE_STATUS.COMPLETE;        // 指示此文件已成功传输给服务器\r\n    }\r\n\r\n    \r\n\t// ui.context = \"/\";\r\n\t// ui.fileContext = ui.isDev ? ui.context : \"/frameworkFile\";\r\n\t// ui.contextPath = document.location.protocol + \"//\" + document.location.host + ui.context;\r\n\r\n\t// 弹出层默认设置\r\n\tui.layerSetting = {\r\n        title: \"信息\"       // {String} 标题,默认值是\"信息\"\r\n        , url: CONTEXTPATH  // {String} 弹窗默认地址\r\n        // , content: \"\"   // {String/DOM/Array} 内容,不仅可以传入普通的html内容,还可以指定DOM,比如$(\"#id\"),默认值是\"\"\r\n        , skin: \"\"      \t// {String} 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值是\"\"\r\n        , width: '800px'    // {String} 弹出层宽度,带单位,当设置\"auto\"时表示宽度自适应\r\n        , height: '460px'   // {String} 弹出层高度,带单位,当设置\"auto\"时表示高度自适应\r\n        , offset: \"auto\" \t// {String/Array} 坐标,默认是垂直水平居中\r\n        , icon: undefined   // {Number}  图标。信息框和加载层的私有参数,信息框默认不显示图标。当你想显示图标时,默认皮肤可以传入0-6如果是加载层,可以传入0-2\r\n        , shade: 0.3     \t// {String/Array/Boolean} 遮罩,默认值是0.3\r\n        , closeBtn:1    \t// {String/Boolean} 关闭按钮,可通过配置1和2来展示,如果不显示,则closeBtn: 0,默认值是1\r\n        , time: 0       \t// {Number} 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n        , maxWidth: 360         // {Number} (只对openHtml, openIframe有效)最大宽度,默认值是360,只有当area: 'auto'时,maxWidth的设定才有效。\r\n        , maxHeight: \"auto\"     // {Number} (只对openHtml, openIframe有效)最大高度,默认值是无,只有当area: 'auto'时,maxHeight的设定才有效。\r\n        , zIndex: \"19950105\"    // {Number} 层叠顺序,默认值是19950105,一般用于解决和其它组件的层叠冲突\r\n        , tips: 2              // {Number/Array} (只对tips有效)tips方向和颜色,默认值是2,tips层的私有参数。支持上右下左四个方向,通过1-4进行方向设定。如tips: 3则表示在元素的下面出现。有时你还可能会定义一些颜色,可以设定tips: [1, '#c00']\r\n        , isShadeClose: false // {Boolean} shadeClose,是否点击遮罩关闭,默认值是false\r\n        , isMaxmin: false \t// {Boolean} maxmin,(只对openHtml, openIframe有效)是否显示最大最小按钮,默认值是false\r\n        , isFixed: true   \t// {Boolean} fixed,即鼠标滚动时,层是否固定在可视区域,默认值是true\r\n        , isResize: true  \t// {Boolean} resize,是否允许拉伸,该参数对loading、tips层无效,默认值是true\r\n        , isShowMultipleTips: true        // {Boolean} tipsMore,(只对tips有效)是否允许多个tips同时出现,默认值是true\r\n        , isScrollbar: false    // {Boolean} srollbar,(只对openHtml, openIframe有效)是否允许浏览器出现滚动条,默认值是false\r\n        , isFull: false         // {Boolean} (只对openHtml, openIframe有效)是否默认全屏弹出层\r\n        , onResizing: ui.CONSTANTS.EMPTYFUNC // {Function} resizing,监听窗口拉伸动作,当你拖拽弹层右下角对窗体进行尺寸调整时,如果你设定了该回调,则会执行。回调返回一个参数：当前层的DOM对象\r\n        , onPoped: ui.CONSTANTS.EMPTYFUNC \t// {Function} success,层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引\r\n        , onSure: ui.CONSTANTS.EMPTYFUNC     \t// {Function} yes,确定按钮回调方法,该回调携带两个参数,分别为当前层索引、当前层DOM对象\r\n        , onCancel: ui.CONSTANTS.EMPTYFUNC  \t// {Function} cancel,右上角关闭按钮触发的回调,该回调携带两个参数,分别为：当前层索引参数（index）、当前层的DOM对象（layero），默认会自动触发关闭。如果不想关闭,return false即可\r\n        , onClosed: ui.CONSTANTS.EMPTYFUNC    // {Function} end,层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数\r\n        , onFull: ui.CONSTANTS.EMPTYFUNC    // {Function} full,最大化后触发的回调,携带一个参数,即当前层DOM\r\n        , onMin: ui.CONSTANTS.EMPTYFUNC     // {Function} min,最小化后触发的回调,携带一个参数,即当前层DOM\r\n        , onRestore: ui.CONSTANTS.EMPTYFUNC // {Function} restore,还原后触发的回调,携带一个参数,即当前层DOM\r\n    }\r\n\r\n    /* wuiGlobalParams 合并到 wui 中 */\r\n    $.extend(true, ui, wuiGlobalParams);\r\n\r\n    $.each(wuiGlobalConfig, function(key, attr){\r\n        if(key === \"isLog\" || key === \"isLogMethodCalled\" || key === \"isLogParamValue\" \r\n            || key === \"isLogMessage\" || key === \"isLogError\" || key === \"isLogWarn\"){\r\n            ui.logUtilConfig[key] = attr;\r\n        }else if(key === \"isAddRequiredStar\" || key === \"starDirection\"){\r\n            ui.validateUtilConfig[key] = attr;\r\n        }else if(key === \"orgServiceAPI\" || key === \"subOrgServiceAPI\" || key === \"userServiceAPI\" \r\n            || key === \"chooseUserServiceAPI\" || key === \"gridFileUploadServiceAPI\" || key === \"gridImportServiceAPI\" || key === \"opinionBoxSource\"){\r\n            ui.serviceInterface[key] = attr;\r\n        }else{\r\n            ui[key] = attr;\r\n        }\r\n    })\r\n\r\n    // 框架全局文本配置\r\n    ui.language = {\r\n        date: {\r\n            days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"]\r\n            , daysShort: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\r\n            , daysMin:  [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"日\"]\r\n            , months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\r\n            , monthsShort: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\r\n            // monthsShort: [\"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\", \"十\", \"十一\", \"十二\"],\r\n            // monthsShort: [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"],\r\n            , today: \"今日\"\r\n            , clear: \"清空\"\r\n            , suffix: []\r\n            , meridiem: [\"上午\", \"下午\"]\r\n            // 日期组件按钮组默认清空按钮文本,默认是\"<i class='fa fa-remove'></i>\"\r\n            , clearBtn: \"<i class='fa fa-remove'></i>\"\r\n        },\r\n        chooseBox: {\r\n            // 编辑按钮文本\r\n            editBtn: \"<i class='fa fa-edit'></i>\"\r\n            // 清空按钮文本\r\n            , clearBtn: \"<i class='fa fa-trash'></i>\"\r\n        },\r\n        file: {\r\n            dictDefaultMessage: \"\"\r\n            , dictFallbackMessage : \"您的浏览器不支持拖放文件上传.\"\r\n            , dictFallbackText : \"\"\r\n            , dictFileTooBig : \"文件 ({{filesize}}MB)字节过大。允许上传的最大文件大小: {{maxFilesize}}MB.\"\r\n            , dictInvalidFileType : \"此类型文件不被支持上传\"\r\n            , dictResponseError : \"服务器返回状态代码为 {{statusCode}}\"\r\n            , dictUploadCanceled : \"文件上传被取消\"                    // 取消上传按钮文本\r\n            , dictCancelUploadConfirmation : \"您确定取消上传吗?\"\r\n            // 未上传之前单个文件移除按钮文本\r\n            , dictRemoveFile : \"<i title=\\\"取消上传\\\" class=\\\"fa fa-trash\\\"></i>\"\r\n            // 单个上传按钮文本\r\n            , dictUploadFile : \"<i title=\\\"上传\\\" class=\\\"fa fa-cloud-upload\\\"></i>\"\r\n            // 单个下载按钮文本\r\n            , dictDownloadFile : \"<i title=\\\"下载\\\" class=\\\"fa fa-cloud-download\\\"></i>\"\r\n            // 上传完成之后的取消删除按钮文本\r\n            , dictCancelUpload : \"<i title=\\\"删除\\\" class=\\\"fa fa-close\\\"></i>\" \r\n            , dictMaxFilesExceeded : \"您上传文件数量达到上限。\"\r\n        },\r\n        img: {\r\n            // 取消上传按钮文本\r\n            dictCancelUpload : \"<i class=\\\"fa fa-close\\\"></i>\" \r\n            // 编辑按钮文本\r\n            , dictEditFile : \"<i class=\\\"fa fa-edit\\\"></i>\" \r\n            // 删除按钮文本\r\n            , dictRemoveFile : \"<i class=\\\"fa fa-trash\\\"></i>\" \r\n        },\r\n        grid: {\r\n            // 搜索栏\r\n            searchBar: {\r\n                // 查询按钮文本\r\n                searchBtn: \"<i class=\\\"fa fa-search\\\"></i>\"        \r\n\r\n                // 重置按钮文本\r\n                , resetBtn: \"<i class=\\\"fa fa-refresh\\\"></i>\"  \r\n\r\n                // 展开更多搜索条件文本\r\n                , showMoreBtn: \"<i class=\\\"fa fa-chevron-down\\\"></i>\"  \r\n\r\n                // 隐藏更多搜索条件文本\r\n                , hideMoreBtn: \"<i class=\\\"fa fa-chevron-up\\\"></i>\"  \r\n            },\r\n            // 工具栏\r\n            toolBar: {\r\n                // 重置按钮文本\r\n                resetBtn: \"<i class=\\\"fa fa-refresh\\\"></i> 重置\"\r\n                // 显示数据过滤文本\r\n                , showFilterBtn: \"<i class=\\\"fa fa-filter\\\"></i> 显示数据过滤\"\r\n                // 高级搜索按钮文本\r\n                , highSearchBtn: \"<i class=\\\"fa fa-search\\\"></i> 高级搜索\"\r\n                // 导出按钮文本\r\n                , exportBtn: \"<i class=\\\"fa fa-sign-out\\\"></i> 导出\"\r\n                // 导入按钮文本\r\n                , importBtn: \"<i class=\\\"fa fa-sign-in\\\"></i> 导入\"\r\n                // 筛选按钮文本\r\n                , screenBtn: \"<i class=\\\"fa fa-filter\\\"></i> 筛选\"\r\n                // 数据过滤文本中,显示控制切换字符串\r\n                , filterShowString: \"显示\"\r\n                // 数据过滤文本中,隐藏控制切换字符串\r\n                , filterHideString: \"隐藏\"\r\n            },\r\n            // 导入页面标题\r\n            importPageTitle: \"列表数据导入\",\r\n            // 树结构图标样式\r\n            treeIcon: {\r\n                // 文件夹展开之前的图标\r\n                plus:'fa fa-angle-right wui-fa-middle'  \r\n                // 文件夹展开之后的图标\r\n                , minus:'fa fa-angle-down wui-fa-middle'    \r\n                // 文件图标 \r\n                , leaf:'wui-text-primary'         \r\n                // plus:'fa fa-caret-right wui-text-default',   // 文件夹展开之前的图标\r\n                // minus:'fa fa-caret-down wui-text-default',     // 文件夹展开之后的图标\r\n                // leaf:'fa fa-circle-o wui-text-primary'         // 文件图标\r\n            },\r\n            // 表格显示文本\r\n            defaultText: {\r\n                emptyrowstext: \"<div>** 暂无数据 **</div>\",\r\n                recordtext: \"{0} - {1}\\u3000共 {2} 条\", // 共字前是全角空格\r\n                emptyrecords: \"\",\r\n                // loadtext: \"加载中...\",\r\n                loadtext: \"<img src='\" + ui.FRAME_PATH + \"themes/images/loading-1.gif' title='加载中...' />\",\r\n                savetext: \"保存中...\",\r\n                pgtext : \" {0} 共 {1} 页\",\r\n                pgfirst : \"首页\",\r\n                pglast : \"尾页\",\r\n                pgnext : \"下一页\",\r\n                pgprev : \"上一页\",\r\n                pgrecs : \"页码记录\",\r\n                showhide: \"列表折叠或展开\",\r\n                overPageNumberText: \"当前列表最多只有 {0} 页\",\r\n                // mobile\r\n                pagerCaption : \"Grid::页码设置\",\r\n                pageText : \"页码:\",\r\n                recordPage : \"每页记录\",\r\n                nomorerecs : \"没有更多的记录了...\",\r\n                scrollPullup: \"上拉加载更多...\",\r\n                scrollPulldown : \"下拉刷新...\",\r\n                scrollRefresh : \"释放刷新...\"\r\n            },\r\n            // 单选列头显示文本\r\n            singleColHead: \"选择\"\r\n        },\r\n        selectBox: {\r\n            // 没有选中选项时,显示文本\r\n            noneSelected : \"没有选中任何项\"    \r\n            // 下拉搜索匹配不到内容时显示文本\r\n            , noneResults : \"匹配不到'{0}'\" \r\n             // 下拉视图中,\"全不选\"按钮文本\r\n            , deselectAll : \"全不选\" \r\n            // 下拉视图中,\"全选\"按钮文本\r\n            , selectAll : \"全选\"      \r\n            // 下拉视图中,\"关闭\"按钮文本\r\n            , doneButton : \"关闭\"     \r\n            // 下拉视图中,搜索框提示语\r\n            , liveSearchPlaceholder : \"查找选项\"\r\n        },\r\n        selectComboBox: {\r\n            // 没有选中选项时,显示文本\r\n            noneSelected : \"没有选中任何项\" \r\n        },\r\n        tagBox: {\r\n            // 输入框提示文本\r\n            placeholder : \"\"\r\n            // {string} 没有选中节点时显示内容\r\n            , noneItem : \"没有标签\" \r\n        },\r\n        tagComboBox: {\r\n            // {string} 没有选中节点时显示内容\r\n            noneItem : \"\" \r\n        },\r\n        tagsinput: {\r\n            // {string} 没有选中节点时显示内容\r\n            noneItem : \"\" \r\n        },\r\n        tree: {\r\n            // 虚拟根节点标题\r\n            virtualRootTitle: \"虚拟根节点\"\r\n        },\r\n        ueditor: {\r\n            // {String} 初始化编辑器的内容,也可以通过textarea/script/input的value赋值,默认是\"\"\r\n            initialContent:''    \r\n            // {String} 超出字数限制提示  留空支持多语言自动切换,否则按此配置显示\r\n            , wordOverFlowMsg:'<span style=\"color:red;\">你输入的字符个数已经超出最大允许值,服务器可能会拒绝保存！</span>'   \r\n        }\r\n    }\r\n\r\n    /* wuiGlobalLanguage 合并到 wui.language 中 */\r\n    $.extend(true, ui.language, wuiGlobalLanguage);\r\n\r\n\t// {String} 版本号\r\n\tui.version = VERSION;\r\n    ui.versionDate = VERSIONDATE;\r\n\r\n\t/**\r\n     * <p>阻止事件冒泡stopPropagation的兼容写法,兼容IE8+</p>\r\n     * @namespace wui\r\n     * @class stopPropagation\r\n     * @constructor \r\n     * @param event {Object} 事件传递对象\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.stopPropagation(event);\r\n     *\r\n     */\r\n\tui.stopPropagation = function(e){\r\n\t\tui.logUtilConfig.debugLog.methodName = \"stopPropagation\";\r\n\t\tui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n\t    e = e || window.event;\r\n        e.stopPropagation();\r\n\t    // if(document.all){  //只有IE识别\r\n\t    //     e.cancelBubble=true;\r\n\t    // }else{\r\n\t    //     e.stopPropagation();\r\n\t    // }\r\n\t};\r\n\r\n\t/**\r\n     * <p>阻止事件默认行为preventDefault的兼容写法,兼容IE8+</p>\r\n     * @namespace wui\r\n     * @class preventDefault\r\n     * @constructor \r\n     * @param event {Object} 事件传递对象\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.preventDefault(event);\r\n     *\r\n     */\r\n\tui.preventDefault = function(event){\r\n\t\tui.logUtilConfig.debugLog.methodName = \"preventDefault\";\r\n\t\tui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\t\t// ui.logMethodCalled(\"preventDefault\", FRAME_NAME);\r\n        event.preventDefault();\r\n\t\t// if (event.preventDefault){  \r\n\t\t// \tevent.preventDefault();  \r\n\t\t// }else{  \r\n\t\t// \tevent.returnValue=false;  \r\n\t\t// } \r\n\t}\r\n\r\n\t/**\r\n     * <p>事件绑定,兼容IE8+</p>\r\n     * @namespace wui\r\n     * @class addEventListener\r\n     * @constructor \r\n     * @param element {Object} 事件传递DOM对象\r\n     * @param eType {String} 指定事件名\r\n     * @param handle {function} 指定要事件触发时执行的函数\r\n     * @param [useCapture] {Boolean} 指定事件是否在捕获或冒泡阶段执行,默认是false\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法给ID为button的标签添加点击事件\r\n            wui.addEventListener(document.getElementById(\"button\"), \"click\", function(e){\r\n\t\t\t\twui.logMessage(e.type);\t// \"click\"\r\n            });\r\n     *\r\n     */\r\n    ui.addEventListener = function(element, eType, handle, useCapture){\r\n\t\tui.logUtilConfig.debugLog.methodName = \"addEventListener\";\r\n\t\tui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\t\t// ui.logMethodCalled(\"addEventListener\", FRAME_NAME);\r\n\r\n    \tif(element.addEventListener){           //如果支持addEventListener\r\n\t        element.addEventListener(eType, handle, useCapture);\r\n\t    }else if(element.attachEvent){          //如果支持attachEvent\r\n\t        element.attachEvent(\"on\"+eType, handle);\r\n\t    }else{                                  //否则使用兼容的onclick绑定\r\n\t        element[\"on\"+eType] = handle;\r\n\t    }\r\n    };\r\n\r\n\t/**\r\n     * <p>事件解绑,兼容IE8+</p>\r\n     * @namespace wui\r\n     * @class removeEventListener\r\n     * @constructor \r\n     * @param element {Object} 事件传递DOM对象\r\n     * @param eType {String} 指定事件名\r\n     * @param handle {function} 指定要移除的函数\r\n     * @param [useCapture] {Boolean} 指定移除事件句柄的阶段,默认是false\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法给ID为button的标签移除点击事件\r\n            wui.removeEventListener(document.getElementById(\"button\"), \"click\", function(e){\r\n\t\t\t\twui.logMessage(e.type);\t// \"click\"\r\n            });\r\n     *\r\n     */\r\n\tui.removeEventListener = function(element, eType, handle, useCapture) {\r\n\t\tui.logUtilConfig.debugLog.methodName = \"removeEventListener\";\r\n\t\tui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\t\t// ui.logMethodCalled(\"removeEventListener\", FRAME_NAME);\r\n\t\t\r\n\t    if(element.addEventListener){\r\n\t        element.removeEventListener(eType, handle, useCapture);\r\n\t    }else if(element.attachEvent){\r\n\t        element.detachEvent(\"on\"+eType, handle);\r\n\t    }else{\r\n\t        element[\"on\"+eType] = null;\r\n\t    }\r\n\t};\r\n\r\n\r\n\tui.ready = function(callback ){\r\n\t\tui.logUtilConfig.debugLog.methodName = \"ready\";\r\n\t\tui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\t\t\r\n\t}\r\n\r\n    return ui;\r\n\r\n})(libs,window);","/**\r\n * <h3>WUI公共方法库</h3>\r\n * <h5>组件公共方法</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.initPage\"}}{{/crossLink}}: 框架页面初始化(包括增加默认样式类、页面滚动、组件初始化(参考wui.init说明)等) </li>\r\n * <li>{{#crossLink \"wui.init\"}}{{/crossLink}}: 根据页面元素上所有绑定的data-init-wui附加数据值初始化对应的组件 </li>\r\n * <li>{{#crossLink \"wui.getAttributeParams\"}}{{/crossLink}}: 获取标签元素上绑定的data-wui-*附加数据 </li>\r\n * <li>{{#crossLink \"wui.formatMaxNumber\"}}{{/crossLink}}: 格式化maxNumber参数 </li>\r\n * <li>{{#crossLink \"wui.formatDate\"}}{{/crossLink}}: 格式化日期格式 </li>\r\n * <li>{{#crossLink \"wui.textarea\"}}{{/crossLink}}: 文本域(textarea)自适应高度 </li>\r\n * </ol>\r\n * <h5>框架换肤功能</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.setSkins\"}}{{/crossLink}}: 设置框架皮肤 </li>\r\n * <li>{{#crossLink \"wui.getSkin\"}}{{/crossLink}}: 获取框架皮肤 </li>\r\n * <li>{{#crossLink \"wui.removeSkin\"}}{{/crossLink}}: 清除框架皮肤缓存 </li>\r\n * </ol>\r\n * <h5>嵌套层的数据交互</h5>\r\n * <p class=\"aid-text\">一般是用url拼凑数据传递到嵌套层,当数据量过大时,URL已不能满足,所以提供此模块方法用户嵌套层之间的数据交互,每次操作都是针对顶层数据操作</p>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.addChooseBoxNode\"}}{{/crossLink}}: 弹出层数据交互：新增节点数据 </li>\r\n * <li>{{#crossLink \"wui.getChooseBoxNode\"}}{{/crossLink}}: 弹出层数据交互：获取最顶层已选中节点数据 </li>\r\n * <li>{{#crossLink \"wui.emptyChooseBoxNode\"}}{{/crossLink}}: 弹出层数据交互：清空最顶层已选中节点数据(元素移除) </li>\r\n * <li>{{#crossLink \"wui.removeChooseBoxNode\"}}{{/crossLink}}: 弹出层数据交互：删除最顶层已选中节点数据(元素还保留) </li>\r\n * </ol>\r\n * <h5>页面交互</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.backhome\"}}{{/crossLink}}: 重定向首页 </li>\r\n * <li>{{#crossLink \"wui.getQueryString\"}}{{/crossLink}}: 获取页面URL请求参数集 </li>\r\n * <li>{{#crossLink \"wui.getQueryStringByName\"}}{{/crossLink}}: 根据参数名获取URL请求参数 </li>\r\n * <li>{{#crossLink \"wui.buildUrl\"}}{{/crossLink}}: 把JSON格式数据转换为url参数,并给URL加上时间戳 </li>\r\n * <li>{{#crossLink \"wui.openWindow\"}}{{/crossLink}}: 打开一个子窗口 </li>\r\n * <li>{{#crossLink \"wui.closeWindow\"}}{{/crossLink}}: 关闭当前窗口,并返回父窗口 </li>\r\n * </ol>\r\n * <h5>数据交互</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.ajax\"}}{{/crossLink}}: 异步请求 </li>\r\n * <li>{{#crossLink \"wui.getAjax\"}}{{/crossLink}}: get 异步请求,一般用于查询 </li>\r\n * <li>{{#crossLink \"wui.patchAjax\"}}{{/crossLink}}: patch 异步请求,一般用于修改 </li>\r\n * <li>{{#crossLink \"wui.deleteAjax\"}}{{/crossLink}}: delete 异步请求,一般用于删除 </li>\r\n * <li>{{#crossLink \"wui.submitByForm\"}}{{/crossLink}}: 模拟表单提交 </li>\r\n * </ol>\r\n * <h5>对象操作</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.deepCopy\"}}{{/crossLink}}: 对象深拷贝 </li>\r\n * <li>{{#crossLink \"wui.parseToObj\"}}{{/crossLink}}: 传入字符串转化为对象 </li>\r\n * <li>{{#crossLink \"wui.isUndefined\"}}{{/crossLink}}: 判断传递的参数是否为undefined类型 </li>\r\n * <li>{{#crossLink \"wui.isString\"}}{{/crossLink}}: 判断传递的参数是否为 String 类型 </li>\r\n * <li>{{#crossLink \"wui.isNumber\"}}{{/crossLink}}: 判断传递的参数是否为 Number 类型(且排除了NaN) </li>\r\n * <li>{{#crossLink \"wui.isNaN\"}}{{/crossLink}}: 判断传递的参数是否为 NaN </li>\r\n * <li>{{#crossLink \"wui.isBoolean\"}}{{/crossLink}}: 判断传递的参数是否为 Boolean 类型 </li>\r\n * <li>{{#crossLink \"wui.isObject\"}}{{/crossLink}}: 判断传递的参数是否为 Object 类型 </li>\r\n * <li>{{#crossLink \"wui.isEmptyObject\"}}{{/crossLink}}: 判断传递对象是否为空对象 </li>\r\n * <li>{{#crossLink \"wui.isEqualObject\"}}{{/crossLink}}: 判断两个对象是否相等 </li>\r\n * <li>{{#crossLink \"wui.isJson\"}}{{/crossLink}}: 判断传递的参数是否为json格式 </li>\r\n * <li>{{#crossLink \"wui.isArray\"}}{{/crossLink}}: 判断传递的参数是否为array格式 </li>\r\n * <li>{{#crossLink \"wui.isFunction\"}}{{/crossLink}}: 判断传递的参数是否为 Function 类型 </li>\r\n * <li>{{#crossLink \"wui.getJqueryObject\"}}{{/crossLink}}: 根据传入JS对象获取存在页面中的JQuery对象,若无法解析为JQuery对象,则返回false </li>\r\n * </ol>\r\n * <h5>页面属性</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.scroll\"}}{{/crossLink}}: 设置内容滚动显示 </li>\r\n * <li>{{#crossLink \"wui.onresize\"}}{{/crossLink}}: 监听浏览器尺寸改变事件 </li>\r\n * <li>{{#crossLink \"wui.getFullScreenSize\"}}{{/crossLink}}: 获取节点撑满一屏所需的规格,返回一个带有两个属性(以像素为单位的 width 和 height)的对象 </li>\r\n * <li>{{#crossLink \"wui.getViewSize\"}}{{/crossLink}}: 获取窗口的文档显示区规格,返回一个带有两个属性(以像素为单位的 width 和 height)的对象 </li>\r\n * </ol>\r\n * <h5>本地存储</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.setCookie\"}}{{/crossLink}}: 传入键值对,存储到本地 </li>\r\n * <li>{{#crossLink \"wui.deleteCookie\"}}{{/crossLink}}: 根据传入的关键字删除对应的本地存储值 </li>\r\n * <li>{{#crossLink \"wui.getCookie\"}}{{/crossLink}}: 根据传入的关键字获取对应的本地存储值 </li>\r\n * <li>{{#crossLink \"wui.setLocalStorage\"}}{{/crossLink}}: 存储localStorage对象 </li>\r\n * <li>{{#crossLink \"wui.deleteLocalStorage\"}}{{/crossLink}}: 删除localStorage对象 </li>\r\n * <li>{{#crossLink \"wui.getLocalStorage\"}}{{/crossLink}}: 获取存储的localStorage对象 </li>\r\n * </ol>\r\n * <h5>定时器</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.setTimeout\"}}{{/crossLink}}: 延迟触发:只在指定时间后执行一次 </li>\r\n * <li>{{#crossLink \"wui.clearTimeout\"}}{{/crossLink}}: 清除延迟触发的定时器 </li>\r\n * <li>{{#crossLink \"wui.setInterval\"}}{{/crossLink}}: 定时触发:以指定时间为周期循环执行 </li>\r\n * <li>{{#crossLink \"wui.clearInterval\"}}{{/crossLink}}: 清除定时触发的定时器 </li>\r\n * </ol>\r\n * <h5>浏览器检测</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.getBrowserVersion\"}}{{/crossLink}}: 获取浏览器类型及版本号,可供浏览器兼容性测试和判断 </li>\r\n * </ol>\r\n * <h5>其它常用</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.guid\"}}{{/crossLink}}: 生成仿UUID的唯一字符串 </li>\r\n * <li>{{#crossLink \"wui.getTimeFormat\"}}{{/crossLink}}: 将<strong>时间戳</strong>转化为自定义的日期格式 </li>\r\n * <li>{{#crossLink \"wui.getDate\"}}{{/crossLink}}: 获取 day 天后的自定义格式日期 </li>\r\n * <li>{{#crossLink \"wui.deleteDataByIds\"}}{{/crossLink}}: 删除数据确认框 </li>\r\n * </ol>\r\n * @module Method\r\n */\r\n\r\n;(function (ui,$, undefined) {\r\n\r\n    /**\r\n     * <p>设置内容滚动显示(一定要放在 $(document).ready 中进行初始化！)</p>\r\n     * @namespace wui\r\n     * @class scroll\r\n     * @constructor \r\n     * @param $element {jQuery} 要滚动的节点的父节点对象\r\n     * @param params {JSON} 滚动参数\r\n     * @param params.size {string} 滚动条宽度,单位px,默认\"8px\"\r\n     * @param params.color {string} 滚动条颜色(使用16进制颜色值),默认是\"#ccc\"\r\n     * @param params.autohidemode {string} 隐藏滚动条的方式, 默认值是true,可用的值:true(无滚动时隐藏)|\"cursor\"(隐藏)|false(不隐藏)|\"leave\"(仅在指针离开内容时隐藏)|\"hidden\"(一直隐藏)|\"scroll\"(仅在滚动时显示)\r\n     * @param params.cursoropacitymax {number} 当滚动条是显示状态时改变透明度, 值范围 1 到 0,默认值是1\r\n     * @param params.cursoropacitymin {number} 当滚动条是隐藏状态时改变透明度, 值范围 1 到 0,默认值是0\r\n     * @param params.oneaxismousemode {string} 当只有水平滚动时可以用鼠标滚轮来滚动，如果设为false则不支持水平滚动，如果设为auto支持双轴滚动,默认是\"auto\"\r\n     * @return {Object} 初始化之后的滚动条对象\r\n     * @example\r\n     *  (具体显示效果,请看wui.grid表格高度占满一屏幕的情况下,数据展示效果)\r\n     *  HTML:\r\n     *\r\n            <div id=\"parentElem\" style=\"height: 100px; width: 100px;\">\r\n                <div id=\"theElem\" style=\"height: 400px; width: 300px;\">\r\n                    \r\n                </div>\r\n            </div>\r\n     *  js: \r\n     *\r\n            wui.scroll($(\"#parentElem\"));   // 出现横竖双滚动条\r\n     *\r\n     */\r\n    ui.scroll = function(element, params){\r\n        ui.logUtilConfig.debugLog.methodName = \"scroll\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"scroll\", FRAME_NAME);\r\n        var $elements;\r\n        if(!element){\r\n            ui.logError(\"$element 参数不能为空\", FRAME_NAME+\".scroll\", true);\r\n            return false;\r\n        }\r\n\r\n        if(ui.isJQuery(element)){\r\n            $elements = element;\r\n        }else{\r\n            $elements = $(element);\r\n        }\r\n\r\n        // console.info(params);\r\n        params = params || {};\r\n\r\n        var size = params.size || '8px',\r\n            color = params.color || '#ccc',\r\n            autohidemode = (params.autohidemode !== undefined) ? params.autohidemode : \"cursor\",\r\n            cursoropacitymax = params.cursoropacitymax || 1,\r\n            cursoropacitymin = params.cursoropacitymin || 0,\r\n            oneaxismousemode = (params.oneaxismousemode != undefined) ? params.oneaxismousemode : \"auto\";\r\n\r\n        var config = {\r\n            cursorborder: \"\"\r\n            , cursorwidth: size      // 滚动条的宽度,单位：便素\r\n            , cursorcolor: color\r\n            , autohidemode: autohidemode             // 隐藏滚动条的方式, 可用的值:true(无滚动时隐藏)|\"cursor\"(隐藏)|false(不隐藏)|\"leave\"(仅在指针离开内容时隐藏)|\"hidden\"(一直隐藏)|\"scroll\"(仅在滚动时显示)\r\n            , cursoropacitymax: cursoropacitymax     // 当滚动条是显示状态时改变透明度, 值范围 1 到 0\r\n            , cursoropacitymin: cursoropacitymin     // 当滚动条是隐藏状态时改变透明度, 值范围 1 到 0\r\n            , oneaxismousemode: oneaxismousemode     // 当只有水平滚动时可以用鼠标滚轮来滚动，如果设为false则不支持水平滚动，如果设为auto支持双轴滚动\r\n            , cursorborderradius: \"5px\" //以像素为光标边界半径\r\n            , horizrailenabled: true\r\n            , enablekeyboard: true   // nicescroll可以管理键盘事件\r\n        };\r\n\r\n        var oNiceScrollArr = [];\r\n        $elements.each(function(){\r\n\r\n            var oNiceScroll = $(this).niceScroll(config);\r\n\r\n            // console.info(oNiceScroll)\r\n\r\n            // 当节点改变大小时，自动重置滚动条\r\n            if($(this).children().length > 0){\r\n                $(this).children().each(function(index, elem){\r\n                    ui.onresize($(elem), function(width, height){\r\n                        // console.error(1)\r\n                        oNiceScroll.resize();\r\n                        // 检测滚动条是否重置大小（当窗口改变大小时）\r\n                        // $(this).getNiceScroll().resize();\r\n                    })\r\n                })\r\n            }else{\r\n                ui.onresize($(this), function(width, height){\r\n                    // 检测滚动条是否重置大小（当窗口改变大小时）\r\n                    oNiceScroll.resize();\r\n                    // $(this).getNiceScroll().resize();\r\n                })\r\n            }\r\n\r\n            oNiceScrollArr.push(oNiceScroll);\r\n        })\r\n\r\n        return oNiceScrollArr.length == 1 ? oNiceScrollArr[0] : oNiceScrollArr;\r\n    }\r\n\r\n    /**\r\n     * <p>监听浏览器尺寸改变事件</p>\r\n     * @namespace wui\r\n     * @class onresize\r\n     * @constructor \r\n     * @param $dom {jQuery} 要滚动的节点的父节点对象\r\n     * @param resizeFun {Function} 浏览器尺寸改变触发方法\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *\r\n            var resizeFun = function(clientWidth, clientHeight){\r\n                wui.notice(clientWidth + \" , \" + clientHeight);\r\n            }\r\n            wui.onresize(resizeFun);\r\n     *\r\n     */\r\n    ui.onresize = function($dom, resizeFun){\r\n        ui.logUtilConfig.debugLog.methodName = \"onresize\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(typeof($dom) === \"function\"){\r\n            resizeFun = $dom;\r\n            $dom = $(window);\r\n        }else if(typeof($dom) === \"string\"){\r\n            $dom = $($dom);\r\n        }else if(typeof($dom) === \"undefined\"){\r\n            ui.logMessage(\"传入空参数\", \"wui.onresize\", true);\r\n            $dom = $(window);\r\n        }\r\n\r\n        var width = $dom.width(),\r\n            height = $dom.height();\r\n\r\n        $dom.on('resize',function(){\r\n            if(width != $dom.width() || height != $dom.height()){\r\n                // console.info(\"resize12\");\r\n                // console.info(resizeFun());\r\n                width = $dom.width(),\r\n                height = $dom.height(); \r\n                resizeFun && typeof(resizeFun) === \"function\" && resizeFun(width, height);\r\n            } \r\n        });\r\n\r\n        // var w = document.documentElement.clientWidth,\r\n        //     h = document.documentElement.clientHeight;\r\n        // window.onresize = function(){\r\n        //     // console.info(\"resize\");\r\n        //     if(w != document.documentElement.clientWidth || h != document.documentElement.clientHeight){\r\n        //         // console.info(\"resize12\");\r\n        //         // console.info(resizeFun());\r\n        //         w = document.documentElement.clientWidth,\r\n        //         h = document.documentElement.clientHeight; \r\n        //         resizeFun && typeof(resizeFun) === \"function\" && resizeFun(w, h);\r\n        //     } \r\n        // }\r\n    };\r\n\r\n    /*\r\n     * <p>设置节点高度撑满一屏</P>\r\n     * @namespace wui\r\n     * @class setFullScreenHeight\r\n     * @constructor\r\n     * @param [selector] {string} 要全屏节点选择器,如#id,.class,...\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.setFullScreenHeight(\"body\");  // {width: 1366, height: 637}\r\n     * \r\n     */\r\n    ui.setFullScreenHeight = function(selector, offset, isScroll){\r\n        ui.logUtilConfig.debugLog.methodName = \"setFullScreenHeight\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"setFullScreenHeight\", FRAME_NAME);\r\n\r\n        // console.info(selector)\r\n        if(!selector){\r\n            ui.logError(\"必须传入要计算全屏的DOM节点\", FRAME_NAME+\".setFullScreenHeight\", true);\r\n            return false;\r\n        }\r\n\r\n        var element = null;\r\n        if(ui.isJQuery(selector) && selector.exist()){\r\n            element = selector;\r\n        }else if($(selector).exist()){\r\n            element = $(selector);\r\n        }else{\r\n            ui.logError(\"页面中不存在此节点\", FRAME_NAME+\".setFullScreenHeight\", true);\r\n            return false;\r\n        }\r\n\r\n        var viewSize = ui.getViewSize();\r\n        var wScrollLeft = $(window).scrollLeft();\r\n        var wScrollTop = $(window).scrollTop();\r\n        var offsetSize = element.offset();\r\n        var width = viewSize.width - (offsetSize.left - wScrollLeft),\r\n            height = viewSize.height - (offsetSize.top - wScrollTop);\r\n\r\n        if(offset){\r\n            offset = $.extend(true, {}, {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }, offset)\r\n            if(offset.top || offset.bottom){\r\n                height = height - parseInt(offset.top) - parseInt(offset.bottom);\r\n                element.height(height);\r\n            }\r\n\r\n            if(offset.left || offset.right){\r\n                width = width - parseInt(offset.left) - parseInt(offset.right);\r\n                element.width(width);\r\n            }\r\n        }else{\r\n            element.height(height);\r\n            element.width(width);\r\n        }\r\n\r\n        if(isScroll){\r\n            ui.scroll(element, {\r\n                height: height\r\n            })\r\n        }\r\n            \r\n        // element.height(height);\r\n        // console.info(wScrollTop);\r\n\r\n        // 增加检测bottom计算才是最准确的,目前只能靠手动加\r\n        // ？\r\n\r\n        return {\r\n            width: width,\r\n            height: height\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>获取节点撑满一屏所需的规格,返回一个带有两个属性(以像素为单位的 width 和 height)的对象</P>\r\n     * @namespace wui\r\n     * @class getFullScreenSize\r\n     * @constructor\r\n     * @param [selector] {string} 要全屏节点选择器,如#id,.class,...\r\n     * @return {JSON} [窗口的文档显示区的宽度和高度,{width:value, height:value}]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.getFullScreenSize(\"body\");  // {width: 1366, height: 637}\r\n     * \r\n     */\r\n    ui.getFullScreenSize = function(selector){\r\n        ui.logUtilConfig.debugLog.methodName = \"getFullScreenSize\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getFullScreenSize\", FRAME_NAME);\r\n\r\n        // console.info(selector)\r\n        if(!selector){\r\n            ui.logError(\"必须传入要计算全屏的DOM节点\", FRAME_NAME+\".getFullScreenSize\", true);\r\n            return false;\r\n        }\r\n\r\n        var element = null;\r\n        if(ui.isJQuery(selector) && selector.exist()){\r\n            element = selector;\r\n        }else if($(selector).exist()){\r\n            element = $(selector);\r\n        }else{\r\n            ui.logError(\"页面中不存在此节点\", FRAME_NAME+\".getFullScreenSize\", true);\r\n            return false;\r\n        }\r\n\r\n        var viewSize = ui.getViewSize();\r\n        var wScrollLeft = $(window).scrollLeft();\r\n        var wScrollTop = $(window).scrollTop();\r\n        var offsetSize = element.offset();\r\n        var width = viewSize.width - (offsetSize.left - wScrollLeft),\r\n            height = viewSize.height - (offsetSize.top - wScrollTop);\r\n\r\n        // console.info(wScrollTop);\r\n\r\n        // 增加检测bottom计算才是最准确的,目前只能靠手动加\r\n        // ？\r\n\r\n        return {\r\n            width: width,\r\n            height: height\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>获取窗口的文档显示区规格,返回一个带有两个属性(以像素为单位的 width 和 height)的对象</P>\r\n     * @namespace wui\r\n     * @class getViewSize\r\n     * @constructor\r\n     * @return {JSON} [窗口的文档显示区的宽度和高度,{width:value, height:value}]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.getViewSize();  // {width: 1366, height: 637}\r\n     * \r\n     */\r\n    ui.getViewSize = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"getViewSize\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getViewSize\", FRAME_NAME);\r\n\r\n        var winW, winH; \r\n        if(window.innerHeight) {// all except IE \r\n            winW = window.innerWidth; \r\n            winH = window.innerHeight; \r\n        } else if (document.documentElement && document.documentElement.clientHeight) {// IE 6 Strict Mode \r\n            winW = document.documentElement.clientWidth; \r\n            winH = document.documentElement.clientHeight; \r\n        } else if (document.body) { // other \r\n            winW = document.body.clientWidth; \r\n            winH = document.body.clientHeight; \r\n        }  // for small pages with total size less then the viewport \r\n\r\n        return {width: winW, height:winH}; \r\n    }\r\n    \r\n    /**\r\n     * <p>获取浏览器类型及版本号,可供浏览器兼容性测试和判断</p>\r\n     * @namespace wui\r\n     * @class getBrowserVersion\r\n     * @constructor \r\n     * @return {Object} [ 格式举例：{ browser: \"IE\", version: \"11.0\" } ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var browserVersion = wui.getBrowserVersion( );   // { browser: \"IE\", version: \"11.0\" }\r\n     *\r\n     */\r\n    ui.getBrowserVersion = function() {\r\n        ui.logUtilConfig.debugLog.methodName = \"getBrowserVersion\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getBrowserVersion\", FRAME_NAME);\r\n        \r\n        var userAgent = navigator.userAgent,\r\n            rMsie = /(msie\\s|trident.*rv:)([\\w.]+)/,\r\n            rFirefox = /(firefox)\\/([\\w.]+)/,\r\n            rOpera = /(opera).+version\\/([\\w.]+)/,\r\n            rChrome = /(chrome)\\/([\\w.]+)/,\r\n            rSafari = /version\\/([\\w.]+).*(safari)/;\r\n        var browser;\r\n        var version;\r\n        var ua = userAgent.toLowerCase();\r\n        var match = rMsie.exec(ua);\r\n        if (match != null) {\r\n            return { browser: \"IE\", version: match[2] || \"0\" };\r\n        }\r\n        var match = rFirefox.exec(ua);\r\n        if (match != null) {\r\n            return { browser: match[1] || \"\", version: match[2] || \"0\" };\r\n        }\r\n        var match = rOpera.exec(ua);\r\n        if (match != null) {\r\n            return { browser: match[1] || \"\", version: match[2] || \"0\" };\r\n        }\r\n        var match = rChrome.exec(ua);\r\n        if (match != null) {\r\n            return { browser: match[1] || \"\", version: match[2] || \"0\" };\r\n        }\r\n        var match = rSafari.exec(ua);\r\n        if (match != null) {\r\n            return { browser: match[2] || \"\", version: match[1] || \"0\" };\r\n        }\r\n        if (match != null) {\r\n            return { browser: \"\", version: \"0\" };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>生成仿UUID的字符串:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (8-4-4-4-12)</p>\r\n     * @namespace wui\r\n     * @class guid\r\n     * @constructor \r\n     * @return {String}  [ 仿UUID的字符串:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (8-4-4-4-12) ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var guid = wui.guid( );   // \"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\"\r\n     *\r\n     */\r\n    ui.guid = function() {\r\n        ui.logUtilConfig.debugLog.methodName = \"guid\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"guid\", FRAME_NAME);\r\n        function S4() {\r\n           return (((1 + Math.random())*0x10000)|0).toString(16).substring(1);\r\n        }\r\n        return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n    }\r\n\r\n    /**\r\n     * <p>将时间戳转化为自定义的日期格式(与formatDate()方法不同,这个仅转化时间戳)</p>\r\n     * @namespace wui\r\n     * @class getTimeFormat\r\n     * @constructor \r\n     * @param timeStamp {Number} 时间戳\r\n     * @param formatStr {String} [ 返回的日期格式, p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy 的任意组合, 默认是\"yyyy-mm-dd\"。]  <br/>\r\n            <table>\r\n                <tr>\r\n                    <td>w : 周数表示为 '一','二','三','四','五','六','日',</td>\r\n                    <td>W : 周数表示为 'Mon.','Tues.','Wed.','Thur.','Fri.','Sat.','Sun.'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>p : 选中值表示为 'a.m.' or 'p.m.'</td>\r\n                    <td>P : 选中值表示为 'AM' or 'PM'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>s : 秒数表示,不填充'0'</td>\r\n                    <td>ss : 秒数表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>i :分数表示,不填充'0'</td> \r\n                    <td>ii : 分数表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>h : 24小时制,不填充'0'</td> \r\n                    <td>hh : 24小时制,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>H : 12小时制,不填充'0'</td> \r\n                    <td>HH : 12小时制,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>d : 每月天数表示,不填充'0'</td> \r\n                    <td>dd : 每月天数表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>m : 月份表示,不填充'0'</td> \r\n                    <td>mm : 月份表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>M : 一个月的短文本表示,例如一或三</td> \r\n                    <td>MM : 一个月的全文,例如一月或三月</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>yy : 年份的两位数表示法</td> \r\n                    <td>yyyy : 年份的全数字表示法(4位数)</td>\r\n                </tr>\r\n            </table>\r\n     * @return {string} 自定义格式的日期\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var date1 = wui.getTimeFormat(1517970021000, \"yyyy-mm-dd hh:ii:ss\");   // \"2018-02-07 10:20:21\"\r\n     *\r\n     */\r\n    ui.getTimeFormat = function(dt, formatStr) {\r\n        ui.logUtilConfig.debugLog.methodName = \"getTimeFormat\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getTimeFormat\", FRAME_NAME);\r\n        // ui.logParamValue({\r\n        //     paramName: \"dt\", \r\n        //     paramValue: dt, \r\n        //     methodName: \"getTimeFormat\", \r\n        //     className: FRAME_NAME, \r\n        //     isDebug: true  // {Boolean} 是否组件调试传入的,默认是false\r\n        // })\r\n\r\n        var timeStamp = 0;\r\n\r\n        try{\r\n            if(!dt){\r\n                ui.logError(\"要转化的日期参数不能为空\", FRAME_NAME+\".getTimeFormat\", true);\r\n                return false;\r\n            }else if(typeof(dt) === \"object\"){\r\n                timeStamp = dt.getTime();\r\n                \r\n            }else if(typeof(dt) === \"number\"){\r\n                timeStamp = dt;\r\n            }else{\r\n                ui.logError(\"要转化的日期参数不是时间戳:\" + dt, FRAME_NAME+\".getTimeFormat\", true);\r\n                return false;\r\n            }\r\n        }catch(e){\r\n            ui.logError(e, FRAME_NAME+\".getTimeFormat\", true);\r\n            return false;\r\n        }\r\n\r\n        if(timeStamp.toString().length == 10){\r\n            timeStamp = timeStamp * 1000;\r\n        }\r\n            \r\n\r\n        formatStr = formatStr || 'yyyy-mm-dd';\r\n        var date = new Date(timeStamp);\r\n        // if(typeof(dt) == \"number\"){ // 时间戳\r\n        //     date = new Date(parseInt(dt));\r\n        // }else{\r\n        //     date = new Date(dt.toString());  // new Date(); Thu Jun 14 2018 13:17:33 GMT+0800 (中国标准时间)\r\n        // }\r\n        // var date = new Date(parseInt(timeStamp));\r\n        var str = formatStr;\r\n        var months = [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\r\n            monthsShort = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"],\r\n            week = ['日','一','二','三','四','五','六'],\r\n            weekShort = ['Sun.','Mon.','Tues.','Wed.','Thur.','Fri.','Sat.'];\r\n            // 凌晨:3:00--6:00\r\n            // 早晨:6:00---8:00\r\n            // 上午:8:00--11:00\r\n            // 中午:11:00--13:00\r\n            // 下午:13:00--17:00\r\n            // 傍晚:17:00--19:00\r\n            // 晚上:19:00--23:00\r\n            // 深夜:23:00--3:00\r\n            // meridiem = [\"深夜\",\"凌晨\",\"早晨\",\"上午\",\"中午\",\"下午\",\"傍晚\",\"晚上\"];\r\n        // try{\r\n\r\n        // }catch(e){\r\n\r\n        // }\r\n        // 年份\r\n        str=str.replace(/yyyy|YYYY/,date.getFullYear());\r\n        str=str.replace(/yy|YY/,(date.getYear() % 100) > 9 ? (date.getYear() % 100).toString():'0' + (date.getYear() % 100));\r\n        // 月份:短文本表示\r\n        str=str.replace(/MM/,months[date.getMonth()]);\r\n        str=str.replace(/M/g,monthsShort[date.getMonth()]);\r\n        // 月份:数字表示\r\n        str=str.replace(/mm/,(date.getMonth() + 1) > 9 ? (date.getMonth()+1).toString() :'0' + (date.getMonth() + 1));\r\n        str=str.replace(/m/g,(date.getMonth()+1));\r\n        // 周数\r\n        str=str.replace(/w/g,week[date.getDay()]);\r\n        str=str.replace(/W/g,weekShort[date.getDay()]);\r\n        // 日期\r\n        str=str.replace(/dd|DD/,date.getDate()>9?date.getDate().toString():'0' + date.getDate());\r\n        str=str.replace(/d|D/g,date.getDate());\r\n        // 24小时制\r\n        str=str.replace(/hh/,date.getHours()>9?date.getHours().toString():'0' + date.getHours());\r\n        str=str.replace(/h/g,date.getHours());\r\n        // 12小时制\r\n        var hour = (date.getHours() > 12) ? (date.getHours() - 12) : date.getHours();\r\n        str=str.replace(/HH/,hour > 9? hour.toString():'0' + hour);\r\n        str=str.replace(/H/g, hour);\r\n        // \"a.m.\"或者\"A.M.\"\r\n        str=str.replace(/p/,date.getHours() > 12? 'p.m.':'a.m.');\r\n        str=str.replace(/P/g,date.getHours() > 12? 'P.M.':'A.M.');\r\n        // 分钟\r\n        str=str.replace(/ii/,date.getMinutes()>9?date.getMinutes().toString():'0' + date.getMinutes());\r\n        str=str.replace(/i/g,date.getMinutes());\r\n        // 秒数\r\n        str=str.replace(/ss|SS/,date.getSeconds()>9?date.getSeconds().toString():'0' + date.getSeconds());\r\n        str=str.replace(/s|S/g,date.getSeconds());\r\n\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * <p>获取 day 天后的时间,时间格式为 format</p>\r\n     * @namespace wui\r\n     * @class getDate\r\n     * @constructor \r\n     * @param day {Number} 天数,若为正数,则表示当前日期往后第 day天,若为0,则表示今日,若为负数,则表示 day 天之前的日期\r\n     * @param formatStr {String} [ 返回的日期格式, p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy 的任意组合, 默认是\"yyyy-mm-dd hh:ii:ss\"。]  <br/>\r\n            <table>\r\n                <tr>\r\n                    <td>w : 周数表示为 '一','二','三','四','五','六','日',</td>\r\n                    <td>W : 周数表示为 'Mon.','Tues.','Wed.','Thur.','Fri.','Sat.','Sun.'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>p : 选中值表示为 'a.m.' or 'p.m.'</td>\r\n                    <td>P : 选中值表示为 'AM' or 'PM'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>s : 秒数表示,不填充'0'</td>\r\n                    <td>ss : 秒数表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>i :分数表示,不填充'0'</td> \r\n                    <td>ii : 分数表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>h : 24小时制,不填充'0'</td> \r\n                    <td>hh : 24小时制,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>H : 12小时制,不填充'0'</td> \r\n                    <td>HH : 12小时制,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>d : 每月天数表示,不填充'0'</td> \r\n                    <td>dd : 每月天数表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>m : 月份表示,不填充'0'</td> \r\n                    <td>mm : 月份表示,填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>M : 一个月的短文本表示,例如一或三</td> \r\n                    <td>MM : 一个月的全文,例如一月或三月</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>yy : 年份的两位数表示法</td> \r\n                    <td>yyyy : 年份的全数字表示法(4位数)</td>\r\n                </tr>\r\n            </table>\r\n     * @return {string} [ 转换为URL ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var url = wui.getDate(-2, \"yyyy-mm-dd\");   // \"2018-02-05\"\r\n     *\r\n     */\r\n    ui.getDate = function(day, format) {\r\n        day = (day ? Number(day) : 0 );\r\n        format = format || \"yyyy-mm-dd hh:ii:ss\";\r\n        var now = new Date();\r\n        var today = now.getTime();\r\n        var result = new Date();\r\n        result.setTime(today + (day * 24 * 60 * 60 * 1000));\r\n\r\n        return ui.getTimeFormat(Date.parse(result), format);\r\n    }\r\n\r\n    /*\r\n     * <p>计算 JavaScript 字符串，并把它作为脚本代码来执行</p>\r\n     * @namespace wui\r\n     * @class eval\r\n     * @constructor \r\n     * @param {String} string 必需。要计算的字符串，其中含有要计算的 JavaScript 表达式或要执行的语句。\r\n     * @return \r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.eval(\"x=10;y=20;document.write(x*y)\");  // 200\r\n            document.write(\"<br>\" + wui.eval(\"2+2\"));   // 4\r\n            document.write(\"<br>\" + wui.eval(x+17));    // 27\r\n\r\n            var funStr = \"function(){alert('Test!')}\";\r\n            var fn = wui.eval(\"(0 || \" + funStr + \")\");\r\n            fn();   // 弹出\"Test!\"\r\n     *\r\n     */\r\n    // ui.eval = function(string){\r\n    //     if(ui.CONSTANTS.ISSUPPORTH5){\r\n    //         return eval(string)\r\n    //     }else{\r\n    //         return eval(string)\r\n    //     }\r\n    // }\r\n\r\n    return ui;\r\n})( wui || {}, libs );\r\n","// 组件方法\r\n// 对象操作\r\n;(function (ui,$, undefined) {\r\n\r\n    /*\r\n     * <p>创建一个DOM结构</p>\r\n     * @namespace wui\r\n     * @class createElement\r\n     * @constructor \r\n     * @param html {String} 要转化为DOM结构的HTML字符串\r\n     * @return {Element} 转化后的DOM结构\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var element = wui.createElement('<div>新建的DOM结构</div>');\r\n     *\r\n     */\r\n    ui.createElement = function(html){\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = html;\r\n        return div.childNodes[0];\r\n    }\r\n\r\n    /**\r\n     * <p>获取最后一个chooseBox已选中节点数据</p>\r\n     * @namespace wui\r\n     * @class getChooseBoxNode\r\n     * @constructor \r\n     * @param nodes {Array} chooseBox对象选中结果值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var node = wui.getChooseBoxNode();\r\n     *\r\n     */\r\n    ui.getChooseBoxNode = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"getChooseBoxNode\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getChooseBoxNode\", FRAME_NAME);\r\n\r\n        var chooseBoxNodes = ui.getChooseBoxNodes();\r\n        var chooseBoxNode = {node: []};\r\n        if(chooseBoxNodes.length > 0){\r\n            chooseBoxNode = chooseBoxNodes[chooseBoxNodes.length - 1];\r\n        }\r\n        return chooseBoxNode.node;\r\n    }\r\n\r\n    /**\r\n     * <p>清空最后一个chooseBox已选中节点数据</p>\r\n     * @namespace wui\r\n     * @class emptyChooseBoxNode\r\n     * @constructor \r\n     * @param nodes {Array} chooseBox对象选中结果值\r\n     * @return {Node} 删除的节点数据\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.emptyChooseBoxNode();\r\n     *\r\n     */\r\n    ui.emptyChooseBoxNode = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"emptyChooseBoxNode\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        \r\n        var chooseBoxNodes = ui.getChooseBoxNodes();\r\n        var chooseBoxNode = {node: []};\r\n        if(chooseBoxNodes.length > 0){\r\n            chooseBoxNodes[chooseBoxNodes.length - 1].node = [];\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>删除保存的最后一个chooseBox已选中节点数据</p>\r\n     * @namespace wui\r\n     * @class removeChooseBoxNode\r\n     * @constructor \r\n     * @param nodes {Array} chooseBox对象选中结果值\r\n     * @return {Node} 删除的节点数据\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var index = wui.removeChooseBoxNode();\r\n     *\r\n     */\r\n    ui.removeChooseBoxNode = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"removeChooseBoxNode\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"removeChooseBoxNode\", FRAME_NAME);\r\n\r\n        var chooseBoxNode = ui.getChooseBoxNodes().pop();\r\n        return chooseBoxNode.node;\r\n    }\r\n\r\n    /**\r\n     * <p>新增chooseBox已选中节点数据</p>\r\n     * @namespace wui\r\n     * @class addChooseBoxNode\r\n     * @constructor \r\n     * @param nodes {Array} chooseBox对象选中结果值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var index = wui.addChooseBoxNode(0);\r\n     *\r\n     */\r\n    ui.addChooseBoxNode = function(node){\r\n        ui.logUtilConfig.debugLog.methodName = \"addChooseBoxNode\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"addChooseBoxNode\", FRAME_NAME);\r\n\r\n        var chooseBoxNodes = {};\r\n        chooseBoxNodes.node = node;\r\n\r\n        // 新增chooseBox已选中节点数据\r\n        ui.getChooseBoxNodes().push(chooseBoxNodes);\r\n    }\r\n\r\n    /*\r\n     * <p>获取chooseBox已选中节点数据</p>\r\n     * @namespace wui\r\n     * @class getChooseBoxNodes\r\n     * @constructor \r\n     * @param selectId {String} chooseBox对象ID\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var chooseBoxNodes = wui.getChooseBoxNodes();\r\n     *\r\n     */\r\n    ui.getChooseBoxNodes = function(selectId){\r\n        ui.logUtilConfig.debugLog.methodName = \"getChooseBoxNodes\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getChooseBoxNodes\", FRAME_NAME);\r\n        \r\n        var modalWindowIndex = ui.CONSTANTS.OMODALWINDOW.indexOf(ui.modalWindow);\r\n        var windowModal = window.top;\r\n        if(modalWindowIndex > -1){\r\n            var modalWindow = ui.CONSTANTS.OMODALWINDOW[modalWindowIndex];\r\n            windowModal = window[modalWindow];\r\n        }else{\r\n            if(typeof(ui.modalWindow) === \"function\"){\r\n                windowModal = ui.modalWindow.call(this, window);\r\n            }\r\n        }\r\n\r\n        if (!windowModal.chooseBoxNodes || windowModal.chooseBoxNodes.length == 0) {\r\n            windowModal.chooseBoxNodes = [];\r\n        }\r\n\r\n        ui.logParamValue({\r\n            paramName: \"chooseBoxNodes\",\r\n            paramValue: windowModal.chooseBoxNodes, \r\n            methodName: \"getChooseBoxNodes\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n        // ui.logParamValue(\"getChooseBoxNodes.chooseBoxNodes\", window.top.chooseBoxNodes, FRAME_NAME)\r\n        return windowModal.chooseBoxNodes;\r\n    }\r\n\r\n    /*\r\n     * <p>解析一个字符串，并返回一个整数</p>\r\n     * @namespace wui\r\n     * @class parseInt\r\n     * @constructor \r\n     * @param val {String} 要被解析的字符串\r\n     * @param defval {Number} 当为NaN时替换的数字\r\n     * @return {Number} 返回解析后的数字\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatOtherParam(undefined); // {}\r\n            wui.formatOtherParam('{\"id\": \"123\"}'); // {\"id\": \"123\"}\r\n            wui.formatOtherParam({\"id\": \"123\"}); // true\r\n            wui.formatOtherParam(false); // {}\r\n            wui.formatOtherParam('{\"id\",\"123\"}'); // {}\r\n     *\r\n     */\r\n    ui.parseInt = function(val, defval) {\r\n        val = parseInt(val, 10);\r\n        if (isNaN(val)) { return defval || 0;}\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * <p>格式化日期格式</p>\r\n     * @namespace wui\r\n     * @class formatDate\r\n     * @constructor \r\n     * @param date {Date} 要转化的日期,支持格式:\"\\/Date(646502400000+0800)\\/\"\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td> 格式类型 </td>\r\n                        <td> 格式说明 </td>\r\n                        <td> 举例 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Number</td>\r\n                        <td>日期时间戳</td>\r\n                        <td>646502400000</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Object</td>\r\n                        <td>日期对象</td>\r\n                        <td>new Date()</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>String</td>\r\n                        <td>日期时间戳,形如\"\\/Date(xxxxxxxxxxxx+0800)\\/\"</td>\r\n                        <td>\"\\/Date(646502400000+0800)\\/\"</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>String</td>\r\n                        <td>日期字符串,不包含中文,日期用\"-\"或\"/\"分隔,时间用\":\"分隔</td>\r\n                        <td>\"2018-07-23 23:23:23\"、\"2018/07/23 23:23:23\"</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n     * @param formatStr {String} 日期格式,比如\"yyyy-mm-dd hh\", p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy 的任意组合,默认是\"yyyy-mm-dd\"。 <br/>\r\n            <table>\r\n                <tr>\r\n                    <td>p : 选中值表示为 'am' or 'pm'</td>\r\n                    <td>P : 选中值表示为 'AM' or 'PM'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>s : 秒数表示，不填充'0'</td>\r\n                    <td>ss : 秒数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>i :分数表示，不填充'0'</td> \r\n                    <td>ii : 分数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>h : 24小时制，不填充'0'</td> \r\n                    <td>hh : 24小时制，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>H : 12小时制，不填充'0'</td> \r\n                    <td>HH : 12小时制，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>d : 每月天数表示，不填充'0'</td> \r\n                    <td>dd : 每月天数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>m : 月份表示，不填充'0'</td> \r\n                    <td>mm : 月份表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>M : 一个月的短文本表示，例如一或三</td> \r\n                    <td>MM : 一个月的全文，例如一月或三月</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>yy : 年份的两位数表示法</td> \r\n                    <td>yyyy : 年份的全数字表示法(4位数)</td>\r\n                </tr>\r\n            </table>\r\n     * @return {String/false} 格式化之后的日期,若传递失败,则返回false\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatDate(\"\\/Date(646502400000+0800)\\/\");   // \"1990-06-28\"\r\n            wui.formatDate(new Date());   // \"1990-06-28\"\r\n     *\r\n     */\r\n    ui.formatDate = function(date, formatStr){\r\n        if(!date){\r\n            return false;\r\n        }\r\n        try{\r\n            var re = /date/i;\r\n            formatStr = formatStr || \"yyyy-mm-dd\";\r\n            if(typeof(date) == \"number\"){    // 时间戳\r\n                return ui.getTimeFormat(date, formatStr);\r\n            }else if(typeof(date) === \"object\"){   // new Date()\r\n                // 获取时间戳\r\n                var timeStamp = date.getTime();\r\n                return ui.getTimeFormat(timeStamp, formatStr);\r\n            }else if(typeof(date) === \"string\"){  \r\n                if(date.search(re) > -1){   // \"\\/Date(646502400000+0800)\\/\"\r\n                    // 获取时间戳\r\n                    var timeStamp = date.slice(6, 19);\r\n                    return ui.getTimeFormat(parseInt(timeStamp), formatStr);\r\n                }else{  // \"2018-02-10\"、\"2018/02/10\"\r\n                    var timeStamp = new Date(Date.parse(date.replace(/-/g,\"/\"))).getTime();\r\n                    if(isNaN(timeStamp)){\r\n                        return false;\r\n                    }else{\r\n                        return ui.getTimeFormat(timeStamp, formatStr);\r\n                    }\r\n                }\r\n            }else{\r\n                ui.logWarn(\"date参数不符合格式要求\", \"wui.formatDate\", true);\r\n                return false;\r\n                // var newDate = new Date(date);\r\n                // return ui.getTimeFormat(newDate.valueOf(), formatStr);\r\n            }\r\n        }catch(e){\r\n            ui.logError(e, FRAME_NAME+\".formatDate\", true);\r\n            return false;\r\n        }\r\n            \r\n    }\r\n\r\n    /**\r\n     * <p>格式化otherParam参数</p>\r\n     * @namespace wui\r\n     * @class formatOtherParam\r\n     * @constructor \r\n     * @param otherParam {Number/String/Object} 转化参数,可能类型：undefined、number、object、string、boolean等\r\n     * @return {Object} 格式化之后的otherParam参数\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatOtherParam(undefined); // {}\r\n            wui.formatOtherParam('{\"id\": \"123\"}'); // {\"id\": \"123\"}\r\n            wui.formatOtherParam({\"id\": \"123\"}); // true\r\n            wui.formatOtherParam(false); // {}\r\n            wui.formatOtherParam('{\"id\",\"123\"}'); // {}\r\n     *\r\n     */\r\n    ui.formatOtherParam = function(otherParam){\r\n        // console.error(\"1\");\r\n        // console.error(otherParam);\r\n        if(!otherParam){\r\n            return {};\r\n        }\r\n        // console.error(\"2\");\r\n        // console.error(otherParam);\r\n        // console.error(typeof(otherParam));\r\n\r\n        if(typeof(otherParam) === \"object\"){\r\n            return otherParam;\r\n        }else if(typeof(otherParam) === \"string\"){\r\n            otherParam = ui.parseToObj(otherParam);\r\n            // console.error(otherParam);\r\n            if(otherParam){\r\n                return otherParam;\r\n            }else{\r\n                return {};\r\n            }\r\n        }else{\r\n            return {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将参数转化为Boolean类型输出</p>\r\n     * @namespace wui\r\n     * @class formatParamToBool\r\n     * @constructor \r\n     * @param param {Number/String/Object} 转化参数,可能值:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n     * @return {Boolean} 格式化之后的布尔值参数\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatParamToBool(undefined); // false\r\n            wui.formatParamToBool(0); // false\r\n            wui.formatParamToBool(1); // true\r\n            wui.formatParamToBool(-1); // true\r\n            wui.formatParamToBool(NaN); // false\r\n            wui.formatParamToBool(\"\"); // false\r\n            wui.formatParamToBool(\"0\"); // false\r\n            wui.formatParamToBool(\"-1\"); // true\r\n            wui.formatParamToBool(\"4\"); // true\r\n            wui.formatParamToBool(false); // false\r\n            wui.formatParamToBool(\"false\"); // false\r\n     *\r\n     */\r\n    // maxNumber:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n    // 返回false、Number\r\n    ui.formatParamToBool = function(param){\r\n        if(!param){\r\n            return false;\r\n        }\r\n\r\n        if(typeof(param) === \"number\"){\r\n            return !!param;\r\n        }else if(typeof(param) === \"string\"){\r\n            if(param == \"false\" || param == \"0\" || param == \"\"){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将参数转化为1/0输出</p>\r\n     * @namespace wui\r\n     * @class formatParamToNumberBool\r\n     * @constructor \r\n     * @param param {Number/String/Object} 转化参数,可能值:undefined、number、string、boolean等\r\n     * @return {Number} 格式化之后的参数: 1/0\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatParamToNumberBool(undefined); // 0\r\n            wui.formatParamToNumberBool(0); // 0\r\n            wui.formatParamToNumberBool(1); // 1\r\n            wui.formatParamToNumberBool(-1); // 1\r\n            wui.formatParamToNumberBool(NaN); // 0\r\n            wui.formatParamToNumberBool(\"\"); // 0\r\n            wui.formatParamToNumberBool(\"0\"); // 0\r\n            wui.formatParamToNumberBool(\"-1\"); // 1\r\n            wui.formatParamToNumberBool(\"4\"); // 1\r\n            wui.formatParamToNumberBool(false); // 0\r\n            wui.formatParamToNumberBool(\"false\"); // 0\r\n            wui.formatParamToNumberBool(true); // 1\r\n     *\r\n     */\r\n    ui.formatParamToNumberBool = function(param){\r\n        if(!param){\r\n            return 0;\r\n        }\r\n\r\n        if(typeof(param) === \"number\"){\r\n            return 1;\r\n        }else if(typeof(param) === \"string\"){\r\n            if(param == \"false\" || param == \"0\" || param == \"\"){\r\n                return 0;\r\n            }else{\r\n                return 1;\r\n            }\r\n        }else{\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>格式化maxNumber参数</p>\r\n     * @namespace wui\r\n     * @class formatMaxNumber\r\n     * @constructor \r\n     * @param maxNumber {Number/String/Object} maxNumber参数,可能值:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n     * @return {Number/Boolean} 格式化之后的maxNumber参数\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatMaxNumber(undefined); // false\r\n            wui.formatMaxNumber(0); // false\r\n            wui.formatMaxNumber(1); // 1\r\n            wui.formatMaxNumber(-1); // false\r\n            wui.formatMaxNumber(NaN); // false\r\n            wui.formatMaxNumber(\"-1\"); // false\r\n            wui.formatMaxNumber(\"4\"); // 4\r\n            wui.formatMaxNumber(false); // false\r\n            wui.formatMaxNumber(\"false\"); // false\r\n     *\r\n     */\r\n    // maxNumber:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n    // 返回false、Number\r\n    ui.formatMaxNumber = function(maxNumber){\r\n        // var maxNumber = param.maxNumber;\r\n        if(maxNumber == undefined){\r\n            maxNumber = false;\r\n        }\r\n\r\n        if(typeof(maxNumber) === \"string\"){\r\n            if(maxNumber == \"false\"){\r\n                maxNumber = false;\r\n            }else{\r\n                maxNumber = parseInt(maxNumber);\r\n            }\r\n        }\r\n\r\n        if(typeof(maxNumber) === \"number\"){\r\n            if(isNaN(maxNumber)){\r\n                maxNumber = false;\r\n            }else if(maxNumber <= 0){\r\n                ui.logMessage(\"maxNumber参数必须为正整数或false\", \"wui.formatMaxNumber\", true);\r\n                maxNumber = false;\r\n            }\r\n        }\r\n        return maxNumber;\r\n    }\r\n\r\n    /*\r\n     * <p>格式化maxChars参数</p>\r\n     * @namespace wui\r\n     * @class formatMaxChars\r\n     * @constructor \r\n     * @param maxNumber {Number/String/Object} maxNumber参数,可能值:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n     * @return {Number/Boolean} 格式化之后的maxNumber参数\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.formatMaxChars(undefined); // false\r\n            wui.formatMaxChars(0); // false\r\n            wui.formatMaxChars(1); // 1\r\n            wui.formatMaxChars(-1); // false\r\n            wui.formatMaxChars(NaN); // false\r\n            wui.formatMaxChars(\"-1\"); // false\r\n            wui.formatMaxChars(\"4\"); // 4\r\n            wui.formatMaxChars(false); // false\r\n            wui.formatMaxChars(\"false\"); // false\r\n     *\r\n     */\r\n    // maxNumber:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n    // 返回false、Number\r\n    ui.formatMaxChars = function(maxNumber){\r\n        // var maxNumber = param.maxNumber;\r\n        if(maxNumber == undefined){\r\n            maxNumber = 0;\r\n        }\r\n\r\n        if(typeof(maxNumber) === \"string\"){\r\n            if(maxNumber == \"false\"){\r\n                maxNumber = 0;\r\n            }else{\r\n                maxNumber = parseInt(maxNumber);\r\n            }\r\n        }\r\n\r\n        if(typeof(maxNumber) === \"number\"){\r\n            if(isNaN(maxNumber)){\r\n                maxNumber = 0;\r\n            }else if(maxNumber <= 0){\r\n                ui.logMessage(\"maxChars参数必须为正整数或false\", \"wui.formatMaxChars\", true);\r\n                maxNumber = 0;\r\n            }\r\n        }\r\n        return maxNumber;\r\n    }\r\n    /**\r\n     * <p>根据页面元素上所有绑定的data-init-wui附加数据值初始化对应的组件,并返回初始化后的对象集合</p>\r\n     * @namespace wui\r\n     * @class init\r\n     * @constructor\r\n     * @param [initParams] {JSON} 初始化组件的配置参数,格式：{组件初始化id: 组件初始化配置参数, ...},传递的此参数优先级:页面参数>js传递参数\r\n     * @return {JSON} [页面组件初始化之后的对象集合{\"widgetId\": widgetObject,...},简写组件初始化]\r\n     * @example\r\n     *  \r\n     *   html(默认初始化页面):\r\n     *  \r\n            <input type=\"text\" id=\"date1\" />\r\n            <input type=\"text\" id=\"tagBox1\" />\r\n     *   js(默认初始化脚本): \r\n     *\r\n            var oWidget = {};\r\n            oWidget[\"date1\"] = wui.date(\"date1\", {\r\n                \"format\": \"yyyy-mm-dd hh\"\r\n            });\r\n\r\n            oWidget[\"tagBox1\"] = wui.tagBox(\"tagBox1\", {\r\n                \"loadUrl\": \"/Server.aspx\"\r\n            })\r\n     *    \r\n     *   html(简化之后):\r\n     *  \r\n            <input type=\"text\" id=\"date1\" data-init-wui=\"date\" data-wui-format=\"yyyy-mm-dd hh\" />\r\n            <input type=\"text\" id=\"tagBox1\" data-init-wui=\"tagBox\" data-wui-loadUrl=\"/Server.aspx\" />  \r\n     *   js(简化之后): \r\n     *   \r\n            // 调用方法初始化页面组件\r\n            var oWidget = wui.init();   // 同默认的oWidget\r\n     *\r\n     */\r\n    ui.init = function(initParams){\r\n        ui.logUtilConfig.debugLog.methodName = \"init\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"init\", FRAME_NAME);\r\n\r\n        if(!ui.isJson(initParams)){\r\n            initParams = {};\r\n        }\r\n        var widgets = {};\r\n        $('[data-' + ui.CONSTANTS.DATAINITWIDGETFIELD + ']').each(function(i, elem){\r\n            var widgetName = $(elem).attr(\"data-\" + ui.CONSTANTS.DATAINITWIDGETFIELD);\r\n            var widgetId = $(elem).attr(\"id\");\r\n            if(widgetName && widgetId){\r\n                if(ui[widgetName]){\r\n                    var theInitParam = {};\r\n                    if(!ui.isUndefined(initParams[widgetId])){\r\n                        theInitParam = initParams[widgetId];\r\n                    }\r\n                    widgets[widgetId] = ui[widgetName](widgetId, theInitParam);\r\n                }else{\r\n                    ui.logWarn(widgetName + \" 组件初始化失败,错误信息:WUI查无此组件!\", FRAME_NAME+\".init\", true);\r\n                }\r\n            }\r\n        })\r\n\r\n        // if($('[' + ui.validateAttributeField + ']').length > 0){\r\n        //     ui.validate();\r\n        // }\r\n\r\n        return widgets;\r\n    }\r\n\r\n    /**\r\n     * <p>获取标签元素上绑定的data-wui-*附加数据</p>\r\n     * @namespace wui\r\n     * @class getAttributeParams\r\n     * @constructor \r\n     * @param $element {String} 元素jQuery对象\r\n     * @param config {Object} 与获取的附加数据作比较的对象\r\n     * @param [DATAATTRIBUTEFIELD] {String} [附加数据前缀,默认是\"wui\"(则附加元素数据data-wui-paramName=paramValue)]\r\n     * @return {JSON} 元素附加数据对象\r\n     * @example\r\n     *\r\n     *   html\r\n     *  \r\n            <input type=\"text\" id=\"date\" data-wui-isShowBtnGroup=false />\r\n     *   js: \r\n     *\r\n            wui.getAttributeParams($(\"#date\", {\"isShowBtnGroup\"})); // {\"isShowBtnGroup\":false} \r\n            // ★ 注意，若不传递config参数做比较,则返回的是{\"isshowbtngroup\":false}\r\n     *\r\n     */\r\n    ui.getAttributeParams = function($element, config, dataAttributeField){\r\n        config = config || {};\r\n        dataAttributeField = dataAttributeField || ui.CONSTANTS.DATAATTRIBUTEFIELD;   // \"wui\"\r\n        var datas = $element.data(),\r\n            params = {};\r\n        // console.info(dataAttributeField);\r\n        for(var attr in datas){\r\n            // 以\"wui\"开头的才是参数,注意大小写不同，一律转化为小写比较\r\n            if(attr.toLowerCase().indexOf(dataAttributeField) == 0){\r\n                var paramName = attr.toLowerCase().substring(dataAttributeField.length, attr.length);\r\n                if(ui.isArray(config)){\r\n                    for(var i = 0; i < config.length; i++){\r\n                        if(config[i].toLowerCase() == paramName){\r\n                            paramName = config[i];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    params[paramName] = datas[attr];\r\n                }else if(ui.isJson(config)){\r\n                    for(var key in config){\r\n                        if(key.toLowerCase() == paramName){\r\n                            paramName = key;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    var value = datas[attr];\r\n                    switch(typeof(config[paramName])){\r\n                        case 'boolean':\r\n                            value = ui.boolean(datas[attr]);\r\n                            break;\r\n                        case 'number':\r\n                            value = ui.number(datas[attr]);\r\n                            break;\r\n                        case 'object':\r\n                            value = ui.parseToObj(datas[attr]);\r\n                            break;\r\n\r\n                    }\r\n\r\n                    params[paramName] = value;\r\n                }\r\n            }\r\n        }\r\n        // console.info(params);\r\n        return params;\r\n    }\r\n\r\n    ///**\r\n     //* <p>根据组件名，检测是否加载对应的第三方插件</p>\r\n     //* @namespace wui\r\n     //* @class checkIsLoadPlugins\r\n     //* @constructor \r\n     //* @param widgetName {String} 组件名称\r\n     //* @return {Boolean} 是否加载对应的第三方插件\r\n     //* @example\r\n     //*  \r\n     //*   js: \r\n     //*   \r\n     //       wui.checkIsLoadPlugins(\"date\"); // 若是加载datetimepicker插件，则返回true，否则返回false\r\n     //*\r\n     //*/\r\n    ui.checkIsLoadPlugins = function(widgetName){\r\n        ui.logUtilConfig.debugLog.methodName = \"checkIsLoadPlugins\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"checkIsLoadPlugins\", FRAME_NAME);\r\n        var isLoadPlugin = true;\r\n        if(widgetName){\r\n            var element = $('<div></div>').appendTo('body');\r\n            switch(widgetName){\r\n                case \"date\":\r\n                    try{\r\n                        if(!$.fn.datetimepicker){\r\n                            ui.logWarn(\"没有加载 date 所需第三方插件:datetimepicker\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin= false;\r\n                        }\r\n                    }catch(err){\r\n                        ui.logWarn(\"没有加载 date 所需第三方插件\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                        isLoadPlugin = false;\r\n                    }finally{\r\n                        break;\r\n                    }\r\n                case \"file\":\r\n                    try{\r\n                        // 参数未被定义\r\n                        if(typeof(Dropzone) == \"undefined\"){\r\n                            ui.logWarn(\"没有加载 file 所需第三方插件:Dropzone\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }\r\n\r\n                        if(typeof(SWFUpload) == \"undefined\"){\r\n                            ui.logWarn(\"没有加载 file 所需第三方插件:SWFUpload,在IE8下不被支持哟\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }\r\n                    }catch(err){\r\n                        // console.info(err);\r\n                        ui.logWarn(\"没有加载 file 所需第三方插件:Dropzone、SWFUpload\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                        isLoadPlugin = false;\r\n                    }finally{\r\n                        break;\r\n                    }\r\n                case \"tree\":\r\n                    try{\r\n                        if(!($.ui)){\r\n                            ui.logWarn(\"没有加载 tree 所需第三方插件:jquery-ui\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }else if(!$.ui.fancytree){\r\n                            ui.logWarn(\"没有加载 tree 所需第三方插件:fancytree\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }\r\n                    }catch(err){\r\n                        ui.logWarn(\"没有加载 tree 所需第三方插件:jquery-ui、fancytree\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                        isLoadPlugin = false;\r\n                    }finally{\r\n                        break;\r\n                    }\r\n                case \"grid\":\r\n                    try{\r\n                        if(!($.fn.jqGrid)){\r\n                            ui.logWarn(\"没有加载 grid 所需第三方插件:jqGrid\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }\r\n                    }catch(err){\r\n                        ui.logWarn(\"没有加载 grid 所需第三方插件\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                        isLoadPlugin = false;\r\n                    }finally{\r\n                        break;\r\n                    }\r\n                case \"img\":\r\n                    try{\r\n                        // 参数未被定义\r\n                        if(typeof(Dropzone) == \"undefined\"){\r\n                            ui.logWarn(\"没有加载 img 所需第三方插件:Dropzone\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }\r\n\r\n                        if(typeof(SWFUpload) == \"undefined\"){\r\n                            ui.logWarn(\"没有加载 img 所需第三方插件:SWFUpload,在IE8下不被支持哟\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                            isLoadPlugin = false;\r\n                        }\r\n                    }catch(err){\r\n                        ui.logWarn(\"没有加载 img 所需第三方插件:Dropzone、SWFUpload\", FRAME_NAME+\".checkIsLoadPlugins\", true);\r\n                        isLoadPlugin = false;\r\n                    }finally{\r\n                        break;\r\n                    }\r\n                default:\r\n                    // ui.logMessage(\"该组件不需要加载第三方插件哟\");\r\n                    break;\r\n            }\r\n            \r\n        }\r\n\r\n        return isLoadPlugin;\r\n    }\r\n\r\n    ///*\r\n     // <p>根据限定好的格式,追加工具栏</p>\r\n     // @namespace wui\r\n     // @class addToolBar\r\n     // @constructor \r\n     // @param {String} obj 要添加按钮组元素的ID名或者改JQuery对象\r\n     // @param btnContents {Array} 添加按钮内容,如：oBtn = btnContnts[0]\r\n     // @param btnContents.html    {String}  按钮内部显示文本，默认是'<i class=\"fa fa-edit\"></i>' \r\n     // @param btnContents.cssClass {String} 按钮样式类，默认是'btn-default'\r\n     // @param btnContents.action  {String}  按钮标识，默认是'edit'\r\n     // @param btnContents.title   {String}  按钮提示语，默认是'编辑'\r\n     // @param btnContents.type    {String}  按钮类型，默认是'button'\r\n     // @param nodePosition  {String} 按钮组添加位置,默认是\"after\"\r\n     // @return {Boolean} [ 返回true或者false ]\r\n     // @example\r\n     //  \r\n     //   js: \r\n     //   \r\n     //      // 调用方法\r\n     //      wui.addToolBar( \"choosebox\",{\r\n     //          html : '<i class=\"fa fa-edit\"></i>',\r\n     //          cssClass : 'btn-default',\r\n     //          action : 'edit',\r\n     //          title : '编辑',\r\n     //          type : 'button'\r\n     //      }, \"after\");\r\n     //\r\n     ///\r\n    ui.addToolBar = function(obj, btnContents, nodePosition){\r\n        ui.logUtilConfig.debugLog.methodName = \"addToolBar\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"addToolBar\", FRAME_NAME);\r\n\r\n        nodePosition = nodePosition || 'after';\r\n        var $btnToolBar = $('<span class=\"input-group-btn\" wui-attr=\"toolBar\" ui-control=\"toolBar\"></span>');\r\n\r\n        if(obj instanceof jQuery){ \r\n            // alert(\"这是一个jQuery对象\"); \r\n            obj[nodePosition]($btnToolBar);\r\n        }else if(typeof obj === \"string\"){\r\n            // obj = $(\"#\" + obj);\r\n            $(\"#\" + obj)[nodePosition]($btnToolBar);\r\n        } else{\r\n            return;\r\n        }\r\n        \r\n\r\n        $.each(btnContents, function(index, oBtn){\r\n            var cssClass = oBtn.cssClass || \"wui-btn-white\";\r\n            var type = oBtn.type || \"button\";\r\n            var $btn = $('<button class=\"wui-btn ' + cssClass + '\" wui-toolBar-action=\"' + oBtn.action + '\" ui-toolBar-action=\"' + oBtn.action + '\" type=\"' + type + '\" title=\"' + oBtn.title + '\">' + oBtn.html + '</button>');\r\n\r\n            $btnToolBar.append($btn);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    ///**\r\n     //* <p>透明蒙版层方法</p>\r\n     //* @namespace wui\r\n     //* @class mask\r\n     //* @constructor \r\n     //* @param isShow {Boolean} 是否显示\r\n     //* @param opacityNum {int} 透明度\r\n     //* @example\r\n     //*  \r\n     //*   js: \r\n     //*   \r\n     //       // 调用方法\r\n     //       wui.mask();\r\n     //*\r\n     //*/\r\n    ui.mask = function (isShow, opacityNum){\r\n        ui.logUtilConfig.debugLog.methodName = \"mask\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"mask\", FRAME_NAME);\r\n\r\n        isShow = isShow || false;\r\n        opacityNum = parseInt(opacityNum) || 1;\r\n        var maskHtml = '<div class=\"ui-mask\"></div>';\r\n        if(isShow){\r\n            if($(\".ui-mask\").length > 0){\r\n                $(\".ui-mask\").show();           \r\n            }else{\r\n                $('body').append(maskHtml); \r\n            }\r\n        \r\n        }else{\r\n            $(\".ui-mask\").hide();\r\n        }\r\n        if(opacityNum){\r\n            $(\".ui-mask\").attr(\"opacity\", opacityNum);          \r\n        }\r\n     }\r\n\r\n    /**\r\n     * <p>删除数据确认框</p>\r\n     * @namespace wui\r\n     * @class deleteDataByIds\r\n     * @constructor \r\n     * @param ids {string} 数据ID值\r\n     * @param deleteCallback {function} 确认删除的回调方法\r\n     * @param [content] {string} 确定提醒内容，默认为 '您确定要删除选择数据吗？'\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.deleteDataByIds(\"01,010101\", function(ids){\r\n                userService.deleteUser(ids);\r\n            });\r\n     *\r\n     */\r\n    ui.deleteDataByIds = function(ids, deleteCallback, content){\r\n\r\n        if (ids) {\r\n            content = content || '您确定要删除选择数据吗？';\r\n            var options = {\r\n                title: \"删除确认\"\r\n                // success: function(dom, index){\r\n                //     console.info(\"success\");\r\n                // },\r\n                // end: function(){\r\n                //     console.info(\"end\");\r\n                // }\r\n            };//参数请参考layer官网\r\n            var yes = function (index) {\r\n                deleteCallback(ids);\r\n                wui.closeIndex(index);  // 关闭当前层\r\n            }\r\n            // var cancel = function () {\r\n            //     cancelCallback(ids);\r\n            //     wui.closeIndex(index);  // 关闭当前层\r\n            // }\r\n            wui.confirm(content, options, yes);\r\n            // ui.confirm(content, {title:'删除确认'}, function() {\r\n            //     deleteCallback(ids);\r\n            //     ui.deleteDialog('dialog');\r\n            // });\r\n        }else{\r\n            ui.warnNotice(\"请至少选择一条数据\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>文本域(textarea)自适应高度,当页面加载时,给textarea添加data-auto-height属性,会自动调用此方法,当手动调用$.val()赋值时,需要手动触发\"change()\"事件</p>\r\n     * @namespace wui\r\n     * @class textarea\r\n     * @constructor \r\n     * @param    {Element}  element       文本域元素或选择器\r\n     * @param    {Number}   extra         设置光标与输入框保持的距离(默认0)\r\n     * @param    {Number}   maxHeight     设置最大高度(可选)\r\n     * @param    {String}   resize        设置自由的伸展textarea的高宽,默认是\"none\",即不可伸展(可选值:\"both\",\"none\")\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法(会将全部textarea都设置为自适应高度)\r\n            wui.textarea(\"textarea\");\r\n     */\r\n    ui.textarea = function (element, extra, maxHeight, isResize) {\r\n        var $elements;\r\n        if(!element){\r\n            return false;\r\n        }\r\n\r\n        if(ui.isJQuery(element)){\r\n            $elements = element;\r\n        }else{\r\n            $elements = $(element);\r\n        }\r\n\r\n        extra = extra || 0;\r\n        isResize = isResize || \"none\";\r\n\r\n        // 根据传入的文本域元素和样式名,返回对应的元素值\r\n        var getStyle = function(thatElement, name){\r\n            if(thatElement.currentStyle){\r\n                var val = thatElement.currentStyle[name];\r\n                if (name === 'height' && val.search(/px/i) !== 1) {\r\n                    var rect = thatElement.getBoundingClientRect();\r\n                    return rect.bottom - rect.top -\r\n                           parseFloat(getStyle(thatElement, 'paddingTop')) -\r\n                           parseFloat(getStyle(thatElement, 'paddingBottom')) + 'px';       \r\n                };\r\n                return val;\r\n            }else{\r\n                return window.getComputedStyle(thatElement, null)[name];\r\n            }\r\n        }\r\n\r\n        // 根据输入内容，修改对应的文本域高度\r\n        var change = function (thatElement, minHeight) {\r\n            var scrollTop, height,\r\n                padding = 0,\r\n                style = thatElement.style;\r\n\r\n            if (thatElement._length === thatElement.value.length) return;\r\n            thatElement._length = thatElement.value.length;\r\n\r\n            if (!ui.CONSTANTS.isMozila && !ui.CONSTANTS.isOpera) {\r\n                padding = parseInt(getStyle(thatElement, 'paddingTop')) + parseInt(getStyle(thatElement, 'paddingBottom'));\r\n            };\r\n            scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n\r\n            thatElement.style.height = minHeight + 'px';\r\n            if (thatElement.scrollHeight > minHeight) {\r\n                if (maxHeight && thatElement.scrollHeight > maxHeight) {\r\n                    height = maxHeight - padding;\r\n                    style.overflowY = 'auto';\r\n                } else {\r\n                    height = thatElement.scrollHeight - padding;\r\n                    style.overflowY = 'hidden';\r\n                };\r\n                style.height = height + extra + 'px';\r\n                scrollTop += parseInt(style.height) - thatElement.currHeight;\r\n                document.body.scrollTop = scrollTop;\r\n                document.documentElement.scrollTop = scrollTop;\r\n                thatElement.currHeight = parseInt(style.height);\r\n            };\r\n        };\r\n\r\n        $elements.each(function(){\r\n            var that = this;\r\n            $(that).attr(\"data-auto-height\", \"true\");\r\n            that.style.resize = isResize;//如果不希望使用者可以自由的伸展textarea的高宽可以设置其他值\r\n            var minHeight = parseFloat(getStyle(that, 'height'));\r\n\r\n            $(that).on(\"propertychange input focus change\", function(){\r\n                change(this, minHeight);\r\n            })\r\n            change(that, minHeight);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * <p>输入框(input)自适应宽度,当页面加载时,给input添加data-auto-width属性,会自动调用此方法</p>\r\n     * @namespace wui\r\n     * @class input\r\n     * @constructor \r\n     * @param    {Element}  element       文本域元素或选择器\r\n     * @param    {Number}   [minWidth]    设置最小宽度\r\n     * @param    {Number}   [maxWidth]    设置最大宽度\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法(会将全部textarea都设置为自适应高度)\r\n            wui.input(\"input\");\r\n     */\r\n    ui.input = function (element, minWidth, maxWidth) {\r\n        var $elements;\r\n        if(!element){\r\n            return false;\r\n        }\r\n\r\n        if(ui.isJQuery(element)){\r\n            $elements = element;\r\n        }else{\r\n            $elements = $(element);\r\n        }\r\n\r\n        minWidth = minWidth || 80;\r\n\r\n        // 根据输入内容，修改对应的文本域高度\r\n        var change = function (thatElement, minWidth, maxWidth) {\r\n            var eleFontSize = $(thatElement).css('font-size'),\r\n                eleFontFamily = $(thatElement).css('font-family'),\r\n                value = $(thatElement).val(),\r\n                // 元素左右边框总长度\r\n                border = parseInt($(thatElement).css('borderLeftWidth')) + parseInt($(thatElement).css('borderRightWidth')),\r\n                // 元素左右内边距总和\r\n                padding = parseInt($(thatElement).css('paddingLeft')) + parseInt($(thatElement).css('paddingRight'));\r\n            \r\n            maxWidth = maxWidth || $(thatElement).parent().width();\r\n\r\n            var valueWidth = value.width( eleFontSize + \" \" + eleFontFamily);\r\n\r\n            var eleWidth = valueWidth + border + padding;\r\n            if(eleWidth < minWidth){\r\n                eleWidth = minWidth;\r\n            }else if(eleWidth > maxWidth){\r\n                eleWidth = maxWidth;\r\n            }\r\n            \r\n            // 设置输入框的宽度为文本宽度\r\n            $(thatElement).css(\"width\", eleWidth + \"px\");\r\n        };\r\n\r\n        $elements.each(function(){\r\n            var that = this;\r\n            // var minWidth = parseFloat(getStyle(that, 'height'));\r\n\r\n            $(that).on(\"propertychange input focus\", function(){\r\n                change(this, minWidth, maxWidth);\r\n            })\r\n            change(that, minWidth, maxWidth);\r\n        });\r\n    };\r\n\r\n    /*\r\n     * 解析文本字段展示字段\r\n     * @Author   Chenzx\r\n     * @DateTime 2018-12-13\r\n     * @param    {String}   textField 展示文本字段值\r\n     * @return   {Array}             \r\n     * [\r\n     *     {\r\n     *         // 匹配字符串\r\n     *         \"match\": \"\",\r\n     *         // 字段值\r\n     *         \"value\": \"\"\r\n     *     },\r\n     *     ...\r\n     * ]\r\n     */\r\n    ui.getTextField = function(textField){\r\n            // 结果显示文本\r\n        var textFields = [];\r\n        // console.error(itemData);\r\n        if(!!textField){\r\n            var reg = /\\{\\{(.+?)\\}\\}/g;\r\n            var result = textField.match(reg);\r\n            if(result){\r\n                var _len = result.length;\r\n                for(var _i = 0; _i < _len; _i++){\r\n                    var jField = {};\r\n                    var oField = /^\\{\\{(.+?)\\}\\}$/.exec(result[_i]);\r\n                    if(oField.length > 1){\r\n                        jField.match = oField[0];\r\n                        jField.value = oField[1];\r\n\r\n                        textFields.push(jField);\r\n                    }\r\n                }\r\n            }else{\r\n                var oField = textField.split(\",\");\r\n                var _len = oField.length;\r\n                for(var _i = 0; _i < _len; _i++){\r\n\r\n                    var jField = {};\r\n                    jField.match = oField[_i];\r\n                    jField.value = oField[_i];\r\n\r\n                    textFields.push(jField);\r\n                }\r\n            }\r\n        }\r\n\r\n        return textFields;\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","// 对象操作\r\n;(function (ui,$, undefined) {\r\n\r\n    /**\r\n     * <p>将其他类型转化为Number类型</p>\r\n     * @namespace wui\r\n     * @class number\r\n     * @constructor \r\n     * @param data {Number|String|Object} 可能值:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n     * @return {Number} 转化的Number类型参数\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.number(undefined); // NaN\r\n            wui.number(0); // 0\r\n            wui.number(1); // 1\r\n            wui.number(-1); // -1\r\n            wui.number(NaN); // NaN\r\n            wui.number(\"-1\"); // -1\r\n            wui.number(\"4\"); // 4\r\n            wui.number(false); // 0\r\n            wui.number(\"false\"); // NaN\r\n     *\r\n     */\r\n    ui.number = function(data){\r\n        \r\n        if(ui.isUndefined(data)){\r\n            data = NaN;\r\n        }\r\n\r\n        try{\r\n            return Number(data);\r\n        }catch(ex){\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将其他类型转化为Boolean类型</p>\r\n     * @namespace wui\r\n     * @class boolean\r\n     * @constructor \r\n     * @param data {Number|String|Object} 可能值:undefined、0、1、\"1\"、-1、NaN、\"false\"、false\r\n     * @return {Boolean} 转化的Boolean类型参数\r\n     * @example\r\n     *\r\n     *   js: \r\n     *\r\n            wui.boolean(undefined); // false\r\n            wui.boolean(0); // false\r\n            wui.boolean(1); // true\r\n            wui.boolean(-1); // true\r\n            wui.boolean(NaN); // false\r\n            wui.boolean(\"\"); // false\r\n            wui.boolean(\"0\"); // false\r\n            wui.boolean(\"-1\"); // true\r\n            wui.boolean(\"4\"); // true\r\n            wui.boolean(false); // false\r\n            wui.boolean(\"false\"); // false\r\n     *\r\n     */\r\n    ui.boolean = function(data){\r\n        \r\n        if(!data){\r\n            return false;\r\n        }\r\n\r\n        if(typeof(data) === \"number\"){\r\n            return !!data;\r\n        }else if(typeof(data) === \"string\"){\r\n            if(data == \"false\" || data == \"0\" || data == \"\"){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为 Function 类型</p>\r\n     * @namespace wui\r\n     * @class isFunction\r\n     * @constructor \r\n     * @param value {All} 要判断的参数\r\n     * @return {Boolean} [是否为 Function 类型的结果]\r\n     * @example\r\n     *\r\n     *   html:\r\n     *\r\n        <div>wui.isFunction( objs[0] ) = <span></span></div>\r\n        <div>wui.isFunction( objs[1] ) = <span></span></div>\r\n        <div>wui.isFunction( objs[2] ) = <span></span></div>\r\n        <div>wui.isFunction( objs[3] ) = <span></span></div>\r\n        <div>wui.isFunction( objs[4] ) = <span></span></div> \r\n     *\r\n     *   js: \r\n     *   \r\n            function stub() {}\r\n            var objs = [\r\n                function() {},\r\n                { x:15, y:20 },\r\n                null,\r\n                stub,\r\n                \"function\"\r\n            ];\r\n            $.each( objs, function( i ) {\r\n                var isFunc = wui.isFunction( objs[i]);\r\n                $( \"span\" ).eq( i ).text( isFunc );\r\n            });\r\n     *\r\n     *  result:\r\n     *\r\n        wui.isFunction( objs[0] ) = true\r\n        wui.isFunction( objs[1] ) = false\r\n        wui.isFunction( objs[2] ) = false\r\n        wui.isFunction( objs[3] ) = true\r\n        wui.isFunction( objs[4] ) = false\r\n     * \r\n     */\r\n    ui.isFunction = function(value) {\r\n        ui.logUtilConfig.debugLog.methodName = \"isFunction\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(ui.isUndefined(value)){\r\n            return false;\r\n        }\r\n        return typeof(value) === 'function';\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为 Object 类型</p>\r\n     * @namespace wui\r\n     * @class isObject\r\n     * @constructor \r\n     * @param value {All} 要判断的参数\r\n     * @return {Boolean} [是否为 Object 类型的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isObject1 = wui.isObject({\"id\":\"101010\",\"name\":\"张三\"});   // true\r\n            var isObject2 = wui.isObject([{\"id\":\"101010\",\"name\":\"张三\"}]);   // true\r\n            var isObject3 = wui.isObject(\"12345677\");   // false\r\n     *\r\n     */\r\n    ui.isObject = function(value) {\r\n        ui.logUtilConfig.debugLog.methodName = \"isObject\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"isObject\", FRAME_NAME);\r\n        if(ui.isUndefined(value)){\r\n            return false;\r\n        }\r\n        return typeof(value) === 'object';\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为 String 类型</p>\r\n     * @namespace wui\r\n     * @class isString\r\n     * @constructor \r\n     * @param value {All} 要判断的参数\r\n     * @return {Boolean} [是否为 String 类型的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isString1 = wui.isString(\"string\");   // true\r\n            var isString2 = wui.isString(undefined);   // false\r\n            var isString3 = wui.isString(0);   // false\r\n            var isString4 = wui.isString(\"1\");   // true\r\n     *\r\n     */\r\n    ui.isString = function(value){\r\n        ui.logUtilConfig.debugLog.methodName = \"isString\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(ui.isUndefined(value)){\r\n            return false;\r\n        }\r\n        return typeof value === 'string';\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为 NaN</p>\r\n     * @namespace wui\r\n     * @class isNaN\r\n     * @constructor \r\n     * @param value {All} 要判断的参数\r\n     * @return {Boolean} [是否为 NaN 的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isNaN1 = wui.isNaN(NaN);   // true\r\n            var isNaN2 = wui.isNaN(undefined);   // false\r\n            var isNaN3 = wui.isNaN(0);   // false\r\n            var isNaN4 = wui.isNaN(\"1\");   // false\r\n     *\r\n     */\r\n    ui.isNaN = function(value){\r\n        ui.logUtilConfig.debugLog.methodName = \"isNaN\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        var isNaN = Number.isNaN || window.isNaN;\r\n        if(ui.isUndefined(value)){\r\n            return false;\r\n        }\r\n        return isNaN(value);\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为 Number 类型(且排除了NaN)</p>\r\n     * @namespace wui\r\n     * @class isNumber\r\n     * @constructor \r\n     * @param value {All} 要判断的参数\r\n     * @return {Boolean} [是否为 Number 类型的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isNumber1 = wui.isNumber(1);   // true\r\n            var isNumber2 = wui.isNumber(0);   // true\r\n            var isNumber3 = wui.isNumber(\"1\");   // false\r\n            var isNumber4 = wui.isNumber(NaN);   // false\r\n     *\r\n     */\r\n    ui.isNumber = function(value){\r\n        ui.logUtilConfig.debugLog.methodName = \"isNumber\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(ui.isUndefined(value)){\r\n            return false;\r\n        }\r\n        if(typeof(value) === \"number\" && !ui.isNaN(value)){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为 Boolean 类型</p>\r\n     * @namespace wui\r\n     * @class isBoolean\r\n     * @constructor \r\n     * @param value {All} 要判断的参数\r\n     * @return {Boolean} [是否为 Boolean 类型的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isBoolean1 = wui.isBoolean(true);   // true\r\n            var isBoolean2 = wui.isBoolean(false);   // true\r\n            var isBoolean3 = wui.isBoolean(\"true\");   // false\r\n     *\r\n     */\r\n    ui.isBoolean = function(value){\r\n        ui.logUtilConfig.debugLog.methodName = \"isBoolean\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(ui.isUndefined(value)){\r\n            return false;\r\n        }\r\n        if(typeof(value) === \"boolean\"){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为undefined类型</p>\r\n     * @namespace wui\r\n     * @class isUndefined\r\n     * @constructor \r\n     * @param value {Object} 要判断的参数\r\n     * @return {Boolean} [是否为undefined的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isUndefined1 = wui.isUndefined();   // true\r\n            var isUndefined2 = wui.isUndefined([]);   // false\r\n     *\r\n     */\r\n    ui.isUndefined = function(value){\r\n        ui.logUtilConfig.debugLog.methodName = \"isUndefined\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        try{\r\n            return (value === undefined)\r\n        }catch(ex){\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * <p>判断传递的参数是否为空类型(空数组[]、空字符串\"\"、空对象{}、undefined、null)、布尔值false不算</p>\r\n     * @namespace wui\r\n     * @class isEmptyType\r\n     * @constructor \r\n     * @param obj {Object} 要判断的对象\r\n     * @return {Boolean} [是否为空对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isEmpty1 = wui.isEmptyType({});   // true\r\n            var isEmpty2 = wui.isEmptyType([]);   // true\r\n            var isEmpty3 = wui.isEmptyType(null);   // true\r\n            var isEmpty4 = wui.isEmptyType(undefined);   // true\r\n            var isEmpty5 = wui.isEmptyType(\"\");   // true\r\n            var isEmpty6 = wui.isEmptyType(false);   // false\r\n            var isEmpty7 = wui.isEmptyType(0);   // false\r\n     *\r\n     */\r\n    ui.isEmptyType = function(param){\r\n        ui.logUtilConfig.debugLog.methodName = \"isEmptyType\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"isEmptyType\", FRAME_NAME);\r\n\r\n        // console.info(param);\r\n        if(param === false){\r\n            return false;\r\n        }\r\n        if(ui.isArray(param)){\r\n            if(param.length == 0){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(ui.isJson(param)){\r\n            if(ui.getLength(param) == 0){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(param === 0){\r\n            return false;\r\n        }\r\n\r\n        return (!param);\r\n    }\r\n    \r\n    /**\r\n     * <p>判断传递参数是否为空对象</p>\r\n     * @namespace wui\r\n     * @class isEmptyObject\r\n     * @constructor \r\n     * @param obj {Object} 要判断的对象\r\n     * @return {Boolean} [是否为空对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isEmpty1 = wui.isEmptyObject({});   // true\r\n            var isEmpty2 = wui.isEmptyObject([]);   // true\r\n            var isEmpty3 = wui.isEmptyObject(null);   // false\r\n            var isEmpty4 = wui.isEmptyObject(undefined);   // false\r\n            var isEmpty5 = wui.isEmptyObject({\"isEmpty\": false});   // false\r\n     *\r\n     */\r\n    ui.isEmptyObject = function (obj) {\r\n        ui.logUtilConfig.debugLog.methodName = \"isEmptyObject\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"isEmptyObject\", FRAME_NAME);\r\n\r\n        if(!ui.isObject(obj)) return false; // 不是对象类型\r\n\r\n        if(ui.isArray(obj) && obj.length == 0) return true;\r\n\r\n        if(ui.isJson(obj) && ui.getLength(obj) == 0) return true;\r\n\r\n        return false; //默认为false\r\n    }\r\n\r\n    /**\r\n     * <p>深拷贝</p>\r\n     * @namespace wui\r\n     * @class deepCopy\r\n     * @constructor \r\n     * @param [json] {JSON} 要拷贝的JSON对象\r\n     * @return {json} [深拷贝之后的json对象]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *\r\n            var json = {\r\n                \"str\": \"123\", \r\n                \"num\": 234, \r\n                \"arr\": [\"123\", 234], \r\n                \"json\": {\"str\": \"123\", 'num': 234},\r\n                \"function\": function(){\r\n                    alert(\"1\");\r\n                }\r\n            }\r\n            var arr = [\"ss\", \"b\", {\"str\": \"123\", 'num': 234}];\r\n            // 调用方法\r\n            var result1 = wui.deepCopy(json);    // false\r\n            var result2 = wui.deepCopy(arr);    // {\"a\":\"ss\", \"b\":\"dd\"}\r\n     *\r\n     */\r\n    ui.deepCopy = function(json){\r\n        ui.logUtilConfig.debugLog.methodName = \"deepCopy\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"deepCopy\", FRAME_NAME);\r\n        \r\n        if(typeof(json) !== \"object\"){\r\n            ui.logMessage(\"传入参数不是 Object 类型,不支持此方法\", \"wui.deepCopy\", true);\r\n            return false;\r\n        }\r\n        var returnObject = $.extend(true, {}, json);    //拷贝数组,注意这行的拷贝方法\r\n        return returnObject; \r\n    }\r\n\r\n    /**\r\n     * <p>字符串转化为对象,eval性能比较慢，可以用JSON就用JSON.parse,兼容IE8,若传入参数不可以转化为对象，会打印出错误信息，返回false</p>\r\n     * @namespace wui\r\n     * @class parseToObj\r\n     * @constructor \r\n     * @param objStr {String} 对象字符串\r\n     * @return {Object}  [ 若是转化成功，则返回转化后的对象,否则返回false ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var json = wui.parseToObj('{\"id\":\"101010\",\"name\":\"张三\"}');   // {id: \"101010\", name: \"张三\"}\r\n     *\r\n     */\r\n    ui.parseToObj = function(objStr){\r\n        ui.logUtilConfig.debugLog.methodName = \"parseToObj\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"parseToObj\", FRAME_NAME);\r\n        var returnValue = null;\r\n        if(!objStr){\r\n            ui.logMessage(\"传入的字符串为空\", \"wui.parseToObj\", true);\r\n            return false;\r\n        }\r\n\r\n        if((typeof objStr === \"string\") && objStr != \"\"){\r\n            // if(typeof JSON === 'object' && typeof JSON.parse === 'function'){\r\n            //     try{\r\n            //         returnValue = JSON.parse(objStr);\r\n            //         if(typeof returnValue !== \"object\"){\r\n            //             ui.logWarn(\"字符串转化为对象出错,错误信息为:\" + objStr + \"转化结果是 \" + (typeof returnValue) + \" 类型\", \"wui.parseToObj\", true);\r\n            //             returnValue = false;\r\n            //         }\r\n            //     }catch(e){\r\n            //         console.info(objStr);\r\n            //         ui.logWarn(\"字符串转化为对象出错,错误信息为：\" + e, \"wui.parseToObj\", true);\r\n            //         // ui.logInfo(e); //error in the above string(in this case,yes)!\r\n            //         returnValue = false;\r\n            //     }finally{\r\n            //         return returnValue;\r\n            //     }\r\n            // }else{\r\n                try{\r\n                    returnValue = eval('(' + objStr + ')');\r\n                    if(typeof returnValue !== \"object\"){\r\n                        ui.logWarn(\"字符串转化为对象出错,错误信息为:\" + objStr + \"转化结果是 \" + (typeof returnValue) + \" 类型\", \"wui.parseToObj\", true);\r\n                        returnValue = false;\r\n                    }\r\n                }catch(e){\r\n                    console.info(\"eval\");\r\n                    console.info(objStr);\r\n                    ui.logWarn(\"字符串转化为对象出错,错误信息为：\" + e, \"wui.parseToObj\", true);\r\n                    // ui.logInfo(e); //error in the above string(in this case,yes)!\r\n                    returnValue = false;\r\n                }finally{\r\n                    return returnValue;\r\n                }\r\n            // }\r\n        }else if(typeof objStr === \"object\"){\r\n            return objStr;\r\n        }else{\r\n            ui.logWarn(\"字符串转化为对象出错,错误信息为:传入参数不符合字符串对象语法\", \"wui.parseToObj\", true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>判断两个对象是否相等</p>\r\n     * @namespace wui\r\n     * @class isEqualObject\r\n     * @constructor \r\n     * @param objA {Object} 比较的对象1\r\n     * @param objB {Object} 比较的对象2\r\n     * @return {Boolean} [是否相等的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isEqual1 = wui.isEqualObject({\"id\":\"101010\",\"name\":\"张三\"},{\"id\":\"101010\",\"name\":\"张三\"});   // true\r\n            var isEqual2 = wui.isEqualObject({\"id\":\"101010\",\"name\":\"张三\"},{\"id\":\"101010\",\"name\":\"李四\"});   // false\r\n            var isEqual3 = wui.isEqualObject({\"id\":\"101010\",\"name\":\"张三\"},{\"id\":\"101010\",\"name\":\"张三\",\"age\":15});   // false\r\n     *\r\n     */\r\n    ui.isEqualObject = function (objA, objB) {\r\n        ui.logUtilConfig.debugLog.methodName = \"isEqualObject\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"isEqualObject\", FRAME_NAME);\r\n\r\n        if(!ui.isObject(objA) || !ui.isObject(objB)) return false; //判断是否为Object\r\n        if(ui.isJson(objA) !== ui.isJson(objB)) return false; //判断类型是否一致\r\n        if(ui.isArray(objA) !== ui.isArray(objB)) return false; //判断类型是否一致\r\n        if(ui.getLength(objA) != ui.getLength(objB)) return false; //判断长度是否一致\r\n        return ui.compareObj(objA, objB, true); //默认为true\r\n    }\r\n\r\n    /**\r\n     * <p>判断传入JS对象是否是DOM对象</p>\r\n     * @namespace wui\r\n     * @class isDom\r\n     * @constructor \r\n     * @param obj {Object} 传入的JS对象\r\n     * @return {Boolean} [是否是DOM对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var dom1 = document.createElement(\"div\");\r\n            wui.isDom(dom1);    // true\r\n            wui.isDom(\".form-controll\");    // false\r\n     *\r\n     */\r\n    ui.isDom = function(obj){\r\n        //首先要对HTMLElement进行类型检查，因为即使在支持HTMLElement的浏览器中，类型却是有差别的，在Chrome,Opera中HTMLElement的类型为function，此时就不能用它来判断了\r\n        try{\r\n            var isTheDOM = ( typeof HTMLElement === 'object' ) \r\n                            ? (obj instanceof HTMLElement) \r\n                                : (obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string');\r\n\r\n            return isTheDOM;\r\n        }catch(e){\r\n            ui.logWarn(e, FRAME_NAME+\".isDom\", true);\r\n            return false;\r\n        }\r\n            \r\n    }\r\n\r\n    /**\r\n     * <p>判断传入JS对象是否是 jQuery 对象,且该对象存在于页面中</p>\r\n     * @namespace wui\r\n     * @class isJQuery\r\n     * @constructor \r\n     * @param obj {Object} 传入的JS对象\r\n     * @return {Boolean} [是否是 jQuery 对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var dom1 = document.createElement(\"div\");\r\n            wui.isJQuery(dom1);    // false\r\n            wui.isJQuery($(\"body\"));    // true\r\n     *\r\n     */\r\n    ui.isJQuery = function(obj){\r\n        ui.logUtilConfig.debugLog.methodName = \"isJQuery\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        try{\r\n            var isTheJQuery = ( obj instanceof jQuery && obj.length > 0 ) ? true : false;\r\n\r\n            return isTheJQuery;\r\n        }catch(e){\r\n            ui.logWarn(e, FRAME_NAME+\".isJQuery\", true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入JS对象获取存在页面中的JQuery对象,若无法解析为JQuery对象,则返回false</p>\r\n     * @namespace wui\r\n     * @class getJqueryObject\r\n     * @constructor \r\n     * @param obj {Object} 传入的JS对象\r\n     * @return {Boolean} [是否是DOM对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var dom1 = document.createElement(\"div\");\r\n            wui.getJqueryObject(dom1);    // $(dom1)\r\n            wui.getJqueryObject(\"body\");    // $(\"body\")\r\n            wui.getJqueryObject(\".no-node\");    // false\r\n     *\r\n     */\r\n    ui.getJqueryObject = function(obj){\r\n        if(!obj){\r\n            return false;\r\n        }\r\n\r\n        try{\r\n            // 若是DOM节点，直接返回$(obj)\r\n            if(ui.isDom(obj)){\r\n                return $(obj);\r\n            }else if(ui.isJQuery(obj)){ // 若是JQuery对象，直接返回obj\r\n                return obj;\r\n            }else if(ui.isJQuery($(obj))){\r\n                return $(obj);\r\n            }else if(ui.isJQuery($(\"#\" + obj))){\r\n                return $(\"#\" + obj);\r\n            }else{\r\n                return false;\r\n            }\r\n        }catch(e){\r\n            ui.logWarn(JSON.stringify(e), FRAME_NAME+\".getJqueryObject\", true);\r\n            return false;\r\n        } \r\n    }\r\n\r\n    ui._hasOwnProperty = function(object, key){\r\n        return (key in object);\r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为json</p>\r\n     * @namespace wui\r\n     * @class isJson\r\n     * @constructor \r\n     * @param obj {Object} 要判断的参数\r\n     * @return {Boolean} [是否为json对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isJson1 = wui.isJson({\"id\":\"101010\",\"name\":\"张三\"});   // true\r\n            var isJson2 = wui.isJson([{\"id\":\"101010\",\"name\":\"张三\"}]);   // false\r\n     *\r\n     */\r\n    ui.isJson = function(obj){\r\n        ui.logUtilConfig.debugLog.methodName = \"isJson\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"isJson\", FRAME_NAME);\r\n\r\n        return (obj && typeof(obj) == \"object\" && Object.prototype.toString.call(obj).toLowerCase() == \"[object object]\" && !obj.length); \r\n    }\r\n\r\n    /**\r\n     * <p>判断传递的参数是否为数组</p>\r\n     * @namespace wui\r\n     * @class isArray\r\n     * @constructor \r\n     * @param obj {Object} 要判断的参数\r\n     * @return {Boolean} [是否为json对象的结果]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var isArray1 = wui.isArray([{\"id\":\"101010\",\"name\":\"张三\"}]);   // true\r\n            var isArray2 = wui.isArray({\"id\":\"101010\",\"name\":\"张三\"});   // false\r\n     *\r\n     */\r\n    ui.isArray = function(obj) {\r\n        ui.logUtilConfig.debugLog.methodName = \"isArray\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"isArray\", FRAME_NAME);\r\n        return typeof(obj) == 'object' && Object.prototype.toString.call(obj) === '[object Array]';\r\n    }\r\n\r\n    /**\r\n     * <p>获取传递的对象的直接子元素个数</p>\r\n     * @method getLength\r\n     * @param obj {Object} 要判断的参数\r\n     * @return {Number} [传递的对象的直接子元素个数]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var len1 = wui.getLength([{\"id\":\"101010\",\"name\":\"张三\"}]);   // 2\r\n            var len2 = wui.getLength({\"id\":\"101010\",\"name\":\"张三\"});   // 2\r\n     *\r\n     */\r\n    ui.getLength = function(obj) {\r\n        // ui.logMethodCalled(\"getLength\", FRAME_NAME);\r\n        var count = 0;\r\n        for(var i in obj) count++;\r\n        return count;\r\n    }\r\n\r\n    /*\r\n     * <p>比较两个对象的元素是否一致</p>\r\n     * @method compareObj\r\n     * @param objA {Object} 比较的对象1\r\n     * @param objB {Object} 比较的对象2\r\n     * @param flag {Boolean} 递归开始时，判断是否已经比较结束\r\n     * @return {Boolean} [传递的两个对象的元素是否一致]\r\n     *\r\n     */\r\n    ui.compareObj = function(objA, objB, flag){\r\n        // ui.logMethodCalled(\"compareObj\", FRAME_NAME);\r\n        for(var key in objA) {\r\n            if(!flag) //跳出整个循环\r\n                break;\r\n            if(!objB.hasOwnProperty(key)) {\r\n                flag = false;\r\n                break;\r\n            }\r\n            if(!ui.isArray(objA[key])) { //子级不是数组时,比较属性值\r\n                if(objB[key] != objA[key]) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            } else {\r\n                if(!ui.isArray(objB[key])) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n                var oA = objA[key],\r\n                    oB = objB[key];\r\n                if(oA.length != oB.length) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n                for(var k in oA) {\r\n                    if(!flag) //这里跳出循环是为了不让递归继续\r\n                        break;\r\n                    flag = ui.compareObj(oA[k], oB[k], flag);\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","// WUI 页面交互\r\n;(function (ui,$, undefined) {\r\n\r\n    /**\r\n     * <p>打开一个子窗口</p>\r\n     * @namespace wui\r\n     * @class openWindow\r\n     * @constructor\r\n     * @param setting {JSON} 参数配置\r\n     * @param setting.pageUrl {String} 子窗口路径\r\n     * @param setting.pageParams {JSON} 子窗口参数\r\n     * @param setting.pageName {JSON} 子窗口句柄\r\n     * @param setting.pageSetting {JSON} 窗口设置参数(各参数用逗号分隔),比如'height=100,width=400,top=0,left=0,toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no'\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法,打开子窗口\r\n            wui.openWindow({\r\n                pageUrl: \"http://xxx/xx.html?id=0102\",\r\n                pageParams: {},\r\n                pageName: \"\",\r\n                pageSetting: \"\"\r\n            });\r\n     *\r\n     */\r\n    ui.openWindow = function(setting){\r\n        var config = {\r\n            pageUrl: \"\",\r\n            pageParams: {},\r\n            pageName: \"\",\r\n            pageSetting: \"\"\r\n        }\r\n\r\n        setting = $.extend(true, {}, config, setting);\r\n        var pageUrl = ui.buildUrl(setting.pageUrl, setting.pageParams);\r\n\r\n        window.WUI_WINDOW_FLAG = ui.guid();\r\n\r\n        window.open(pageUrl, setting.pageName, setting.pageSetting);\r\n    }\r\n\r\n    /**\r\n     * <p>关闭当前窗口,并返回父窗口(当出现跨域访问时,isRefresh参数一直为false)</p>\r\n     * @namespace wui\r\n     * @class closeWindow\r\n     * @constructor\r\n     * @param setting {JSON} 参数配置\r\n     * @param setting.onBeforeClose {Function} 关闭之前的操作方法,传递参数theParentWindow:弹出本窗口的父窗口,假如是在iframe里面打开子窗口,则表示iframe窗口\r\n     * @param setting.isRefresh {Boolean} 是否刷新父页面,默认是true(当在iframe里面点击弹出时，只刷新iframe内容,若要刷新整个页面,可在onBeforeClose参数里面刷新theParentWindow.parent,具体参考例子)\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法,关闭当前窗口,并刷新父窗口\r\n            wui.closeWindow({\r\n                onBeforeClose: function(theParentWindow){\r\n\r\n                    theParentWindow.parent.alertMessage(\"123\");\r\n                }\r\n            })\r\n     *\r\n     */\r\n    ui.closeWindow = function(setting){\r\n        var config = {\r\n            onBeforeClose: ui.CONSTANTS.EMPTYFUNC,\r\n            isRefresh: true\r\n        }\r\n\r\n        setting = $.extend(true, {}, config, setting);\r\n\r\n        try{\r\n            if(setting.onBeforeClose && typeof(setting.onBeforeClose) === \"function\"){\r\n                setting.onBeforeClose(window.opener);\r\n            }\r\n            if(setting.isRefresh){\r\n                var WUI_WINDOW_FLAG = window.WUI_WINDOW_FLAG;\r\n                if(window.opener && !window.opener.closed){\r\n                    if(window.opener.WUI_WINDOW_FLAG !== WUI_WINDOW_FLAG){\r\n                        window.opener.location = window.opener.location;\r\n                        // alert(\"当前页就是父页面\")\r\n                    }else{\r\n                        // alert(\"当前页不是父页面\");\r\n                        window.opener.parent.location=window.opener.parent.location;\r\n                    }\r\n                }\r\n            }\r\n            window.open('', '_self');\r\n            window.close();\r\n        }catch(e){\r\n            ui.logWarn(e, \"wui.closeWindow\", true);\r\n            window.open('', '_self');\r\n            window.close();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * <p>重定向页面</p>\r\n     * @namespace wui\r\n     * @class backhome\r\n     * @constructor\r\n     * @param [page] {string} 跳转页面地址,不传递则跳转到首页地址(首页地址默认是由wui.contextPath全局设置)\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法,跳转到\"http://xxx/xx.html?id=0102\"\r\n            wui.backhome(\"http://xxx/xx.html?id=0102\");\r\n     *\r\n     */\r\n    ui.backhome = function(page){\r\n        ui.logUtilConfig.debugLog.methodName = \"backhome\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"backhome\", FRAME_NAME);\r\n\r\n        if(page){\r\n            window.top.location.href = page;\r\n        }else{\r\n            window.top.location.href = ui.contextPath;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * <p>对URL编码</p>\r\n     * @namespace wui\r\n     * @class encodeURI\r\n     * @constructor \r\n     * @param uri {string} 要编码的字符串\r\n     * @return {string} 编码之后的字符串\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.encodeURI(\"http://xxx/xx.html?id=0102\");\r\n     *\r\n     */\r\n    ui.encodeURI = function(uri){\r\n        // return encodeURI(uri);\r\n        // encodeURI方法不会对下列字符编码  ASCII字母、数字、~!@#$&*()=:/,;?+'\r\n        // encodeURIComponent方法不会对下列字符编码 ASCII字母、数字、~!*()'\r\n        // 所以encodeURIComponent比encodeURI编码的范围更大。\r\n        return encodeURIComponent(uri);\r\n    }\r\n\r\n    \r\n    /*\r\n     * <p>对URL解码</p>\r\n     * @namespace wui\r\n     * @class decodeURI\r\n     * @constructor \r\n     * @param uri {string} 要解码的字符串\r\n     * @return {string} 解码之后的字符串\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法,假设当前页面URL为\"http://xxx/xx.html?id=0102\"\r\n            var id = wui.decodeURI(\"010101\");\r\n     *\r\n     */\r\n    ui.decodeURI = function(uri){\r\n        // return decodeURI(uri);\r\n        return decodeURIComponent(uri);\r\n    }\r\n\r\n    /*\r\n     * 对URL参数值进行编码\r\n     * @Author   Chenzx\r\n     * @DateTime 2018-12-29\r\n     * @param    {[type]}   value [description]\r\n     * @return   {[type]}         [description]\r\n     */\r\n    ui.encodeURLParamValue = function(value, isCodeUrlValue){\r\n        ui.logUtilConfig.debugLog.methodName = \"encodeURLParamValue\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        var urlVal = value, extString = ui.CONSTANTS.URLVALUEEXTSTRING;\r\n\r\n        if(isCodeUrlValue){\r\n            switch(typeof(value)){\r\n                case 'string':\r\n                    urlVal = value;\r\n                    break;\r\n                case 'number':\r\n                    urlVal = typeof(value) + extString + value;\r\n                    break;\r\n                case 'boolean':\r\n                    urlVal = typeof(value) + extString + value;\r\n                    break;\r\n                case 'object':\r\n                    urlVal = typeof(value) + extString + JSON.stringify(value);\r\n                    break;\r\n                case 'undefined':\r\n                    urlVal = typeof(value) + extString + value;\r\n                    break;\r\n                default:\r\n                    urlVal = typeof(value) + extString + value;\r\n\r\n            }\r\n        }\r\n\r\n        return ui.encodeURI(urlVal);\r\n    }\r\n\r\n    /*\r\n     * 判断是否对URL参数值进行解码\r\n     * @Author   Chenzx\r\n     * @DateTime 2018-12-29\r\n     * @param    {[type]}   value           [description]\r\n     * @param    {[type]}   isCodeUrlValue  是否编码,默认是undefined,优先级isCodeUrlValue > wui.CONSTANTS.ISCODEURLVALUE >\r\n     * @return   {[type]}         [description]\r\n     */\r\n    ui.isDecodeUrlValue = function(value, isCodeUrlValue){\r\n        var result = false, extString = ui.CONSTANTS.URLVALUEEXTSTRING;\r\n        if(ui.isUndefined(isCodeUrlValue)){\r\n            if(ui.isUndefined(ui.CONSTANTS.ISCODEURLVALUE)){\r\n                var matchReg = new RegExp(\"^(number\" + extString + \"|object\" + extString + \"|string\" + extString + \"|boolean\" + extString + \"|undefined\" + extString + \")\",\"m\"); // matchReg为/^####.*?(?=####)/gim\r\n                result = matchReg.test(value);\r\n            }else{\r\n                result = ui.CONSTANTS.ISCODEURLVALUE;\r\n            }\r\n        }else{\r\n            result = isCodeUrlValue;\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n    /*\r\n     * 对URL参数值进行解码\r\n     * @Author   Chenzx\r\n     * @DateTime 2018-12-29\r\n     * @param    {[type]}   value [description]\r\n     * @return   {[type]}         [description]\r\n     */\r\n    ui.decodeURLParamValue = function(value, isCodeUrlValue){\r\n        ui.logUtilConfig.debugLog.methodName = \"decodeURLParamValue\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        var urlVal = ui.decodeURI(value), extString = ui.CONSTANTS.URLVALUEEXTSTRING, type, realValue;\r\n        // var matchReg =new RegExp(\"(?<=\" + extString + \").*?(?=\" + extString + \")\",\"m\"); // matchReg为/^####.*?(?=####)/gim\r\n        // \"####strMatch####\".match(matchReg);\r\n        isCodeUrlValue = ui.isDecodeUrlValue(urlVal, isCodeUrlValue);\r\n\r\n        if(isCodeUrlValue){\r\n            var urlValue = urlVal.split(extString);\r\n            if(urlValue && urlValue.length > 1){\r\n                type = urlValue[0];\r\n                realValue = urlValue[1];\r\n                switch(type){\r\n                    case 'string':\r\n                        urlVal = realValue;\r\n                        break;\r\n                    case 'number':\r\n                        urlVal = ui.number(realValue);\r\n                        break;\r\n                    case 'boolean':\r\n                        urlVal = ui.boolean(realValue);\r\n                        break;\r\n                    case 'object':\r\n                        urlVal = ui.parseToObj(realValue);\r\n                        break;\r\n                    case 'undefined':\r\n                        urlVal = undefined;\r\n                        break;\r\n                    default:\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return urlVal;\r\n    }\r\n\r\n    /**\r\n     * <p>把JSON格式数据转换为url参数，并给URL加上时间戳</p>\r\n     * @namespace wui\r\n     * @class buildUrl\r\n     * @constructor \r\n     * @param url {string} 原始url\r\n     * @param paramObject {json} 参数集\r\n     * @param [addRandomCode] {boolean} 是否自动添加时间戳\r\n     * @param [isCodeUrlValue] {boolean} 是否对参数值进行类型编码,比如布尔类型的数值会被编码成\"boolean####value\",默认是false,取值请用wui.getQueryString()或者wui.getQueryStringByName()\r\n     * @return {string} [ 转换为URL ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var url = wui.buildUrl(\"http://xxx/xx.html\", {id: \"0102\"});   // \"http://xxx/xx.html?id=0102\"\r\n     *\r\n     */\r\n    ui.buildUrl = function(url, paramObject, addRandomCode, isCodeUrlValue) {\r\n        ui.logUtilConfig.debugLog.methodName = \"buildUrl\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"buildUrl\", FRAME_NAME);\r\n        \r\n        var subStrFlag = \"&\";    // 参数拼接分隔符\r\n        paramObject = paramObject || {};\r\n        addRandomCode = addRandomCode || true;\r\n        if(ui.isUndefined(isCodeUrlValue)){\r\n            isCodeUrlValue = ui.CONSTANTS.ISCODEURLVALUE;\r\n        }\r\n\r\n        var params = {};\r\n        params.url = url;\r\n        var str = JSON.stringify(paramObject);\r\n        if(str.length > 50){\r\n            params.paramObject = \"参数字符太长不显示\";\r\n        }else{\r\n            params.paramObject = paramObject;\r\n        }\r\n        params.addRandomCode = addRandomCode;\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"buildUrl\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        // wui.buildUrl(\"http://xxx.com?appId=123\", {\r\n        //     appId: \"234\",\r\n        //     appName: \"用户\"\r\n        // })\r\n\r\n        if (addRandomCode) {\r\n            paramObject.randomCode = new Date().valueOf();\r\n        }\r\n        var queryString = \"\";\r\n\r\n        var urlQueryString = ui.getQueryString(url);\r\n        if(url.indexOf(\"?\") > -1){\r\n            url = url.substring( 0, url.indexOf(\"?\"));\r\n        }\r\n        // console.group();\r\n        // console.error(\"urlQueryString:\");\r\n        // console.error(urlQueryString);\r\n        // console.groupEnd();\r\n        // console.group();\r\n        // console.error(\"paramObject:\");\r\n        // console.error(paramObject);\r\n        // console.groupEnd();\r\n\r\n        paramObject = $.extend(true, {}, urlQueryString, paramObject);\r\n\r\n        // console.group();\r\n        // console.error(\"paramObject:\");\r\n        // console.error(paramObject)\r\n        // console.groupEnd();\r\n        // 将数据类型做编码\r\n        for ( var attr in paramObject) {\r\n            var value = paramObject[attr];\r\n            if (queryString.length > 0) {\r\n                queryString += subStrFlag;\r\n            }\r\n\r\n            queryString += attr + \"=\" + ui.encodeURLParamValue(value, isCodeUrlValue);\r\n        }\r\n            \r\n        if (queryString.length > 0) {\r\n            if (url.indexOf(\"?\") >= 0) {\r\n                url = url + subStrFlag + queryString;\r\n            } else {\r\n                url = url + \"?\" + queryString;\r\n            }\r\n        }\r\n        \r\n        \r\n        if(url.charAt(0) == \"/\" && url.substr(0, ui.context.length) != ui.context){\r\n            url = ui.context + url;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * <p>获取页面URL请求参数集</p>\r\n     * @namespace wui\r\n     * @class getQueryString\r\n     * @constructor \r\n     * @return {Object} [ 当前页面URL请求的参数集 ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法,假设当前页面URL为\"http://xxx/xx.html?id=0102\"\r\n            var returnValue = wui.getQueryString();   // {id: \"0102\"}\r\n     *\r\n     */\r\n    ui.getQueryString = function(url, isCodeUrlValue) {\r\n        ui.logUtilConfig.debugLog.methodName = \"getQueryString\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getQueryString\", FRAME_NAME);\r\n        \r\n        var urlString;\r\n        if(url && typeof(url) === \"string\"){\r\n            if(url.indexOf(\"?\") > -1){\r\n                urlString = url.substring(url.indexOf(\"?\") + 1);\r\n            }else{\r\n                return {};\r\n            }\r\n            \r\n        }else{\r\n            if (window.location.search == \"\") {\r\n                return {};\r\n            }else{\r\n                urlString = window.location.search.substring(1);\r\n            }\r\n        }\r\n        \r\n        var q = urlString.split(\"&\");\r\n        var returnValue = {};\r\n        for (var i = 0; i < q.length; i++) {\r\n            \r\n            var temp = q[i].split(\"=\");\r\n            returnValue[temp[0]] = ui.decodeURLParamValue(temp[1], isCodeUrlValue);\r\n        }\r\n        \r\n        return returnValue;\r\n    }\r\n\r\n    /**\r\n     * <p>根据参数名获取URL请求参数</p>\r\n     * @namespace wui\r\n     * @class getQueryStringByName\r\n     * @constructor \r\n     * @param name {string} 参数名称\r\n     * @return {string} [ 参数值 ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法,假设当前页面URL为\"http://xxx/xx.html?id=0102\"\r\n            var id = wui.getQueryStringByName(\"id\");   // \"0102\"\r\n     *\r\n     */\r\n    ui.getQueryStringByName = function(name, isCodeUrlValue) {\r\n        ui.logUtilConfig.debugLog.methodName = \"getQueryStringByName\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getQueryStringByName\", FRAME_NAME);\r\n        // if(ui.isUndefined(isCodeUrlValue)){\r\n        //     isCodeUrlValue = ui.CONSTANTS.ISCODEURLVALUE;\r\n        // }\r\n\r\n        var result = location.search.match(new RegExp(\"[\\?\\&]\" + name + \"=([^\\&]+)\", \"i\"));\r\n        if (result == null || result.length < 1) {\r\n            return \"\";\r\n        }\r\n\r\n        return ui.decodeURLParamValue(result[1], isCodeUrlValue);\r\n    }\r\n\r\n    \r\n\r\n    return ui;\r\n})(wui || {}, libs);","// WUI 数据交互\r\n ;(function (ui,$, undefined) {\r\n    \r\n    /**\r\n     * <p>异步请求</p>\r\n     * @namespace wui\r\n     * @class ajax\r\n     * @constructor \r\n     * @param args {Object} ajax请求参数\r\n     * @param args.url {string} 请求url\r\n     * @param args.data {json} 请求参数对象，默认为空\r\n     * @param args.onSuccess {function} 执行成功回调函数，默认为记录返回对象日志\r\n     * @param args.onError {function} 执行失败回调函数，默认为弹出返回错误信息\r\n     * @param args.async {boolean} 是否异步，默认为true\r\n     * @param args.dataType {string} 返回数据类型,可选值\"json\"|\"text\"，默认为\"json\"\r\n     * @param args.method {string} 请求方法，默认为\"post\"\r\n     * @param args.contentType {string} 请求数据类型,默认为\"application/json\"\r\n     * @param args.onBeforeSend {Function} 发送请求前运行的函数,传递参数XMLHttpRequest\r\n     * @param args.onComplete {Function} 请求完成时运行的函数(在请求成功或失败之后均调用,即在 onSuccess 和 onError 函数之后),传递参数XMLHttpRequest, textStatus\r\n     * @param args.isAddRandomCode {Boolean} 是否自动给url添加时间戳,默认是false\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法发送请求服务\r\n            wui.ajax({\r\n                url: \"http://xxx/server.aspx\", \r\n                data: {},\r\n                onSuccess: function(res){\r\n                    console.info(res);\r\n                }, \r\n                onError: function(res){\r\n                    console.error(res);\r\n                }, \r\n                async: true, \r\n                dataType: \"json\", \r\n                method: \"post\",\r\n                contentType: \"application/x-www-form-urlencoded\"\r\n            })\r\n     *\r\n     */\r\n    // ui.ajax = function(url, data, onSuccess, onError, async, dataType, method) {\r\n    ui.ajax = function(param) {\r\n        ui.logUtilConfig.debugLog.methodName = \"ajax\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"ajax\", FRAME_NAME);\r\n        // var functionName = \"ajax\";\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        var url, data, onSuccess, onError, async, dataType, method, isAddRandomCode, onBeforeSend, onComplete;\r\n        if(typeof(param) === \"string\"){\r\n            url = param;\r\n            data = args[0];\r\n            onSuccess = args[1];\r\n            onError = args[2];\r\n            async = args[3];\r\n            dataType = args[4];\r\n            method = args[5];\r\n            contentType = args[6];\r\n            onBeforeSend = args[7];\r\n            onComplete = args[8];\r\n            isAddRandomCode = args[9];\r\n        }else if(param && typeof(param) === \"object\"){\r\n            url = param.url;\r\n            data = param.data;\r\n            onSuccess = param.onSuccess || param.successCallback;\r\n            onError = param.onError || param.errorCallback;\r\n            async = param.async;\r\n            dataType = param.dataType;\r\n            method = param.method;\r\n            contentType = param.contentType;\r\n            onBeforeSend = param.onBeforeSend;\r\n            onComplete = param.onComplete;\r\n            isAddRandomCode = param.isAddRandomCode;\r\n        }\r\n        \r\n        if(!url){\r\n            ui.logError(\"请求服务地址不能为空\", FRAME_NAME+\".ajax\", true);\r\n            return false;\r\n        }\r\n\r\n        if (async == undefined) {\r\n            async = true;\r\n        }\r\n        dataType = dataType || \"json\";\r\n        method = method || \"post\";// 本地json调试，用get方法\r\n        contentType = contentType || \"application/json\";\r\n\r\n        if(method.toLowerCase() == \"get\"){\r\n            if(ui.isUndefined(isAddRandomCode) && ui.isAddRandomCode){\r\n                url = ui.buildUrl(url);\r\n            }\r\n        }else if(isAddRandomCode){\r\n            url = ui.buildUrl(url)\r\n        }\r\n\r\n        var params = {};\r\n        params.url = url;\r\n        if(data && JSON.stringify(data).length < 100){\r\n            params.data = data;\r\n        }else{\r\n            params.data = \"传递参数过多不显示\";\r\n        }\r\n\r\n        params.async = async;\r\n        params.dataType = dataType;\r\n        params.method = method;\r\n\r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"ajax\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n        // wui.logParamValue(\"ajax.params\", params, FRAME_NAME);\r\n\r\n        $.ajax({\r\n            type : method,\r\n            url : url,\r\n            async : async,\r\n            data : data,\r\n            dataType : dataType,\r\n            contentType : contentType,\r\n            // 规定通过请求发送的数据是否转换为查询字符串。默认是 true。\r\n            processData: true,\r\n            // crossDomain:true,\r\n            // jsonp:'callback', \r\n            // 发送请求前运行的函数\r\n            // XMLHttpRequest: 后台与服务器交换数据\r\n            beforeSend: function(XMLHttpRequest){\r\n                if (onBeforeSend && typeof (onBeforeSend) == \"function\") {\r\n                    onBeforeSend(XMLHttpRequest);\r\n                }\r\n            },\r\n            // response: 后台返回数据\r\n            // status: 后台请求返回状态\r\n            // XMLHttpRequest: 后台与服务器交换数据\r\n            success : function(response,status,XMLHttpRequest) {\r\n                if (onSuccess && typeof (onSuccess) == \"function\") {\r\n                    // wui.logParamValue(\"response\", response, functionName);\r\n                    onSuccess(response,status,XMLHttpRequest);\r\n                } else {\r\n                    wui.logMessage(response, \"wui.ajax\", true);\r\n                }\r\n            },\r\n            // 请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。\r\n            // XMLHttpRequest: 后台与服务器交换数据\r\n            // status: 后台请求返回状态\r\n            complete: function(XMLHttpRequest,status){\r\n                if (onComplete && typeof (onComplete) == \"function\") {\r\n                    onComplete(XMLHttpRequest,status);\r\n                }\r\n            },\r\n            // XMLHttpRequest: 后台与服务器交换数据\r\n            // status: 后台请求返回状态\r\n            // errorThrown: 抛出错误异常\r\n            error : function(XMLHttpRequest, textStatus, errorThrown) {\r\n                if (onError && typeof (onError) == \"function\") {\r\n                    onError(XMLHttpRequest, textStatus, errorThrown);\r\n                } else {\r\n                    if (typeof (XMLHttpRequest) == \"object\") {\r\n                        ui.errorNotice(JSON.stringify(XMLHttpRequest));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * <p>get 异步请求，一般用于查询</p>\r\n     * @namespace wui\r\n     * @class getAjax\r\n     * @constructor \r\n     * @param args {Object} ajax请求参数\r\n     * @param args.url {string} 请求url\r\n     * @param args.data {json} 请求参数对象，默认为空\r\n     * @param args.onSuccess {function} 执行成功回调函数，默认为记录返回对象日志\r\n     * @param args.onError {function} 执行失败回调函数，默认为弹出返回错误信息\r\n     * @param args.async {boolean} 是否异步，默认为true\r\n     * @param args.dataType {string} 返回数据类型，默认为\"json\"\r\n     * @param args.contentType {string} 请求数据类型,默认为\"application/json\"\r\n     * @param args.onBeforeSend {Function} 发送请求前运行的函数,传递参数XMLHttpRequest\r\n     * @param args.onComplete {Function} 请求完成时运行的函数(在请求成功或失败之后均调用,即在 onSuccess 和 onError 函数之后),传递参数XMLHttpRequest, textStatus\r\n     * @param args.isAddRandomCode {Boolean} 是否自动给url添加时间戳,默认是false\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法发送请求服务\r\n            wui.getAjax({\r\n                url: \"http://xxx/server.aspx\", \r\n                data: {},\r\n                onSuccess: function(res){\r\n                    console.info(res);\r\n                }, \r\n                onError: function(res){\r\n                    console.error(res);\r\n                }, \r\n                async: true, \r\n                dataType: \"json\",\r\n                contentType: \"application/x-www-form-urlencoded\"\r\n            })\r\n     *\r\n     */\r\n    // ui.getAjax = function(url, data, onSuccess, onError, async, dataType){\r\n    ui.getAjax = function(param){\r\n        ui.logUtilConfig.debugLog.methodName = \"getAjax\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getAjax\", FRAME_NAME);\r\n        \r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        var params = {};\r\n        if(typeof(param) === \"string\"){\r\n            params.url = param;\r\n            params.data = args[0];\r\n            params.onSuccess = args[1];\r\n            params.onError = args[2];\r\n            params.async = args[3];\r\n            params.dataType = args[4];\r\n            params.contentType = args[5];\r\n            params.onBeforeSend = args[6];\r\n            params.onComplete = args[7];\r\n            params.isAddRandomCode = args[8];\r\n        }else if(param && typeof(param) === \"object\"){\r\n            params = $.extend(true, {}, params, param);\r\n            // params.url = param.url;\r\n            // params.data = param.data;\r\n            // params.onSuccess = param.onSuccess || param.onSuccess;\r\n            // params.onError = param.onError || param.onError;\r\n            // params.async = param.async;\r\n            // params.dataType = param.dataType;\r\n            // params.method = param.method;\r\n            // params.contentType = param.contentType;\r\n            // params.onBeforeSend = param.onBeforeSend;\r\n            // params.onComplete = param.onComplete;\r\n        }\r\n        \r\n        if(!params.url){\r\n            ui.logError(\"请求服务地址不能为空\", FRAME_NAME+\".getAjax\", true);\r\n            return false;\r\n        }\r\n\r\n        params.method = \"get\";\r\n        ui.ajax(params);\r\n    }\r\n\r\n    /**\r\n     * <p>patch 异步请求，一般用于修改</p>\r\n     * @namespace wui\r\n     * @class patchAjax\r\n     * @constructor \r\n     * @param args {Object} ajax请求参数\r\n     * @param args.url {string} 请求url\r\n     * @param args.data {json} 请求参数对象，默认为空\r\n     * @param args.onSuccess {function} 执行成功回调函数，默认为记录返回对象日志\r\n     * @param args.onError {function} 执行失败回调函数，默认为弹出返回错误信息\r\n     * @param args.async {boolean} 是否异步，默认为true\r\n     * @param args.dataType {string} 返回数据类型，默认为\"json\"\r\n     * @param args.contentType {string} 请求数据类型,默认为\"application/json\"\r\n     * @param args.onBeforeSend {Function} 发送请求前运行的函数,传递参数XMLHttpRequest\r\n     * @param args.onComplete {Function} 请求完成时运行的函数(在请求成功或失败之后均调用,即在 onSuccess 和 onError 函数之后),传递参数XMLHttpRequest, textStatus\r\n     * @param args.isAddRandomCode {Boolean} 是否自动给url添加时间戳,默认是false\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法发送请求服务\r\n            wui.patchAjax({\r\n                url: \"http://xxx/server.aspx\", \r\n                data: {},\r\n                onSuccess: function(res){\r\n                    console.info(res);\r\n                }, \r\n                onError: function(res){\r\n                    console.error(res);\r\n                }, \r\n                async: true, \r\n                dataType: \"json\",\r\n                contentType: \"application/x-www-form-urlencoded\"\r\n            })\r\n     *\r\n     */\r\n    // ui.patchAjax = function(url, data, onSuccess, onError, async, dataType){\r\n    ui.patchAjax = function(param){\r\n        ui.logUtilConfig.debugLog.methodName = \"patchAjax\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"patchAjax\", FRAME_NAME);\r\n\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        var params = {};\r\n        if(typeof(param) === \"string\"){\r\n            params.url = param;\r\n            params.data = args[0];\r\n            params.onSuccess = args[1];\r\n            params.onError = args[2];\r\n            params.async = args[3];\r\n            params.dataType = args[4];\r\n            params.contentType = args[5];\r\n            params.onBeforeSend = args[6];\r\n            params.onComplete = args[7];\r\n            params.isAddRandomCode = args[8];\r\n        }else if(param && typeof(param) === \"object\"){\r\n            params = $.extend(true, {}, params, param);\r\n            // params.url = param.url;\r\n            // params.data = param.data;\r\n            // params.onSuccess = param.onSuccess;\r\n            // params.onError = param.onError;\r\n            // params.async = param.async;\r\n            // params.dataType = param.dataType;\r\n            // params.method = param.method;\r\n            // params.contentType = param.contentType;\r\n        }\r\n        \r\n        if(!params.url){\r\n            ui.logError(\"请求服务地址不能为空\", FRAME_NAME+\".patchAjax\", true);\r\n            return false;\r\n        }\r\n\r\n        params.method = \"patch\";\r\n        ui.ajax(params);\r\n    }\r\n\r\n    /**\r\n     * <p>delete 异步请求，一般用于删除</p>\r\n     * @namespace wui\r\n     * @class deleteAjax\r\n     * @constructor \r\n     * @param args {Object} ajax请求参数\r\n     * @param args.url {string} 请求url\r\n     * @param args.data {json} 请求参数对象，默认为空\r\n     * @param args.onSuccess {function} 执行成功回调函数，默认为记录返回对象日志\r\n     * @param args.onError {function} 执行失败回调函数，默认为弹出返回错误信息\r\n     * @param args.async {boolean} 是否异步，默认为true\r\n     * @param args.dataType {string} 返回数据类型，默认为\"json\"\r\n     * @param args.contentType {string} 请求数据类型,默认为\"application/json\"\r\n     * @param args.onBeforeSend {Function} 发送请求前运行的函数,传递参数XMLHttpRequest\r\n     * @param args.onComplete {Function} 请求完成时运行的函数(在请求成功或失败之后均调用,即在 onSuccess 和 onError 函数之后),传递参数XMLHttpRequest, textStatus\r\n     * @param args.isAddRandomCode {Boolean} 是否自动给url添加时间戳,默认是false\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法发送请求服务\r\n            wui.deleteAjax({\r\n                url: \"http://xxx/server.aspx\", \r\n                data: {},\r\n                onSuccess: function(res){\r\n                    console.info(res);\r\n                }, \r\n                onError: function(res){\r\n                    console.error(res);\r\n                }, \r\n                async: true, \r\n                dataType: \"json\",\r\n                contentType: \"application/x-www-form-urlencoded\"\r\n            })\r\n     *\r\n     */\r\n    // ui.deleteAjax = function(url, data, onSuccess, onError, async, dataType){\r\n    ui.deleteAjax = function(param){\r\n        ui.logUtilConfig.debugLog.methodName = \"deleteAjax\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"deleteAjax\", FRAME_NAME);\r\n        \r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        var params = {};\r\n        if(typeof(param) === \"string\"){\r\n            params.url = param;\r\n            params.data = args[0];\r\n            params.onSuccess = args[1];\r\n            params.onError = args[2];\r\n            params.async = args[3];\r\n            params.dataType = args[4];\r\n            params.contentType = args[5];\r\n            params.onBeforeSend = args[6];\r\n            params.onComplete = args[7];\r\n            params.isAddRandomCode = args[8];\r\n        }else if(param && typeof(param) === \"object\"){\r\n            params = $.extend(true, {}, params, param);\r\n            // params.url = param.url;\r\n            // params.data = param.data;\r\n            // params.onSuccess = param.onSuccess;\r\n            // params.onError = param.onError;\r\n            // params.async = param.async;\r\n            // params.dataType = param.dataType;\r\n            // params.method = param.method;\r\n            // params.contentType = param.contentType;\r\n        }\r\n        \r\n        if(!params.url){\r\n            ui.logError(\"请求服务地址不能为空\", FRAME_NAME+\".deleteAjax\", true);\r\n            return false;\r\n        }\r\n\r\n        params.method = \"delete\";\r\n        ui.ajax(params);\r\n    }\r\n\r\n    /**\r\n     * <p>模拟表单提交</p>\r\n     * @namespace wui\r\n     * @class submitByForm\r\n     * @constructor \r\n     * @param args {Object} ajax请求参数\r\n     * @param args.url {string} 请求url\r\n     * @param args.data {json} 请求参数对象，默认为空\r\n     * @param args.method {string} 请求方法，默认为\"post\"\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法发送请求服务\r\n            wui.submitByForm({\r\n                url: \"http://xxx/server.aspx\", \r\n                data: {},\r\n                method: \"post\"\r\n            })\r\n     *\r\n     */\r\n    ui.submitByForm = function(param){\r\n        ui.logUtilConfig.debugLog.methodName = \"submitByForm\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"submitByForm\", FRAME_NAME);\r\n        // console.info(\"123\")\r\n        var url, data, onSuccess, onError, method;\r\n        if(param && typeof(param) === \"object\"){\r\n            url = param.url;\r\n            data = param.data;\r\n            onSuccess = param.onSuccess;\r\n            onError = param.onError;\r\n            method = param.method;\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n        method = method || \"post\";// 本地json调试，用get方法\r\n        data = data || {};\r\n\r\n        if(!url){\r\n            ui.logError(\"url不能为空\", FRAME_NAME+\".submitByForm\", true);\r\n            return;\r\n        }\r\n        if(!ui.isJson(data)){\r\n            ui.logError(\"传递的data参数只能为json\", FRAME_NAME+\".submitByForm\", true);\r\n            return;\r\n        }\r\n        var form = $(\"<form></form>\").attr(\"action\", url).attr(\"method\", method);\r\n        for(var key in data){\r\n            form.append($(\"<input></input>\").attr({\r\n                \"type\": \"hidden\",\r\n                \"name\": key\r\n            }).val(data[key]));\r\n        }\r\n        // console.info(form);\r\n        form.appendTo('body').submit().remove();\r\n    }\r\n    \r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * @module Method\r\n */\r\n\r\n ;(function (ui,$, undefined) {\r\n    /**\r\n     * <p>保存键值对到本地Cookie,若是已经本地有保存该Cookie关键字,会覆盖修改原有的数据</p>\r\n     * @namespace wui\r\n     * @class setCookie\r\n     * @constructor \r\n     * @param key {string} 保存的cookie关键字\r\n     * @param value {string} 保存的cookie值\r\n     * @param [time] {number} [此Cookie值过期天数，默认为7，即7天之后自动删除]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法保存cookie\r\n            wui.setCookie({\"userId\": \"0102\"});\r\n     *\r\n     */\r\n    ui.setCookie = function(key, val, time){\r\n        ui.logUtilConfig.debugLog.methodName = \"setCookie\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"setCookie\", FRAME_NAME);\r\n        \r\n        var expiresDays = (time == undefined) ? 7 : parseInt(time);    //将date设置为n天以后的时间\r\n        var date = new Date(); //获取当前时间\r\n\r\n        date.setTime(date.getTime()+expiresDays*24*3600*1000); //格式化为cookie识别的时间\r\n        document.cookie = key + \"=\" + escape(val) + \";expires=\" + date.toGMTString();  //设置cookie\r\n    }\r\n\r\n    /**\r\n     * <p>根据key值删除本地对应的Cookie值</p>\r\n     * @namespace wui\r\n     * @class deleteCookie\r\n     * @constructor \r\n     * @param key {string} 要删除的cookie关键值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.deleteCookie(\"userId\");\r\n     *\r\n     */\r\n    ui.deleteCookie = function(key){\r\n        ui.logUtilConfig.debugLog.methodName = \"deleteCookie\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"deleteCookie\", FRAME_NAME);\r\n         //删除cookie方法\r\n         var date = new Date(); //获取当前时间\r\n         date.setTime(date.getTime() - 10000); //将date设置为过去的时间\r\n         document.cookie = key + \"=\" + escape(\"\") +\"; expires =\" + date.toGMTString();//设置cookie\r\n    }\r\n\r\n    /**\r\n     * <p>获取本地cookie值</p>\r\n     * @namespace wui\r\n     * @class getCookie\r\n     * @constructor \r\n     * @param key {string} 要获取的cookie保存的关键字\r\n     * @return {string} [ 若本地有cookie值存在，则返回对应的值，否则返回false ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var url = wui.getCookie(\"userId\");   // \"0102\"\r\n     *\r\n     */\r\n    ui.getCookie = function(key){\r\n        ui.logUtilConfig.debugLog.methodName = \"getCookie\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getCookie\", FRAME_NAME);\r\n        // 获取本地cookie\r\n        var strCookie = document.cookie;    // 获取本地cookie对象\r\n        var arrCookie = strCookie.split(\";\");   // 多个cookie是以\";\"分隔的\r\n        for(var i = 0, _len = arrCookie.length; i < _len; i++){\r\n            var _cookie = arrCookie[i].split(\"=\");\r\n            if(_cookie[0] == key){\r\n                return unescape(_cookie[1]);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>获取存储的localStorage对象</p>\r\n     * @namespace wui\r\n     * @class getLocalStorage\r\n     * @constructor \r\n     * @param key {string} 保存的localStorage对象关键字\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法保存cookie\r\n            wui.getLocalStorage(\"userId\");    // \"010202\"\r\n     *\r\n     */\r\n    ui.getLocalStorage = function(key){\r\n        ui.logUtilConfig.debugLog.methodName = \"getLocalStorage\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(typeof(Storage) !== \"undefined\"){\r\n            // 支持 localStorage  sessionStorage 对象!\r\n            return localStorage.getItem(key);\r\n        } else {\r\n            ui.logWarn(\"对不起，您的浏览器不支持 web 存储。\", \"wui.getLocalStorage\", true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>存储localStorage对象,若是已经本地有保存该key值,会覆盖修改原有的数据,存储的数据没有时间限制</p>\r\n     * @namespace wui\r\n     * @class setLocalStorage\r\n     * @constructor \r\n     * @param key {string} 保存的localStorage对象关键字\r\n     * @param value {string} 保存的localStorage对象值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法保存cookie\r\n            wui.setLocalStorage(\"userId\", \"010202\");    // true\r\n     *\r\n     */\r\n    ui.setLocalStorage = function(key, value){\r\n        ui.logUtilConfig.debugLog.methodName = \"setLocalStorage\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(typeof(Storage) !== \"undefined\"){\r\n            // 支持 localStorage  sessionStorage 对象!\r\n            localStorage.setItem(key,value);\r\n            return true;\r\n        } else {\r\n            ui.logWarn(\"对不起，您的浏览器不支持 web 存储。\", \"wui.setLocalStorage\", true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>删除localStorage对象</p>\r\n     * @namespace wui\r\n     * @class deleteLocalStorage\r\n     * @constructor \r\n     * @param key {string} 删除的localStorage对象关键字,若为空，则会删除所有数据\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法保存cookie\r\n            wui.deleteLocalStorage(\"userId\");    // true\r\n     *\r\n     */\r\n    ui.deleteLocalStorage = function(key){\r\n        ui.logUtilConfig.debugLog.methodName = \"deleteLocalStorage\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(typeof(Storage) !== \"undefined\"){\r\n            // 支持 localStorage  sessionStorage 对象!\r\n            if(ui.isUndefined(key)){\r\n                localStorage.clear();\r\n            }else{\r\n                localStorage.removeItem(key);\r\n            }\r\n            return true;\r\n        } else {\r\n            ui.logWarn(\"对不起，您的浏览器不支持 web 存储。\", \"wui.deleteLocalStorage\", true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * @module Method\r\n */\r\n\r\n ;(function (ui, $, undefined) {\r\n\r\n    /**\r\n     * <p>延迟触发:只在指定时间后执行一次</p>\r\n     * @namespace wui\r\n     * @class setTimeout\r\n     * @constructor \r\n     * @param onDone {Function} 延迟触发的方法\r\n     * @param [timeout] {Number} 延迟时间,单位是\"ms\",默认是1000,表示1000ms之后触发 onDone 方法\r\n     * @return {Number} 表示定时器的编号，这个值可以传递给wui.clearTimeout()用于取消这个函数的执行\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *\r\n            var onDo = function(){\r\n                wui.logMessage(new Date());\r\n            }\r\n            // 每1800毫秒执行 onDo 方法\r\n            var timeoutID = wui.setTimeout(onDo, 1800);   // 103(这个不是固定的)\r\n     *\r\n     */\r\n    ui.setTimeout = function(onDone, timeout){\r\n        timeout = timeout || 1000;\r\n        return setTimeout(onDone, timeout);\r\n    }\r\n\r\n    /**\r\n     * <p>清除延迟触发</p>\r\n     * @namespace wui\r\n     * @class clearTimeout\r\n     * @constructor \r\n     * @param timeoutID {Number} 调用 wui.setTimeout() 函数时所获得的返回值，使用该返回标识符作为参数，可以取消该 wui.setTimeout() 所设定的定时执行操作。\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.clearTimeout(103);\r\n     *\r\n     */\r\n    ui.clearTimeout = function(timeoutID){\r\n        return clearTimeout(timeoutID)\r\n    }\r\n\r\n    /**\r\n     * <p>定时触发:以指定时间为周期循环执行</p>\r\n     * @namespace wui\r\n     * @class setInterval\r\n     * @constructor \r\n     * @param onDone {Function} 延迟触发的方法\r\n     * @param [timeout] {Number} 延迟时间,单位是\"ms\",默认是1000,表示每1000ms触发 onDone 方法,直到wui.clearInterval()方法被调用才停止执行\r\n     * @return {Number} 表示定时器的编号，这个值可以传递给wui.clearInterval()用于取消这个函数的执行\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *\r\n            var onDo = function(){\r\n                wui.logMessage(new Date());\r\n            }\r\n            // 每1800毫秒执行 onDo 方法\r\n            var timer = wui.setInterval(onDo, 1800);   // 104(这个不是固定的)\r\n     *\r\n     */\r\n    ui.setInterval = function(onDone, cycle){\r\n        cycle = cycle || 1000;\r\n        return setInterval(onDone, cycle);\r\n    }\r\n\r\n    /**\r\n     * <p>清除定时触发方法</p>\r\n     * @namespace wui\r\n     * @class clearInterval\r\n     * @constructor \r\n     * @param timerID {Number} 调用 wui.setInterval() 函数时所获得的返回值，使用该返回标识符作为参数，可以取消该 wui.setInterval() 所设定的定时执行操作。\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.clearInterval(104);\r\n     *\r\n     */\r\n    ui.clearInterval = function(timerID){\r\n        return clearInterval(timerID);\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * @module Method\r\n */\r\n\r\n ;(function (ui, $, undefined) {\r\n\r\n    /**\r\n     * <p>设置当前窗口框架皮肤(包含iframe的)</p>\r\n     * @namespace wui\r\n     * @class setSkins\r\n     * @constructor \r\n     * @param skinName {string} 设置的皮肤名称,可选值:\"default\"/自定义拓展的皮肤名称\r\n     * @param [onEnd] {Function} 设置皮肤之后执行方法,传递参数element:当前页面框架皮肤所在节点\r\n     * @param [isAddSkin] {Boolean} 假如页面找不到对应的皮肤样式文件节点(即\"#wuiSkin\"),是否引入传入的皮肤文件,默认是false,找不到就不引入,可通过wui.skinConfig.isAddSkin全局设置\r\n     * @param [win] {Object} 要开始设置皮肤的window对象,默认是以当前window开始\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.setSkins(\"skins\");\r\n     *\r\n     */\r\n    ui.setSkins = function(skinName, isAddSkin, onDoThings, win){\r\n        if(ui.isUndefined(isAddSkin)){\r\n            isAddSkin = ui.skinConfig.isAddSkin;\r\n        }\r\n        // isAddSkin = isAddSkin || false;\r\n        win = win || window;\r\n        // console.info(win.document.readyState);\r\n        if(win.document.readyState==\"complete\"){\r\n            var iframes = win.document.getElementsByTagName(\"iframe\");\r\n            if(iframes && iframes.length > 0){\r\n                for(var i = 0; i < iframes.length; i++){\r\n                    ui.setSkins(skinName, isAddSkin, onDoThings, iframes[i].contentWindow);\r\n                    // console.info(iframes[i].contentWindow.document.readyState)\r\n                    // if(iframes[i].contentWindow.document.readyState==\"complete\"){\r\n                    //     ui.setSkins(skinName, isAddSkin, onDoThings, iframes[i].contentWindow);\r\n                    // }else{\r\n                    //     iframes[i].onload = function(e){\r\n                    //         ui.setSkins(skinName, isAddSkin, onDoThings, iframes[i].contentWindow);\r\n                    //     }\r\n                    // }\r\n                }\r\n            }\r\n            \r\n            if(win.wui){\r\n                win.wui.setSkin(skinName, isAddSkin, onDoThings)\r\n            }\r\n        }else{\r\n            // 延迟300ms设置\r\n            ui.setTimeout(function(){\r\n                ui.setSkins(skinName, isAddSkin, onDoThings, win);\r\n            }, 300)\r\n        }\r\n            \r\n    }\r\n\r\n    /**\r\n     * <p>设置当前窗口框架皮肤(不包含iframe的)</p>\r\n     * @namespace wui\r\n     * @class setSkin\r\n     * @constructor \r\n     * @param [skinName] {string} 设置的皮肤名称,可选值:\"default\"/自定义拓展的皮肤名称\r\n     * @param [isAddSkin] {Boolean} 假如页面找不到对应的皮肤样式文件节点(即\"#wuiSkin\"),是否引入传入的皮肤文件,默认是false,找不到就不引入,可通过wui.skinConfig.isAddSkin全局设置\r\n     * @param [onEnd] {Function} 设置皮肤之后执行方法,传递参数element:当前页面框架皮肤所在节点\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.setSkin(\"skins\");\r\n     *\r\n     */\r\n    ui.setSkin = function(skinName, isAddSkin, onEnd){\r\n        ui.logUtilConfig.debugLog.methodName = \"setSkin\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        ui.logMessage(\"设置皮肤：\" + skinName, \"wui.setSkin\", true);\r\n        if(ui.isUndefined(isAddSkin)){\r\n            isAddSkin = ui.skinConfig.isAddSkin;\r\n        }\r\n\r\n        // if(ui.isUndefined(skinName)){\r\n        if(!skinName){\r\n            skinName = ui.getLocalStorage(ui.CONSTANTS.SKINNAMEFIELD);\r\n            if(!skinName){\r\n                skinName = \"default\";\r\n            }\r\n        }\r\n\r\n        var skinElement = ui.getSkinElement(isAddSkin ? skinName : false);\r\n        if(skinElement){\r\n            // day = day || 31;\r\n            if(typeof(skinElement) === \"string\"){\r\n                ui.setLocalStorage(ui.CONSTANTS.SKINNAMEFIELD, skinName);\r\n            }else{\r\n                var href = skinElement.attr(\"href\");\r\n                // 匹配 themes/skinName/style.css\r\n                var currentSkinName = href.match(/themes\\/(\\S*)\\//)[1];\r\n                var basePath = href.substr(0, href.indexOf(\"themes\")) + \"themes/\";\r\n                if(currentSkinName !== skinName){\r\n                    skinElement.attr(\"href\", basePath + skinName + \"/\" + ui.skinConfig.skinFileName);\r\n                    ui.setLocalStorage(ui.CONSTANTS.SKINNAMEFIELD, skinName);\r\n                }\r\n            }\r\n        }\r\n        onEnd && typeof(onEnd)===\"function\" && onEnd(skinElement);\r\n        return skinElement ? true : false;\r\n    }\r\n\r\n    /**\r\n     * <p>清除框架皮肤缓存</p>\r\n     * @namespace wui\r\n     * @class removeSkin\r\n     * @constructor \r\n     * @param [onEnd] {Function} 清除皮肤缓存之后执行方法,传递参数element:当前页面框架皮肤所在节点\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.removeSkin(\"skins\");\r\n     *\r\n     */\r\n    ui.removeSkin = function(onEnd){\r\n        ui.logUtilConfig.debugLog.methodName = \"removeSkin\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        var skinElement = ui.getSkinElement();\r\n        ui.deleteLocalStorage(ui.CONSTANTS.SKINNAMEFIELD);\r\n\r\n        onEnd && typeof(onEnd)===\"function\" && onEnd(skinElement);\r\n        return skinElement ? true : false;\r\n    }\r\n\r\n    /**\r\n     * <p>获取框架皮肤名称</p>\r\n     * @namespace wui\r\n     * @class getSkin\r\n     * @constructor\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.getSkin();  // \"default\"\r\n     *\r\n     */\r\n    ui.getSkin = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"getSkin\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        ui.getLocalStorage(ui.CONSTANTS.SKINNAMEFIELD);\r\n    }\r\n\r\n    /**\r\n     * <p>获取框架关联皮肤元素</p>\r\n     * @namespace wui\r\n     * @class getSkinElement\r\n     * @constructor\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.getSkinElement();\r\n     *\r\n     */\r\n    ui.getSkinElement = function(skinName){\r\n        ui.logUtilConfig.debugLog.methodName = \"getSkinFile\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        if(!$(\"#\" + ui.skinConfig.skinId).exist()){\r\n            ui.logMessage(\"当前页面不存在 ID 为\" + ui.skinConfig.skinId + \" 的DOM节点\", \"wui.getSkinFile\", true);\r\n            if(skinName){\r\n                var cssURL = ui.CONSTANTS.WUI_PROJECT_PATH + 'themes/' + skinName + '/' + ui.skinConfig.skinFileName;\r\n                ui.logMessage(\"框架新皮肤路径：\" + cssURL, true);\r\n\r\n                var linkTag = $('<link href=\"' + cssURL + '\" rel=\"stylesheet\" type=\"text/css\" id=\"' + ui.skinConfig.skinId + '\" charset=\"utf-8\" />');\r\n                $($('head')[0]).append(linkTag);\r\n                return skinName;\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(document.getElementById(ui.skinConfig.skinId).tagName.toLowerCase() === \"link\"){\r\n            return $(\"#\" + ui.skinConfig.skinId);\r\n        }else{\r\n            ui.logMessage(\"当前页面 ID 为\" + ui.skinConfig.skinId + \" 的DOM节点不是link标签\", \"wui.getSkinFile\", true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","\r\n;(function (ui,$, undefined){\r\n\t/**\r\n     * <p>框架页面初始化(包括增加初始化框架皮肤、初始化页面元素、初始化组件、初始化校验、设置页面滚动等)</p>\r\n     * <p>设置在节点上关联属性主要如以下：</p>\r\n     * <ol>\r\n     * <li>data-init-page=true: 页面初始化</li>\r\n     * <li>data-init-skin=true: 初始化皮肤</li>\r\n     * <li>data-add-skin=true: 是否找不到皮肤节点时,追加皮肤节点</li>\r\n     * <li>data-init-element=true: 初始化页面元素</li>\r\n     * <li>data-init-components=true: 初始化组件</li>\r\n     * <li>data-init-validate=true: 初始化校验</li>\r\n     * <li>data-init-scroll=true: 初始化滚动条</li>\r\n     * </ol>\r\n     * <strong>在调用此方法时,上述7个全局属性具有以下5个共同规定：</strong>\r\n     * <ol>\r\n     * <li>当页面有节点设置\"data-init-page\"属性时,会在页面加载时默认调用此方法</li>\r\n     * <li>当设置\"data-init-page\"属性但不设置值时,其默认值取值优先级: isInitPage(有传递时) > \"data-init-page\"(有设置时) > wui.isInitPage</li>\r\n     * <li>当设置\"data-init-page\"属性值时,该节点的其他 data-*-* 属性若不设置,或者无属性值,其值与\"data-init-page\"属性值相同</li>\r\n     * <li>不管\"data-init-page\"是否设置,当该节点其他的 data-*-* 属性设置值时,所设置的值将作为参数值,优先级大于\"data-init-page\"值</li>\r\n     * <li>当\"data-add-skin\"不设置属性值时,默认值以wui.skinConfig.isAddSkin优先级更高</li>\r\n     * </ol>\r\n     * @namespace wui\r\n     * @class initPage\r\n     * @constructor \r\n     * @param isInitPage {Boolean} 是否完成初始化页面的全部步骤,其默认值取值优先级: isInitPage(有传递时) > \"data-init-page\"(有设置时) > wui.isInitPage\r\n     * @param setting {JSON} 初始化组件的配置参数,格式：{\"widgetId\", widgetSetting, ...}\r\n     * @return {JSON}  页面WUI组件初始化的对象集,格式：{\"widgetId\", widgetObject, ...},保存在wui.extVariables.components中\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.initPage();\t// 返回组件初始化结果对象集\r\n     *\r\n     */\r\n\tui.initPage = function(isInitPage, setting){\r\n        ui.logUtilConfig.debugLog.methodName = \"initPage\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n\t\tui.extVariables.components = {};\r\n\r\n\t\tvar $initConSelector = null, dataIsInitPage;\r\n\t\tif($('[data-init-page]').length > 0){\r\n\t\t\t$initConSelector = $('[data-init-page]');\r\n\t\t\tif(typeof($initConSelector.attr(\"data-init-page\")) === \"undefined\"){\r\n\t        \tdataIsInitPage = ui.isInitPage;\r\n\t        }else{\r\n\t        \tdataIsInitPage = $initConSelector.data(\"init-page\");\r\n\t        }\r\n\t\t}else{\r\n\t\t\t$initConSelector = $('body');\r\n\t\t\tdataIsInitPage = ui.isInitPage;\r\n\t\t\t// $initConSelector.data(\"init-page\", isInitPage);\r\n\t\t}\r\n\r\n\t\tif(ui.isUndefined(isInitPage)){\r\n\t\t\tisInitPage = dataIsInitPage;\r\n\t\t}else if(ui.isJson(isInitPage)){\r\n\t\t\tsetting = isInitPage;\r\n\t\t\tisInitPage = dataIsInitPage;\r\n\t\t}\r\n\r\n\t\tui.logParamValue({\r\n            paramName: \"isInitPage\",\r\n            paramValue: isInitPage, \r\n            methodName: \"initPage\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n\t\t// 是否初始化页面\r\n\t\t$initConSelector.data(\"data-init-page\", isInitPage);\r\n\r\n\t\t// IE mode\r\n\t    // var isRTL = false;\r\n\t    // var isIE8 = false;\r\n\t    // var isIE9 = false;\r\n\t    // var isIE10 = false;\r\n\t    var invalidControls = \"[type='button'],[type='submit'],[type='reset']\";   // 无效控件：按钮、组件内部隐藏域\r\n\r\n\t    // 初始化主体设置\r\n\t    var _initHandle = function() {\r\n\r\n\t        if ($('body').css('direction') === 'rtl') {\r\n\t            ui.isRTL = true;\r\n\t        }\r\n\r\n\t        if (ui.CONSTANTS.isIE10) {\r\n\t            $('html').addClass('ie10'); // detect IE10 version\r\n\t        }\r\n\r\n\t        if (ui.CONSTANTS.isIE10 || ui.CONSTANTS.isIE9 || ui.CONSTANTS.isIE8) {\r\n\t            $('html').addClass('ie'); // detect IE10 version\r\n\t        }\r\n\r\n\t        // 是否初始化页面\r\n\t        // if(typeof($initConSelector.attr(\"data-init-page\")) === \"undefined\"){\r\n\t        // \t$initConSelector.data(\"init-page\", isInitPage);\r\n\t        // }\r\n\r\n\t        // var isInitPage = $initConSelector.data(\"init-page\");\r\n\r\n\t        // 是否初始化皮肤\r\n\t        if(typeof($initConSelector.attr(\"data-init-skin\")) === \"undefined\"){\r\n\t        \t$initConSelector.data(\"init-skin\", isInitPage);\r\n\t        }\r\n\r\n\t        // 是否找不到皮肤节点时,追加皮肤节点\r\n\t        if(typeof($initConSelector.attr(\"data-add-skin\")) === \"undefined\"){\r\n\t        \t$initConSelector.data(\"add-skin\", ui.skinConfig.isAddSkin);\r\n\t        }\r\n\r\n\t        // 是否初始化页面元素\r\n\t        if(typeof($initConSelector.attr(\"data-init-element\")) === \"undefined\"){\r\n\t        \t$initConSelector.data(\"init-element\", isInitPage);\r\n\t        }\r\n\r\n\t        // 是否初始化组件\r\n\t        if(typeof($initConSelector.attr(\"data-init-components\")) === \"undefined\"){\r\n\t        \t$initConSelector.data(\"init-components\", isInitPage);\r\n\t        }\r\n\r\n\t        // 是否初始化校验\r\n\t        if(typeof($initConSelector.attr(\"data-init-validate\")) === \"undefined\"){\r\n\t        \t$initConSelector.data(\"init-validate\", isInitPage);\r\n\t        }\r\n\r\n\t        // 是否初始化滚动条\r\n\t        if(typeof($initConSelector.attr(\"data-init-scroll\")) === \"undefined\"){\r\n\t        \t$initConSelector.data(\"init-scroll\", isInitPage);\r\n\t        }\r\n\t    };\r\n\r\n\t    // 初始化页面滚动,绑定属性data-wui-scroll\r\n\t    var _initScroll = function(){\r\n\t    \t\r\n\t    \tif($initConSelector.data(\"initScroll\") === false || $initConSelector.data(\"initScroll\") === \"false\"){\r\n\t    \t\treturn false;\r\n\t    \t}\r\n\t    \tui.scroll($initConSelector);\r\n\t    }\r\n\r\n\t    // 初始化表单有效控件\r\n\t    var _initValidControls = function(){\r\n\t    \t// console.info(\"_initValidControls\");\r\n\t    \t\r\n\t    \t$(\"input:not(\" + invalidControls + \")\").each(function(i, elem){\r\n\t    \t\tif(!$(elem).hasClass(\"wui-input\") && !$(elem).attr(\"data-init-wui\")){\r\n\t    \t\t\t$(elem).addClass(\"wui-input\");\r\n\t    \t\t}\r\n\t    \t\tif(!$(elem).attr(\"data-init-wui\")){\r\n\t    \t\t\tif($(elem).attr(\"id\") && $(elem).attr(\"name\") == undefined){\r\n\t\t    \t\t\t$(elem).attr(\"name\", $(elem).attr(\"id\"));\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n\t\t    \t\t\r\n\t    \t})\r\n\r\n\t    \t$(\"select\").each(function(i, elem){\r\n\t    \t\tif(!$(elem).hasClass(\"wui-select\")){\r\n\t    \t\t\t$(elem).addClass(\"wui-select\");\r\n\t    \t\t}\r\n\t    \t\tif(!$(elem).attr(\"data-init-wui\")){\r\n\t    \t\t\tif($(elem).attr(\"id\") && $(elem).attr(\"name\") == undefined){\r\n\t\t    \t\t\t$(elem).attr(\"name\", $(elem).attr(\"id\"));\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n\t    \t})\r\n\r\n\t    \t$(\"textarea\").each(function(i, elem){\r\n\t    \t\tif(!$(elem).hasClass(\"wui-textarea\")){\r\n\t    \t\t\t$(elem).addClass(\"wui-textarea\");\r\n\t    \t\t}\r\n\t    \t\tif(!$(elem).attr(\"data-init-wui\")){\r\n\t    \t\t\tif($(elem).attr(\"id\") && $(elem).attr(\"name\") == undefined){\r\n\t\t    \t\t\t$(elem).attr(\"name\", $(elem).attr(\"id\"));\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n\t    \t})\r\n\t    }\r\n\r\n\t    // 初始化表单无效控件\r\n\t    var _initInvalidControls = function(){\r\n\t    \t// console.info(\"_initInvalidControls\");\r\n\t    \t// 按钮\r\n\t    \t$initConSelector.find(invalidControls).each(function(i, elem){\r\n\t    \t\tif(!$(elem).hasClass(\"wui-btn\")){\r\n\t    \t\t\t$(elem).addClass(\"wui-btn\");\r\n\t    \t\t}\r\n\t    \t})\r\n\t    }\r\n\r\n\t    // 初始化UI组件\r\n\t    var _initUiWidget = function(initParams){\r\n\t    \tif($initConSelector.data(\"initComponents\") === false || $initConSelector.data(\"initComponents\") === \"false\"){\r\n\t    \t\treturn false;\r\n\t    \t}\r\n\t    \tif(!ui.isJson(initParams)){\r\n\t    \t\tinitParams = {};\r\n\t    \t}\r\n\t    \t// initParams = initParams || {};\r\n\t    \t// var widgets = {};\r\n\t        $initConSelector.find('[data-' + ui.CONSTANTS.DATAINITWIDGETFIELD + ']').each(function(i, elem){\r\n\t            var widgetName = $(elem).attr(\"data-\" + ui.CONSTANTS.DATAINITWIDGETFIELD);\r\n\t            var widgetId = $(elem).attr(\"id\");\r\n\t            if(widgetName && widgetId){\r\n\t                if(ui[widgetName]){\r\n\t                \tvar theInitParam = {};\r\n\t                \tif(initParams[widgetId] != undefined){\r\n\t                \t\ttheInitParam = initParams[widgetId];\r\n\t                \t}\r\n\t                    // widgetObject[widgetId] = ui[widgetName](widgetId, theInitParam);\r\n\t                    ui.extVariables.components[widgetId] = ui[widgetName](widgetId, theInitParam);\r\n\t                }else{\r\n\t                    ui.logWarn(widgetName + \" 组件初始化失败,错误信息:WUI查无此组件!\", FRAME_NAME+\".initPage\", true);\r\n\t                }\r\n\t            }\r\n\t        })\r\n\t    }\r\n\r\n\t    var _initElement = function(){\r\n\t    \tif($initConSelector.data(\"initElement\") === false || $initConSelector.data(\"initElement\") === \"false\"){\r\n\t    \t\treturn false;\r\n\t    \t}\r\n\t    \t// 初始化表单有效控件:input(文本框之外不算)/select/textarea\r\n\t    \t_initValidControls();\r\n\r\n\t    \t// 初始化表单无效控件\r\n\t    \t_initInvalidControls();\r\n\r\n\t    }\r\n\r\n\t    // 初始化校验\r\n\t    var _initValidate = function(){\r\n\t    \tif($initConSelector.data(\"initValidate\") === false || $initConSelector.data(\"initValidate\") === \"false\"){\r\n\t    \t\treturn false;\r\n\t    \t}\r\n\t    \t$initConSelector.find(\"form\").each(function(i, form){\r\n\t    \t\t// 判断当前表单下是否有校验元素\r\n    \t\t\tif($(form).find('[' + ui.validateAttributeField + ']').length > 0){\r\n\t\t    \t\t// ui.notice(\"validate\");\r\n\t\t    \t\tvar formId = $(form).attr(\"id\") || $(form).attr(\"name\");\r\n\t\t    \t\tif(formId){\r\n\t\t    \t\t\t// widgetObject[formId] = wui.validate(form);\r\n\t\t    \t\t\tui.extVariables.components[formId] = wui.validate(form);\r\n\t\t    \t\t}else{\r\n\t\t    \t\t\t// widgetObject[\"formValidate\"] = wui.validate(form);\r\n\t\t    \t\t\tui.extVariables.components[\"formValidate\" + i] = wui.validate(form);\r\n\t\t    \t\t}\r\n\t\t    \t}else{\r\n\t\t    \t\t// ui.notice(\"no\");\r\n\t\t    \t}\r\n    \t\t})\r\n\t    }\r\n\r\n\t    // 初始化框架皮肤\r\n\t    var _initSkins = function(){\r\n\t    \tif($initConSelector.data(\"initSkin\") === false || $initConSelector.data(\"initSkin\") === \"false\"){\r\n\t    \t\treturn false;\r\n\t    \t}\r\n\t    \tvar isAddSkin = $initConSelector.data(\"addSkin\");\r\n\t    \t// console.error($initConSelector.data(\"initSkin\"))\r\n\t    \tui.setSkins(null, isAddSkin);\r\n\t    }\r\n\r\n\t    // var _addRequiredStar = function(){\r\n\t    // \tif(ui.validateUtilConfig.isAddRequiredStar){\r\n\t    \t\t\r\n\t    // \t}\r\n\t    // }\r\n\r\n\t    var _init = function(initWidgetParams){\r\n\t    \t// 初始化页面主体设置\r\n\t    \t_initHandle();\r\n\r\n\t    \t// 初始化框架皮肤\r\n\t    \t_initSkins();\r\n\r\n\t    \t// 初始化页面元素\r\n\t    \t_initElement();\r\n\r\n\t    \t// 初始化UI组件\r\n\t    \t_initUiWidget(initWidgetParams);\r\n\r\n\t    \t// 初始化页面滚动条\r\n\t    \t_initScroll();\r\n\r\n\t    \t// 初始化校验\r\n\t    \t_initValidate();\r\n\r\n\t    }\r\n\t    _init(setting);\r\n\r\n\t    return ui.extVariables.components;\r\n\t};\r\n\r\n\tui.initDesign = function(setting){\r\n\r\n\t\tui.logParamValue({\r\n            paramName: \"setting\",\r\n            paramValue: setting, \r\n            methodName: \"initDesign\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        var _initButton = function(){\r\n\r\n        \tvar selector = \"[type='button'],[type='submit'],[type='reset'],button,a\";\r\n        \t$(selector).find(function(){\r\n        \t\tif($(this).attr(\"color\")){\r\n        \t\t\t$(this).addClass($(this).attr(\"color\"));\r\n        \t\t}\r\n        \t\tif($(this).attr(\"size\")){\r\n        \t\t\t$(this).addClass($(this).attr(\"size\"));\r\n        \t\t}\r\n        \t\tif($(this).attr(\"radius\")){\r\n        \t\t\t$(this).addClass($(this).attr(\"radius\"));\r\n        \t\t}\r\n        \t\tif($(this).attr(\"icon\")){\r\n        \t\t\t$(this).prepend('<i class=\"fa fa-' + $(this).attr(\"icon\") + '\"></i>');\r\n        \t\t}\r\n        \t\tif($(this).attr(\"text\")){\r\n        \t\t\t$(this).append($(this).attr(\"text\"));\r\n        \t\t}\r\n        \t})\r\n        }\r\n\r\n\t    var _init = function(initWidgetParams){\r\n\t    \t// 初始化页面按钮\r\n\t    \t_initButton();\r\n\r\n\t    }\r\n\t    _init(setting);\r\n\t}\r\n\treturn ui;\r\n})(wui || {}, libs);\r\n\r\n// window .onload =function (){\r\n// \tif(wui && wui.initPage && $('[data-init-page]').length > 0){\r\n// \t\t// 初始化入口\r\n// \t\twui.initPage();\r\n// \t}\r\n// }\r\njQuery(document).ready(function(){\r\n\tif(window.wui){\r\n\t\tvar browser = wui.getBrowserVersion();\r\n\t    wui.logMessage(\"当前浏览器版本：\" + browser.browser + \" \" + browser.version, \"wui.ready\", true);\r\n\t    \r\n\t    wui.logMessage(\"当前WUI框架版本: \" + wui.version + \", 发布日期为: \" + wui.versionDate, \"wui.ready\", true);\r\n\t    // wui.setSkins(null, true);\r\n\t    \r\n\t    $('textarea[data-auto-height]').each(function(){\r\n\t    \twui.textarea(this);\r\n\t    })\r\n\r\n\t    // 配合设计器做的初始化工作\r\n\t    if(wui.isInitDesign){\r\n\t    \twui.initDesign();\r\n\t    }\r\n\t    \r\n\t    if(wui.isInitPage){\r\n\t    \t// 初始化入口\r\n\t\t\twui.initPage();\r\n\t    }else if($('[data-init-page]').length > 0){\r\n\t\t\t// 初始化入口\r\n\t\t\twui.initPage();\r\n\t\t}else if(wui.skinConfig.isInitSkin){\r\n\t\t\twui.setSkins();\r\n\t\t}\r\n\t}\r\n})","/**\r\n * <h3>WUI 表单操作</h3>\r\n * <h5>表单数据操作</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.fillForm\"}}{{/crossLink}}: 填充表单值 </li>\r\n * <li>{{#crossLink \"wui.getForm\"}}{{/crossLink}}: 获取表单值 </li>\r\n * <li>{{#crossLink \"wui.emptyForm\"}}{{/crossLink}}: 清空表单值 </li>\r\n * </ol>\r\n * <h5>表单元素操作</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.readonly\"}}{{/crossLink}}: 设置表单元素为只读状态 </li>\r\n * <li>{{#crossLink \"wui.readwrite\"}}{{/crossLink}}: 设置表单元素为可读可写状态 </li>\r\n * <li>{{#crossLink \"wui.disabled\"}}{{/crossLink}}: 设置表单元素不可点击状态 </li>\r\n * <li>{{#crossLink \"wui.enabled\"}}{{/crossLink}}: 设置表单元素为可点击状态 </li>\r\n * </ol>\r\n * @module Form\r\n */\r\n\r\n;(function (ui,$, undefined) {\r\n    /**\r\n     * <p>获取表单值(支持组件取值),会获取name属性值作为key，若不关联name,则采用id属性值作为key(组件必须有id属性值)</p>\r\n     * @namespace wui\r\n     * @class getForm\r\n     * @constructor \r\n     * @param [form] {string} 要获取值区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @param [ignore] {string} 忽略的节点选择器,比如\"#id,.class\",默认是\"\"\r\n     * @param [dataType] {string} 组件获取的数据类型,可选值:\"value\"/\"text\"/\"json\",默认是\"value\"\r\n     * @param [ueditorDataType] {string} wui.ueditor组件获取的数据类型,可选值:\"html\"/\"text\"/\"plain\"/\"all\",默认是\"html\"\r\n     * @param [isString] {Boolean} 控件获取到的value值是否转化为\",\"分隔的字符串,比如[\"id1\",\"id2\"]转化为\"id1,id2\",默认是false\r\n     * @return {json} [表单值集合:{\"key\": \"value\",...}]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.getForm(\"[role='form']\");\r\n\r\n            // 忽略绑定data-ignore属性的标签值\r\n            wui.getForm(\"[role='form']\", '[data-ignore]');\r\n     *\r\n     */\r\n    ui.getForm = function(form, ignore, dataType, ueditorType, isString) {\r\n        ui.logUtilConfig.debugLog.methodName = \"getForm\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getForm\", FRAME_NAME);\r\n        // ui.logParamValue(\"form\",form);\r\n\r\n        var $select = $(\"body\");\r\n        if (form) {\r\n            \r\n            if(ui.isJQuery(form)){\r\n                $select = form;\r\n            }else{\r\n                $select = $(form);\r\n            }\r\n        }\r\n\r\n        if(ignore === true){\r\n            isString = true;\r\n\r\n            ignore = \"\";  // :hidden:\r\n            dataType = dataType || \"value\";\r\n            ueditorType = ueditorType || \"html\";\r\n        }else if(dataType === true){\r\n            isString = true;\r\n\r\n            ignore = ignore || \"\";  // :hidden:\r\n            dataType = \"value\";\r\n            ueditorType = ueditorType || \"html\";\r\n        }else if(ueditorType === true){\r\n            isString = true;\r\n            \r\n            ignore = ignore || \"\";  // :hidden:\r\n            dataType = dataType || \"value\";\r\n            ueditorType = \"html\";\r\n        }else{\r\n            ignore = ignore || \"\";  // :hidden:\r\n            dataType = dataType || \"value\";\r\n            ueditorType = ueditorType || \"html\";\r\n        }\r\n\r\n        // isString = isString || false;\r\n        var invalidControls = \"[type='button'],[type='submit'],[type='reset'],[wui-widget-hidden]\";   // 无效控件：按钮、组件内部隐藏域\r\n\r\n        var data = {};\r\n        $select.find(\"input:not(\" + invalidControls + \"),select,textarea,[ui-type]:not(\" + invalidControls + \")\").not(ignore).each(function(index, elem){\r\n            var key = $(elem).attr(\"name\") || $(elem).attr(\"id\");\r\n            if(!key){\r\n                return true;\r\n            }\r\n            if($(elem).attr(\"ui-type\")){\r\n                var id = $(elem).attr(\"id\");\r\n                var widgetName = $(elem).attr(\"ui-type\");\r\n                if(!id){\r\n                    ui.logWarn(widgetName + \"组件没有id属性值\", FRAME_NAME+\".getForm\", true);\r\n                    return true;\r\n                }\r\n\r\n                if(widgetName === \"file\" || widgetName === \"img\"){\r\n                    id = $(elem).parent().attr(\"_fileId\")\r\n                }\r\n                // console.info(widgetName);\r\n                switch(widgetName){\r\n                    case \"ueditor\":\r\n                        var oWidget = wui[widgetName](id);\r\n                        data[key] = oWidget.get(ueditorType);\r\n                        break;\r\n                    case \"\":\r\n                        ui.logWarn(widgetName + \"组件不支持通过表单取值\", FRAME_NAME+\".getForm\", true);\r\n                        break;\r\n                    // case \"date\":\r\n                    // case \"selectBox\":\r\n                    // case \"tagsinput\":\r\n                    // case \"chooseBox\":\r\n                    // case \"selectComboBox\":\r\n                    // case \"file\":\r\n                    // case \"img\":\r\n                    // case \"tagBox\":\r\n                    // case \"tagComboBox\":\r\n                    //     var oWidget = wui[widgetName](id);\r\n                    //     data[key] = oWidget.get(\"value\");\r\n                    //     break;\r\n                    default:\r\n                        var oWidget = wui[widgetName](id);\r\n                        var value = oWidget.get(dataType);\r\n                        // console.error(value)\r\n                        \r\n                        if(value !== null){\r\n                            if(isString && (dataType == \"value\" || dataType == \"text\")){\r\n                                data[key] = ui.isArray(value) ? value.join(\",\") : value;\r\n                            }else{\r\n                                data[key] = value;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }else{\r\n                var tagName = $(elem)[0].tagName;\r\n                var type = $(elem).attr('type');\r\n                // var theVal = (data[key] === undefined || data[key] == \"\") ? [] : data[key].split(\",\");\r\n                var theVal = [];\r\n                if(!ui.isEmptyType(data[key])){\r\n                    theVal = data[key].split(\",\");\r\n                }\r\n                \r\n                // console.info(theVal);\r\n                if (tagName == 'INPUT') {\r\n                    if (type == 'radio') {\r\n                        // theVal.push($('[name=\"' + key + '\"]:checked').val());\r\n                        if($(elem).prop(\"checked\") && $(elem).val() != \"\"){\r\n                            theVal.push($(elem).val());\r\n                        }\r\n                    } else if (type == 'checkbox') {\r\n                        // alert($(elem).val() + \" : \" + $(elem).prop(\"checked\"));\r\n                        if($(elem).prop(\"checked\") && $(elem).val() != \"\"){\r\n                            theVal.push($(elem).val());\r\n                        }\r\n                    } else {\r\n                        if($(elem).val() != \"\"){\r\n                            theVal.push($(elem).val());\r\n                        }\r\n                    }\r\n                }else if (tagName == 'SELECT' || tagName == 'TEXTAREA') {\r\n                    if($(elem).val() != \"\"){\r\n                        theVal.push($(elem).val());\r\n                    }\r\n                }\r\n                data[key] = theVal.join(\",\");\r\n            }\r\n        })\r\n        // console.info(data);\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * <p>填充表单值(当节点启用校验时，会触发校验功能)</p>\r\n     * @namespace wui\r\n     * @class fillForm\r\n     * @constructor \r\n     * @param data {json} 填充的表单数据,形如：{元素1 Name属性值:元素1 Value属性值, 元素2 Name属性值:元素2 Value属性值, ...}\r\n     * @param onBeforeFill {Function} 遍历数据的每一个节点赋值之前触发方法,传递参数element:当前节点,data:传递的节点数据,若不想赋值当前节点，则返回false即可\r\n     * @param onFilled {Function} 遍历数据的每一个节点赋值之后触发方法,传递参数element:当前节点,isFillSuccess: 是否赋值成功(当不是有效标签时就是false,其余都是true),data:传递的节点数据\r\n     * @param [form] {string} 要赋值区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @example\r\n     *\r\n     *   html:\r\n     *\r\n        <input type=\"text\" id=\"name\" />\r\n        <input type=\"text\" id=\"email\" />\r\n        <p id=\"remark\"></p>\r\n     *  \r\n     *   js: \r\n     *\r\n            var data = {\r\n                name: \"测试用户\",\r\n                email: \"123456789@qq.com\",\r\n                remark: \"这是一条测试数据\"\r\n            }\r\n            // 场景1:填充数据\r\n            wui.fillForm( data );   // 会填充input\r\n\r\n            // 场景2:扩大填充范围,填充全部标签\r\n            wui.fillForm(data, null, function(element, isFillSuccess, value){\r\n                if(!isFillSuccess){\r\n                    $(element).text(value);\r\n                }\r\n            });\r\n\r\n            // 场景3:过滤填充(只赋值email)\r\n            wui.fillForm(data, function(element, value){\r\n                if(element.id === \"name\"){\r\n                    return false;\r\n                }\r\n            });\r\n     *\r\n     */\r\n    ui.fillForm = function(data, onBeforeFill, onFilled, form) {\r\n        ui.logUtilConfig.debugLog.methodName = \"fillForm\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"fillForm\", FRAME_NAME);\r\n\r\n        var $select = $(\"body\");\r\n        if (form) {\r\n            \r\n            if(ui.isJQuery(form)){\r\n                $select = form;\r\n            }else{\r\n                $select = $(form);\r\n            }\r\n        }\r\n\r\n        var obj = data || {};\r\n        var key, value, tagName, type, arr;\r\n        for (x in obj) {\r\n            key = x;\r\n            value = obj[x];\r\n            arr = [];\r\n            // if(!value && value!= 0){\r\n            //     continue;\r\n            // }\r\n            $select.find(\"[name='\" + key + \"'],[name='\" + key + \"[]'], [id='\" + key + \"'],[id='\" + key + \"[]']\").each(function(index, elem) {\r\n                var isFillSuccess = false, ret = true;\r\n                if(onBeforeFill && typeof(onBeforeFill) === \"function\"){\r\n                    ret = onBeforeFill.call(this, this, value);\r\n                }\r\n                if(ret === false){\r\n                    return true;\r\n                }\r\n\r\n                if($(this).attr(\"ui-type\")){\r\n                    \r\n                    var widgetName = $(elem).attr(\"ui-type\");\r\n                    var widgetId = $(elem).attr(\"id\") ? $(elem).attr(\"id\") : $(elem).attr(\"name\");\r\n                    if(!(ui[widgetName])){\r\n                        ui.logWarn(widgetName + \"组件不存在\", \"wui.fillForm\", true);\r\n                        return true;\r\n                    }\r\n                    var theWidget = ui[widgetName](widgetId);\r\n                    if (!theWidget) {\r\n                        ui.logWarn(widgetName + \"组件未初始化\", \"wui.fillForm\", true);\r\n                        return true;\r\n                    }\r\n                    if(!ui.isUndefined(value)){\r\n                        if (theWidget.set) {\r\n                            theWidget.set(value);\r\n                            isFillSuccess = true;\r\n                        }else if(theWidget.select){\r\n                            theWidget.select(value);\r\n                            isFillSuccess = true;\r\n                        }else{\r\n                            ui.logWarn(widgetName + \"组件无 set()/select() 方法\", \"wui.fillForm\", true);\r\n                            return true;\r\n                        }\r\n                    }else{\r\n                        if (theWidget.empty) {\r\n                            theWidget.empty();\r\n                            isFillSuccess = true;\r\n                        }\r\n                    }\r\n                        \r\n                }else{\r\n                    tagName = $(this)[0].tagName;\r\n                    type = $(this).attr('type');\r\n                    if(typeof(value) === \"boolean\"){\r\n                        value = value.toString();\r\n                    }\r\n                    if (tagName == 'INPUT') {\r\n                        if (type == 'radio') {\r\n                            $(this).prop('checked', $(this).val() == value);\r\n                            isFillSuccess = true;\r\n                        } else if (type == 'checkbox') {\r\n                            if(typeof(value) === \"string\"){\r\n                                arr = value.split(',');\r\n                            }else if(typeof(value) === \"number\"){\r\n                                // arr.push(value.toString());\r\n                                arr.push(value);\r\n                            }else if(ui.isJson(value)){\r\n                                arr.push(value);\r\n                            }\r\n                            \r\n                            for (var i = 0; i < arr.length; i++) {\r\n                                if ($(this).val() == arr[i]) {\r\n                                    $(this).prop('checked', true);\r\n                                    // break;\r\n                                }else{\r\n                                    $(this).prop('checked', false);\r\n                                }\r\n                            }\r\n                            isFillSuccess = true;\r\n                        } else {\r\n                            $(this).val(value);\r\n                            isFillSuccess = true;\r\n                        }\r\n                    } else if (tagName == 'SELECT') {\r\n                        // value = value.toString();\r\n                        $(this).val(value);\r\n                        isFillSuccess = true;\r\n                    } else if (tagName == 'TEXTAREA') {\r\n                        // value = value.toString();\r\n                        $(this).val(value);\r\n                        if(!ui.isUndefined($(this).attr(\"data-auto-height\"))){\r\n                            $(this).change();\r\n                        }\r\n                        isFillSuccess = true;\r\n                    }\r\n                }\r\n                    \r\n                if(onFilled && typeof(onFilled) === \"function\"){\r\n                    onFilled.call(this, this, isFillSuccess, value);\r\n                }\r\n                // ui.logMessage(key + ' = ' + $(this).val());\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>清空表单值</p>\r\n     * @namespace wui\r\n     * @class emptyForm\r\n     * @constructor  \r\n     * @param [form] {string} 要清空值区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @param [ignore] {string} 忽略的节点选择器,比如\"#id,.class\",默认是\"\"\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.emptyForm();\r\n     *\r\n     */\r\n    ui.emptyForm = function(form, ignore, isValidate) {\r\n        ui.logUtilConfig.debugLog.methodName = \"emptyForm\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"emptyForm\", FRAME_NAME);\r\n\r\n        var $select = $(\"body\");\r\n        if (form) {\r\n            if(ui.isJQuery(form)){\r\n                $select = form;\r\n            }else{\r\n                $select = $(form);\r\n            }\r\n        }\r\n\r\n\r\n        ignore = ignore || \"\";\r\n        if(ui.isUndefined(isValidate)){\r\n            isValidate = true;\r\n        }\r\n        var invalidControls = \"[type='button'],[type='submit'],[type='reset'],[wui-widget-hidden]\";   // 无效控件：按钮、组件内部隐藏域\r\n\r\n        var data = {}, tagName, type;\r\n        $select.find(\"input:not(\" + invalidControls + \"),select,textarea,[ui-type]\").not(ignore).each(function(index, elem){\r\n            var key = $(elem).attr(\"name\") || $(elem).attr(\"id\");\r\n            if($(elem).attr(\"ui-type\")){\r\n                var id = $(elem).attr(\"id\");\r\n                var widgetName = $(elem).attr(\"ui-type\");\r\n                if(!id){\r\n                    ui.logWarn(widgetName + \"组件没有id属性值\", FRAME_NAME+\".getForm\", true);\r\n                    return true;\r\n                }\r\n\r\n                if(widgetName === \"file\" || widgetName === \"img\"){\r\n                    id = $(elem).parent().attr(\"_fileId\")\r\n                }\r\n                // console.info(widgetName);\r\n                var oWidget = wui[widgetName](id);\r\n                switch(widgetName){\r\n                    case \"\":\r\n                        ui.logWarn(widgetName + \"组件不支持通过表单清空\", FRAME_NAME+\".emptyForm\", true);\r\n                        break;\r\n                    default:\r\n                        data[key] = oWidget.empty(isValidate);\r\n                        break;\r\n                    // case \"date\":\r\n                    // case \"selectBox\":\r\n                    // case \"tagsinput\":\r\n                    // case \"chooseBox\":\r\n                    // case \"selectComboBox\":\r\n                    // case \"file\":\r\n                    // case \"img\":\r\n                    // case \"tagBox\":\r\n                    // case \"tagComboBox\":\r\n                    // case \"ueditor\":\r\n                    //     data[key] = oWidget.empty(isValidate);\r\n                    //     break;\r\n                    // default:\r\n                    //     ui.logWarn(widgetName + \" 组件不支持通过表单清空\", FRAME_NAME+\".emptyForm\", true);\r\n                    //     break;\r\n                }\r\n            }else{\r\n                tagName = $(elem)[0].tagName;\r\n                type = $(elem).attr('type');\r\n                if (tagName == 'INPUT') {\r\n                    if (type == 'radio') {\r\n                        $(elem).prop('checked', false);\r\n                    } else if (type == 'checkbox') {\r\n                        $(elem).prop('checked', false);\r\n                    } else {\r\n                        $(elem).val(\"\");\r\n                    }\r\n                } else if (tagName == 'SELECT') {\r\n                    $(elem).val(\"\");\r\n                } else if(tagName == 'TEXTAREA'){\r\n                    $(elem).val(\"\");\r\n                }\r\n            }  \r\n        })\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>设置表单元素为只读状态</p>\r\n     * @namespace wui\r\n     * @class readonly\r\n     * @constructor \r\n     * @param [form] {string} 要设置只读区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @param [ignore] {string} 忽略的节点选择器,比如\"#id,.class\",默认是\"\"\r\n     * @param [callback] {function} 设置之后的回调方法，假如有自定义元素需要设置，可作为设置的补充\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.readonly();\r\n     *\r\n     */\r\n    ui.readonly = function (form, ignore, callback){\r\n        ui.logUtilConfig.debugLog.methodName = \"readonly\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"readonly\", FRAME_NAME);\r\n        \r\n        var select = $(\"body\");\r\n        if (!!form) {\r\n            select = $(form);\r\n        }\r\n        ignore = ignore || \"\";\r\n        var commonLabel = [\"input\", \"select\", \"textarea\"];\r\n        // 设置表单元素不可点击状态\r\n        select.find(\"*\").not(ignore).each(function(index, elem){\r\n            var tagName = $(elem)[0].tagName.toLowerCase();\r\n            // 组件\r\n            if($(elem).attr(\"ui-type\")){\r\n                var widgetName = $(elem).attr(\"ui-type\");\r\n                var widgetId = $(elem).attr(\"id\");\r\n\r\n                if(widgetName === \"file\" || widgetName === \"img\"){\r\n                    widgetId = $(elem).parent().attr(\"_fileId\")\r\n                }\r\n\r\n                var theWidget = ui[widgetName](widgetId);\r\n                if (!theWidget) {\r\n                    ui.logWarn(widgetName + \"组件未初始化\", \"wui.readonly\", true);\r\n                    return true;\r\n                }\r\n                if (!theWidget.readonly) {\r\n                    ui.logWarn(widgetName + \"组件无此方法\", \"wui.readonly\", true);\r\n                    return true;\r\n                }\r\n                theWidget.readonly();\r\n            }else if(commonLabel.indexOf(tagName) > -1){\r\n                if(tagName === \"select\"){\r\n                    $(elem).attr('disabled', true).addClass(\"wui-readonly\");\r\n                }else{\r\n                    var type = $(this).attr('type');\r\n                    if (type == 'radio') {\r\n                        $(elem).attr('disabled', true).addClass(\"wui-readonly\");\r\n                    } else if(type == 'checkbox'){\r\n                        $(elem).attr('disabled', true).addClass(\"wui-readonly\");\r\n                    }else{\r\n                        $(elem).attr('readonly', true);\r\n                    }\r\n                    \r\n                }\r\n                \r\n                // $(elem).addClass(\"cursor-default\");\r\n            }\r\n        })\r\n        // $(select).find(\"*\").attr('disabled', true);\r\n\r\n        callback && typeof(callback)===\"function\" && callback(form);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>设置表单元素为可读可写状态</p>\r\n     * @namespace wui\r\n     * @class readwrite\r\n     * @constructor \r\n     * @param [form] {string} 要设置可读可写状态区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @param [ignore] {string} 忽略的节点选择器,比如\"#id,.class\",默认是\"\"\r\n     * @param [callback] {function} 设置之后的回调方法，假如有自定义元素需要设置，可作为设置的补充\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.readwrite();\r\n     *\r\n     */\r\n    ui.readwrite = function (form, ignore, callback){\r\n        ui.logUtilConfig.debugLog.methodName = \"readwrite\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"readwrite\", FRAME_NAME);\r\n\r\n        var select = $(\"body\");\r\n        if (!!form) {\r\n            select = $(form);\r\n        }\r\n\r\n        ignore = ignore || \"\";\r\n        // 设置表单元素为可点击状态\r\n        var commonLabel = [\"input\", \"select\", \"textarea\"];\r\n        select.find(\"*\").not(ignore).each(function(index, elem){\r\n            var tagName = $(elem)[0].tagName.toLowerCase();\r\n            // 组件\r\n            if($(elem).attr(\"ui-type\")){\r\n                var widgetName = $(elem).attr(\"ui-type\");\r\n                var widgetId = $(elem).attr(\"id\");\r\n                \r\n                if(widgetName === \"file\" || widgetName === \"img\"){\r\n                    widgetId = $(elem).parent().attr(\"_fileId\")\r\n                }\r\n                \r\n                var theWidget = ui[widgetName](widgetId);\r\n                if (!theWidget) {\r\n                    ui.logWarn(widgetName + \"组件未初始化\", \"wui.readwrite\", true);\r\n                    return true;\r\n                }\r\n                if (!theWidget.readwrite) {\r\n                    ui.logWarn(widgetName + \"组件无此方法\", \"wui.readwrite\", true);\r\n                    return true;\r\n                }\r\n                theWidget.readwrite();\r\n            }else if(commonLabel.indexOf(tagName) > -1){\r\n                if(tagName === \"select\"){\r\n                    $(elem).removeAttr('disabled').removeClass(\"wui-readonly\");\r\n                }else{\r\n                    var type = $(this).attr('type');\r\n                    if (type == 'radio') {\r\n                        $(elem).removeAttr('disabled').removeClass(\"wui-readonly\");\r\n                    } else if(type == 'checkbox'){\r\n                        $(elem).removeAttr('disabled').removeClass(\"wui-readonly\");\r\n                    }else{\r\n                        $(elem).removeAttr('readonly');\r\n                    }\r\n                }\r\n                \r\n                // $(elem).removeClass(\"cursor-default\");\r\n            }\r\n        })\r\n\r\n        callback && typeof(callback)===\"function\" && callback(form);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>设置表单元素不可点击状态</p>\r\n     * @namespace wui\r\n     * @class disabled\r\n     * @constructor \r\n     * @param [form] {string} 要设置不可点击状态区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @param [ignore] {string} 忽略的节点选择器,比如\"#id,.class\",默认是\"\"\r\n     * @param [callback] {function} 设置之后的回调方法，假如有自定义元素需要设置，可作为设置的补充\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.disabled();\r\n     *\r\n     */\r\n    ui.disabled = function (form, ignore, callback){\r\n        ui.logUtilConfig.debugLog.methodName = \"disabled\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"disabled\", FRAME_NAME);\r\n\r\n        var select = $(\"body\");\r\n        if (!!form) {\r\n            select = $(form);\r\n        }\r\n        ignore = ignore || \"\";\r\n        var commonLabel = [\"input\", \"select\", \"button\", \"a\", \"textarea\"];\r\n        // 设置表单元素不可点击状态\r\n        select.find(\"*\").not(ignore).each(function(index, elem){\r\n            var tagName = $(elem)[0].tagName.toLowerCase();\r\n            // 组件\r\n            if($(elem).attr(\"ui-type\")){\r\n                var widgetName = $(elem).attr(\"ui-type\");\r\n                var widgetId = $(elem).attr(\"id\");\r\n\r\n                if(widgetName === \"file\" || widgetName === \"img\"){\r\n                    widgetId = $(elem).parent().attr(\"_fileId\")\r\n                }\r\n\r\n                var theWidget = ui[widgetName](widgetId);\r\n                if (!theWidget) {\r\n                    ui.logWarn(widgetName + \"组件未初始化\", \"wui.disabled\", true);\r\n                    return true;\r\n                }\r\n                if (!theWidget.disabled) {\r\n                    ui.logWarn(widgetName + \"组件无此方法\", \"wui.disabled\", true);\r\n                    return true;\r\n                }\r\n                theWidget.disabled();\r\n            }else if(commonLabel.indexOf(tagName) > -1){\r\n                $(elem).attr('disabled', true);\r\n                $(elem).addClass(\"cursor-default\");\r\n            }\r\n        })\r\n        // $(select).find(\"*\").attr('disabled', true);\r\n\r\n        callback && typeof(callback)===\"function\" && callback(form);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>设置表单元素为可点击状态</p>\r\n     * @namespace wui\r\n     * @class enabled\r\n     * @constructor \r\n     * @param [form] {string} 要设置可点击状态区域的DOM节点,比如\"[role='form']\"，如果不存在，则默认选取\"body\"\r\n     * @param [ignore] {string} 忽略的节点选择器,比如\"#id,.class\",默认是\"\"\r\n     * @param [callback] {function} 设置之后的回调方法，假如有自定义元素需要设置，可作为设置的补充\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.enabled();\r\n     *\r\n     */\r\n    ui.enabled = function (form, ignore, callback){\r\n        ui.logUtilConfig.debugLog.methodName = \"enabled\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"enabled\", FRAME_NAME);\r\n\r\n        var select = $(\"body\");\r\n        if (!!form) {\r\n            select = $(form);\r\n        }\r\n\r\n        ignore = ignore || \"\";\r\n        // 设置表单元素为可点击状态\r\n        var commonLabel = [\"input\", \"select\", \"button\", \"a\", \"textarea\"];\r\n        select.find(\"*\").not(ignore).each(function(index, elem){\r\n            var tagName = $(elem)[0].tagName.toLowerCase();\r\n            // 组件\r\n            if($(elem).attr(\"ui-type\")){\r\n                var widgetName = $(elem).attr(\"ui-type\");\r\n                var widgetId = $(elem).attr(\"id\");\r\n                \r\n                if(widgetName === \"file\" || widgetName === \"img\"){\r\n                    widgetId = $(elem).parent().attr(\"_fileId\")\r\n                }\r\n                \r\n                var theWidget = ui[widgetName](widgetId);\r\n                if (!theWidget) {\r\n                    ui.logWarn(widgetName + \"组件未初始化\", \"wui.enabled\", true);\r\n                    return true;\r\n                }\r\n                if (!theWidget.enabled) {\r\n                    ui.logWarn(widgetName + \"组件无此方法\", \"wui.enabled\", true);\r\n                    return true;\r\n                }\r\n                theWidget.enabled();\r\n            }else if(commonLabel.indexOf(tagName) > -1){\r\n                $(elem).removeAttr('disabled');\r\n                $(elem).removeClass(\"cursor-default\");\r\n            }\r\n        })\r\n        // $(select).find(\"*\").removeAttr('disabled');\r\n\r\n        callback && typeof(callback)===\"function\" && callback(form);\r\n\r\n        return true;\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * <h3>WUI 工具类库</h3>\r\n * <h5>控制台打印日志</h5>\r\n * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=log\" target=\"_blank\">demo</a></h3>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.logMethodCalled\"}}{{/crossLink}}: 记录方法调用日志 </li>\r\n * <li>{{#crossLink \"wui.logParamValue\"}}{{/crossLink}}: 记录参数值日志 </li>\r\n * <li>{{#crossLink \"wui.logMessage\"}}{{/crossLink}}: 记录消息日志 </li>\r\n * <li>{{#crossLink \"wui.logWarn\"}}{{/crossLink}}: 记录警告日志 </li>\r\n * <li>{{#crossLink \"wui.logError\"}}{{/crossLink}}: 记录异常日志 </li>\r\n * </ol>\r\n * <h5>弹出层工具</h5>\r\n * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=layer\" target=\"_blank\">demo</a></h3>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.openHtml\"}}{{/crossLink}}: 弹出HTML页面层 </li>\r\n * <li>{{#crossLink \"wui.openIframe\"}}{{/crossLink}}: 弹出Iframe层 </li>\r\n * <li>{{#crossLink \"wui.load\"}}{{/crossLink}}: 弹出加载层 </li>\r\n * <li>{{#crossLink \"wui.tips\"}}{{/crossLink}}: 弹出吸附层 </li>\r\n * <li>{{#crossLink \"wui.message\"}}{{/crossLink}}: 弹出提示层,默认3秒关闭 </li>\r\n * <li>{{#crossLink \"wui.alert\"}}{{/crossLink}}: 弹出警告层 </li>\r\n * <li>{{#crossLink \"wui.confirm\"}}{{/crossLink}}: 弹出询问层 </li>\r\n * <li>{{#crossLink \"wui.prompt\"}}{{/crossLink}}: 弹出输入层 </li>\r\n * <li>{{#crossLink \"wui.closeIndex\"}}{{/crossLink}}: 关闭特定层 </li>\r\n * <li>{{#crossLink \"wui.closeAll\"}}{{/crossLink}}: 关闭特定类型层 </li>\r\n * </ol>\r\n * <h5>模态框工具</h5>\r\n * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=modalDialog\" target=\"_blank\">demo</a></h3>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.openModalDialog\"}}{{/crossLink}}: 弹出模态窗口 </li>\r\n * <li>{{#crossLink \"wui.closeModalDialog\"}}{{/crossLink}}: 关闭模态窗口 </li>\r\n * <li>{{#crossLink \"wui.cancelModalDialog\"}}{{/crossLink}}: 取消最后一个模态窗口 </li>\r\n * </ol>\r\n * <h5>通知工具</h5>\r\n * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=notice\" target=\"_blank\">demo</a></h3>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.notice\"}}{{/crossLink}}: 显示信息通知 </li>\r\n * <li>{{#crossLink \"wui.successNotice\"}}{{/crossLink}}: 显示成功通知 </li>\r\n * <li>{{#crossLink \"wui.errorNotice\"}}{{/crossLink}}: 显示错误通知 </li>\r\n * <li>{{#crossLink \"wui.warnNotice\"}}{{/crossLink}}: 显示警告通知 </li>\r\n * </ol>\r\n * <h5>选项卡工具</h5>\r\n * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=demoTabs\" target=\"_blank\">demo</a></h3>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.tabs\"}}{{/crossLink}}: 选项卡工具 </li>\r\n * </ol>\r\n * <h5>表单校验</h5>\r\n * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=validate\" target=\"_blank\">demo</a></h3>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.validate\"}}{{/crossLink}}: 表单自定义校验 </li>\r\n * <li>{{#crossLink \"wui.addValidateMethod\"}}{{/crossLink}}: 添加自定义校验方法 </li>\r\n * <li>{{#crossLink \"wui.setValidateDefault\"}}{{/crossLink}}: 设置校验的默认参数配置 </li>\r\n * </ol>\r\n * @module Util\r\n */\r\n\r\n ;(function (ui,$, undefined) {\r\n\t\r\n    // Step:\r\n    // 1.是否组件传递进来的,true进入2,false进入3\r\n    // 2.组件调试是否开启,true进入4,false进入5\r\n    // 3.打印日志是否开启,true进入4,false进入5\r\n    // 4.打印日志\r\n    // 5.return false\r\n    \r\n    /**\r\n     * <p>记录方法调用日志</p>\r\n     * @namespace wui\r\n     * @class logMethodCalled\r\n     * @constructor \r\n     * @param methodName {string} 方法名称\r\n     * @param [className] {string} 类名称，默认为空\r\n     * @param [id] {string} 调用此方法的对象id，默认为空\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.logMethodCalled( \"init\", \"wui.date\", \"date\");   // 控制台输出：【函数】init 被调用; 【触发对象】date\r\n     *\r\n     */\r\n    // ui.logMethodCalled = function(methodName, className, id){\r\n    ui.logMethodCalled = function(params){\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        var setting = {\r\n            methodName: \"\", \r\n            className: \"\", \r\n            id: \"\", \r\n            isDebug: false  // {Boolean} 是否组件调试传入的,默认是false\r\n        }\r\n\r\n        if(typeof(params) === \"string\"){\r\n            setting.methodName = params;\r\n            setting.className = args[0];\r\n            setting.id = args[1];\r\n            setting.isDebug = args[2];\r\n        }else if(typeof(params) === \"object\"){\r\n            setting = $.extend(true, {}, setting, params);\r\n        }\r\n        // console.info(setting);\r\n\r\n        if(!ui.logUtilConfig.isLogMethodCalled){\r\n            return false;\r\n        }\r\n\r\n        if (setting.className) {\r\n            setting.methodName = \"【函数】\" + setting.className + \".\" + setting.methodName + \" 被调用; \";\r\n        }else{\r\n            setting.methodName = \"【函数】\" + setting.methodName + \" 被调用; \";\r\n        }\r\n\r\n        if(setting.id){\r\n            setting.id = \"【触发对象】\" + setting.id;\r\n        }else{\r\n            setting.id = \"\";\r\n        }\r\n        var message = setting.methodName + setting.id;\r\n\r\n        if(setting.isDebug){\r\n            if(ui.isDebug && ui.logUtilConfig.debugConfig.isLogMethodCalled){\r\n                if( navigator.appName === \"Netscape\"){\r\n                    console.log(\"%c\" + message, \"color: #52C079\");\r\n                }else{\r\n                    console.log(message);           \r\n                }\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            if(ui.logUtilConfig.isLog){\r\n                if( navigator.appName === \"Netscape\"){\r\n                    console.log(\"%c\" + message, \"color: #52C079\");\r\n                }else{\r\n                    console.log(message);           \r\n                }\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>记录参数值日志</p>\r\n     * @namespace wui\r\n     * @class logParamValue\r\n     * @constructor \r\n     * @param paramName {string} 参数名称\r\n     * @param paramValue {string} 参数值\r\n     * @param [methodName] {string} 方法名称，默认为空\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.logParamValue(\"option\", {\"value\": \"2018-01-01\"}, \"wui.date\");   // 控制台输出：【函数】wui.date中【参数】option值为:{\"value\":\"2018-01-01\"}\r\n\r\n     *\r\n     */\r\n    // ui.logParamValue = function(paramName, paramValue, methodName) {\r\n    ui.logParamValue = function(params) {\r\n\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        var setting = {\r\n            paramName: null, \r\n            paramValue: \"\", \r\n            methodName: null, \r\n            className: \"\", \r\n            isDebug: false  // {Boolean} 是否组件调试传入的,默认是false\r\n        }\r\n\r\n        if(typeof(params) === \"string\"){\r\n            setting.paramName = params;\r\n            setting.paramValue = args[0];\r\n            setting.methodName = args[1];\r\n            setting.className = args[2];\r\n            setting.isDebug = args[3];\r\n        }else if(typeof(params) === \"object\"){\r\n            setting = $.extend(true, {}, setting, params);\r\n        }\r\n        // console.info(setting);\r\n\r\n        if(!ui.logUtilConfig.isLogParamValue){\r\n            return false;\r\n        }\r\n\r\n        if (setting.className) {\r\n            setting.methodName = setting.className + \".\" + setting.methodName;\r\n        }\r\n\r\n        if(setting.methodName){\r\n            setting.methodName = \"【函数】\" + setting.methodName + \"中\";\r\n        }else{\r\n            setting.methodName = \"\";\r\n        }\r\n\r\n        if(setting.paramName){\r\n            setting.paramName = \"【参数】\" + setting.paramName + \"值为:\\n\";\r\n        }else{\r\n            setting.paramName = \"\";\r\n        }\r\n\r\n        setting.isDebug = setting.isDebug || false;\r\n        // console.info(setting);\r\n\r\n        var message = setting.paramValue;\r\n\r\n        if(setting.isDebug){\r\n            if(ui.isDebug && ui.logUtilConfig.debugConfig.isLogParamValue){\r\n                if( navigator.appName === \"Netscape\" ){\r\n                    console.info(\"%c\" + setting.methodName + setting.paramName, \"color:#4B83FA\", message );\r\n                }else{\r\n                    console.info(setting.methodName + setting.paramName, message); \r\n                }\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            if(ui.logUtilConfig.isLog){\r\n                if( navigator.appName === \"Netscape\" ){\r\n                    console.info(\"%c\" + setting.methodName + setting.paramName, \"color:#4B83FA\", message );\r\n                }else{\r\n                    console.info(setting.methodName + setting.paramName, message); \r\n                }\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>记录消息日志</p>\r\n     * @namespace wui\r\n     * @class logMessage\r\n     * @constructor \r\n     * @param message {string} 打印的消息\r\n     * @param [methodName] {string} 函数方法名称，默认为空\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.logMessage( \"控制台会打印出这条消息\"); // 控制台输出：【消息】控制台会打印出这条消息\r\n     *\r\n     */\r\n    ui.logMessage = function(message, methodName, isDebug) {\r\n    // ui.logMessage = function(params) {\r\n\r\n        // var args = Array.prototype.slice.call(arguments,0);\r\n        var setting = {\r\n            message: \"\",\r\n            methodName: \"\",\r\n            isDebug: false  // {Boolean} 是否组件调试传入的,默认是false\r\n        }\r\n\r\n        if(message){\r\n            setting.message = message;\r\n        }\r\n\r\n        if(methodName){\r\n            // setting.methodName = methodName;\r\n            setting.methodName = \"【函数】\" + methodName + \" 输出\";\r\n        }\r\n\r\n        setting.isDebug = isDebug || false;\r\n        // console.info(setting);\r\n\r\n        if(!ui.logUtilConfig.isLogMessage){\r\n            return false;\r\n        }\r\n\r\n        // var message = setting.message;\r\n\r\n        if(setting.isDebug){\r\n            if(ui.isDebug && ui.logUtilConfig.debugConfig.isLogMessage){\r\n                console.info(\"【消息】:\" + setting.methodName + \"\\n\", setting.message);\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            if(ui.logUtilConfig.isLog){\r\n                console.info(\"【消息】:\" + setting.methodName + \"\\n\", setting.message);\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>记录警告日志</p>\r\n     * @namespace wui\r\n     * @class logWarn\r\n     * @constructor \r\n     * @param message {string} 错误信息\r\n     * @param [methodName] {string} 方法名称，默认为空\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.logWarn( \"输出警告信息\", \"wui.date\");    // 控制台输出：【警告】wui.date:输出警告信息\r\n     *\r\n     */\r\n    ui.logWarn = function(message, methodName, isDebug) {\r\n\r\n        // var args = Array.prototype.slice.call(arguments, 0);\r\n        var setting = {\r\n            message: message,\r\n            methodName: \"\",\r\n            isDebug: false  // {Boolean} 是否组件调试传入的,默认是false\r\n        }\r\n\r\n        if(methodName){\r\n            setting.methodName = methodName;\r\n        }\r\n        setting.isDebug = isDebug || false;\r\n        // console.info(setting);\r\n\r\n        if(!ui.logUtilConfig.isLogWarn){\r\n            return false;\r\n        }\r\n\r\n        // if(setting.methodName !== \"\"){\r\n        //     setting.methodName += \":\"\r\n        // }\r\n\r\n        if(setting.isDebug){\r\n            if(ui.isDebug && ui.logUtilConfig.debugConfig.isLogWarn){\r\n                console.warn(\"【警告】\" + setting.methodName + \":\" + setting.message);\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            if(ui.logUtilConfig.isLog){\r\n                console.warn(\"【警告】\" + setting.methodName + \":\" + setting.message);\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>记录异常日志</p>\r\n     * @namespace wui\r\n     * @class logError\r\n     * @constructor \r\n     * @param error {string} 错误信息\r\n     * @param [methodName] {string} 方法名称，默认为空\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.logError( \"输出错误信息\", \"wui.date\");    // 控制台输出：【异常】wui.date:输出错误信息\r\n     *\r\n     */\r\n    // ui.logError = function(error, methodName) {\r\n    ui.logError = function(error, methodName, isDebug) {\r\n\r\n        // var args = Array.prototype.slice.call(arguments, 0);\r\n        var setting = {\r\n            error: error,\r\n            methodName: \"\",\r\n            isDebug: false  // {Boolean} 是否组件调试传入的,默认是false\r\n        }\r\n\r\n        if(methodName){\r\n            setting.methodName = methodName;\r\n        }\r\n        setting.isDebug = isDebug || false;\r\n        // console.info(setting);\r\n\r\n        if(!ui.logUtilConfig.isLogError){\r\n            return false;\r\n        }\r\n\r\n        // if(setting.methodName !== \"\"){\r\n        //     setting.methodName += \":\"\r\n        // }\r\n\r\n        if(setting.isDebug){\r\n            if(ui.isDebug && ui.logUtilConfig.debugConfig.isLogError){\r\n                console.error(\"【异常】\" + setting.methodName + \":\" + setting.error);\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            if(ui.logUtilConfig.isLog){\r\n                console.error(\"【异常】\" + setting.methodName + \":\" + setting.error);\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * WUI 模态框操作\r\n * @module Util\r\n */\r\n\r\n ;(function (ui,$, undefined) {\r\n    /*\r\n        思路：\r\n        1、弹出一层,是否为弹出页面,若是,则全屏,否则不作处理；\r\n        2、判断父页面是否有modalDialog对象,若是有,则入栈,若无,则创建modalDialog对象,并入栈\r\n        3、弹出层页面\r\n        4、关闭弹出层,是否父页面为弹出页面,若是,还原屏幕,否则不作处理\r\n        5、父页面是否有modalDialog对象,若是有,则执行里面的成功回调方法,并出栈否则,不作处理\r\n        6、取消弹出层,父页面modalDialog出栈顶层\r\n     */\r\n    /**\r\n     * <p>弹出模态窗口</p>\r\n     * @namespace wui\r\n     * @class openModalDialog\r\n     * @constructor \r\n     * @param options {json} 弹出模态框配置参数\r\n     * @param options.url {string} Iframe页面的url\r\n     * @param [options.successCallback] {function} 执行成功回调函数(即调用wui.closeModalDialog()之后执行的回调方法),默认不做任何操作\r\n     * @param [options.width] {string} 弹出层宽度,默认为'800px'\r\n     * @param [options.height] {string} 弹出层高度,默认为'460px'\r\n     * @param [options.title] {string} 弹出层标题,默认为空\r\n     * @param [options.isFull] {boolean} 是否全屏打开,默认为false\r\n     * @param [options.onFull] {function} 执行成功回调函数,默认刷新iframe\r\n     * @param [options.isMaxmin] {boolean} 窗口是否可以最大化,最小化\r\n     * @param [options.closedCallback] {Function} 弹出层销毁后触发的回调,无论是确认还是取消还是右上角关闭按钮,只要层被销毁了,该回调都会执行,不携带任何参数\r\n     * @param [options.cancelCallback] {Function} 弹出层右上角关闭按钮触发的回调,该回调携带两个参数,分别为：当前层索引参数(index)、当前层的DOM对象(layero),默认会自动触发关闭。如果不想关闭,return false即可\r\n     * @param [options.offset] {String/Array} 坐标,默认是'auto' <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param [options.isShadeClose] {Boolean} 是否点击遮罩关闭,默认值是false\r\n     * @return {number} [ 一个当前层索引 ]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *\r\n            var openPageUrl = \"http://platform.depts.bingosoft.net/wui/index.html\",\r\n                _successCallback = function(serviceResult){\r\n                    console.info(serviceResult);\r\n\r\n                    if (serviceResult.isSuccess) {\r\n                        wui.successNotice(serviceResult.message);\r\n                    } else {\r\n                        wui.errorNotice(serviceResult.message);\r\n                    }\r\n                },\r\n                width = null,\r\n                height = null,\r\n                title = \"弹出模态框\",\r\n                isFull = true;\r\n\r\n            // 调用方法1(推荐)\r\n            var index = wui.openModalDialog({\r\n                url: openPageUrl,\r\n                successCallback: _successCallback,\r\n                // width: width,    // 设置全屏,可不传递此参数\r\n                // height: height, // 设置全屏,可不传递此参数\r\n                title: title,\r\n                isFull: isFull\r\n            });   // 0\r\n\r\n            // 调用方法2:需按照参数顺序传递\r\n            var index = wui.openModalDialog(openPageUrl, _successCallback, width, height, title, isFull);   // 0\r\n     *\r\n     */\r\n    // ui.openModalDialog = function(url, successCallback, width, height, title, isFull, onFull, isMaxmin) {\r\n    ui.openModalDialog = function(param) {\r\n        ui.logUtilConfig.debugLog.methodName = \"openModalDialog\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"openModalDialog\", FRAME_NAME);\r\n\r\n        \r\n        var option = {}, params;\r\n        // var url, successCallback, width, height, title, isFull, onFull, isMaxmin, closedCallback, cancelCallback, offset, isShadeClose;\r\n        // console.info(param);\r\n        \r\n\r\n        if(typeof(param) === \"string\"){\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n            // console.info(args);\r\n            option.content = ui._getDefault(\"http://platform.depts.bingosoft.net/wui/\", param);\r\n            option.successCallback = args[0];\r\n            option.width = ui._getDefault('800px', args[1]);\r\n            option.height = ui._getDefault('460px', args[2]);\r\n            option.title = ui._getDefault('', args[3]);\r\n            option.isFull = ui._getDefault(false, args[4]);\r\n            option.full = args[5];\r\n            option.maxmin = ui._getDefault(false, args[6]);\r\n            option.closedCallback = args[7];\r\n            option.cancelCallback = args[8];\r\n            option.offset = ui._getDefault(\"auto\", args[9]);\r\n            option.shadeClose = ui._getDefault(false, args[10]);\r\n\r\n            option.area = [ option.width, option.height ];\r\n\r\n            params = $.extend(true, {}, option);\r\n        }else if(param && typeof(param) === \"object\"){\r\n            option.content = ui._getDefault(\"http://platform.depts.bingosoft.net/wui/\", param.url, param.content);\r\n            option.successCallback = param.successCallback;\r\n            option.width = ui._getDefault('800px', param.width);\r\n            option.height = ui._getDefault('460px', param.height);\r\n            option.title = ui._getDefault('', param.title);\r\n            option.isFull = ui._getDefault(false, param.isFull);\r\n            option.full = ui._getDefault(ui.CONSTANTS.EMPTYFUNC, param.onFull, param.full);\r\n            option.maxmin = ui._getDefault(false, param.isMaxmin, param.maxmin);\r\n            option.closedCallback = param.closedCallback;\r\n            option.cancelCallback = param.cancelCallback;\r\n            option.offset = ui._getDefault(\"auto\", param.offset);\r\n            option.shadeClose = ui._getDefault(false, param.isShadeClose, param.shadeClose);\r\n\r\n            option.area = [ option.width, option.height ];\r\n            // option.area = [ \"96%\", \"96%\"];\r\n\r\n            params = $.extend(true, {}, option, param);\r\n        }\r\n        \r\n        if(!params.end){\r\n            params.end = function(){\r\n                var modalDialog = ui.getModalDialogs().pop();\r\n                if(ui.CONSTANTS.isIE){\r\n                    $('[data-hide-opend-modal-ie]').each(function(i, elem){\r\n                        // alert(i);\r\n                        $(elem).removeClass(\"hide-opend-modal\");\r\n                    })\r\n                }\r\n                if(option.closedCallback && typeof(option.closedCallback) === \"function\"){\r\n                    option.closedCallback()\r\n                }\r\n            }\r\n        }\r\n\r\n        // 右上角关闭按钮触发的回调:当前层索引参数(index)、当前层的DOM对象(layero),默认会自动触发关闭。如果不想关闭,return false即可\r\n        if(!params.cancel){\r\n            params.cancel = function(index, layero){ \r\n                // wui.notice(\"cancel\");\r\n                var isClose = true;\r\n                if(option.cancelCallback && typeof(option.cancelCallback) === \"function\"){\r\n                    isClose = option.cancelCallback(index, layero)\r\n                }\r\n\r\n                if(isClose === false){\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        params.type = 2;\r\n\r\n        if(ui.CONSTANTS.isIE){\r\n            $('[data-hide-opend-modal-ie]').each(function(i, elem){\r\n                $(elem).addClass(\"hide-opend-modal\");\r\n            })\r\n        }\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"openModalDialog\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n        // ui.logParamValue(\"openModalDialog.params\", params, FRAME_NAME);\r\n        var modalWindowIndex = ui.CONSTANTS.OMODALWINDOW.indexOf(ui.modalWindow);\r\n\r\n        if(modalWindowIndex > -1){\r\n            var index;\r\n            for(var i = modalWindowIndex; i < ui.CONSTANTS.OMODALWINDOW.length; i++){\r\n                var modalWindow = ui.CONSTANTS.OMODALWINDOW[i];\r\n                var windowModal = window[modalWindow];\r\n                // console.info(modalWindow);\r\n                // console.info(windowModal);\r\n                if(windowModal[\"layui\"]){\r\n                    windowModal[\"layui\"].use('layer', function() {\r\n                        layer = windowModal[\"layui\"].layer;\r\n\r\n                        index = layer.open(params);\r\n                        ui.addModalDialog(index, params.successCallback);\r\n                        \r\n                        if(params.isFull){\r\n                            // params.maxmin = false;\r\n                            layer.full(index);  \r\n                        }\r\n                        return index;\r\n                    });\r\n                    break;\r\n                }else if(windowModal[\"layer\"]){\r\n\r\n                    index = windowModal[\"layer\"].open(params);\r\n                    ui.addModalDialog(index, params.successCallback);\r\n                    \r\n                    if(params.isFull){\r\n                        // params.maxmin = false;\r\n                        windowModal[\"layer\"].full(index);  \r\n                    }\r\n                    return index;\r\n                }\r\n            }\r\n        }else{\r\n            var index;\r\n            if(typeof(ui.modalWindow) === \"function\"){\r\n                var windowModal = ui.modalWindow.call(this, window);\r\n\r\n                if(windowModal[\"layui\"]){\r\n                    windowModal[\"layui\"].use('layer', function() {\r\n                        layer = windowModal[\"layui\"].layer;\r\n\r\n                        index = layer.open(params);\r\n                        ui.addModalDialog(index, params.successCallback);\r\n                        \r\n                        if(params.isFull){\r\n                            // params.maxmin = false;\r\n                            layer.full(index);  \r\n                        }\r\n                        return index;\r\n                    });\r\n                }else if(windowModal[\"layer\"]){\r\n\r\n                    index = windowModal[\"layer\"].open(params);\r\n                    ui.addModalDialog(index, params.successCallback);\r\n                    \r\n                    if(params.isFull){\r\n                        // params.maxmin = false;\r\n                        windowModal[\"layer\"].full(index);  \r\n                    }\r\n                    return index;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * <p>新增模态窗口对象</p>\r\n     * @namespace wui\r\n     * @class addModalDialog\r\n     * @constructor \r\n     * @param index {int} 窗口索引\r\n     * @param [successCallback] {function} 执行成功回调函数,默认不做任何操作\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var index = wui.addModalDialog(0);\r\n     *\r\n     */\r\n    ui.addModalDialog = function(index, successCallback){\r\n        ui.logUtilConfig.debugLog.methodName = \"addModalDialog\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"addModalDialog\", FRAME_NAME);\r\n\r\n        var modalDialog = {};\r\n        modalDialog.modalDialogIndex = index;\r\n        modalDialog.successCallback = function(res) {\r\n            if (successCallback && typeof(successCallback) == 'function') {\r\n                successCallback(res);\r\n            }\r\n        };\r\n\r\n        // 新增模态框对象\r\n        ui.getModalDialogs().push(modalDialog);\r\n    }\r\n\r\n    /**\r\n     * <p>关闭模态窗口(会触发 successCallback()和closedCallback())</p>\r\n     * @namespace wui\r\n     * @class closeModalDialog\r\n     * @constructor \r\n     * @param res {json} 关闭弹窗返回参数值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 关闭弹窗页面调用此方法传递参数{\"id\": \"1010101\"}到父页面,父页面可以通过wui.openModalDialog()的成功回调方法获取此参数\r\n            wui.closeModalDialog({\"id\": \"1010101\"});\r\n     *\r\n     */\r\n    ui.closeModalDialog = function(res){\r\n        ui.logUtilConfig.debugLog.methodName = \"closeModalDialog\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        ui.logParamValue({\r\n            paramName: \"res\",\r\n            paramValue: res, \r\n            methodName: \"closeModalDialog\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n        // 最后一个模态窗口\r\n        // var modalDialog = ui.getModalDialogs().pop();\r\n        var modalDialogs = ui.getModalDialogs();\r\n        var modalDialog  = {};\r\n        if(modalDialogs && modalDialogs.length > 0){\r\n            modalDialog = modalDialogs[modalDialogs.length - 1];\r\n        }\r\n        if(modalDialog){\r\n            modalDialog.successCallback(res);\r\n            ui.dialogOff(modalDialog.modalDialogIndex);\r\n            // alert(\"Closed\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>取消最后一个模态窗口(会触发closedCallback())</p>\r\n     * @namespace wui\r\n     * @class cancelModalDialog\r\n     * @constructor \r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 取消最后一个模态窗口\r\n            wui.cancelModalDialog();\r\n     *\r\n     */\r\n    ui.cancelModalDialog = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"cancelModalDialog\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"cancelModalDialog\", FRAME_NAME);\r\n\r\n        // 最后一个模态窗口\r\n        var modalDialogs = ui.getModalDialogs();\r\n        var modalDialog;\r\n        if(modalDialogs.length > 0){\r\n            modalDialog = modalDialogs[modalDialogs.length - 1];\r\n        }\r\n        // var modalDialog = ui.getModalDialogs().pop();\r\n        if(modalDialog){\r\n            ui.dialogOff(modalDialog.modalDialogIndex);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * 获取window祖先主窗口\r\n     * @Author   Chenzx\r\n     * @DateTime 2019-01-24\r\n     * @return   {[type]}   [description]\r\n     */\r\n    ui.getWindowModal = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"getWindowModal\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getModalDialogs\", FRAME_NAME);\r\n        \r\n        var modalWindowIndex = ui.CONSTANTS.OMODALWINDOW.indexOf(ui.modalWindow);\r\n\r\n        var windowModal = window.top;\r\n        if(modalWindowIndex > -1){\r\n            var modalWindow = ui.CONSTANTS.OMODALWINDOW[modalWindowIndex];\r\n            windowModal = window[modalWindow];\r\n        }else if(typeof(ui.modalWindow) === \"function\"){\r\n            windowModal = ui.modalWindow.call(this, window);\r\n        }\r\n\r\n        return windowModal;\r\n    }\r\n\r\n    /*\r\n     * <p>获取模态窗口对象列表</p>\r\n     * @namespace wui\r\n     * @class getModalDialogs\r\n     * @constructor \r\n     * @param index {int} 窗口索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var modalDialog = wui.getModalDialogs();\r\n     *\r\n     */\r\n    ui.getModalDialogs = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"getModalDialogs\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"getModalDialogs\", FRAME_NAME);\r\n        \r\n        // var modalWindowIndex = ui.CONSTANTS.OMODALWINDOW.indexOf(ui.modalWindow);\r\n\r\n        var windowModal = ui.getWindowModal();\r\n        // if(modalWindowIndex > -1){\r\n        //     var modalWindow = ui.CONSTANTS.OMODALWINDOW[modalWindowIndex];\r\n        //     windowModal = window[modalWindow];\r\n        // }else{\r\n        //     // var index;\r\n        //     if(typeof(ui.modalWindow) === \"function\"){\r\n        //         windowModal = ui.modalWindow.call(this, window);\r\n        //     }\r\n        // }\r\n        if (windowModal && (!windowModal.modalDialogs || windowModal.modalDialogs.length == 0)) {\r\n            windowModal.modalDialogs = [];\r\n        }\r\n\r\n        // if (!window.top.modalDialogs || window.top.modalDialogs.length == 0) {\r\n        //     window.top.modalDialogs = [];\r\n        // }\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"modalDialogs\",\r\n            paramValue: windowModal.modalDialogs, \r\n            methodName: \"getModalDialogs\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n        // ui.logParamValue(\"getModalDialogs.modalDialogs\",window.top.modalDialogs, FRAME_NAME)\r\n        return windowModal.modalDialogs;\r\n    }\r\n\r\n    /*\r\n     * <p>关闭模态窗口</p>\r\n     * @namespace wui\r\n     * @class dialogOff\r\n     * @constructor \r\n     * @param index {int} 窗口索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.dialogOff(0);\r\n     *\r\n     */\r\n    ui.dialogOff = function(dialogIndex){\r\n        ui.logUtilConfig.debugLog.methodName = \"dialogOff\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"dialogOff\", FRAME_NAME);\r\n        // //当你在iframe页面关闭自身时\r\n        // console.info(window.name)\r\n        var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引\r\n        // console.error(\"index:\" + index);\r\n        // console.error(\"dialogIndex:\" + dialogIndex);\r\n        dialogIndex = index;\r\n        // parent.layer.close(index); //再执行关闭  \r\n        \r\n        var modalWindowIndex = ui.CONSTANTS.OMODALWINDOW.indexOf(ui.modalWindow);\r\n        if(modalWindowIndex > -1){\r\n            for(var i = modalWindowIndex; i < ui.CONSTANTS.OMODALWINDOW.length; i++){\r\n                var modalWindow = ui.CONSTANTS.OMODALWINDOW[i];\r\n                var windowModal = window.parent;\r\n                if(modalWindow == \"top\"){\r\n                    windowModal = window.top;\r\n                }else if(modalWindow == \"parent\"){\r\n                    if(window[modalWindow][\"parent\"]){\r\n                        windowModal = window[modalWindow][\"parent\"];\r\n                    }else{\r\n                        windowModal = window.top;\r\n                    }\r\n                }\r\n                if(windowModal[\"layui\"]){\r\n                    windowModal[\"layui\"].use('layer', function() {\r\n                        var layer = windowModal[\"layui\"].layer;\r\n                        layer.close(dialogIndex);\r\n                        return true;\r\n                    });\r\n                }else if(windowModal[\"layer\"]){\r\n                    windowModal[\"layer\"].close(dialogIndex);\r\n                    return true;\r\n                }\r\n            }\r\n        }else{\r\n            if(typeof(ui.modalWindow) === \"function\"){\r\n                var windowModal = ui.modalWindow.call(this, window);\r\n\r\n                if(windowModal[\"layui\"]){\r\n                    windowModal[\"layui\"].use('layer', function() {\r\n                        var layer = windowModal[\"layui\"].layer;\r\n                        layer.close(dialogIndex);\r\n                        return true;\r\n                    });\r\n                }else if(windowModal[\"layer\"]){\r\n                    windowModal[\"layer\"].close(dialogIndex);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * <p>删除本页面的窗口</p>\r\n     * @namespace wui\r\n     * @class deleteDialog\r\n     * @constructor \r\n     * @param res {json} 关闭弹窗返回参数值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 关闭弹窗页面调用此方法传递参数{\"id\": \"1010101\"}到父页面,父页面可以通过wui.openModalDialog()的成功回调方法获取此参数\r\n            wui.closeModalDialog({\"id\": \"1010101\"});\r\n     *\r\n     */\r\n    ui.deleteDialog = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"deleteDialog\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"deleteDialog\", FRAME_NAME);\r\n        // ui.logParamValue(\"res\", res);\r\n        // var layer = null;   // 获取顶层layer对象\r\n        // // console.info(layer);\r\n        // if(window.top && window.top.layer){\r\n        //     // console.info(\"1\");\r\n        //     layer = window.top.layer;   // 获取顶层layer对象\r\n        // }else if(window.parent && window.parent.layer){\r\n        //     // console.info(\"2\");\r\n        //     layer = window.parent.layer;\r\n        // }else {\r\n        //     // console.info(\"3\");\r\n        //     layer = window.layer;\r\n        // }\r\n        layer.closeAll('dialog');\r\n    }\r\n\r\n    /*\r\n     * <p>关闭本页面的窗口</p>\r\n     * @namespace wui\r\n     * @class closeDialog\r\n     * @constructor\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 关闭弹窗页面调用此方法传递参数{\"id\": \"1010101\"}到父页面,父页面可以通过wui.openModalDialog()的成功回调方法获取此参数\r\n            wui.closeModalDialog({\"id\": \"1010101\"});\r\n     *\r\n     */\r\n    ui.closeDialog = function(){\r\n        ui.logUtilConfig.debugLog.methodName = \"closeDialog\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"closeDialog\", FRAME_NAME);\r\n        // var layer = null;   // 获取顶层layer对象\r\n        // if(window.top && window.top.layer){\r\n        //     layer = window.top.layer;   // 获取顶层layer对象\r\n        // }else if(window.parent && window.parent.layer){\r\n        //     layer = window.parent.layer;\r\n        // }else {\r\n        //     layer = window.layer;\r\n        // }\r\n        // layer.closeAll('dialog');\r\n        var index = layer.getFrameIndex(window.name);\r\n        layer.close(index); \r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * WUI 弹出层操作\r\n * @module Util\r\n */\r\n;(function (ui,$,undefined) {\r\n    /*\r\n     * <p>弹出层工具类全局配置(不使用)</p>\r\n     * @namespace wui\r\n     * @class setLayerSetting\r\n     * @constructor \r\n     * @param {JSON} setting 弹出层工具配置参数\r\n     * @param {String/Array/Boolean} setting.title 标题,默认值是\"信息\"\r\n     * @param {String/DOM/Array} setting.content 内容,不仅可以传入普通的html内容,还可以指定DOM,比如$(\"#id\"),默认值是\"\"\r\n     * @param {String} setting.skin 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值是\"\"\r\n     * @param {String} setting.width 弹出层宽度,带单位,当设置\"auto\"时表示宽度自适应,默认是\"800px\"\r\n     * @param {String} setting.height 弹出层高度,带单位,当设置\"auto\"时表示高度自适应,默认是\"460px\"\r\n     * @param {String/Array} setting.offset 坐标,默认是'auto' <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param {Number} setting.icon 图标。信息框和加载层的私有参数,信息框默认不显示图标。当你想显示图标时,默认皮肤可以传入0-6如果是加载层,可以传入0-2\r\n     * @param {String/Array/Boolean} setting.shade 遮罩,默认值是0.3\r\n     * @param {String/Boolean} setting.closeBtn 关闭按钮,可通过配置1和2来展示,如果不显示,则closeBtn: 0,默认值是1\r\n     * @param {Number} setting.time 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param {Number} setting.maxWidth 最大宽度,默认值是360,只有当area: 'auto'时,maxWidth的设定才有效。\r\n     * @param {Number} setting.maxHeight 最大高度,默认值是无,只有当area: 'auto'时,maxHeight的设定才有效。\r\n     * @param {Number} setting.zIndex 层叠顺序,默认值是19950105,一般用于解决和其它组件的层叠冲突\r\n     * @param {Number/Array} setting.tips tips方向和颜色,默认值是2,tips层的私有参数。支持上右下左四个方向,通过1-4进行方向设定。如tips: 3则表示在元素的下面出现。有时你还可能会定义一些颜色,可以设定tips: [1, '#c00']\r\n     * @param {Boolean} setting.isShadeClose 是否点击遮罩关闭,默认值是false,旧参数名:shadeClose\r\n     * @param {Boolean} setting.isMaxmin (只对openHtml, openIframe有效)是否显示最大最小按钮,默认值是false,旧参数名:maxmin\r\n     * @param {Boolean} setting.isFixed 即鼠标滚动时,层是否固定在可视区域。如果不想,设置fixed: false即可,默认值是true,旧参数名:fixed\r\n     * @param {Boolean} setting.isResize 是否允许拉伸,该参数对loading、tips层无效,默认值是true,旧参数名:resize\r\n     * @param {Boolean} setting.isScrollbar 是否允许浏览器出现滚动条,默认值是true,旧参数名:scrollbar\r\n     * @param {Boolean} setting.isShowMultipleTips 是否允许多个tips,允许多个意味着不会销毁之前的tips层,默认值是0,旧参数名:tipsMore\r\n     * @param {Boolean} setting.isFull (只对openHtml, openIframe有效)是否默认全屏弹出层\r\n     * @param {Function} setting.onResizing  监听窗口拉伸动作,当你拖拽弹层右下角对窗体进行尺寸调整时,如果你设定了该回调,则会执行。回调返回一个参数：当前层的DOM对象,旧参数名:resizing\r\n     * @param {Function} setting.onPoped  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} setting.onSure  确定按钮回调方法,该回调携带两个参数,分别为当前层索引、当前层DOM对象,旧参数名:yes\r\n     * @param {Function} setting.onCancel  右上角关闭按钮触发的回调,该回调携带两个参数,分别为：当前层索引参数（index）、当前层的DOM对象（layero），默认会自动触发关闭。如果不想关闭,return false即可,旧参数名:cancel\r\n     * @param {Function} setting.onClosed  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @param {Function} setting.onFull  最大化后触发的回调,携带一个参数,即当前层DOM,旧参数名:full\r\n     * @param {Function} setting.onMin  最小化后触发的回调,携带一个参数,即当前层DOM,旧参数名:min\r\n     * @param {Function} setting.onRestore 还原后触发的回调,携带一个参数,即当前层DOM,旧参数名:restore\r\n     * @return {number} 配置参数\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法1\r\n            wui.setLayerSetting('\\<\\div style=\"padding:20px;\">无内容\\<\\/div>');\r\n     *\r\n     */\r\n    ui.setLayerSetting = function(setting){\r\n        setting = setting || {};\r\n        $.extend(true, ui.layerSetting, setting);\r\n    }\r\n\r\n    /*\r\n     * <p>通过比较参数,若都为undefined,则返回默认参数值</p>\r\n     * @namespace wui\r\n     * @class _getDefault\r\n     * @constructor \r\n     * @param  {String/Boolean/Object/Function} defaultParam   参数默认值\r\n     * @param  {Array} params       要比较的参数集\r\n     * @return {String/Boolean/Object/Function}     比较得出的参数值\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            var param1, param2 = false, param3 = true, param4 = 0, defaultParam=true;\r\n            wui._getDefault(defaultParam, param1, param2);  // false\r\n            wui._getDefault(defaultParam, param3, param2);  // true\r\n            wui._getDefault(defaultParam, param4, param2);  // 0\r\n     *\r\n     */\r\n    ui._getDefault = function(defaultParam, params){\r\n\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n\r\n        // console.info(typeof(args));\r\n        var returnParam = defaultParam;\r\n        for(var i = 0; i < args.length; i++){\r\n            var theParam = args[i];\r\n            if(theParam !== undefined){\r\n                if(typeof(defaultParam) === \"object\" && typeof(theParam) === \"object\"){\r\n                    returnParam = $.extend(true, {}, defaultParam, theParam);\r\n                }else{\r\n                    returnParam = theParam;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return returnParam;\r\n    }\r\n\r\n    /**\r\n     * <p>弹出HTML页面层</p>\r\n     * @namespace wui\r\n     * @class openHtml\r\n     * @constructor \r\n     * @param {JSON} [params] [配置参数]\r\n     * @param [params.title] {string} 弹出层标题,默认是\"信息\"\r\n     * @param params.content {string} html格式内容,如\\<\\div style=\"padding:20px;\">自定义内容\\<\\/div>\r\n     * @param [params.width] {string} 弹出层宽度,默认为'800px'\r\n     * @param [params.height] {string} 弹出层高度,默认为'460px'\r\n     * @param [params.isShadeClose] {boolean} 是否点击遮罩关闭层,默认为false,旧参数名:shadeClose\r\n     * @param [params.isFull] {Boolean} 是否全屏打开,默认为false\r\n     * @param [params.isMaxmin] {Boolean} (只对openHtml, openIframe有效)是否显示最大最小按钮,默认值是false,旧参数名:maxmin\r\n     * @param [params.offset] {String/Array} 坐标,默认是\"auto\"表示垂直水平居中 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param {Function} [params.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [params.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @return {number} 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法1\r\n            wui.openHtml('\\<\\div style=\"padding:20px;\">无内容\\<\\/div>');\r\n\r\n            // 调用方法2(推荐使用):自定义内容、高度、宽度、标题\r\n            wui.openHtml({\r\n                \"content\": \"HTNL层自定义内容\",\r\n                \"width\":\"400px\", \r\n                \"height\": \"300px\",\r\n                \"title\": \"自定义层标题\"\r\n            });\r\n     *\r\n     */\r\n    // ui.openHtml = function(title, htmlContent, width, height, isShadeClose, isFull, isMaxmin, offset, success, end, isScrollbar, zIndex) {\r\n    ui.openHtml = function(param) {\r\n        ui.logUtilConfig.debugLog.methodName = \"openHtml\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"openHtml\", FRAME_NAME);\r\n\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        // var title, htmlContent = '\\<\\div style=\"padding:20px;\">无内容\\<\\/div>', width, height, isShadeClose, isFull, isMaxmin, offset, onPoped, onClosed, isScrollbar, zIndex;\r\n        var htmlContent = '\\<\\div style=\"padding:20px;\">无内容\\<\\/div>', \r\n            setting = ui.layerSetting, option = {}, params;\r\n        \r\n        if(typeof(param) === \"string\"){\r\n            option.title = ui._getDefault(setting.title, param);\r\n            option.content = ui._getDefault(htmlContent, args[0]);\r\n            option.width = ui._getDefault(setting.width, args[1]);\r\n            option.height = ui._getDefault(setting.height, args[2]);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, args[3]);\r\n            option.isFull = ui._getDefault(setting.isFull, args[4]);\r\n            option.maxmin = ui._getDefault(setting.isMaxmin, args[5]);\r\n            option.offset = ui._getDefault(setting.offset, args[6]);\r\n            option.success = ui._getDefault(setting.onPoped, args[7]);\r\n            option.end = ui._getDefault(setting.onClosed, args[8]);\r\n            option.scrollbar = ui._getDefault(setting.isScrollbar, args[9]);\r\n            option.zIndex = ui._getDefault(setting.zIndex, args[10]);\r\n\r\n            option.area = [ option.width, option.height ];\r\n            option.time = 0;\r\n            option.skin = \"\";\r\n\r\n            params = $.extend(true, {}, option);\r\n        }else if(param && typeof(param) === \"object\"){\r\n            option.title = ui._getDefault(setting.title, param.title);\r\n            option.content = ui._getDefault(htmlContent, param.content);\r\n            option.width = ui._getDefault(setting.width, param.width);\r\n            option.height = ui._getDefault(setting.height, param.height);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, param.isShadeClose, param.shadeClose);\r\n            option.isFull = ui._getDefault(setting.isFull, param.isFull);\r\n            option.maxmin = ui._getDefault(setting.isMaxmin, param.isMaxmin, param.maxmin);\r\n            option.offset = ui._getDefault(setting.offset, param.offset);\r\n            option.success = ui._getDefault(setting.onPoped, param.onPoped, param.success);\r\n            option.end = ui._getDefault(setting.onClosed , param.onClosed, param.end);\r\n            option.scrollbar = ui._getDefault(setting.isScrollbar, param.isScrollbar, param.scrollbar);\r\n            option.zIndex = ui._getDefault(setting.zIndex, param.zIndex);\r\n\r\n            option.area = [ option.width, option.height ];\r\n            option.time = 0;\r\n            option.skin = \"\";\r\n            params = $.extend(true, {}, option, param);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            // option.content = '\\<\\div style=\"padding:20px;\">无内容\\<\\/div>';\r\n\r\n            option = {\r\n                title: setting.title,\r\n                skin: \"\",\r\n                type : 1,\r\n                area : [ setting.width, setting.height ],\r\n                time: 0,\r\n                shadeClose : setting.isShadeClose,\r\n                offset: setting.offset, // {String/Array} 坐标,默认是垂直水平居中\r\n                maxmin: setting.isMaxmin,\r\n                content : '\\<\\div style=\"padding:20px;\">无内容\\<\\/div>',\r\n                zIndex : setting.zIndex,\r\n                // 当弹出层时,禁用滚动父页面\r\n                scrollbar: setting.isScrollbar\r\n            }\r\n            params = $.extend(true, {}, option);\r\n        }\r\n        \r\n        params.type = 1;\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"openHtml\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        var index = layer.open(params);\r\n        if(params.isFull){\r\n            params.maxmin = false;\r\n            index = layer.full(index);\r\n        }\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * <p>弹出Iframe层</p>\r\n     * @namespace wui\r\n     * @class openIframe\r\n     * @constructor \r\n     * @param {JSON} [params] [配置参数]\r\n     * @param params.url {string} Iframe页面的url\r\n     * @param [params.width] {string} 弹出层宽度,默认为'800px'\r\n     * @param [params.height] {string} 弹出层高度,默认为'460px'\r\n     * @param [params.title] {string} 弹出层标题,默认为空\r\n     * @param [params.isShadeClose] {boolean} 是否点击遮罩关闭层,默认为false,旧参数名:shadeClose\r\n     * @param [params.isMaxmin] {boolean} 是否显示最大小化按钮,默认为false\r\n     * @param [params.isFull] {Boolean} 是否全拼打开,默认为false\r\n     * @param [params.offset] {String/Array} 坐标,默认是\"auto\"表示垂直水平居中 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param {Function} [params.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [params.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @param {Number} [params.isScrollbar] 是否允许浏览器出现滚动条,默认值是true\r\n     * @param {Number} [params.zIndex] 层叠顺序,默认值是19950105,一般用于解决和其它组件的层叠冲突\r\n     * @return {number} 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法1(不建议使用)\r\n            wui.openIframe(\"wui.demo.html\");\r\n\r\n            // 调用方法2(推荐使用):自定义url、高度、宽度、标题、伸缩屏\r\n            wui.openIframe({\r\n                \"url\": \"util_layer_layer.html\", \r\n                \"width\":\"400px\", \r\n                \"height\": \"300px\", \r\n                \"title\": \"自定义层标题\",\r\n                \"isMaxmin\": true  // 伸缩屏\r\n            });\r\n     *\r\n     */\r\n    // ui.openIframe = function(url, width, height, title, isMaxmin, isShadeClose, isFull, offset, success, end, isScrollbar, zIndex) {\r\n    ui.openIframe = function(param) {\r\n        ui.logUtilConfig.debugLog.methodName = \"openIframe\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"openIframe\", FRAME_NAME);\r\n\r\n        var args = Array.prototype.slice.call(arguments,1);\r\n        // var title, url, width, height, isMaxmin, isShadeClose, isFull, offset, success, end, isScrollbar, zIndex;\r\n        var option = {}, setting = ui.layerSetting, params;\r\n        if(typeof(param) === \"string\"){\r\n            option.content = ui._getDefault(setting.url, param);\r\n            option.width = ui._getDefault(setting.width, args[0]);\r\n            option.height = ui._getDefault(setting.height, args[1]);\r\n            option.title = ui._getDefault(setting.title, args[2]);\r\n            option.maxmin = ui._getDefault(setting.isMaxmin, args[3]);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, args[4]);\r\n            option.isFull = ui._getDefault(setting.isFull, args[5]);\r\n            option.offset = ui._getDefault(setting.offset, args[6]);\r\n            option.success = ui._getDefault(setting.onPoped, args[7]);\r\n            option.end = ui._getDefault(setting.onClosed, args[8]);\r\n            option.scrollbar = ui._getDefault(setting.isScrollbar, args[9]);\r\n            option.zIndex = ui._getDefault(setting.zIndex, args[10]);\r\n\r\n            option.area = [ option.width, option.height ];\r\n            params = $.extend(true, {}, option);\r\n        }else if(param && typeof(param) === \"object\"){\r\n            option.content = ui._getDefault(setting.url, param.url);\r\n            option.width = ui._getDefault(setting.width, param.width);\r\n            option.height = ui._getDefault(setting.height, param.height);\r\n            option.title = ui._getDefault(setting.title, param.title);\r\n            option.maxmin = ui._getDefault(setting.isMaxmin, param.isMaxmin, param.maxmin);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, param.isShadeClose, param.shadeClose);\r\n            option.isFull = ui._getDefault(setting.isFull, param.isFull);\r\n            option.offset = ui._getDefault(setting.offset, param.offset);\r\n            option.success = ui._getDefault(setting.onPoped, param.onPoped, param.success);\r\n            option.end = ui._getDefault(setting.onClosed , param.onClosed, param.end);\r\n            option.scrollbar = ui._getDefault(setting.isScrollbar, param.isScrollbar, param.scrollbar);\r\n            option.zIndex = ui._getDefault(setting.zIndex, param.zIndex);\r\n\r\n            option.area = [ option.width, option.height ];\r\n\r\n            params = $.extend(true, {}, option, param);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            option = {\r\n                type : 2,\r\n                area : [ setting.width, setting.height ],\r\n                shadeClose : setting.isShadeClose,\r\n                content : setting.url,\r\n                title : setting.title,\r\n                maxmin : setting.isMaxmin,\r\n                zIndex : setting.zIndex,\r\n                // 当弹出层时,禁用滚动父页面\r\n                scrollbar: setting.isScrollbar,   \r\n                // {String/Array} 坐标,默认是垂直水平居中\r\n                offset: setting.offset\r\n            }\r\n\r\n            params = $.extend(true, {}, option);\r\n        }\r\n\r\n        params.type = 2;\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"openIframe\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        var index = layer.open(params);\r\n        if(params.isFull){\r\n            params.maxmin = false;\r\n            index = layer.full(index);\r\n        }\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * <p>弹出加载层</p>\r\n     * @namespace wui\r\n     * @class load\r\n     * @constructor \r\n     * @param icon {Number} 图标,可以传入0-2,默认为1\r\n     * @param options {json} 提示层配置\r\n     * @param [options.skin] {String} 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值\"\"\r\n     * @param [options.isShadeClose] {Boolean} 是否点击遮罩关闭,默认值是false\r\n     * @param [options.time] {Number} 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param [options.offset] {String/Array} 坐标,默认是\"auto\"表示垂直水平居中 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param {Function} [options.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [options.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @return {number} 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var icon = 2,\r\n                options = {\r\n                    time: 1 * 1000\r\n                };\r\n            wui.load(icon, options);\r\n     *\r\n     */\r\n    // ui.load = function(icon, param2) {\r\n    ui.load = function(param1, param2) {\r\n        ui.logUtilConfig.debugLog.methodName = \"load\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"load\", FRAME_NAME);\r\n        var setting = ui.layerSetting, option = {}, icon = 1, params;\r\n\r\n        if(ui.isJson(param1)){\r\n            param2 = param1;\r\n        }else{\r\n            icon = (typeof(param1) === \"number\") ? param1 : 1;\r\n        }\r\n\r\n        if(param2 && typeof(param2) === \"object\"){\r\n            option.skin = ui._getDefault(setting.skin, param2.skin);\r\n            option.time = ui._getDefault(setting.time, param2.time);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, param2.isShadeClose, param2.shadeClose);\r\n            option.offset = ui._getDefault(setting.offset, param2.offset);\r\n            option.success = ui._getDefault(setting.onPoped, param2.onPoped, param2.success);\r\n            option.end = ui._getDefault(setting.onClosed , param2.onClosed, param2.end);\r\n\r\n            params = $.extend(true, {}, option, param2);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            option = {\r\n                skin: setting.skin,\r\n                time: setting.time,\r\n                shadeClose: setting.isShadeClose,\r\n                // {String/Array} 坐标,默认是垂直水平居中\r\n                offset: setting.offset\r\n            }\r\n\r\n            params = $.extend(true, {}, option);\r\n        }\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"load\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        return layer.load(icon, params);\r\n    }\r\n\r\n    /**\r\n     * <p>弹出吸附层</p>\r\n     * @namespace wui\r\n     * @class tips\r\n     * @constructor\r\n     * @param content {string} 消息\r\n     * @param follow {string} 目标控件Dom对象,如\"#id\"\r\n     * @param options {json} 吸附层配置\r\n     * @param [options.skin] {String} 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值\"layui-layer-default\"\r\n     * @param [options.isShadeClose] {Boolean} 是否点击遮罩关闭,默认值是false\r\n     * @param [options.isShowMultipleTips] {Boolean} 是否允许多个tips,允许多个意味着不会销毁之前的tips层,默认值是true,旧参数名:tipsMore\r\n     * @param [options.time] {Number} 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param [options.tips] {Array/Number} tips方向和颜色,默认值是2,tips层的私有参数。支持上右下左四个方向,通过1-4进行方向设定。如tips: 3则表示在元素的下面出现。有时你还可能会定义一些颜色,可以设定tips: [1, '#c00']\r\n     * @param {Function} [options.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [options.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @return 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var content = \"这是一个tips\", \r\n                follow = \"#tipLayerCustom\", \r\n                options = {\r\n                    time: 1 * 1000\r\n                };\r\n            wui.tips(content, follow, options);\r\n     *\r\n     */\r\n    ui.tips = function(content, follow, options) {\r\n        ui.logUtilConfig.debugLog.methodName = \"tips\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"tips\", FRAME_NAME);\r\n\r\n        // options = options || {};\r\n        var setting = ui.layerSetting, option = {}, params;\r\n\r\n        if(options && typeof(options) === \"object\"){\r\n            option.skin = ui._getDefault(\"layui-layer-success\", options.skin);\r\n            option.time = ui._getDefault(setting.time, options.time);\r\n            option.tips = ui._getDefault(setting.tips, options.tips);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, options.isShadeClose, options.shadeClose);\r\n            option.tipsMore = ui._getDefault(setting.isShowMultipleTips, options.isShowMultipleTips, options.tipsMore);\r\n            option.success = ui._getDefault(setting.onPoped, options.onPoped, options.success);\r\n            option.end = ui._getDefault(setting.onClosed , options.onClosed, options.end);\r\n\r\n            params = $.extend(true, {}, option, options);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            // option.skin = \"layui-layer-success\";\r\n            option = {\r\n                skin: \"layui-layer-success\",\r\n                tipsMore: setting.isShowMultipleTips,\r\n                time: setting.time,\r\n                tips: setting.tips,\r\n                offset: setting.offset, // {String/Array} 坐标,默认是垂直水平居中\r\n                shadeClose: setting.isShadeClose\r\n            }\r\n            params = $.extend(true, {}, option);\r\n        }\r\n\r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"tips\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        // var params = {\r\n        //     skin: option.skin,\r\n        //     tipsMore: option.isShowMultipleTips,\r\n        //     time: option.time,\r\n        //     tips: option.tips,\r\n        //     offset: option.offset, // {String/Array} 坐标,默认是垂直水平居中\r\n        //     shadeClose: option.isShadeClose,\r\n        //     success: function(dom, index){\r\n        //         if(option.onPoped && typeof(option.onPoped) === \"function\"){\r\n        //             option.onPoped(dom, index);\r\n        //         }\r\n        //     },\r\n        //     end: function(){\r\n        //         if(option.onClosed && typeof(option.onClosed) === \"function\"){\r\n        //             option.onClosed();\r\n        //         }\r\n        //     }\r\n        // };\r\n\r\n        return layer.tips(content, follow, params);\r\n    }\r\n\r\n    /**\r\n     * <p>弹出提示层,默认3秒关闭</p>\r\n     * @namespace wui\r\n     * @class message\r\n     * @constructor\r\n     * @param content {string} 消息内容\r\n     * @param options {json} 提示层配置\r\n     * @param [options.skin] {String} 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值\"\"\r\n     * @param [options.icon] {Number} 图标,默认皮肤可以传入0-6对应不同的图标,默认不显示图标\r\n     * @param [options.time] {Number} 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param [options.offset] {String/Array} 坐标,默认是\"auto\"表示垂直水平居中 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param {Function} [options.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [options.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @param [closeFunc] {function} 关闭的回调方法\r\n     * @return 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var content = \"这是一个提示层\", \r\n                options = {\r\n                    time: 1 * 1000,\r\n                    onPoped: function(dom, index){\r\n                        alert(\"这是提示层弹出成功回调方法\");\r\n                    }\r\n                }\r\n            wui.message(content, options);\r\n     *\r\n     */\r\n    ui.message = function(content, options, closeFunc) {\r\n        ui.logUtilConfig.debugLog.methodName = \"message\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"message\", FRAME_NAME);\r\n\r\n        // options = options || {};\r\n        var setting = ui.layerSetting, option = {}, params;\r\n\r\n        if(options && typeof(options) === \"object\"){\r\n            option.skin = ui._getDefault(setting.skin, options.skin);\r\n            option.time = ui._getDefault(0, options.time);\r\n            option.icon = ui._getDefault(setting.icon, options.icon);\r\n            option.success = ui._getDefault(setting.onPoped, options.onPoped, options.success);\r\n            option.end = ui._getDefault(setting.onClosed , options.onClosed, options.end);\r\n\r\n            params = $.extend(true, {}, option, options);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            // option.time = 3 * 1000;\r\n\r\n            option = {\r\n                skin: setting.skin,\r\n                time: 0,\r\n                offset: setting.offset, // {String/Array} 坐标,默认是垂直水平居中\r\n                icon: setting.icon\r\n            }\r\n\r\n            params = $.extend(true, {}, option);\r\n        }\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"message\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        return layer.msg(content, params, closeFunc);\r\n    }\r\n\r\n    /**\r\n     * <p>弹出警告层</p>\r\n     * @namespace wui\r\n     * @class alert\r\n     * @constructor\r\n     * @param content {string} 消息\r\n     * @param options {json} 提示层配置\r\n     * @param [options.skin] {String} 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值\"\"\r\n     * @param [options.isShadeClose] {Boolean} 是否点击遮罩关闭,默认值是false\r\n     * @param [options.time] {Number} 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param [options.offset] {String/Array} 坐标,默认是\"auto\"表示垂直水平居中 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param {String} [options.title] 询问层标题,默认值是\"信息\"\r\n     * @param {Function} [options.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [options.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @param [onSure] {function} 点击确认的回调方法,传递一个参数index,表示当前层索引\r\n     * @return 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            var content = \"自定义弹出警告层\",\r\n                options = {\r\n                    isShadeClose: true,    // 设置点击空白处关闭警告层\r\n                    onPoped: function(dom, index){\r\n                        alert(\"这是警告层弹出成功回调方法\");\r\n                    }\r\n                },\r\n                onSure = function(index){\r\n                    alert(\"你点击了确定按钮\");\r\n                    wui.closeIndex(index);  // 关闭当前层\r\n                };\r\n            wui.alert(content, options, onSure);\r\n     *\r\n     */\r\n    ui.alert = function(content, options, onSure) {\r\n        ui.logUtilConfig.debugLog.methodName = \"alert\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"alert\", FRAME_NAME);\r\n        \r\n        // options = options || {};\r\n        var setting = ui.layerSetting, option = {}, params;\r\n\r\n        if(options && typeof(options) === \"object\"){\r\n            option.skin = ui._getDefault(setting.skin, options.skin);\r\n            option.time = ui._getDefault(setting.time, options.time);\r\n            option.offset = ui._getDefault(setting.offset, options.offset);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, options.isShadeClose, options.shadeClose);\r\n            option.title = ui._getDefault(setting.title, options.title);\r\n            option.success = ui._getDefault(setting.onPoped, options.onPoped, options.success);\r\n            option.end = ui._getDefault(setting.onClosed , options.onClosed, options.end);\r\n\r\n            params = $.extend(true, {}, option, options);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            option = {\r\n                skin: setting.skin,\r\n                time: setting.time,\r\n                title: setting.title,\r\n                offset: setting.offset, // {String/Array} 坐标,默认是垂直水平居中\r\n                shadeClose: setting.isShadeClose\r\n            };\r\n\r\n            params = $.extend(true, {}, option);\r\n        }\r\n       \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"alert\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        return layer.alert(content, params, onSure);\r\n    }\r\n\r\n    /**\r\n     * <p>弹出询问层</p>\r\n     * @namespace wui\r\n     * @class confirm\r\n     * @constructor\r\n     * @param content {string} 消息\r\n     * @param options {json} 提示层配置\r\n     * @param [options.skin] {String} 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值\"\"\r\n     * @param [options.isShadeClose] {Boolean} 是否点击遮罩关闭,默认值是false\r\n     * @param [options.time] {Number} 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param [options.offset] {String/Array} 坐标,默认是\"auto\"表示垂直水平居中 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param [options.title] {String} 询问层标题,默认值是\"信息\"\r\n     * @param {Function} [options.onPoped]  层弹出后的成功回调方法,携带两个参数,分别是当前层DOM和当前层索引,旧参数名:success\r\n     * @param {Function} [options.onClosed]  层销毁后触发的回调,无论是确认还是取消,只要层被销毁了,该参数方法都会执行,不携带任何参数,旧参数名:end\r\n     * @param {function} [onSure] 点击确认的回调方法\r\n     * @param {function} [onCancel] 点击取消的回调方法\r\n     * @return 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 举例1:\r\n            var options = {\r\n                onPoped: function(dom, index){\r\n                    wui.successNotice(\"onPoped\");\r\n                },\r\n                onClosed: function(){\r\n                    wui.notice(\"onClosed\");\r\n                }\r\n            };\r\n            var onSure = function (index) {\r\n                alert(true);\r\n                wui.closeIndex(index);  // 关闭当前层\r\n            }\r\n            var onCancel = function () {\r\n                alert(false);\r\n            }\r\n            wui.confirm(\"自定义弹出询问层\", options, onSure, onCancel);\r\n\r\n            // 举例2(自定义按钮):\r\n            var options = {\r\n                btn: ['重要','奇葩'] //按钮\r\n            };\r\n            var onSure = function (index) {\r\n                wui.message('的确很重要', {icon: 1});\r\n            }\r\n            var onCancel = function () {\r\n                wui.message('也可以这样', {\r\n                    time: 20000 //20s后自动关闭\r\n                });\r\n            }\r\n            wui.confirm('您是如何看待前端开发？', options, onSure, onCancel);\r\n\r\n     *\r\n     */\r\n    ui.confirm = function(content, options, onSure, onCancel) {\r\n        ui.logUtilConfig.debugLog.methodName = \"confirm\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"confirm\", FRAME_NAME);\r\n\r\n        // options = options || {};\r\n        var setting = ui.layerSetting, option = {}, params;\r\n\r\n        if(options && typeof(options) === \"object\"){\r\n            option.skin = ui._getDefault(setting.skin, options.skin);\r\n            option.time = ui._getDefault(setting.time, options.time);\r\n            option.btn = ui._getDefault(setting.btn, options.btn);\r\n            option.offset = ui._getDefault(setting.offset, options.offset);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, options.isShadeClose, options.shadeClose);\r\n            option.title = ui._getDefault(setting.title, options.title);\r\n            option.success = ui._getDefault(setting.onPoped, options.onPoped, options.success);\r\n            option.end = ui._getDefault(setting.onClosed , options.onClosed, options.end);\r\n\r\n            params = $.extend(true, {}, option, options);\r\n        }else{\r\n            // option = $.extend(true, {}, option, setting);\r\n            option = {\r\n                skin: setting.skin,\r\n                title: setting.title,\r\n                time: setting.time,\r\n                offset: setting.offset, // {String/Array} 坐标,默认是垂直水平居中\r\n                shadeClose: setting.isShadeClose,\r\n                btn: setting.btn\r\n            };\r\n\r\n            params = $.extend(true, {}, option);\r\n        }\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"confirm\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        return layer.confirm(content, params, onSure, onCancel);\r\n    }\r\n\r\n    /**\r\n     * <p>弹出输入层</p>\r\n     * @namespace wui\r\n     * @class prompt\r\n     * @constructor\r\n     * @param options {json} 组件配置@@@###参数配置\r\n     * @param [options.formType] {Number} #@default:0# 输入框类型，支持0（文本）1（密码）2（多行文本）\r\n     * @param [options.value] {String} #@default:\"\"# 初始化输入框默认值\r\n     * @param [options.maxlength] {String} #@default:500# 可输入文本的最大长度\r\n     * @param [options.skin] {String} #@default:\"\"# 样式类名,内置的有layui-layer-lan/layui-layer-molv/layui-layer-*(其中*表示primary/default/danger/warning/success),默认值\"\"\r\n     * @param [options.isShadeClose] {Boolean} #@default:false# 是否点击遮罩关闭,默认值是false\r\n     * @param [options.time] {Number} #@default:0# 自动关闭所需毫秒,默认值是0(默认不会自动关闭。当你想自动关闭时,可以time: 5000,即代表5秒后自动关闭,注意单位是毫秒（1秒=1000毫秒）)\r\n     * @param [options.offset] {String/Array} #@default:\"auto\"# 坐标，可选值如下所述 <br />\r\n     *  <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n                <tr>\r\n                    <th>值</th>\r\n                    <th>备注</th>\r\n                </tr> \r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>offset: 'auto'</td>\r\n                    <td>默认坐标,即垂直水平居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: '100px'</td>\r\n                    <td>只定义top坐标,水平保持居中</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: ['100px', '50px']</td>\r\n                    <td>同时定义top、left坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 't'</td>\r\n                    <td>快捷设置顶部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'r'</td>\r\n                    <td>快捷设置右边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'b'</td>\r\n                    <td>快捷设置底部坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'l'</td>\r\n                    <td>快捷设置左边缘坐标</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lt'</td>\r\n                    <td>快捷设置左上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'lb'</td>\r\n                    <td>快捷设置左下角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rt'</td>\r\n                    <td>快捷设置右上角</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>offset: 'rb'</td>\r\n                    <td>快捷设置右下角</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n     * @param [options.title] {String} #@default:\"信息\"# 询问层标题\r\n     * @param [onSure] {function} 点击确认的回调方法@@@###点击确认的回调方法,携带三个参数value(输入框的值), index(弹出层索引,可用于关闭), elem(表单元素)\r\n     * @return 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            //prompt层新定制的成员如下\r\n            {\r\n                formType: 1, //输入框类型，支持0（文本）默认1（密码）2（多行文本）\r\n                value: '', //初始时的值，默认空字符\r\n                maxlength: 140, //可输入文本的最大长度，默认500\r\n            }\r\n             \r\n            //例子1\r\n            wui.prompt(function(value, index, elem){\r\n                alert(value); //得到value\r\n                wui.closeIndex(index);\r\n            });\r\n             \r\n            //例子2\r\n            wui.prompt({\r\n                formType: 2,\r\n                value: '初始值',\r\n                title: '请输入值',\r\n                area: ['800px', '350px'] //自定义文本域宽高\r\n            }, function(value, index, elem){\r\n                alert(value); //得到value\r\n                wui.closeIndex(index);\r\n            });\r\n\r\n     *\r\n     */\r\n    ui.prompt = function(options, onSure) {\r\n        ui.logUtilConfig.debugLog.methodName = \"prompt\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n        var setting = ui.layerSetting, option = {}, params;\r\n\r\n        if(options && typeof(options) === \"object\"){\r\n            option.skin = ui._getDefault(setting.skin, options.skin);\r\n            option.time = ui._getDefault(setting.time, options.time);\r\n            option.btn = ui._getDefault(setting.btn, options.btn);\r\n            option.offset = ui._getDefault(setting.offset, options.offset);\r\n            option.shadeClose = ui._getDefault(setting.isShadeClose, options.isShadeClose, options.shadeClose);\r\n            option.title = ui._getDefault(setting.title, options.title);\r\n            option.success = ui._getDefault(setting.onPoped, options.onPoped, options.success);\r\n            option.end = ui._getDefault(setting.onClosed , options.onClosed, options.end);\r\n\r\n            option.area = [ option.width, option.height ];\r\n\r\n            params = $.extend(true, {}, option, options);\r\n        }\r\n\r\n        // options = options || {\r\n        //     formType: 1, //输入框类型，支持0（文本）默认1（密码）2（多行文本）\r\n        //     value: '', //初始时的值，默认空字符\r\n        //     maxlength: 140, //可输入文本的最大长度，默认500\r\n        // };\r\n        \r\n        ui.logParamValue({\r\n            paramName: \"params\",\r\n            paramValue: params, \r\n            methodName: \"prompt\", \r\n            className: FRAME_NAME, \r\n            isDebug: true\r\n        });\r\n\r\n        return layer.prompt(options, onSure);\r\n    }\r\n\r\n    /*\r\n     * <p>点击层使其置顶方法</p>\r\n     * @namespace wui\r\n     * @class setTopLayer\r\n     * @constructor\r\n     * @param layero {DOM} 要置顶层DOM\r\n     * @return 一个当前层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.openIframe({\r\n                isMaxmin: true,\r\n                content: 'http://www.layui.com',\r\n                zIndex: layer.zIndex, // 设置层叠顺序\r\n                success: function(layero){\r\n                    wui.setTopLayer(layero); // 点击层使其置顶方法\r\n                }\r\n            });\r\n     *\r\n     */\r\n    ui.setTopLayer = function(layero){\r\n        layer.setTop(layero);\r\n    }\r\n\r\n    /**\r\n     * <p>关闭特定层(一般用在弹出层的关闭回调中,如例子所示)</p>\r\n     * @namespace wui\r\n     * @class closeIndex\r\n     * @constructor\r\n     * @param index {string} 要关闭的层索引\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            \r\n            var yes = function(index){\r\n                alert(\"你点击了确定按钮\");\r\n                // 关闭当前层\r\n                wui.closeIndex(index);  \r\n            }\r\n            wui.alert(\"自定义弹出警告层\", {}, yes);\r\n     *\r\n     */\r\n    ui.closeIndex = function(index) {\r\n        ui.logUtilConfig.debugLog.methodName = \"closeIndex\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"closeIndex\", FRAME_NAME);\r\n        \r\n        if(index == undefined){\r\n            index = layer.index;    // //它获取的始终是最新弹出的某个层，值是由layer内部动态递增计算的\r\n        }\r\n        layer.close(index);\r\n        // window.parent.layer.close(index);\r\n    }\r\n\r\n    /**\r\n     * <p>关闭特定类型层</p>\r\n     * @namespace wui\r\n     * @class closeAll\r\n     * @constructor\r\n     * @param type {string} 类型,默认为空,关闭所有层,可选值{'dialog'(信息框),'page'(页面层),'iframe'(iframe层),'loading'(加载层),'tips'(tips层)}\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.closeAll();\r\n     *\r\n     */\r\n    ui.closeAll = function(type) {\r\n        ui.logUtilConfig.debugLog.methodName = \"closeAll\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"closeAll\", FRAME_NAME);\r\n\r\n        type = type || \"\";\r\n\r\n        return layer.closeAll(type);\r\n    }\r\n\r\n\r\n    return ui;\r\n})(wui || {}, libs);","/**\r\n * WUI 通知消息\r\n * @module Util\r\n */\r\n;(function (ui,$, undefined) {\r\n    \r\n    /*\r\n     * <p>获取wui.notice默认配置</p>\r\n     * @namespace wui\r\n     * @class getToastrDefaults\r\n     * @constructor \r\n     * @return {json}   默认配置参数\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            wui.getToastrDefaults();\r\n     *\r\n     */\r\n    ui.getToastrDefaults = function(){\r\n        return {\r\n            // 是否显示关闭按钮,（提示框右上角关闭按钮）\r\n            closeButton : true,\r\n            // 是否使用deBug模式\r\n            debug : false,\r\n            // 是否显示进度条(设置关闭的超时时间进度条)\r\n            progressBar : true,  \r\n            // 显示位置,可选值:\r\n            // toast-top-center(顶端,居中)、\r\n            // toast-top-full-width(顶端，宽度铺满整个屏幕)、\r\n            // toast-top-left(顶端,左边)、\r\n            // toast-top-right(顶端,右边)、\r\n            // toast-bottom-center(底部,居中)、\r\n            // toast-bottom-full-width(底部,顶端，宽度铺满整个屏幕)、\r\n            // toast-bottom-right(底部,右边)、\r\n            // toast-bottom-left(底部,左边)     \r\n            positionClass : \"toast-top-right\",  \r\n            // 点击消息框自定义事件\r\n            onclick : ui.CONSTANTS.EMPTYFUNC, \r\n            // 显示动画的时间\r\n            showDuration : 400,   \r\n            // 消失的动画时间\r\n            hideDuration : 1000,  \r\n            // 自动关闭超时时间,0代表不倒计时\r\n            timeOut : 5 * 1000,\r\n            // 加长展示时间     \r\n            extendedTimeOut : 1000,\r\n            // 显示时的动画缓冲方式:swing、linear,默认是\"swing\"\r\n            showEasing : \"swing\",\r\n            // 消失时的动画缓冲方式:swing、linear,默认是\"linear\"\r\n            hideEasing : \"linear\",\r\n            // 显示时的动画方式:fadeIn、slideDown、show,默认是\"fadeIn\"\r\n            showMethod : \"fadeIn\",\r\n            // 消失时的动画方式:fadeIn、slideDown、show,默认是\"fadeOut\"\r\n            hideMethod : \"fadeOut\",\r\n            // 提示框追加到的元素内容节点,默认是\"body\"\r\n            target: 'body',\r\n            tapToDismiss: false\r\n        }\r\n    }\r\n    // 初始化参数\r\n    // ui.initToastr = function(config) {\r\n    //     if (!ui.toastrIsInit) {\r\n    //         config = config || {};\r\n\r\n    //         var defaultConfig = {\r\n    //             closeButton : true,     // 是否显示关闭按钮\r\n    //             debug : false,\r\n    //             progressBar : true,     // 是否显示进度条\r\n    //             positionClass : \"toast-top-right\",  // 显示位置,可选值:top-center、top-full-width、top-left、top-right、bottom-center、bottom-full-width、bottom-right、bottom-left  \r\n    //             onclick : ui.CONSTANTS.EMPTYFUNC, // 点击消息框自定义事件\r\n    //             showDuration : \"400\",   // 显示动作时间\r\n    //             hideDuration : \"1000\",  // 隐藏动作时间\r\n    //             timeOut : 7 * 1000,     // 自动关闭超时时间,0代表不倒计时\r\n    //             extendedTimeOut : \"1000\",\r\n    //             showEasing : \"swing\",\r\n    //             hideEasing : \"linear\",\r\n    //             showMethod : \"fadeIn\",\r\n    //             hideMethod : \"fadeOut\",\r\n    //             tapToDismiss: false\r\n    //         }\r\n\r\n    //         var options = $.extend(false, {}, defaultConfig, config);   // 覆盖默认配置项\r\n    //         // for ( var key in defaultConfig) {\r\n    //         //     if (config == undefined) {\r\n    //         //         config = {};\r\n    //         //         config[key] = defaultConfig[key];\r\n    //         //     }else{\r\n    //         //         config[key] = defaultConfig[key];\r\n    //         //     }\r\n    //         // }\r\n    //         toastr.options = options;\r\n    //     }\r\n\r\n    //     ui.toastrIsInit = true;\r\n    // }\r\n\r\n    /**\r\n     * <p>弹出成功通知</p>\r\n     * @namespace wui\r\n     * @class successNotice\r\n     * @constructor \r\n     * @param {String} message 消息内容\r\n     * @param {String} [title] 弹出标题，默认为空\r\n     * @param {JSON} [options] 参数配置\r\n     * @param {Boolean} [options.closeButton] 是否显示关闭按钮,默认是true\r\n     * @param {Boolean} [options.progressBar] 是否显示进度条(设置关闭的超时时间进度条),默认是true\r\n     * @param {String} [options.positionClass] 显示位置,默认是\"toast-top-right\"<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>参数值</td>\r\n                        <td>含义</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"toast-top-full-width\" </td>\r\n                        <td> 顶端,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-center\" </td>\r\n                        <td> 顶端,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-left\" </td>\r\n                        <td> 顶端,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-right\" </td>\r\n                        <td> 顶端,右边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-full-width\" </td>\r\n                        <td> 底部,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-center\" </td>\r\n                        <td> 底部,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-left\" </td>\r\n                        <td> 底部,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-right\" </td>\r\n                        <td> 底部,右边 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>   \r\n     * @param {Function} [options.onclick] 点击消息框自定义事件\r\n     * @param {Number} [options.showDuration] 显示动画的时间,单位是毫秒,默认是400\r\n     * @param {Number} [options.hideDuration] 消失的动画时间,单位是毫秒,默认是1000\r\n     * @param {Number} [options.timeOut] 自动关闭超时时间,0代表不倒计时,单位是毫秒,默认是5000,\r\n     * @param {Number} [options.extendedTimeOut] 加长展示时间,单位是毫秒,默认是1000\r\n     * @param {String} [options.showEasing] 显示时的动画缓冲方式:swing、linear,默认是\"swing\"\r\n     * @param {String} [options.hideEasing] 消失时的动画缓冲方式:swing、linear,默认是\"linear\"\r\n     * @param {String} [options.showMethod] 显示时的动画方式:fadeIn、slideDown、show,默认是\"fadeIn\"\r\n     * @param {String} [options.hideMethod] 消失时的动画方式:fadeIn、slideDown、show,默认是\"fadeOut\"\r\n     * @param {String} [options.target] 提示框追加到的元素内容节点,默认是\"body\"\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.successNotice(\"成功消息\");\r\n     *\r\n     */\r\n    ui.successNotice = function(message, title, options) {\r\n        ui.notice(message, title, options, \"success\");\r\n    }\r\n\r\n    /**\r\n     * <p>弹出警告通知</p>\r\n     * @namespace wui\r\n     * @class warnNotice\r\n     * @constructor \r\n     * @param {String} message 消息内容\r\n     * @param {String} [title] 弹出标题，默认为空\r\n     * @param {JSON} [options] 参数配置\r\n     * @param {Boolean} [options.closeButton] 是否显示关闭按钮,默认是true\r\n     * @param {Boolean} [options.progressBar] 是否显示进度条(设置关闭的超时时间进度条),默认是true\r\n     * @param {String} [options.positionClass] 显示位置,默认是\"toast-top-right\"<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>参数值</td>\r\n                        <td>含义</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"toast-top-full-width\" </td>\r\n                        <td> 顶端,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-center\" </td>\r\n                        <td> 顶端,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-left\" </td>\r\n                        <td> 顶端,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-right\" </td>\r\n                        <td> 顶端,右边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-full-width\" </td>\r\n                        <td> 底部,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-center\" </td>\r\n                        <td> 底部,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-left\" </td>\r\n                        <td> 底部,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-right\" </td>\r\n                        <td> 底部,右边 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>   \r\n     * @param {Function} [options.onclick] 点击消息框自定义事件\r\n     * @param {Number} [options.showDuration] 显示动画的时间,单位是毫秒,默认是400\r\n     * @param {Number} [options.hideDuration] 消失的动画时间,单位是毫秒,默认是1000\r\n     * @param {Number} [options.timeOut] 自动关闭超时时间,0代表不倒计时,单位是毫秒,默认是5000,\r\n     * @param {Number} [options.extendedTimeOut] 加长展示时间,单位是毫秒,默认是1000\r\n     * @param {String} [options.showEasing] 显示时的动画缓冲方式:swing、linear,默认是\"swing\"\r\n     * @param {String} [options.hideEasing] 消失时的动画缓冲方式:swing、linear,默认是\"linear\"\r\n     * @param {String} [options.showMethod] 显示时的动画方式:fadeIn、slideDown、show,默认是\"fadeIn\"\r\n     * @param {String} [options.hideMethod] 消失时的动画方式:fadeIn、slideDown、show,默认是\"fadeOut\"\r\n     * @param {String} [options.target] 提示框追加到的元素内容节点,默认是\"body\"\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.warnNotice(\"警告消息\");\r\n     *\r\n     */\r\n    ui.warnNotice = function(message, title, options) {\r\n\r\n        ui.notice(message, title, options, \"warning\");\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>弹出错误通知</p>\r\n     * @namespace wui\r\n     * @class errorNotice\r\n     * @constructor \r\n     * @param {String} message 消息内容\r\n     * @param {String} [title] 弹出标题，默认为空\r\n     * @param {JSON} [options] 参数配置\r\n     * @param {Boolean} [options.closeButton] 是否显示关闭按钮,默认是true\r\n     * @param {Boolean} [options.progressBar] 是否显示进度条(设置关闭的超时时间进度条),默认是true\r\n     * @param {String} [options.positionClass] 显示位置,默认是\"toast-top-right\"<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>参数值</td>\r\n                        <td>含义</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"toast-top-full-width\" </td>\r\n                        <td> 顶端,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-center\" </td>\r\n                        <td> 顶端,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-left\" </td>\r\n                        <td> 顶端,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-right\" </td>\r\n                        <td> 顶端,右边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-full-width\" </td>\r\n                        <td> 底部,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-center\" </td>\r\n                        <td> 底部,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-left\" </td>\r\n                        <td> 底部,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-right\" </td>\r\n                        <td> 底部,右边 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>   \r\n     * @param {Function} [options.onclick] 点击消息框自定义事件\r\n     * @param {Number} [options.showDuration] 显示动画的时间,单位是毫秒,默认是400\r\n     * @param {Number} [options.hideDuration] 消失的动画时间,单位是毫秒,默认是1000\r\n     * @param {Number} [options.timeOut] 自动关闭超时时间,0代表不倒计时,单位是毫秒,默认是5000,\r\n     * @param {Number} [options.extendedTimeOut] 加长展示时间,单位是毫秒,默认是1000\r\n     * @param {String} [options.showEasing] 显示时的动画缓冲方式:swing、linear,默认是\"swing\"\r\n     * @param {String} [options.hideEasing] 消失时的动画缓冲方式:swing、linear,默认是\"linear\"\r\n     * @param {String} [options.showMethod] 显示时的动画方式:fadeIn、slideDown、show,默认是\"fadeIn\"\r\n     * @param {String} [options.hideMethod] 消失时的动画方式:fadeIn、slideDown、show,默认是\"fadeOut\"\r\n     * @param {String} [options.target] 提示框追加到的元素内容节点,默认是\"body\"\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.errorNotice(\"错误消息\");\r\n     *\r\n     */\r\n    ui.errorNotice = function(message, title, options) {\r\n\r\n        ui.notice(message, title, options, \"error\");\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>弹出信息通知</p>\r\n     * @namespace wui\r\n     * @class notice\r\n     * @constructor \r\n     * @param {String} message 消息内容\r\n     * @param {String} [title] 弹出标题，默认为空\r\n     * @param {JSON} [options] 参数配置\r\n     * @param {Boolean} [options.closeButton] 是否显示关闭按钮,默认是true\r\n     * @param {Boolean} [options.progressBar] 是否显示进度条(设置关闭的超时时间进度条),默认是true\r\n     * @param {String} [options.positionClass] 显示位置,默认是\"toast-top-right\"<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>参数值</td>\r\n                        <td>含义</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"toast-top-full-width\" </td>\r\n                        <td> 顶端,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-center\" </td>\r\n                        <td> 顶端,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-left\" </td>\r\n                        <td> 顶端,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-top-right\" </td>\r\n                        <td> 顶端,右边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-full-width\" </td>\r\n                        <td> 底部,顶端，宽度铺满整个屏幕 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-center\" </td>\r\n                        <td> 底部,居中 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-left\" </td>\r\n                        <td> 底部,左边 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> \"toast-bottom-right\" </td>\r\n                        <td> 底部,右边 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>   \r\n     * @param {Function} [options.onclick] 点击消息框自定义事件\r\n     * @param {Number} [options.showDuration] 显示动画的时间,单位是毫秒,默认是400\r\n     * @param {Number} [options.hideDuration] 消失的动画时间,单位是毫秒,默认是1000\r\n     * @param {Number} [options.timeOut] 自动关闭超时时间,0代表不倒计时,单位是毫秒,默认是5000,\r\n     * @param {Number} [options.extendedTimeOut] 加长展示时间,单位是毫秒,默认是1000\r\n     * @param {String} [options.showEasing] 显示时的动画缓冲方式:swing、linear,默认是\"swing\"\r\n     * @param {String} [options.hideEasing] 消失时的动画缓冲方式:swing、linear,默认是\"linear\"\r\n     * @param {String} [options.showMethod] 显示时的动画方式:fadeIn、slideDown、show,默认是\"fadeIn\"\r\n     * @param {String} [options.hideMethod] 消失时的动画方式:fadeIn、slideDown、show,默认是\"fadeOut\"\r\n     * @param {String} [options.target] 提示框追加到的元素内容节点,默认是\"body\"\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 调用方法\r\n            wui.notice(\"信息通知\");\r\n     *\r\n     */\r\n    ui.notice = function(message, title, options, type) {\r\n        ui.logUtilConfig.debugLog.methodName = \"notice\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"notice\", FRAME_NAME);\r\n\r\n        options = options || {};\r\n        // 初始化参数\r\n        // ui.initToastr();\r\n        var params = $.extend(true, {}, ui.getToastrDefaults(), options);\r\n        toastr.options = params;\r\n\r\n        type = type || \"info\";\r\n        toastr[type](message, title);\r\n        // window.top.toastr[type](message, title);\r\n    }\r\n\r\n    return ui;\r\n\r\n})( wui || {}, libs );","/**\r\n * WUI 选项卡操作\r\n * @module Util\r\n */\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>选项卡工具</h3>\r\n     * <ol>\r\n     * <li>支持自定义数据源：iframe和html两种类型; </li>\r\n     * <li>支持动态打开选项页; </li>\r\n     * <li>支持自定义选项卡方向; </li>\r\n     * <li>支持选项页过多时,隐藏过多的选项页索引到下拉按钮中; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=demoTabs\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.tabs/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.tabs/add\"}}{{/crossLink}}: 添加选项页 </li>\r\n     * <li>{{#crossLink \"wui.tabs/remove\"}}{{/crossLink}}: 移除选项页 </li>\r\n     * <li>{{#crossLink \"wui.tabs/index\"}}{{/crossLink}}: 打开指定的选项页或者获取当前打开选项页的索引 </li>\r\n     * <li>{{#crossLink \"wui.tabs/enabled\"}}{{/crossLink}}: 允许删除选项页 </li>\r\n     * <li>{{#crossLink \"wui.tabs/disabled\"}}{{/crossLink}}: 阻止删除选项页 </li>\r\n     * <li>{{#crossLink \"wui.tabs/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.tabs/refresh\"}}{{/crossLink}}: 刷新当前选项页内容 </li>\r\n     * <li>{{#crossLink \"wui.tabs/empty\"}}{{/crossLink}}: 清空选项页 </li>\r\n     * <li>{{#crossLink \"wui.tabs/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class tabs\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string} option.direction [ 选项卡方向，如\"top\" \"right\" \"below\" \"left\",默认是\"top\"\r\n     *  @param {string} [option.navStyle]  tab导航样式类名,默认是\"nav-tabs\"\r\n     *  @param {string} [option.tabStyle]  tab选项卡样式类名,默认是\"tab-overflow\"\r\n     *  @param {string} [option.isShowTabDrop]  是否选项卡个数超出隐藏,默认是true\r\n     *  @param {number} [option.height]  选项卡外层容器高度,若为0，则采用初始化容器的节点自身的高度,默认是0  \r\n     *  @param {Boolean} [option.isFullScreen]  是否高度撑满一屏,默认是false\r\n     *  @param {Number} [option.offsetV]   控件计算全屏尺寸的高度偏移量,单位是\"px\",默认是0\r\n     *  @param {number} [option.navWidth]  当direction为\"left\"或者\"right\"时,左右导航宽度,默认是\"150px\"\r\n     *  @param {number} [option.navMargin]  当direction为\"left\"或者\"right\"时,左右导航和内容的间距,默认是30\r\n     *  @param {number} [option.index]  默认打开的选项页索引，从0开始，默认为0\r\n     *  @param {boolean} [option.isDynamicLoading]  是否动态加载选项页内容,默认是true\r\n     *  @param {boolean} [option.isEnableRemove]  是否可删除：若true会在每个选项中增加删除按钮,默认是false\r\n     *  @param {boolean} [option.isShowTitle]  当选项卡只有一个时，是否显示选项卡标题,默认是false  \r\n     *  @param {Function} [option.onBeforeShow] 选项页显示之前触发事件,传递参数event:触发事件对象\r\n     *  @param {Function} [option.onShown] 选项页显示之后触发事件,传递参数event:触发事件对象\r\n     *  @param {Function} [option.onBeforeHide] 选项页隐藏之前触发事件,传递参数event:触发事件对象\r\n     *  @param {Function} [option.onHidden] 选项页隐藏之后触发事件,传递参数event:触发事件对象\r\n     *  @param {Array} option.tabPages 选项页内容数据<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 参数 </td>\r\n\t\t\t\t\t\t<td> 类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"dataType\"</td>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 选项页内容类型,可选类型：iframe或者html,默认是iframe </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"title\"</td>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 选项页标题 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"content\"</td>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 选项页内容,假如dataType是iframe,则传入页面地址，否则传入html内容 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"otherParam\"</td>\r\n\t\t\t\t\t\t<td> JSON </td>\r\n\t\t\t\t\t\t<td> 传递到选项页的其他内容,假如dataType是iframe,则会追加到页面地址中传入到iframe中,否则此参数没效果 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n\r\n     *  @example\r\n     * \r\n     *   html:\r\n     *\r\n            // 页面初始化方法\r\n            <div id=\"tabs\" style=\"height: 400px\"></div>\r\n     *      \r\n     *   js: \r\n     *   \r\n            // 初始化\r\n            var uiTabs = wui.tabs( \"tabs\",{\r\n\t            \"index\": 1,\r\n\t            \"isEnableRemove\": false,\r\n\t            \"tabPages\": [\r\n\t                {\r\n\t                    \"content\":\"curd/wui.tabs.page.html\",\r\n\t                    \"dataType\":\"iframe\",\r\n\t                    \"otherParam\":{\"hello\":\"world\"},\r\n\t                    \"title\":\"列表页1\"\r\n\t                },{\r\n\t                    \"content\":\"curd/wui.tabs.page.html\",\r\n\t                    \"dataType\":\"iframe\",\r\n\t                    \"otherParam\":{},\r\n\t                    \"title\":\"列表页2\"\r\n\t                }\r\n\t            ]  \r\n\t\t\t});\r\n     *\r\n     */\r\n\tui.tabs = function(element, options){\r\n        // ui.logMethodCalled(\"tabs\", FRAME_NAME, element);\r\n\t\t\r\n\t\t//需要设置为控件的名字\r\n\t\tvar _pluginName = \"uiTabs\",\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"tabs\",\r\n\t\t\t// \"beforeShow\"：每一个选项卡页面加载之前触发(动态加载时会每次更新iframe，所以会每次都触发,非动态加载时只会第一次才触发)\r\n\t\t\t// \"iframeLoaded\"：在加载选项卡内容为iframe时,每一个选项卡页面加载完成触发(动态加载时会每次更新iframe，所以会每次都触发,非动态加载时只会第一次才触发)\r\n\t\t\t// \"shown\"：此事件将在选项卡显示后触发。使用event.target和event.relatedtarget分别指向当前要显示选项卡和前一个显示选项卡（如果有）。\r\n\t\t\t// \"beforeAdd\"：添加一个选项卡之前触发\r\n\t\t\t// \"added\"：添加一个选项卡成功之后触发\r\n\t\t\t// \"beforeRemove\"：移除一个选项卡之前触发\r\n\t\t\t// \"removed\"：移除一个选项卡成功之后触发\r\n\t\t\t_widgetEventType = [\"beforeShow\", \"iframeLoaded\", \"shown\", \"beforeAdd\", \"added\", \"beforeRemove\", \"removed\"];\t// wui组件监听事件类型\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        \r\n\t\tif(!$(\"#\" + element).exist()){\r\n\t\t\tui.logError(\"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar config = {\r\n\t\t\t// {string} 选项卡方向，如\"top\" \"right\" \"below\" \"left\"\r\n\t\t\tdirection: \"top\"\t\r\n\t\t\t// {string} tab导航样式类名\r\n\t\t\t, navStyle: \"nav-tabs\"\t\r\n\t\t\t// {string} tab选项卡样式类名\r\n\t\t\t, tabStyle: \"tab-overflow\"\t\r\n\t\t\t// {boolean} 选项卡个数超出宽度是否隐藏,默认是true\r\n\t\t\t, isShowTabDrop: true \t\t\r\n\t\t\t// {number} 选项卡外层容器高度,若为0，则采用初始化容器的节点自身的高度,默认是0\r\n\t\t\t, height: 0\t\r\n\r\n\t\t\t// {Boolean} 是否高度撑满一屏,默认是false\r\n\t\t\t, isFullScreen: false\r\n\r\n\t\t\t// {JSON} 列表计算全屏尺寸的偏移量\r\n\t\t\t, offset: {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t\t// 控件计算全屏尺寸的高度偏移量\r\n\t\t\t, offsetV: 0\r\n\t\t\t// {String} 导航宽度,默认是\"150px\"\r\n\t\t\t, navWidth: null\r\n\r\n\t\t\t// {String} 导航和内容的间距,默认是30\r\n\t\t\t, navMargin: 30\r\n\r\n\t\t\t// {number} 选项卡默认打开li索引，从0开始，默认为0\r\n\t \t\t, index: 0\r\n\t \t\t// {boolean} 是否动态加载，用于动态添加iframe内容\r\n\t\t\t, isDynamicLoading: true\t\r\n\t\t\t// {boolean} 是否可删除：若true会在每个选项中增加删除按钮\r\n\t\t\t, isEnableRemove: false\t\t\r\n\t\t\t// {boolean} 当选项卡只有一个时，是否显示选项卡标题\r\n\t\t\t, isShowTitle: false\t\r\n\t\t\t// {Array} 选项卡页数据数组\r\n\t\t\t, tabPages: []\t\t\r\n\t\t\t\t// iframe:{\"title\":\"\", \"dataType\":\"iframe\", \"content\":\"demo_chooseBoxList.html\", \"otherParam\": {}}\r\n\t\t\t\t// script模板:{\"title\":\"\", \"dataType\":\"html\", \"content\":\"<div></div>\"}\r\n\t\t\t// {Boolean} 是否手风琴,默认是false\r\n\t\t\t, isAccordion: false \t\r\n\t\t\t// {Function} 选项页显示之前触发事件,传递参数event:触发事件对象\r\n\t\t\t, onBeforeShow: ui.CONSTANTS.EMPTYFUNC\r\n\t\t\t// {Function} 选项页显示之后触发事件,传递参数event:触发事件对象\r\n\t\t\t, onShown: ui.CONSTANTS.EMPTYFUNC\r\n\t\t\t// {Function} 选项页隐藏之前触发事件,传递参数event:触发事件对象\r\n\t\t\t, onBeforeHide: ui.CONSTANTS.EMPTYFUNC\r\n\t\t\t// {Function} 选项页隐藏之后触发事件,传递参数event:触发事件对象\r\n\t\t\t, onHidden: ui.CONSTANTS.EMPTYFUNC\r\n\t\t};\r\n\r\n\t\t//默认配置项\r\n\t\tvar defaults = {\r\n\t\t\ttext: '更多 <i class=\"icon-align-justify\"></i>',\r\n\t\t\tdeleteIcon: 'fa fa-times-circle tab-close'\r\n\t\t};\r\n\r\n\t\tvar WinReszier = (function(){\r\n\t\t\tvar registered = [];\r\n\t\t\tvar inited = false;\r\n\t\t\tvar timer;\r\n\t\t\tvar resize = function(ev) {\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t\ttimer = setTimeout(notify, 100);\r\n\t\t\t};\r\n\t\t\tvar notify = function() {\r\n\t\t\t\tfor(var i=0, cnt=registered.length; i<cnt; i++) {\r\n\t\t\t\t\tregistered[i].apply();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\tregister: function(fn) {\r\n\t\t\t\t\tregistered.push(fn);\r\n\t\t\t\t\tif (inited === false) {\r\n\t\t\t\t\t\t$(window).bind('resize', resize);\r\n\t\t\t\t\t\tinited = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tunregister: function(fn) {\r\n\t\t\t\t\tfor(var i=0, cnt=registered.length; i<cnt; i++) {\r\n\t\t\t\t\t\tif (registered[i] == fn) {\r\n\t\t\t\t\t\t\tdelete registered[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\tfunction uiTabs(element, options){\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init();\t\r\n\t\t}\r\n\r\n\t\tuiTabs.prototype = {\r\n\t\t\tconstructor: uiTabs,\r\n\r\n\t\t\tinit: function(){\r\n                // 初始化对象静态属性\r\n\t\t\t\tthis.pluginName = _widgetName;      // 缓存插件名字\r\n\t\t\t\tthis.element = element;             // 保存初始化标签id\r\n\t\t\t\tthis.$element = $(\"#\" + element);\t// 保存初始化标签jQuery\r\n\t\t\t\tthis.defaults = defaults;           // 保存静态默认配置项\r\n\t\t\t\tthis._option = options;\t\t// 缓存传递进来的配置\r\n\r\n                // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n\t\t\t\tthis.initDom = this.$element.prop(\"outerHTML\");\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n\r\n                // 初始化对象页面结构模板\r\n                this.liNavTmpl = '<li role=\"presentation\" wui-attr=\"nav\"><a href=\"javascript:void(0);\" aria-controls=\"\" role=\"tab\" data-toggle=\"tab\"></a></li>';\r\n\t\t\t\tthis.tabContentTmpl = '<div role=\"tabpanel\" class=\"tab-pane fade\" id=\"\"></div>';\r\n\t\t\t\tthis.deleteTpml = '<i class=\"' + defaults.deleteIcon + '\"></i>';\r\n\t\t\t\tthis.iframeTmpl = '<iframe id=\"\" name=\"\" allowtransparency=\"true\" width=\"100%\" height=\"100%\" src=\"\" scrolling=\"yes\" frameborder=\"0\"></iframe>';\r\n\t\t\t\t\r\n\t\t\t\t// 初始化对象页面结构\r\n\t\t\t\tthis.$Maxcontainer = this.$element; // 组件最外层容器(.wui-tab == $element): $navBox + $tabsPageBox\r\n                this.$navBox = null;   // 组件导航框(.nav[wui-tabs-part=\"nav\"]):$navBoxLi([role=\"presentation\"]) + $dropdownBox(.tabdrop)\r\n                this.$tabsPageBox = null;\t// 组件选项卡页面(.tab-content[wui-tabs-part=\"tabContent\"])\r\n                this.$dropdownBox = null;   // 组件下拉框容器(.dropdown.tabdrop):动态改变\r\n\r\n\t\t\t\t// var self = this;\r\n\t\t\t\t// this.pluginName = _widgetName;\t//缓存插件名字\r\n\t            // this.hasDom = false; \t\t//检查dom树中此节点是否存在\r\n\t\t\t\t// this.element = element;\r\n\t\t\t\t// this.$element = $(\"#\" + element);\r\n\t\t\t\t// this.defaults = defaults;\t// 缓存配置项\r\n\t\t\t\t// this.initDom = $(\"#\" + element).prop(\"outerHTML\");\r\n\t\t\t\t// this._opt = $.extend(false, {}, config, options);\t//覆盖默认配置项\r\n                // console.info(this._opt);\r\n\t\t\t\t// this.$nav = null;\t// $navBox\r\n\t\t\t\t// this.$tabContents = null;\t// $tabsPageBox\r\n\t\t\t\t// this._tabdrop = null;\t// 保存tabdrop插件的初始化对象\r\n\t\t\t\t\r\n\t\t\t\t// $dropdownBox\r\n\t\t\t\t// this.$dropdownBox = $('<li class=\"dropdown hide pull-right tabdrop\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">'+ this.defaults.text +' <b class=\"caret\"></b></a><ul class=\"dropdown-menu\"></ul></li>');\r\n\t\t\t\t\r\n\t\t\t\tthis.navBoxItemList = [];\t// 保存全部li导航\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t// 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n            \tthis.handlers = {};\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n                // 构建组件页面容器结构\r\n                this.dom = this._buildContainer();  // 创建DOM节点,并返回$Maxcontainer的HTML字符串\r\n\t\t\t\t// this.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t\t\t},\r\n            _buildContainer: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n             //    if(this.hasDom){\r\n\t            // \tthis.empty();\r\n\t            // }\r\n\r\n\t            // 这个自定义类可以控制底下的导航的自定义显隐\r\n\t            if(!(this.$element.hasClass('wui-tabs'))){\r\n\t            \tthis.$element.addClass('wui-tabs');\r\n\t            }\r\n\r\n\t\t\t\t// this.$navBox = null;   // 组件导航框(.nav[wui-tabs-part=\"nav\"]):$navBoxLi([role=\"presentation\"]) + $dropdownLI(.tabdrop)\r\n                // this.$tabsPageBox = null;\t// 组件选项卡页面(.tab-content[wui-tabs-part=\"tabContent\"])\r\n                this._createContainer();\t// 创建模板容器\r\n                this.$navBox.hide()\r\n\r\n                this.$dropdownBox = $('<li class=\"dropdown hide pull-right tabdrop\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">'+ self.defaults.text +' <b class=\"caret\"></b></a><ul class=\"dropdown-menu\"></ul></li>');   // 组件下拉框容器(.dropdown.tabdrop):动态改变 \r\n\t            \r\n                if(this.$navBox.children('.tabdrop').length > 0){\r\n        \t\t\tthis.$dropdownBox = this.$navBox.children('.tabdrop');\r\n        \t\t}else{\r\n        \t\t\tthis.$dropdownBox.prependTo(this.$navBox);\r\n        \t\t\tif (this.$navBox.parent().is('.tabs-below')) {\r\n\t\t\t\t\t\tthis.$dropdownBox.addClass('dropup');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tWinReszier.register($.proxy(this.layout, this));\r\n        \t\t}\r\n\r\n        \t\tthis.navBoxItemList = this._getList();\t// 保存全部li导航\r\n        \t\tthis._setEnableRemove(param.isEnableRemove);\r\n\t\t\t\tthis._setTabdrop(param.isShowTabDrop);\r\n\t\t\t\t\r\n\t\t\t\t$.each(this.navBoxItemList, function(){\r\n\t\t\t\t\t$(this).children('a')\r\n\t\t\t\t\t\t.on('show.bs.tab', function(e){\r\n\t\t\t\t\t\t\t\treturn self._show(e);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.on('hide.bs.tab', function(e){\r\n\t\t\t\t\t\t\t\t\treturn self._hide(e);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.on('shown.bs.tab', function(e){\r\n\t\t\t\t\t\t\t\t\t\treturn self._shown(e);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.on('hidden.bs.tab', function(e){\r\n\t\t\t\t\t\t\t\t\t\t\treturn self._hidden(e);\r\n\t\t\t\t\t\t\t\t\t\t}).on(\"click\", function(e){\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif($(this).attr(\"disabled\")){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$(this).tab('show');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(self._opt.isEnableRemove){\r\n\t\t\t\t\t\tvar $i = $(self.deleteTpml);\r\n\t\t\t\t\t\t$(this).children('a').addClass(\"is-close\").append($i);\r\n\t\t\t\t\t\t$i.on(\"click\", function(e){\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t// self._remove(this);\r\n\t\t\t\t\t\t\tself._remove($(this));\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\r\n\t            // 添加选项页\r\n\t            var tabPages = param.tabPages;\r\n\t            var len = tabPages.length;\r\n\t            for(var i = 0; i < len; i++){\r\n\t            \tvar tabPage = tabPages[i];\r\n\t            \tthis._add(tabPage);\r\n\t            }\r\n\r\n\t            if(this._opt.index != null){\r\n            \t\tthis.index(this._opt.index);\r\n            \t}else{\r\n            \t\tthis.index(0);\r\n            \t}\r\n\r\n        \t\tthis._setHeight();\r\n                this._bindEvent();\r\n\r\n\t            // 默认显示选项页面\r\n\t            if(param.index != null){\r\n\t            \tthis.index(param.index);\r\n\t            }\r\n        \t\t\r\n                // this.select(param.value);   // 选中默认值\r\n                this.hasDom = true;\r\n                return this.$Maxcontainer.prop(\"outerHTML\");\r\n            },\r\n            _setTabdrop: function(isShowTabDrop){\r\n            \tisShowTabDrop = isShowTabDrop || false;\r\n\r\n        \t\tif(isShowTabDrop){\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar $li = this.$dropdownBox.children('.dropdown-menu').children('li');\r\n\t\t\t\t\t$li.appendTo(this.$navBox);\r\n\t\t\t\t\tthis.$dropdownBox.addClass('hide').find('ul').empty();\r\n\t\t\t\t}\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n                \r\n            },\r\n            // 绑定事件\r\n            _bindEvent: function(){\r\n                var self = this;\r\n                \r\n        \t\tif(!this.hasDom){\r\n        \t\t\t$.each(this.navBoxItemList, function(i, oLi){\r\n        \t\t\t\tvar $li = $(oLi);\r\n\r\n        \t\t\t\t$li.children('a')\r\n        \t\t\t\t\t.on('show.bs.tab', function(e){\r\n\t\t    \t\t\t\t\t\treturn self._show(e);\r\n\t\t    \t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.on('hide.bs.tab', function(e){\r\n\t\t\t    \t\t\t\t\t\treturn self._hide(e);\r\n\t\t\t    \t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.on('shown.bs.tab', function(e){\r\n\t\t\t        \t\t\t\t\t\treturn self._shown(e);\r\n\t\t\t        \t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.on('hidden.bs.tab', function(e){\r\n\t\t\t\t        \t\t\t\t\t\treturn self._hidden(e);\r\n\t\t\t\t        \t\t\t\t\t});\r\n        \t\t\t})\r\n        \t\t}\r\n\r\n                // this.hasDom = true;\r\n            },\r\n\t\t\t// _initDom: function() { // 生成DOM节点\r\n\t\t\t// \tvar self = this, param = self._opt;\r\n\t  //       },\r\n\t        _show: function(e){\r\n\r\n\t        \tvar params = this._opt;\r\n\t        \tif(params.onBeforeShow && typeof(params.onBeforeShow) === \"function\"){\r\n\t        \t\tparams.onBeforeShow(e);\r\n\t        \t}\r\n\t        \tif(this.listeners.indexOf('show') > -1) {\r\n\t                if(!this.emit({type:'show',target: e.target})) return false;\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\t        _hide: function(e){\r\n\t        \tvar params = this._opt;\r\n\t        \tif(params.onBeforeHide && typeof(params.onBeforeHide) === \"function\"){\r\n\t        \t\tparams.onBeforeHide(e);\r\n\t        \t}\r\n\t        \tif(this.listeners.indexOf('hide') > -1) {\r\n\t                if(!this.emit({type:'hide',target: e.target})) return false;\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        _shown: function(e){\r\n\t        \tvar params = this._opt, isContinues = true;\r\n\t        \tif(params.onShown && typeof(params.onShown) === \"function\"){\r\n\t        \t\tparams.onShown(e);\r\n\t        \t}\r\n\t        \tif(this.listeners.indexOf('shown') > -1) {\r\n\t                if(!this.emit({type:'shown',target: e.target})) return false;\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        _hidden: function(e){\r\n\t        \tvar params = this._opt;\r\n\t        \tif(params.onHidden && typeof(params.onHidden) === \"function\"){\r\n\t        \t\tparams.onHidden(e);\r\n\t        \t}\r\n\t        \tif(this.listeners.indexOf('hidden') > -1) {\r\n\t                if(!this.emit({type:'hidden',target: e.target})) return false;\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        _getList: function(){\r\n\t        \tvar collection = [];\r\n\t        \tthis.$navBox\r\n\t\t\t\t\t.find('>li')\r\n\t\t\t\t\t.not('.tabdrop')\t// 过滤下拉菜单项\r\n\t\t\t\t\t.each(function(){\r\n\t\t\t\t\t\tcollection.push(this);\r\n\t\t\t\t\t});\r\n\t\t\t\tthis.$dropdownBox.find('li').each(function(){\r\n\t\t\t\t\tcollection.push(this);\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn collection;\r\n\t        },\r\n\t        // 重新刷新导航的显隐布局\r\n\t        layout: function() {\r\n\t\t\t\tvar collection = [], lastNode = null;\r\n\t\t\t\tif(!this._opt.isShowTabDrop){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.$dropdownBox.addClass('hide');\r\n\t\t\t\t// this.$dropdownBox.removeClass('hide');\r\n\t\t\t\t// var dropdownIndex = this.$dropdownBox.index();\r\n\t\t\t\tthis.$navBox\r\n\t\t\t\t\t.append(this.$dropdownBox.find('li'))\r\n\t\t\t\t\t.find('>li')\r\n\t\t\t\t\t.not('.tabdrop')\t// 过滤下拉菜单项\r\n\t\t\t\t\t.each(function(){\r\n\t\t\t\t\t\tif(this.offsetTop > 0) {\t// li跨行就入栈\r\n\t\t\t\t\t\t\t// console.error(this)\r\n\t\t\t\t\t\t\t// console.error($(this))\r\n\t\t\t\t\t\t\t// console.error(this.offsetTop)\r\n\t\t\t\t\t\t\tcollection.push(this);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlastNode = this;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif (collection.length > 0) {\r\n\t\t\t\t\tthis.$dropdownBox.removeClass('hide');\r\n\t\t\t\t\tcollection.unshift(lastNode);\r\n\t\t\t\t\tcollection = $(collection);\r\n\t\t\t\t\tthis.$dropdownBox\r\n\t\t\t\t\t\t.find('ul')\r\n\t\t\t\t\t\t.empty()\r\n\t\t\t\t\t\t.append(collection);\r\n\t\t\t\t\tif (this.$dropdownBox.find('.active').length == 1) {\r\n\t\t\t\t\t\tthis.$dropdownBox.addClass('active');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$dropdownBox.removeClass('active');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.$dropdownBox.addClass('hide');\r\n\t\t\t\t}\r\n\t\t\t\t// this.$dropdownBox.addClass('hide');\r\n\r\n\t            // console.info(this._opt);\r\n\t            this._setHeight();\r\n\t\t\t},\r\n\t        _createContainer: function(){\r\n\t        \tvar param = this._opt;\r\n\t        \tswitch(param.direction){\r\n\t        \t\tcase \"top\": \t// 上\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"nav\"]').length == 0){\r\n\t        \t\t\t\tthis.$navBox = $('<ul class=\"nav ' + param.navStyle + '\" wui-tabs-part=\"nav\"></ul>');\r\n\t        \t\t\t\tthis.$element.prepend(this.$navBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$navBox = this.$element.find('[wui-tabs-part=\"nav\"]');\r\n\t        \t\t\t}\r\n\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"tabContent\"]').length == 0){\r\n\t        \t\t\t\tthis.$tabsPageBox = $('<div class=\"tab-content ' + param.tabStyle + '\" wui-tabs-part=\"tabContent\"></div>');\r\n\t        \t\t\t\tthis.$element.append(this.$tabsPageBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$tabsPageBox = this.$element.find('[wui-tabs-part=\"tabContent\"]');\r\n\t        \t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bottom\": \t// 下\r\n\t\t\t\t\tcase \"below\": \t// 下\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"tabContent\"]').length == 0){\r\n\t        \t\t\t\tthis.$tabsPageBox = $('<div class=\"tab-content ' + param.tabStyle + '\" wui-tabs-part=\"tabContent\"></div>');\r\n\t        \t\t\t\tthis.$element.prepend(this.$tabsPageBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$tabsPageBox = this.$element.find('[wui-tabs-part=\"tabContent\"]');\r\n\t        \t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.$element.find('[wui-tabs-part=\"nav\"]').length == 0){\r\n\t        \t\t\t\tthis.$navBox = $('<ul class=\"nav ' + param.navStyle + '\" wui-tabs-part=\"nav\"></ul>');\r\n\t        \t\t\t\tthis.$element.append(this.$navBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$navBox = this.$element.find('[wui-tabs-part=\"nav\"]');\r\n\t        \t\t\t}\r\n\t        \t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\": \t// 右\r\n\t\t\t\t\t\tif (!this.$element.hasClass(\"tabs-horizontal\")) {\r\n\t\t\t\t\t\t\tthis.$element.addClass(\"tabs-horizontal\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._opt.isShowTabDrop = false;\r\n\t\t\t\t\t\t\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"tabContent\"]').length == 0){\r\n\t        \t\t\t\tthis.$tabsPageBox = $('<div class=\"tab-content\" wui-tabs-part=\"tabContent\"></div>');\r\n\t        \t\t\t\tthis.$element.append(this.$tabsPageBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$tabsPageBox = this.$element.find('[wui-tabs-part=\"tabContent\"]');\r\n\t        \t\t\t}\r\n\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"nav\"]').length == 0){\r\n\t        \t\t\t\tthis.$navBox = $('<ul class=\"nav nav-right\" wui-tabs-part=\"nav\"></ul>');\r\n\t        \t\t\t\tthis.$element.prepend(this.$navBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$navBox = this.$element.find('[wui-tabs-part=\"nav\"]');\r\n\t        \t\t\t\tif(!this.$navBox.hasClass(\"nav-right\")){\r\n\t        \t\t\t\t\tthis.$navBox.addClass(\"nav-right\");\r\n\t        \t\t\t\t}\r\n\t        \t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"left\": \t// 左\r\n\t\t\t\t\t\tif (!this.$element.hasClass(\"tabs-horizontal\")) {\r\n\t\t\t\t\t\t\tthis.$element.addClass(\"tabs-horizontal\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._opt.isShowTabDrop = false;\r\n\t\t\t\t\t\t\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"nav\"]').length == 0){\r\n\t        \t\t\t\tthis.$navBox = $('<ul class=\"nav nav-left\" wui-tabs-part=\"nav\"></ul>');\r\n\t        \t\t\t\tthis.$element.prepend(this.$navBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$navBox = this.$element.find('[wui-tabs-part=\"nav\"]');\r\n\t        \t\t\t\tif(!this.$navBox.hasClass(\"nav-left\")){\r\n\t        \t\t\t\t\tthis.$navBox.addClass(\"nav-left\");\r\n\t        \t\t\t\t}\r\n\t        \t\t\t}\r\n\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"tabContent\"]').length == 0){\r\n\t        \t\t\t\tthis.$tabsPageBox = $('<div class=\"tab-content\" wui-tabs-part=\"tabContent\"></div>');\r\n\t        \t\t\t\tthis.$element.append(this.$tabsPageBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$tabsPageBox = this.$element.find('[wui-tabs-part=\"tabContent\"]');\r\n\t        \t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(this.$element.find('[wui-tabs-part=\"nav\"]').length == 0){\r\n\t        \t\t\t\tthis.$navBox = $('<ul class=\"nav ' + param.navStyle + '\" wui-tabs-part=\"nav\"></ul>');\r\n\t        \t\t\t\tthis.$element.prepend(this.$navBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$navBox = this.$element.find('[wui-tabs-part=\"nav\"]');\r\n\t        \t\t\t}\r\n\r\n\t        \t\t\tif(this.$element.find('[wui-tabs-part=\"tabContent\"]').length == 0){\r\n\t        \t\t\t\tthis.$tabsPageBox = $('<div class=\"tab-content ' + param.tabStyle + '\" wui-tabs-part=\"tabContent\"></div>');\r\n\t        \t\t\t\tthis.$element.append(this.$tabsPageBox);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tthis.$tabsPageBox = this.$element.find('[wui-tabs-part=\"tabContent\"]');\r\n\t        \t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t        \t}\r\n\t        \t// console.info(this.$navBox);\r\n\t        \t// console.info(this.$tabsPageBox)\r\n\t        \treturn this;\r\n\t        },\r\n\t        _setHeight: function(){\r\n\t        \tvar self = this, param = this._opt, visibleNavLen = 0;\r\n\r\n\t\t\t\t// 仅显示一个选项页\r\n\t            // if(this.navBoxItemList.length == 1 && !this._opt.isShowTitle){\r\n\t            // \tthis.$navBox.hide();\r\n\t            // }else{\r\n\t            // \tthis.$navBox.show();\r\n\t            // }\r\n\r\n\t            if(!this._opt.isShowTitle){\r\n\t            \tthis.$navBox.show();\r\n\t            \t$.each(this.navBoxItemList, function(i, nav){\r\n\t            \t\tif($(nav).is(':visible')){\r\n\t            \t\t\tvisibleNavLen++;\r\n\t            \t\t}\r\n\t            \t})\r\n\r\n\t            \tif(visibleNavLen == 1){\r\n\t            \t\tthis.$navBox.hide();\r\n\t            \t}\r\n\t            }else{\r\n\t            \tthis.$navBox.show();\r\n\t            }\r\n\r\n\t        \tvar height = self.$element.height(),\r\n\t        \t\twidth = self.$element.width(),\r\n\t        \t\tnavHeight = self.$navBox.height(),\r\n                    offset = this._opt.offset,\r\n                    offsetV = this._opt.offsetV;\r\n\r\n                if(offset.top || offset.bottom){\r\n                \toffsetV = parseFloat(offset.top) + parseFloat(offset.bottom);\r\n                }else{\r\n                \toffsetV = parseFloat(offsetV)\r\n                }\r\n\r\n\t        \t// 若是不显示导航,则高度为0\r\n\t        \tif(!this.$navBox.is(':visible')){\r\n\t        \t\tnavHeight = 0;\r\n\t        \t}\r\n\r\n\t        \t// console.info(param.height);\r\n\t        \tif(param.isFullScreen){\r\n\t\t\t\t\tvar fullScreenSize = wui.getFullScreenSize(\"#\" + this.element);\r\n\t\t\t\t\theight = fullScreenSize.height - offsetV;\r\n\t\t            self.$element.height(height);\r\n\t        \t}else{\r\n\t        \t\tif(param.height && parseInt(param.height) > 0){\r\n\t\t        \t\theight = param.height;\r\n\t\t        \t}else{\r\n\t\t        \t\t// 检测当前页面到底部高度scrollHeight\r\n\t\t        \t\t// 如果检测高度大于\r\n\t\t       //  \t\tvar fullScreenSize = wui.getFullScreenSize(self.$element);\r\n\t\t\t\t\t    // console.info(fullScreenSize);\r\n\t\t\t\t\t    // $(\"#\" + _tabsUsersId).height(fullScreenSize.height - 60);\r\n\t\t        \t}\r\n\t        \t}\r\n\t\t        \t\r\n\r\n\t        \tvar tabContentHeight = 0, tabContentWidth = 0;\r\n\t        \tif(param.direction == \"left\"){\r\n\t\t\t\t\ttabContentHeight = height + \"px\";\r\n\t\t\t\t\ttabContentWidth = \"auto\";\r\n\t\t\t\t\tif(param.navWidth){\r\n        \t\t\t\tthis.$navBox.width(param.navWidth);\r\n        \t\t\t\t\r\n        \t\t\t}\r\n        \t\t\tvar navWidth = this.$navBox.width();\r\n        \t\t\tthis.$tabsPageBox.css({\r\n    \t\t\t\t\t\"margin-left\": (navWidth + param.navMargin) + \"px\"\r\n    \t\t\t\t})\r\n\t\t\t\t\tself.$navBox.css({\r\n\t\t\t\t\t\t\"height\": tabContentHeight\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tui.scroll(this.$navBox);\r\n\t\t\t\t}else if(param.direction == \"right\"){\r\n\t\t\t\t\ttabContentHeight = height + \"px\";\r\n\t\t\t\t\ttabContentWidth = \"auto\";\r\n        \t\t\t\r\n\t\t\t\t\tif(param.navWidth){\r\n        \t\t\t\tthis.$navBox.width(param.navWidth);\r\n        \t\t\t}\r\n        \t\t\tvar navWidth = this.$navBox.width();\r\n        \t\t\tthis.$tabsPageBox.css({\r\n    \t\t\t\t\t\"margin-right\": (navWidth + param.navMargin) + \"px\"\r\n    \t\t\t\t})\r\n\t\t\t\t\tself.$navBox.css({\r\n\t\t\t\t\t\t\"height\": tabContentHeight\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tui.scroll(this.$navBox);\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttabContentHeight = (parseInt(height)-parseInt(navHeight)) - 5 + \"px\";\r\n\t\t\t\t\ttabContentWidth = \"100%\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.$tabsPageBox.css({\r\n\t\t\t\t\t\"height\": tabContentHeight,\r\n\t\t\t\t\t\"width\": tabContentWidth\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.$tabsPageBox.children('.tab-pane').css({\r\n\t\t\t\t\t\"height\": tabContentHeight,\r\n\t\t\t\t\t\"width\": \"100%\",\r\n\t\t\t\t\t\"padding-top\": \"2px\",\r\n\t\t\t\t\t\"padding-bottom\": \"5px\",\r\n\t\t\t\t\t\"padding-left\": \"5px\",\r\n\t\t\t\t\t\"padding-right\": \"5px\"\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t_add: function(tabPage){\r\n\t            if(typeof tabPage != \"object\"){\r\n\t            \tui.logError(\"只能添加传递的对象参数\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t            \treturn;\r\n\t            }\r\n\r\n\t            if(typeof(tabPage.content) != \"string\" || tabPage.content == \"\"){\r\n\t            \tui.logError(\"添加的选项卡内容只能是表示HTML模板id或者是iframe的src的字符串\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t            \treturn;\r\n\t            }\r\n\r\n\t        \tif(this.listeners.indexOf('beforeAdd') > -1) {\r\n\t                if(!this.emit({type:'beforeAdd',target: this.$element})) return ;\r\n\t            }\r\n\r\n\r\n\t            var self = this;\r\n\t            var guid = tabPage.id ? tabPage.id : ui.guid();\r\n\t\t\t\tvar tabContentId = guid + \"_tab\", isRepeat = false, nextIndex = -1;\r\n\t\t\t\t\r\n\t\t\t\t$.each(this.navBoxItemList, function(index, navItem){\r\n\t\t\t\t\t// console.error(navItem)\r\n\t\t\t\t\tif($(this).attr(\"_tabId\") == tabContentId){\r\n\t\t\t\t\t\tnextIndex = index;\r\n\t\t\t\t\t\tisRepeat = true;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif(isRepeat){\r\n\t\t\t\t\t// alert(nextIndex)\r\n\t\t\t\t\tthis.index(nextIndex);\r\n\t\t\t\t\tui.logMessage(\"添加选项页id重复:\" + tabContentId);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $liNav = $(this.liNavTmpl);\r\n\t\t\t\t\r\n\t\t\t\t$liNav.attr(\"_tabId\", tabContentId);\r\n        \t\t$liNav.children('a').attr({\r\n        \t\t\t\"href\": \"#\" + tabContentId,\r\n        \t\t\t\"aria-controls\": tabContentId\r\n        \t\t}).html(tabPage.title);\r\n\r\n        \t\tvar $tabContent = $(this.tabContentTmpl);\r\n        \t\t$tabContent.attr(\"id\", tabContentId);\r\n\r\n        \t\tif(this._opt.isShowTabDrop){\r\n        \t\t\t// 添加到$dropdownBox里面\r\n        \t\t\tthis.$dropdownBox.find('ul').append($liNav);\r\n        \t\t}else{\r\n        \t\t\tthis.$navBox.append($liNav);\r\n        \t\t}\r\n        \t\t\r\n            \tthis.$tabsPageBox.append($tabContent);\r\n\r\n            \tvar $temp = null;\r\n            \ttabPage.dataType = tabPage.dataType ? tabPage.dataType : \"iframe\";\r\n\r\n\r\n            \tif(tabPage.dataType == \"iframe\"){\r\n            \t\tif(!tabPage.otherParam || tabPage.otherParam === undefined || tabPage.otherParam === \"\" || tabPage.otherParam === null){\r\n            \t\t\ttabPage.otherParam = {};\r\n            \t\t}\r\n\r\n\t\t\t\t\t$temp = $(this.iframeTmpl);\r\n            \t\tvar iframeId = guid + \"_iframe\";\r\n            \t\t$temp.attr({\r\n            \t\t\t\"id\": iframeId,\r\n            \t\t\t\"name\": iframeId\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t$liNav.children('a').on('show.bs.tab', function(e){\r\n\r\n\t\t\t\t\t\tif($(this).attr(\"isInit\") == \"true\"){\r\n\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// ui.logMessage(e, \"wui.tabs\", true);\r\n\t\t\t\t\t\t\tvar url = tabPage.content, otherParam = tabPage.otherParam;\r\n\t\t\t\t\t\t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t\t\t\t\t\t\t\tvar _iframe = self.emit({type:'beforeShow',target: e.target, relatedtarget: e.relatedtarget, otherParam: otherParam});\r\n\t\t\t\t\t\t\t\t// console.info(_iframe);\r\n\t\t\t\t\t\t\t\tif(!_iframe){\r\n\t\t\t\t\t\t\t\t\tif(_iframe === false){\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tif(_iframe.otherParam && typeof(_iframe.otherParam) === \"object\"){\r\n\t\t\t\t\t\t\t\t\t\totherParam = _iframe.otherParam;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar _src = ui.buildUrl(url, otherParam);\r\n\t\t\t\t\t\t\t$temp.attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n\t\t\t\t\t\t\t$tabContent.html($temp);\r\n\t\t\t\t\t\t\t$temp.off(\"load\").on(\"load\", function(e){\r\n\t\t\t\t\t\t\t\tif(self.listeners.indexOf('iframeLoaded') > -1) {\r\n\t\t\t\t\t\t\t\t\tif(!self.emit({type:'iframeLoaded',target: e.target, relatedtarget: e.relatedtarget, iframeId: iframeId, src: _src})) return ;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 非动态加载选项卡内容时绑定标志属性\r\n\t            \t\tif(!self._opt.isDynamicLoading){\r\n\t\t\t\t\t\t\t$(this).attr(\"isInit\", \"true\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n            \t\t// 动态加载选项卡内容\r\n\t            \t// if(this._opt.isDynamicLoading){\r\n\t            \t// \t$liNav.children('a').on('show.bs.tab', function(e){\r\n    \t\t\t\t// \t\t// ui.logMessage(e, \"wui.tabs\", true);\r\n\t            \t// \t\tvar url = tabPage.content, otherParam = tabPage.otherParam;\r\n\t            \t// \t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t            \t// \t\t\tvar _iframe = self.emit({type:'beforeShow',target: e.target, relatedtarget: e.relatedtarget, otherParam: otherParam});\r\n\t            \t// \t\t\t// console.info(_iframe);\r\n\t\t\t\t    //             if(!_iframe){\r\n\t\t\t\t    //             \tif(_iframe === false){\r\n\t\t\t\t    //             \t\treturn false;\r\n\t\t\t\t    //             \t}else{\r\n\t\t\t\t    //             \t\treturn ;\r\n\t\t\t\t    //             \t}\r\n\t\t\t\t    //             }else{\r\n\t\t\t\t    //             \tif(_iframe.otherParam && typeof(_iframe.otherParam) === \"object\"){\r\n\t\t\t\t    //             \t\totherParam = _iframe.otherParam;\r\n\t\t\t\t    //             \t}\r\n\t\t\t\t    //             }\r\n\t\t\t\t    //         }\r\n\r\n\t            \t// \t\tvar _src = ui.buildUrl(url, otherParam);\r\n\t\t            // \t\t$temp.attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n\t\t            // \t\t$tabContent.html($temp);\r\n\t            \t// \t\t$temp.off(\"load\").on(\"load\", function(e){\r\n\t\t            // \t\t\tif(self.listeners.indexOf('iframeLoaded') > -1) {\r\n\t\t\t\t\t//                 if(!self.emit({type:'iframeLoaded',target: e.target, relatedtarget: e.relatedtarget, iframeId: iframeId, src: _src})) return ;\r\n\t\t\t\t\t//             }\r\n\t\t            // \t\t})\r\n\t            \t// \t});\r\n\t            \t// }else{\r\n\t            \t// \tvar url = tabPage.content, otherParam = tabPage.otherParam;\r\n\t            \t// \tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t\t\t        //         if(!self.emit({type:'beforeShow',target: $temp[0], otherParam: otherParam})) return ;\r\n\t\t\t        //     }\r\n            \t\t// \tvar _src = ui.buildUrl(url, otherParam);\r\n\t            \t// \t$temp.attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n\t            \t// \t$tabContent.html($temp);\r\n\t            \t// \t$temp.off(\"load\").on(\"load\", function(e){\r\n\t            \t// \t\tif(self.listeners.indexOf('iframeLoaded') > -1) {\r\n\t\t\t\t    //             if(!self.emit({type:'iframeLoaded',target: e.target, iframeId: iframeId, src: _src})) return ;\r\n\t\t\t\t    //         }\r\n\t            \t// \t})\r\n\t            \t// }\r\n\r\n            \t}else if(tabPage.dataType == \"html\"){\r\n            \t\t\r\n            \t\tif(tabPage.content != \"\"){\r\n            \t\t\t// 动态加载选项卡内容\r\n            \t\t\tif(this._opt.isDynamicLoading){\r\n            \t\t\t\t$liNav.children('a').on('show.bs.tab', function(){\r\n            \t\t\t\t\tvar content = tabPage.content;\r\n            \t\t\t\t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t\t            \t\t\t\tvar _html = self.emit({type:'beforeShow',target: $temp[0], content: content});\r\n\t\t\t\t\t                if(!_html){\r\n\t\t\t\t\t                \tif(_html === false){\r\n\t\t\t\t\t                \t\treturn false;\r\n\t\t\t\t\t                \t}else{\r\n\t\t\t\t\t                \t\treturn ;\r\n\t\t\t\t\t                \t}\r\n\t\t\t\t\t                }else{\r\n\t\t\t\t\t                \tif(typeof(_html.content) === \"string\"){\r\n\t\t\t\t\t                \t\tcontent = _html.content;\r\n\t\t\t\t\t                \t}\r\n\t\t\t\t\t                }\r\n\t\t\t\t\t            }\r\n\r\n\t\t\t            \t\t$tabContent.html(content);\r\n\t\t            \t\t});\r\n\t            \t\t}else{\r\n\t            \t\t\tvar content = tabPage.content;\r\n        \t\t\t\t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t            \t\t\t\tvar _html = self.emit({type:'beforeShow',target: $temp[0], content: content});\r\n\t\t\t\t                if(!_html){\r\n\t\t\t\t                \treturn ;\r\n\t\t\t\t                }else{\r\n\t\t\t\t                \tif(typeof(_html.content) === \"string\"){\r\n\t\t\t\t                \t\tcontent = _html.content;\r\n\t\t\t\t                \t}\r\n\t\t\t\t                }\r\n\t\t\t\t            }\r\n\r\n\t\t            \t\t$tabContent.html(content);\r\n\t            \t\t}\r\n            \t\t}\r\n            \t}\r\n\r\n            \t$liNav.children('a')\r\n\t\t\t\t\t.on('show.bs.tab', function(e){\r\n    \t\t\t\t\t\treturn self._show(e);\r\n    \t\t\t\t\t})\r\n\t\t\t\t\t\t.on('hide.bs.tab', function(e){\r\n\t    \t\t\t\t\t\treturn self._hide(e);\r\n\t    \t\t\t\t\t})\r\n\t\t\t\t\t\t\t.on('shown.bs.tab', function(e){\r\n\t        \t\t\t\t\t\treturn self._shown(e);\r\n\t        \t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.on('hidden.bs.tab', function(e){\r\n\t\t        \t\t\t\t\t\treturn self._hidden(e);\r\n\t\t        \t\t\t\t\t}).on(\"click\", function(e){\r\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif($(this).attr(\"disabled\")){\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t$(this).tab('show');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t            \t\r\n\t\t\t\t\t\t            \t});\r\n\r\n            \tif(this._opt.isEnableRemove){\r\n            \t\tvar $i = $(this.deleteTpml);\r\n            \t\t$liNav.children('a').addClass(\"is-close\").append($i);\r\n            \t\t$i.on(\"click\", function(e){\r\n            \t\t\te.preventDefault();\r\n            \t\t\t// self._remove(this);\r\n            \t\t\tself._remove($liNav);\r\n            \t\t})\r\n            \t}\r\n\r\n            \tif(tabPage.hidden){\r\n            \t\t$liNav.hide();\r\n            \t}\r\n\r\n            \tthis.navBoxItemList.push($liNav[0]);\r\n\r\n        \t\t// console.info(this.navBoxItemList);\r\n            \t// if(this.navBoxItemList.length == 1 && this._opt.index != null){\r\n            \t// \tthis.index(0);\r\n            \t// }\r\n\r\n            \tif(this._opt.isShowTabDrop){\r\n            \t\tthis.layout();\t// 重新刷新显隐\r\n            \t}else{\r\n            \t\tthis._setHeight();\r\n            \t}\r\n\r\n            \t// this.index(this.navBoxItemList.length);\r\n\r\n            \tif(this.listeners.indexOf('added') > -1) {\r\n\t                if(!this.emit({type:'added',target: $liNav})) return ;\r\n\t            }\r\n\r\n            \treturn this;\r\n\t        },\r\n\t        add: function(tabPage){\r\n\r\n\t\t\t\tvar isSuccess = this._add(tabPage);\r\n\r\n\t\t\t\t// console.error(this.index())\r\n\t\t\t\t// 如果添加成功且设置默认打开\r\n\t\t\t\tif(isSuccess){\r\n\t\t\t\t\tif(tabPage.open){\r\n\t\t\t\t\t\tthis.index(this.navBoxItemList.length);\r\n\t\t\t\t\t}else if(this.index() < 0){\r\n\t\t\t\t\t\tthis.index(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t            // if(typeof tabPage != \"object\"){\r\n\t            // \tui.logError(\"只能添加传递的对象参数\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t            // \treturn;\r\n\t            // }\r\n\r\n\t            // if(typeof(tabPage.content) != \"string\" || tabPage.content == \"\"){\r\n\t            // \tui.logError(\"添加的选项卡内容只能是表示HTML模板id或者是iframe的src的字符串\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t            // \treturn;\r\n\t            // }\r\n\r\n\t        \t// if(this.listeners.indexOf('beforeAdd') > -1) {\r\n\t            //     if(!this.emit({type:'beforeAdd',target: this.$element})) return ;\r\n\t            // }\r\n\r\n\r\n\t            // var self = this;\r\n\t            // var guid = ui.guid();\r\n            \t// var tabContentId = guid + \"_tab\";\r\n\r\n            \t// var $liNav = $(this.liNavTmpl);\r\n        \t\t// $liNav.children('a').attr({\r\n        \t\t// \t\"href\": \"#\" + tabContentId,\r\n        \t\t// \t\"aria-controls\": tabContentId\r\n        \t\t// }).html(tabPage.title);\r\n\r\n        \t\t// var $tabContent = $(this.tabContentTmpl);\r\n        \t\t// $tabContent.attr(\"id\", tabContentId);\r\n\r\n        \t\t// if(this._opt.isShowTabDrop){\r\n        \t\t// \t// 添加到$dropdownBox里面\r\n        \t\t// \tthis.$dropdownBox.find('ul').append($liNav);\r\n        \t\t// }else{\r\n        \t\t// \tthis.$navBox.append($liNav);\r\n        \t\t// }\r\n        \t\t\r\n            \t// this.$tabsPageBox.append($tabContent);\r\n\r\n            \t// var $temp = null;\r\n            \t// tabPage.dataType = tabPage.dataType ? tabPage.dataType : \"iframe\";\r\n\r\n\r\n            \t// if(tabPage.dataType == \"iframe\"){\r\n            \t// \tif(!tabPage.otherParam || tabPage.otherParam === undefined || tabPage.otherParam === \"\" || tabPage.otherParam === null){\r\n            \t// \t\ttabPage.otherParam = {};\r\n            \t// \t}\r\n\r\n\t\t\t\t// \t$temp = $(this.iframeTmpl);\r\n            \t// \tvar iframeId = guid + \"_iframe\";\r\n            \t// \t$temp.attr({\r\n            \t// \t\t\"id\": iframeId,\r\n            \t// \t\t\"name\": iframeId\r\n            \t// \t});\r\n\r\n            \t// \t// 动态加载选项卡内容\r\n\t            // \tif(this._opt.isDynamicLoading){\r\n\t            // \t\t$liNav.children('a').on('show.bs.tab', function(e){\r\n    \t\t\t// \t\t\t// ui.logMessage(e, \"wui.tabs\", true);\r\n\t            // \t\t\tvar url = tabPage.content, otherParam = tabPage.otherParam;\r\n\t            // \t\t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t            // \t\t\t\tvar _iframe = self.emit({type:'beforeShow',target: e.target, relatedtarget: e.relatedtarget, otherParam: otherParam});\r\n\t            // \t\t\t\t// console.info(_iframe);\r\n\t\t\t\t//                 if(!_iframe){\r\n\t\t\t\t//                 \tif(_iframe === false){\r\n\t\t\t\t//                 \t\treturn false;\r\n\t\t\t\t//                 \t}else{\r\n\t\t\t\t//                 \t\treturn ;\r\n\t\t\t\t//                 \t}\r\n\t\t\t\t//                 }else{\r\n\t\t\t\t//                 \tif(_iframe.otherParam && typeof(_iframe.otherParam) === \"object\"){\r\n\t\t\t\t//                 \t\totherParam = _iframe.otherParam;\r\n\t\t\t\t//                 \t}\r\n\t\t\t\t//                 }\r\n\t\t\t\t//             }\r\n\r\n\t            // \t\t\tvar _src = ui.buildUrl(url, otherParam);\r\n\t\t        //     \t\t$temp.attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n\t\t        //     \t\t$tabContent.html($temp);\r\n\t            // \t\t\t$temp.off(\"load\").on(\"load\", function(e){\r\n\t\t        //     \t\t\tif(self.listeners.indexOf('iframeLoaded') > -1) {\r\n\t\t\t\t// \t                if(!self.emit({type:'iframeLoaded',target: e.target, relatedtarget: e.relatedtarget, iframeId: iframeId, src: _src})) return ;\r\n\t\t\t\t// \t            }\r\n\t\t        //     \t\t})\r\n\t            // \t\t});\r\n\t            // \t}else{\r\n\t            // \t\tvar url = tabPage.content, otherParam = tabPage.otherParam;\r\n\t            // \t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t\t\t    //             if(!self.emit({type:'beforeShow',target: $temp[0], otherParam: otherParam})) return ;\r\n\t\t\t    //         }\r\n            \t// \t\tvar _src = ui.buildUrl(url, otherParam);\r\n\t            // \t\t$temp.attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n\t            // \t\t$tabContent.html($temp);\r\n\t            // \t\t$temp.off(\"load\").on(\"load\", function(e){\r\n\t            // \t\t\tif(self.listeners.indexOf('iframeLoaded') > -1) {\r\n\t\t\t\t//                 if(!self.emit({type:'iframeLoaded',target: e.target, iframeId: iframeId, src: _src})) return ;\r\n\t\t\t\t//             }\r\n\t            // \t\t})\r\n\t            // \t}\r\n\r\n            \t// }else if(tabPage.dataType == \"html\"){\r\n            \t\t\r\n            \t// \tif(tabPage.content != \"\"){\r\n            \t// \t\t// 动态加载选项卡内容\r\n            \t// \t\tif(this._opt.isDynamicLoading){\r\n            \t// \t\t\t$liNav.children('a').on('show.bs.tab', function(){\r\n            \t// \t\t\t\tvar content = tabPage.content;\r\n            \t// \t\t\t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t\t        //     \t\t\t\tvar _html = self.emit({type:'beforeShow',target: $temp[0], content: content});\r\n\t\t\t\t// \t                if(!_html){\r\n\t\t\t\t// \t                \tif(_html === false){\r\n\t\t\t\t// \t                \t\treturn false;\r\n\t\t\t\t// \t                \t}else{\r\n\t\t\t\t// \t                \t\treturn ;\r\n\t\t\t\t// \t                \t}\r\n\t\t\t\t// \t                }else{\r\n\t\t\t\t// \t                \tif(typeof(_html.content) === \"string\"){\r\n\t\t\t\t// \t                \t\tcontent = _html.content;\r\n\t\t\t\t// \t                \t}\r\n\t\t\t\t// \t                }\r\n\t\t\t\t// \t            }\r\n\r\n\t\t\t    //         \t\t$tabContent.html(content);\r\n\t\t        //     \t\t});\r\n\t            // \t\t}else{\r\n\t            // \t\t\tvar content = tabPage.content;\r\n        \t\t// \t\t\tif(self.listeners.indexOf('beforeShow') > -1) {\r\n\t            // \t\t\t\tvar _html = self.emit({type:'beforeShow',target: $temp[0], content: content});\r\n\t\t\t\t//                 if(!_html){\r\n\t\t\t\t//                 \treturn ;\r\n\t\t\t\t//                 }else{\r\n\t\t\t\t//                 \tif(typeof(_html.content) === \"string\"){\r\n\t\t\t\t//                 \t\tcontent = _html.content;\r\n\t\t\t\t//                 \t}\r\n\t\t\t\t//                 }\r\n\t\t\t\t//             }\r\n\r\n\t\t        //     \t\t$tabContent.html(content);\r\n\t            // \t\t}\r\n            \t// \t}\r\n            \t// }\r\n\r\n            \t// $liNav.children('a')\r\n\t\t\t\t// \t.on('show.bs.tab', function(e){\r\n    \t\t\t// \t\t\treturn self._show(e);\r\n    \t\t\t// \t\t})\r\n\t\t\t\t// \t\t.on('hide.bs.tab', function(e){\r\n\t    \t\t// \t\t\t\treturn self._hide(e);\r\n\t    \t\t// \t\t\t})\r\n\t\t\t\t// \t\t\t.on('shown.bs.tab', function(e){\r\n\t        \t// \t\t\t\t\treturn self._shown(e);\r\n\t        \t// \t\t\t\t})\r\n\t\t\t\t// \t\t\t\t.on('hidden.bs.tab', function(e){\r\n\t\t        // \t\t\t\t\t\treturn self._hidden(e);\r\n\t\t        // \t\t\t\t\t}).on(\"click\", function(e){\r\n\t\t\t\t// \t\t            \t\te.preventDefault();\r\n\t\t\t\t// \t\t\t            \t$(this).tab('show');\r\n\t\t\t\t// \t\t            \t});\r\n\r\n            \t// if(this._opt.isEnableRemove){\r\n            \t// \tvar $i = $(this.deleteTpml);\r\n            \t// \t$liNav.children('a').append($i);\r\n            \t// \t$i.on(\"click\", function(e){\r\n            \t// \t\te.preventDefault();\r\n            \t// \t\t// self._remove(this);\r\n            \t// \t\tself._remove($liNav);\r\n            \t// \t})\r\n            \t// }\r\n\r\n            \t// if(tabPage.hidden){\r\n            \t// \t$liNav.hide();\r\n            \t// }\r\n\r\n            \t// this.navBoxItemList.push($liNav[0]);\r\n\r\n        \t\t// // console.info(this.navBoxItemList);\r\n            \t// // if(this.navBoxItemList.length == 1 && this._opt.index != null){\r\n            \t// // \tthis.index(0);\r\n            \t// // }\r\n\r\n            \t// if(this._opt.isShowTabDrop){\r\n            \t// \tthis.layout();\t// 重新刷新显隐\r\n            \t// }else{\r\n            \t// \tthis._setHeight();\r\n            \t// }\r\n\r\n            \t// this.index(this.navBoxItemList.length);\r\n\r\n            \t// if(this.listeners.indexOf('added') > -1) {\r\n\t            //     if(!this.emit({type:'added',target: $liNav})) return ;\r\n\t            // }\r\n\r\n            \treturn this;\r\n\t        },\r\n\t        _remove: function(oLi){\r\n\r\n\t        \t// var $i = $(oI);\r\n\t        \tvar $a = $(oLi).children('a'), index = -1;\r\n    \t\t\tif($($a.attr(\"href\")) && $($a.attr(\"href\")).length > 0){\r\n    \t\t\t\t$($a.attr(\"href\")).remove();\r\n    \t\t\t}\r\n    \t\t\t// console.error(oLi)\r\n\t        \tif($(oLi).hasClass(\"active\")){\r\n\t        \t\tindex = $(oLi).index();\r\n\t        \t}\r\n\t        \t$(oLi).remove();\r\n\r\n    \t\t\tthis.navBoxItemList = this._getList();\r\n\r\n\t        \tif(index > -1){\r\n\t        \t\tthis.index(index);\r\n\t        \t}\r\n\t        \t\r\n    \t\t\tif(this._opt.isShowTabDrop){\r\n            \t\tthis.layout();\t// 重新刷新显隐\r\n            \t}else{\r\n            \t\tthis._setHeight();\r\n            \t}\r\n\t\t\t},\r\n\t\t\thide: function(tabPanels){\r\n\t\t\t\tvar that = this;\r\n\r\n\t\t\t\tif(ui.isArray(tabPanels)){\r\n\t\t\t\t\t$.each(tabPanels, function(ind, panelInd){\r\n\t\t\t\t\t\tthat.navBoxItemList[ind] && $(that.navBoxItemList[ind]).hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t}else if(ui.isNumber(tabPanels)){\r\n\t\t\t\t\tthat.navBoxItemList[tabPanels] && $(that.navBoxItemList[tabPanels]).hide();\r\n\t\t\t\t}else if(tabPanels == \"all\"){\r\n\t\t\t\t\t$.each(that.navBoxItemList, function(ind, panel){\r\n\t\t\t\t\t\t$(panel).hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n            \tif(this._opt.isShowTabDrop){\r\n            \t\tthis.layout();\t// 重新刷新显隐\r\n            \t}else{\r\n            \t\tthis._setHeight();\r\n            \t}\r\n\r\n\t\t\t},\r\n\t\t\tshow: function(tabPanels, pageParams){\r\n\t\t\t\tvar that = this;\r\n\r\n\t\t\t\tif(ui.isArray(tabPanels)){\r\n\t\t\t\t\t$.each(tabPanels, function(ind, panelInd){\r\n\r\n\t\t\t\t\t\tthat.navBoxItemList[ind] && $(that.navBoxItemList[ind]).show();\r\n\t\t\t\t\t\t// if(that.navBoxItemList[ind]){\r\n\t\t\t\t\t\t// \t$(that.navBoxItemList[ind]).show();\r\n\r\n\t\t\t\t\t\t// \tvar $theIframe = $($(that.navBoxItemList[ind]).children(\"a\").attr(\"href\")).children(\"iframe\");\r\n\t\t\t\t\t\t// \tif($theIframe.length > 0){\r\n\t\t\t\t\t\t// \t\t$theIframe.attr(\"src\");\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t})\r\n\t\t\t\t}else if(ui.isNumber(tabPanels)){\r\n\t\t\t\t\t// console.error($(that.navBoxItemList[tabPanels]))\r\n\t\t\t\t\tthat.navBoxItemList[tabPanels] && $(that.navBoxItemList[tabPanels]).show();\r\n\t\t\t\t}else if(tabPanels == \"all\"){\r\n\t\t\t\t\t$.each(that.navBoxItemList, function(ind, panel){\r\n\t\t\t\t\t\t$(panel).show();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n            \tif(this._opt.isShowTabDrop){\r\n            \t\tthis.layout();\t// 重新刷新显隐\r\n            \t}else{\r\n            \t\tthis._setHeight();\r\n            \t}\r\n\r\n\t\t\t},\r\n\t        disabled: function(){\r\n\t        \tvar self = this, _lists = this.navBoxItemList, _len = _lists.length;\r\n\r\n\t        \tfor(var i = 0; i < _len; i++){\r\n\t        \t\tvar navBoxItemList = _lists[i];\r\n\r\n            \t\t$(navBoxItemList).children('a').children('i').remove();\r\n\t        \t}\r\n\t        },\r\n\t        enabled: function(){\r\n\t        \tvar self = this, _lists = this.navBoxItemList, _len = _lists.length;\r\n\r\n\t        \tfor(var i = 0; i < _len; i++){\r\n\t        \t\tvar navBoxItemList = _lists[i];\r\n\r\n\t        \t\tvar $i = $(this.deleteTpml);\r\n            \t\t$(navBoxItemList).children('a').append($i);\r\n            \t\t$i.on(\"click\", function(e){\r\n            \t\t\te.preventDefault();\r\n            \t\t\t// self._remove(this);\r\n            \t\t\tself._remove($(navBoxItemList));\r\n            \t\t})\r\n\t        \t}\r\n\t        },\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t// console.info(params);\r\n\t        \t// console.info(newOptions);\r\n\t        \t\r\n\t        \tif(!!newOptions){\r\n\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t\t\t\t\t\tthis.dom = this._resetOption(newOptions); \t// 转化为DOM节点\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME+\".\"+_widgetName, true) : params[newOptions];\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t}else{\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n\t        _resetOption: function(newOptions){\r\n\t        \tvar self = this, params = this._opt, isResetPage = false;\r\n\r\n\t        \t// isShowTabDrop: {string} 是否选项卡个数超出隐藏,默认是true\r\n\t        \tif(newOptions.isShowTabDrop != undefined && params.isShowTabDrop != newOptions.isShowTabDrop){\r\n                    this._opt.isShowTabDrop = newOptions.isShowTabDrop;\r\n                    this._setTabdrop(newOptions.isShowTabDrop);\r\n\t        \t}\r\n\r\n\t        \t// height: {number} 选项卡外层容器高度,若为0，则采用初始化容器的节点自身的高度,默认是0\r\n\t        \tif(newOptions.height != undefined && params.height != parseInt(newOptions.height)){\r\n\t        \t\tvar height = newOptions.height;\r\n\t        \t\tif(height == false){\r\n\t        \t\t\theight = 0;\r\n\t        \t\t}else if(typeof(height) != \"number\"){\r\n\t        \t\t\theight = parseInt(height);\r\n\t        \t\t}\r\n\r\n\t        \t\tif(height < 0){\r\n\t        \t\t\tui.logWarn(\"height参数必须为非负整数\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t        \t\t\theight = 0;\r\n\t        \t\t}\r\n\t        \t\tthis._opt.height = height;\r\n\t        \t\tself._setHeight();\r\n\t        \t}\r\n\r\n\t        \t// index: {number} 选项卡外层容器高度,若为0，则采用初始化容器的节点自身的高度,默认是0\r\n\t        \tif(newOptions.index != undefined && params.index != parseInt(newOptions.index)){\r\n\t        \t\tvar index = newOptions.height;\r\n\t        \t\tif(index == false){\r\n\t        \t\t\tindex = 0;\r\n\t        \t\t}else if(typeof(index) != \"number\"){\r\n\t        \t\t\tindex = parseInt(index);\r\n\t        \t\t}\r\n\r\n\t        \t\tif(index < 0){\r\n\t        \t\t\tui.logWarn(\"index参数必须为非负整数\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t        \t\t\tindex = 0;\r\n\t        \t\t}\r\n\t        \t\tthis._opt.index = index;\r\n\t        \t\tthis.index(index);\r\n\t        \t}\r\n\r\n\t        \t// isEnableRemove: {string} 是否可删除：若true会在每个选项中增加删除按钮,默认是false\r\n\t        \tif(newOptions.isEnableRemove != undefined && params.isEnableRemove != newOptions.isEnableRemove){\r\n                    this._opt.isEnableRemove = newOptions.isEnableRemove;\r\n                    this._setEnableRemove(newOptions.isEnableRemove);\r\n\t        \t}\r\n\r\n\t        \t// isShowTitle: {string} 当选项卡只有一个时，是否显示选项卡标题,默认是true\r\n\t        \tif(newOptions.isShowTitle != undefined && params.isShowTitle != newOptions.isShowTitle){\r\n                    this._opt.isShowTitle = newOptions.isShowTitle;\r\n\r\n\t\t        \tself._setHeight();\r\n\t        \t}\r\n\r\n\t        \t// tabPages: {string} 更新选项卡页面\r\n\t        \tif(newOptions.tabPages !== undefined){\r\n\t        \t\t// console.error(\"tabPages\");\r\n                    this._opt.tabPages = newOptions.tabPages;\r\n                    this.empty();\r\n                    // 添加选项页\r\n\t\t            var tabPages = newOptions.tabPages;\r\n\t\t            var len = tabPages.length;\r\n\t\t            for(var i = 0; i < len; i++){\r\n\t\t            \tvar tabPage = tabPages[i];\r\n\t\t            \tthis._add(tabPage);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this._opt.index != null){\r\n\t\t\t\t\t\tthis.index(this._opt.index);\r\n\t\t\t\t\t}\r\n\t        \t}\r\n\t        },\r\n\t        _setEnableRemove: function(isEnableRemove){\r\n\t        \tvar self = this;\r\n\t        \tif(isEnableRemove){\r\n        \t\t\t$.each(this.navBoxItemList, function(i, oLi){\r\n        \t\t\t\tvar $li = $(oLi);\r\n        \t\t\t\tif($li.find(\"i\").length == 0){\r\n        \t\t\t\t\tvar $i = $(self.deleteTpml);\r\n\r\n        \t\t\t\t\t$li.children('a').append($i);\r\n        \t\t\t\t\t$i.on(\"click\", function(e){\r\n\t\t            \t\t\te.preventDefault();\r\n\t\t            \t\t\t// self._remove(this);\r\n\t\t            \t\t\tself._remove($li[0]);\r\n\t\t            \t\t})\r\n        \t\t\t\t}\r\n        \t\t\t})\r\n        \t\t}else{\r\n        \t\t\t$.each(this.navBoxItemList, function(i, oLi){\r\n        \t\t\t\tvar $li = $(oLi);\r\n        \t\t\t\t$li.find(\"i\").remove();\r\n        \t\t\t})\r\n        \t\t}\r\n\t        },\r\n\t\t\t// 打开选项卡或者获取当前打开的选项卡\r\n\t\t\t// @param index string 选项卡索引，从0开始\r\n\t        index: function(index, callback){\r\n\r\n\t            if(typeof (index) === \"string\" || typeof(index) === \"number\"){\r\n\t\t            // if(this.listeners.indexOf('index') > -1) {\r\n\t\t            //     if(!this.emit({type:'index',target: this.$element})) return ;\r\n\t\t            // }\r\n\r\n\t            \tvar len = this.navBoxItemList.length;\r\n\t            \tif(len == 0){\r\n\t            \t\tui.logMessage(\"当前没有可打开的选项卡页\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t            \t\treturn;\r\n\t            \t}\r\n\t\t            index = parseInt(index);\r\n\t\t            if(index < 0){\r\n\t\t            \tindex = 0;\r\n\t\t            }else if(index >= len){\r\n\t\t            \tindex = (len - 1);\r\n\t\t            }\r\n\r\n\t\t            var $li = $(this.navBoxItemList).eq(index);\r\n\r\n\t\t            if($li.hasClass('active')){\r\n\r\n\t\t            }else{\r\n\t\t            \t$li.children(\"a\").tab('show');\r\n\t\t            }\r\n\r\n\t\t            var toggleTabElement = $li.children(\"a\").attr(\"href\");\r\n\t\t            var childrenDom = null;\r\n\t\t            if($(toggleTabElement).children('iframe').length > 0){\r\n\t\t            \tchildrenDom = $(toggleTabElement).children('iframe')[0];\r\n\t\t            }else{\r\n\t\t            \tchildrenDom = $(toggleTabElement).get(0);\r\n\t\t            }\r\n                \t// var iframe = $(toggleTabElement).children('iframe')[0];\r\n\t\t            \r\n\t\t            callback && typeof(callback) === \"function\" && callback(index, $li[0], childrenDom);\r\n\r\n\t\t\t\t\t// alert(\"Fun:index() = \" + index)\r\n\t\t            return index;\r\n\t            }else if(index && typeof(index) === \"function\"){\r\n\t            \tvar activeIndex = 0, thisEl = null;\r\n\t            \t$(this.navBoxItemList).each(function(i, el){\r\n\t            \t\tif($(el).hasClass('active')){\r\n\t            \t\t\tthisEl = el;\r\n\t            \t\t\tactiveIndex = i;\r\n\t            \t\t\treturn false;\r\n\t            \t\t}\r\n\t            \t})\r\n\r\n\t\t            var toggleTabElement = $(thisEl).children(\"a\").attr(\"href\");\r\n                \t// var iframe = $(toggleTabElement).children('iframe')[0];\r\n                \tvar childrenDom = null;\r\n\t\t            if($(toggleTabElement).children('iframe').length > 0){\r\n\t\t            \tchildrenDom = $(toggleTabElement).children('iframe')[0];\r\n\t\t            }else{\r\n\t\t            \tchildrenDom = $(toggleTabElement).get(0);\r\n\t\t            }\r\n\t\t            \r\n\t            \tindex(activeIndex, thisEl, childrenDom);\r\n\t            \treturn activeIndex;\r\n\t            }else{\r\n\t            \tvar activeIndex = -1, thisEl = null;\r\n\t            \t$(this.navBoxItemList).each(function(i, el){\r\n\t            \t\tif($(el).hasClass('active')){\r\n\t            \t\t\tthisEl = el;\r\n\t            \t\t\tactiveIndex = i;\r\n\t            \t\t\treturn false;\r\n\t            \t\t}\r\n\t            \t})\r\n\r\n\t\t            var toggleTabElement = $(thisEl).children(\"a\").attr(\"href\");\r\n                \t// var iframe = $(toggleTabElement).children('iframe')[0];\r\n                \tvar childrenDom = null;\r\n\t\t            if($(toggleTabElement).children('iframe').length > 0){\r\n\t\t            \tchildrenDom = $(toggleTabElement).children('iframe')[0];\r\n\t\t            }else{\r\n\t\t            \tchildrenDom = $(toggleTabElement).get(0);\r\n\t\t            }\r\n\t\t            \r\n\t            \tcallback && typeof(callback) === \"function\" && callback(activeIndex, thisEl, childrenDom);\r\n\t            \treturn activeIndex;\r\n\t            }\r\n\t        },\r\n\t        remove: function(index, callback){\r\n\t        \tif(this.listeners.indexOf('beforeRemove') > -1) {\r\n\t                if(!this.emit({type:'beforeRemove',target: this.$element})) return ;\r\n\t            }\r\n\r\n\t            var len = this.navBoxItemList.length;\r\n\t            if(len == 0){\r\n\t            \tui.logError(\"当前没有可删除的选项卡页\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t            \treturn;\r\n\t            }\r\n\t            index = parseInt(index);\r\n\t            if(index < 0){\r\n\t            \tindex = 0;\r\n\t            }else if(index >= len){\r\n\t            \tindex = (len - 1);\r\n\t            }\r\n\r\n\t            var $li = $(this.navBoxItemList).eq(index);\r\n\t            var $tabContent = $($li.children('a').attr(\"href\"));\r\n\t            // 先判断当前要关闭的tab选项卡有没有active类，再判断当前选项卡是否最后一个，如果是则给前一个选项卡以及内容添加active，否则给下一个添加active类\r\n\t            if($li.hasClass('active')){\r\n\t            \t$(this.navBoxItemList).eq(index).remove();\t// 删除页面元素\r\n\t            \tthis.navBoxItemList.splice(index, 1);\t\t\t// 删除数组\r\n\t            \tthis.index(index);\t// 展开(index+1)页，记住这里是已经删除后的，所以长度会-1\r\n\t            }else{\r\n\t            \t$(this.navBoxItemList).eq(index).remove();\t// 删除页面元素\r\n\t            \tthis.navBoxItemList.splice(index, 1);\t\t// 删除数组\r\n\t            }\r\n\t            \r\n\t            $tabContent.remove();\r\n\r\n\t            if(this._opt.isShowTabDrop){\r\n            \t\tthis.layout();\t// 重新刷新显隐\r\n            \t}else{\r\n            \t\tthis._setHeight();\r\n            \t}\r\n\r\n\t        \tif(this.listeners.indexOf('removed') > -1) {\r\n\t                if(!this.emit({type:'removed',target: this.$element})) return ;\r\n\t            }\r\n\t            callback && typeof(callback) === \"function\" && callback();\r\n\r\n\t            return this;\r\n\t        },\r\n\t        empty: function(callback){\r\n\t        \t// if(this.listeners.indexOf('empty') > -1) {\r\n\t         //        if(!this.emit({type:'empty',target: this.dom})) return ;\r\n\t         //    }\r\n\r\n\t            if(this.navBoxItemList.length == 0){\r\n\t            \tui.logMessage(\"当前没有可删除的选项卡页\", \"wui.tabs\", true);\r\n\t            \treturn;\r\n\t            }\r\n\r\n\t            var _len = this.navBoxItemList.length,\r\n\t            \tnewBoxItemList = [];\r\n\t            // console.error(this.navBoxItemList)\r\n\t            for(var i = 0; i < _len; i++){\r\n\t            \tvar oLi = this.navBoxItemList[i];\r\n\t            \tif($(oLi).attr(\"wui-attr\") === \"nav\"){\r\n\t            \t\tvar $a = $(oLi).children('a');\r\n\r\n\t\t    \t\t\tif($($a.attr(\"href\")) && $($a.attr(\"href\")).length > 0){\r\n\t\t    \t\t\t\t$($a.attr(\"href\")).remove();\r\n\t\t    \t\t\t}\r\n\t\t\t        \t$(oLi).remove();\r\n\t            \t}else{\r\n\t            \t\tnewBoxItemList.push(oLi)\r\n\t            \t}\r\n\t            }\r\n\r\n\t            this.navBoxItemList = newBoxItemList;\r\n\t\t            \r\n\r\n\t            // this.$navBox.find('>li').not('.tabdrop').remove();\r\n\t            // this.$tabsPageBox.empty();\r\n\t            // this.$dropdownBox.addClass('hide').find('ul').empty();\r\n\t            // this.navBoxItemList = [];\r\n        \t\tthis._setHeight();\r\n\r\n\t            callback && typeof(callback) === \"function\" && callback();\r\n\t            return this;\r\n\t        },\r\n\t        destroy: function(){\r\n\t        \tif(this.listeners.indexOf('destroy') > -1) {\r\n\t                if(!this.emit({type:'destroy',target: this.dom})) return ;\r\n\t            }\r\n\r\n\t            this.$element.replaceWith(this.initDom);\r\n            \tthis.$element.removeData(_pluginDataName);\r\n\r\n\t            // callback && typeof(callback) === \"function\" && callback();\r\n\t            return this;\r\n\t        },\r\n\t        refresh: function(callback){\r\n\t        \tvar self = this, otherParam = {};\r\n\r\n\t        \t// 获取当前选项卡，重新复制内容\r\n\t        \tvar activeIndex = 0, thisEl = null;\r\n            \t$(this.navBoxItemList).each(function(i, el){\r\n            \t\tif($(el).hasClass('active')){\r\n            \t\t\tthisEl = el;\r\n            \t\t\tactiveIndex = i;\r\n            \t\t\treturn false;\r\n            \t\t}\r\n            \t})\r\n\r\n            \tvar toggleTabElement = $(thisEl).children(\"a\").attr(\"href\");\r\n            \tvar $iframe = $(toggleTabElement).children('iframe');\r\n\r\n            \tvar _src = $iframe.attr(\"src\");\r\n            \tif(self.listeners.indexOf('beforeShow') > -1) {\r\n    \t\t\t\tvar _iframe = self.emit({type:'beforeShow',target: $temp[0], otherParam: otherParam});\r\n\t                if(!_iframe){\r\n\t                \tif(_iframe === false){\r\n\t                \t\treturn false;\r\n\t                \t}else{\r\n\t                \t\treturn ;\r\n\t                \t}\r\n\t                }else{\r\n\t                \tif(_iframe.otherParam && typeof(_iframe.otherParam) === \"object\"){\r\n\t                \t\totherParam = _iframe.otherParam;\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\r\n\t            var temp = {};\r\n\t        \tif(callback){\r\n\t        \t\tif(typeof callback === \"function\"){\r\n\t        \t\t\tcallback(temp);\r\n\t        \t\t}else if(typeof callback === \"object\"){\r\n\t        \t\t\ttemp = callback;\r\n\t        \t\t}\r\n\t        \t}\r\n\r\n\t        \tif(typeof temp == \"object\" && !(ui.isArray(temp))){\r\n\t        \t\tfor(var key in temp){\r\n\t        \t\t\totherParam[key] = temp[key];\r\n\t        \t\t}\r\n\t        \t}\r\n\r\n            \tvar src = ui.buildUrl(_src, otherParam);\r\n        \t\t$iframe.attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n       \t\t\treturn this;\r\n\t        },\r\n\t\t\ton: function(type, handler){\r\n\t\t\t\tif(_widgetEventType.indexOf(type) > -1){\t// WUI组件事件监听\r\n\t            \tif(typeof this.handlers[type] === 'undefined') {\r\n\t\t                this.handlers[type] = [];\r\n\t\t                this.listeners.push(type);\r\n\t\t            }\r\n\t\t            this.handlers[type].push(handler);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        off: function(type, handler){\r\n\t        \tvar _i, _j, _listeners, _handlers, _len;\r\n\t        \tif(_widgetEventType.indexOf(type) > -1){\t// 取消WUI组件事件监听\r\n\t        \t\tif(this.handlers[type] instanceof Array) {\r\n\t        \t\t\t_handlers = this.handlers[type];\r\n\t        \t\t\t_listeners = this.listeners;\r\n\r\n\t        \t\t\tfor(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n\t\t                    if(_listeners[_i] === type) {\r\n\t\t                        break;\r\n\t\t                    }\r\n\t\t                }\r\n\r\n\t\t                if(handler === undefined){\r\n\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t                \tdelete this.handlers[type];\r\n\t\t                }else{\r\n\t\t                \tfor(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n\t\t\t                    if(_handlers[_j] === handler) {\r\n\t\t\t                        break;\r\n\t\t\t                    }\r\n\t\t\t                }\r\n\t\t\t                if(_j < _len){\r\n\t\t\t                \tthis.handlers[type].splice(_j, 1);\r\n\t\t\t                \tif(this.handlers[type].length == 0){\r\n\t\t\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t\t\t                }\r\n\t\t\t                }\r\n\t\t                }\r\n\t\t            }\r\n\t        \t}\r\n\t\t        return this;\r\n\t        },\r\n\t        emit: function(event){\r\n\r\n\t            if(!event.target) {\r\n\t                event.target = this;\r\n\t            }\r\n\t            if(this.handlers[event.type] instanceof Array) {\r\n\t                var handlers = this.handlers[event.type];\r\n\t                for(var i = 0, len = handlers.length; i < len; i++) {\r\n\t                    return handlers[i](event);\r\n\t                    // return true;\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        }\r\n\t\t}\r\n\r\n\t\t//fn就是prototype\r\n\t\t$.fn[_pluginName] = function(param1){\r\n\t\t\t//each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n\t\t\t// console.info(param1);\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(document.getElementById(element), _pluginDataName, new uiTabs(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"wui.tabs 未初始化或已被销毁\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('wui.tabs 中不存在 ' + funcName + '() 方法', FRAME_NAME+\".\"+_widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 增加组件事件监听\r\n         * @event on\r\n\t\t * @param eventType {string} 可监听事件类型如下：<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> eventType </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforeShow\"</td>\r\n\t\t\t\t\t\t<td> 每一个选项卡页面加载之前触发(动态加载时会每次更新iframe，所以会每次都触发,非动态加载时只会第一次才触发) </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"iframeLoaded\"</td>\r\n\t\t\t\t\t\t<td> 在加载选项卡内容为iframe时,每一个选项卡页面加载完成触发(动态加载时会每次更新iframe，所以会每次都触发,非动态加载时只会第一次才触发) </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"shown\"</td>\r\n\t\t\t\t\t\t<td> 此事件将在选项卡显示后触发。使用event.target和event.relatedtarget分别指向当前要显示选项卡和前一个显示选项卡(如果有)。</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforeAdd\"</td>\r\n\t\t\t\t\t\t<td> 添加一个选项卡之前触发 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"added\"</td>\r\n\t\t\t\t\t\t<td> 添加一个选项卡成功之后触发 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforeRemove\"</td>\r\n\t\t\t\t\t\t<td> 移除一个选项卡之前触发 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"removed\"</td>\r\n\t\t\t\t\t\t<td> 移除一个选项卡成功之后触发 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n\t\t * @param func {function} 事件类型触发之后的执行方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n            \r\n            // 组件添加节点出错时被触发\r\n            uiTabs.on(\"itemSelectError\", function(e){\r\n                console.log(\"itemSelectError\");\r\n            });\r\n                \r\n\t\t */\r\n\t\tfunction _on(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"on\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 取消组件事件监听\r\n         * @event off\r\n\t\t * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n\t\t * @param func {function} 选填,事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiTabs.off(\"itemSelectError\");\r\n                \r\n\t\t */\r\n\t\tfunction _off(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"off\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n        /**\r\n        * 添加选项页\r\n        * @method add\r\n        * @param tabPage {JSON} 添加的选项页数据\r\n        * @param tabPage.dataType {string} 选项页内容类型,可选类型：iframe或者html,默认是iframe\r\n        * @param tabPage.title {string} 选项页标题\r\n        * @param tabPage.content {string} 选项页内容,假如dataType是iframe,则传入页面地址，否则传入html内容\r\n        * @param tabPage.otherParam {JSON} 传递到选项页的其他内容,假如dataType是iframe,则会追加到页面地址中传入到iframe中,否则此参数没效果\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            uiTabs.add({\r\n                    \"content\":\"wui.tabs.page.html\",\r\n                    \"dataType\":\"iframe\",\r\n                    \"otherParam\":{\"hello\":\"world\"},\r\n                    \"title\":\"列表页1\"\r\n                });\r\n                \r\n        */\r\n\t\tfunction _add(tabPage){\r\n\t\t\treturn _executeMethod(\"add\", tabPage);\r\n\t\t}\r\n\r\n        /**\r\n        * 移除选项页\r\n        * @method remove\r\n\t\t* @param index {number} 要移除的选项页索引,从0开始,即0表示第一个选项页\r\n\t\t* @param callback {function} 移除之后的回调方法\r\n        * @since 0.0.1\r\n        * @example \r\n            // 移除第一个选项页\r\n            uiTabs.remove(0);\r\n                \r\n        */\r\n\t\tfunction _remove(index, callback){\r\n\t\t\treturn _executeMethod(\"remove\", index, callback);\r\n\t\t}\r\n\r\n        /**\r\n        * 打开指定的选项页或者获取当前打开选项页的索引\r\n        * @method index\r\n\t\t* @param i {Number/Function} 要打开的选项页索引,从0开始,即0表示第一个选项页,若传递类型为function,则对当前打开页面进行操作,传递三个参数activeIndex:打开选项页页码,element:打开选项页导航节点DOM对象,dom:打开选项页的内容DOM元素\r\n\t\t* @param onOpened {Function} 打开索引页之后操作方法,传递三个参数activeIndex:打开选项页页码,element:打开选项页导航节点DOM对象,dom:打开选项页的内容DOM元素\r\n\t\t* @return number 当前打开选项页的索引,从0开始,即0表示第一个选项页\r\n        * @since 0.0.1\r\n        * @example \r\n            // 获取当前打开的选项页索引,并对该选项页执行操作\r\n            var index = uiTabs.index(function(activeIndex, element, dom){\r\n\t\t\t\talert(activeIndex);\r\n            });\t// \r\n                \r\n        */\r\n\t\tfunction _index(index, onOpened){\r\n\t\t\treturn _executeMethod(\"index\", index, onOpened);\r\n\t\t}\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {不传/string/json} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> undefined </td>\r\n\t\t\t\t\t\t<td> 获取组件的配置参数 </td>\r\n\t\t\t\t\t\t<td> JSON 组件的配置参数 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 获取传入字符串对应的参数值 </td>\r\n\t\t\t\t\t\t<td> 传递的字符串对应的组件配置值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> JSON </td>\r\n\t\t\t\t\t\t<td> 重置组件参数配置 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiTabs.option();\r\n                \r\n        */\r\n\t\tfunction _option(params){\r\n\t\t\treturn _executeMethod(\"option\", params);\r\n\t\t}\r\n\r\n        /**\r\n        * 隐藏指定选项页\r\n        * @method hide\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            uiTabs.hide(2);\r\n            uiTabs.hide([2, 3]);\r\n                \r\n        */\r\n\t   \tfunction _hide(tabPanels){\r\n\t\t\treturn _executeMethod(\"hide\", tabPanels);\r\n\t\t}\r\n\r\n        /**\r\n        * 显示指定选项页\r\n        * @method show\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            uiTabs.show(2);\r\n            uiTabs.show([2, 3]);\r\n                \r\n        */\r\n\t   function _show(tabPanels){\r\n\t\t\treturn _executeMethod(\"show\", tabPanels);\r\n\t\t}\r\n\r\n        /**\r\n        * 阻止删除选项页\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            uiTabs.disabled();\r\n                \r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许删除选项页\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            uiTabs.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 移除全部选项页\r\n        * @method empty\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 移除全部选项页\r\n            uiTabs.empty();\r\n                \r\n        */\r\n\t\tfunction _empty(callback){\r\n\t\t\treturn _executeMethod(\"empty\", callback);\r\n\t\t}\r\n\r\n        /**\r\n        * 刷新当前打开的选项页\r\n        * @method refresh\r\n        * @param callback {function} 刷新当前选项页之后的回调方法\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            uiTabs.refresh();\r\n                \r\n        */\r\n\t\tfunction _refresh(callback){\r\n\t\t\treturn _executeMethod(\"refresh\", callback);\r\n\t\t}\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiTabs.destroy();\r\n                \r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n            var myTab = uiTabs.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t$('#' + element)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\r\n\t\treturn {\r\n\t\t\tinit: _init,\r\n\t\t\ton: _on,\r\n\t\t\toff: _off,\r\n\t\t\tadd: _add,\r\n\t\t\tremove: _remove,\r\n\t\t\tindex: _index,\r\n\t\t\toption: _option,\r\n\t\t\t// 隐藏指定选项页\r\n\t\t\thide: _hide,\r\n\t\t\t// 显示指定选项页\r\n\t\t\tshow: _show,\r\n            enabled: _enabled,\r\n            disabled: _disabled,\r\n\t\t\tempty: _empty,\r\n\t\t\trefresh: _refresh,\r\n\t\t\tdestroy: _destroy\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );\r\n\r\n\r\n","/**\r\n * <h3>WUI 表单校验</h3>\r\n * @module Util\r\n */\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>表单校验</h3>\r\n     * <ol>\r\n     * <li>支持整个表单元素校验; </li>\r\n     * <li>支持表单下单个元素校验; </li>\r\n     * <li>支持表单校验提交处理; </li>\r\n     * <li>表单校验多种提示处理; </li>\r\n     * <li>支持wui组件校验; </li>\r\n     * <li>支持自定义校验方法; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=validate\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.validate/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.validate/valid\"}}{{/crossLink}}: 检查当前表单是否校验通过 </li>\r\n     * <li>{{#crossLink \"wui.validate/rules\"}}{{/crossLink}}: 给单个元素动态添加或者删除校验规则 </li>\r\n     * <li>{{#crossLink \"wui.validate/validElement\"}}{{/crossLink}}: 检查当前表单下的某个元素节点是否校验通过 </li>\r\n     * <li>{{#crossLink \"wui.validate/resetForm\"}}{{/crossLink}}: 重置表单,把前面验证的 FORM 恢复到验证前原来的状态 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class validate\r\n     *  @constructor \r\n     *  @param {string} form  要校验的表单选择器,比如\"form\"、\"#formId\"、\".formClass\"、...\r\n     *  @param {object} option  \r\n     *  @param {string} [option.ignore]  忽略校验元素(选择器写法),默认是\":hidden:not([ui-type])\" \r\n     *  @param {JSON} [option.rules]  校验规则,默认是{}  举个例子:<br/>\r\n\t\t\t$(\"#myform\").validate({\r\n\t\t\t\trules: {\r\n\t\t\t\t\t// 简洁写法, 等价于 {required:true}\r\n\t\t\t\t\tname: \"required\",\r\n\t\t\t\t\t// 完整写法\r\n\t\t\t\t\temail: {\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\temail: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}); \r\n     *  @param {JSON} [option.messages]  校验信息,不传递则采用默认的提示信息：{\"name\": \"自定义错误提示\"},默认是{} \r\n     *  @param {string} [option.errorTipStyle] 校验出错提示风格,默认是\"tips\",可选\"tips\"(错误提示悬浮展示)、\"label\"(会在出错标签下方显示错误信息)\r\n     *  @param {string} [option.errorTipSetting]  校验出错提示参数设置,跟errorTipStyle参数有关联(参考wui.tips参数设置,这里skin默认设置是\"layui-layer-warning\")\r\n     *  @param {string} [option.errorElement]  校验不成功时的提示标签名,当errorTipStyle参数为\"label\"时,会采用此参数值创建错误提示标签,默认是\"em\"\r\n     *  @param {string} [option.labelErrorClass]  当errorTipStyle参数值为\"label\"时,校验错误时,提示标签类名,默认是\"valid-emement-error\"\r\n     *  @param {string} [option.validClass]  校验无效时,提示标签类名,默认是\"valid\"\r\n     *  @param {string} [option.elementErrorClass]  当errorTipStyle参数值为\"tips\"时,校验出错时元素类名,默认是\"validate-error\"\r\n     *  @param {string} [option.elementSuccessClass]  当errorTipStyle参数值为\"tips\"时,校验成功时元素类名,默认是\"validate-success\"\r\n     *  @param {boolean} [option.isAddRequiredStar]  是否在必填项的表格列前面追加\"*\"号,这个对布局有要求,必须是table布局,且形式是\"标题格:内容格\"一一对应,默认是true\r\n     *  @param {boolean} [option.onsubmit]  在提交时验证表单。设置为false仅用于其他事件进行验证,默认是 true \r\n     *  @param {boolean} [option.onfocusout]  在失去焦点时验证（不包括复选框/单选按钮）,默认是 true \r\n     *  @param {boolean} [option.onfocusin]  在获得焦点时验证（不包括复选框/单选按钮）,默认是 true \r\n     *  @param {boolean} [option.onkeyup]  在 keyup 时验证,默认是 false \r\n     *  @param {boolean} [option.onclick]  在点击复选框和单选按钮时验证,默认是 true \r\n     *  @param {boolean} [option.focusInvalid]  提交表单后，未通过验证的表单（第一个或提交之前获得焦点的未通过验证的表单）会获得焦点,默认是 true \r\n     *  @param {boolean} [option.focusCleanup]  如果是 true 那么当未通过验证的元素获得焦点时，移除错误提示。避免和 focusInvalid 一起用,默认是 false \r\n     *  @param {function} [option.errorPlacement]  自定义创建错误标签的位置。第一个参数：创建的错误标签jQuery对象。第二个参数：校验无效的jQuery对象。 \r\n     *  @param {function} [option.highlight]  突出显示无效字段执行方法。参数1:校验无效元素；参数2:当前添加errorClass节点;参数3:当前添加validClass节点 \r\n     *  @param {function} [option.unhighlight]  恢复选项高亮显示的更改,与高亮显示相同参数。参数1:校验无效元素；参数2:当前添加errorClass节点;参数3:当前添加validClass节点 \r\n     *  @param {function} [option.submitHandler]  当表单有效时,用于处理实际提交的回调。获取表单作为唯一参数。替换默认提交。 \r\n     *  @example\r\n     * \r\n     *   html:\r\n     *   \r\n            <form action=\"#\" id=\"baseForm\">\r\n            \t必填：<input type=\"text\" validate=\"required\" name=\"required\" id=\"required\">\r\n            \t密码：<input type=\"text\" id=\"password\" name=\"password\">\r\n            \t确认密码：<input type=\"text\" id=\"equalTo\" name=\"equalTo\" />\r\n            </form>\r\n     *      \r\n     *   js: \r\n     *\r\n     \t\t// 自定义校验规则:password\r\n     \t\twui.addValidateMethod(\"password\", function(value, element){\r\n                // console.info(value);\r\n                return this.optional(element) || /^[0-9a-zA-Z\\_]+$/.test(value);\r\n            }, \"密码只能输入数字、字母和下划线\");\r\n\r\n            // 初始化\r\n            var utilValidate = wui.validate(\"#baseForm\", {\r\n                rules: {\r\n                    password: {\r\n                        required: true,\r\n                        password: true,\r\n                        minlength: 6\r\n                    },\r\n                    equalTo: {\r\n                        required: true,\r\n                        equalTo: \"#password\"\r\n                    }\r\n                },\r\n                messages: {\r\n                    equalTo: {\r\n                        equalTo: \"两次密码不一致\"\r\n                    }\r\n                }\r\n            });\r\n     *\r\n     */\r\n\tui.validate = function(form, options){\r\n        // ui.logMethodCalled(\"validate\", FRAME_NAME, form);\r\n        \r\n\t\t//需要设置为控件的名字\r\n\t\tvar _pluginName = \"formValidate\",\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"validate\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: form\r\n        });\r\n        \r\n\r\n        if(form){\r\n        \tif(!$(form).exist()){\r\n\t\t\t\tui.logWarn(\"当前页面不存在\" + form + \" 表单\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// form = document.querySelector(form);\r\n\t\t\tform = $(form).eq(0);\r\n        }else{\r\n        \tui.logWarn(\"form 没传递\", FRAME_NAME+\".\"+_widgetName, true);\r\n        \t// form = document.querySelector(\"form\");\r\n        \tform = $(\"form\").eq(0);\r\n        }\r\n        // console.info(form);\r\n\r\n\t\tvar config = {\r\n\t\t\t// 忽略校验元素(选择器写法)\r\n\t\t\tignore: \":hidden:not([ui-type],select)\"\t\r\n\t\t\t// {string} 校验出错提示风格,默认是\"tips\",可选\"tips\"(错误提示悬浮展示)、\"label\"(会在出错标签下方显示错误信息)\r\n            , errorTipStyle: ui.validateUtilConfig.errorTipStyle\r\n            // {JSON} 校验出错提示参数设置,跟errorTipStyle参数有关联(参考wui.tips参数设置)\r\n\t\t\t, errorTipSetting: {\r\n\t\t\t\tisShadeClose: true\r\n\t\t\t\t// {number} 设置最大等待时长\r\n\t\t\t\t, time: 2*1000\t\r\n\t\t\t\t// {string} 设置样式\r\n\t\t\t\t, skin: \"layui-layer-warning\"\t\r\n\t\t\t\t// , isShowMultipleTips: false\r\n\t\t\t\t// , onPoped: function(dom, index){\r\n\t\t\t\t// \tui.notice(index);\r\n\t\t\t\t// \tconsole.info(dom);\r\n\t\t\t\t// }\r\n\t\t\t\t// , onClosed: function(){\r\n\t\t\t\t// \tconsole.info(this);\r\n\t\t\t\t// }\r\n\t\t\t}\t\t\r\n\t\t\t// {string} 校验不成功时的提示标签名,当errorTipStyle参数为\"label\"时,会采用此参数值创建错误提示标签\r\n            , errorElement : \"em\"\t\r\n            // {string} 校验错误时,提示标签类名,默认是\"valid-emement-error\"\r\n\t\t\t, labelErrorClass: ui.validateUtilConfig.labelErrorClass\r\n\t\t\t// {string} 校验无效时,提示标签类名\r\n\t\t\t, validClass: \"valid\"\t\r\n\t\t\t// {string} 校验出错时元素类名\r\n            , elementErrorClass: ui.validateUtilConfig.elementErrorClass\t\t\r\n            // {string} 校验成功时元素类名\r\n            , elementSuccessClass: ui.validateUtilConfig.elementSuccessClass\t\r\n\t\t\t// {Boolean} 是否在必填项的表格列前面追加\"*\"号,默认是true\r\n\t\t\t, isAddRequiredStar: ui.validateUtilConfig.isAddRequiredStar\r\n\t\t\t// 添加\"*\"号的单元格样式类\r\n\t\t\t, textTdClassName: \"validate-title\"\r\n\t\t\t, starDirection: ui.validateUtilConfig.starDirection \t// {String} 当开启isAddRequiredStar时,追加\"*\"号的位置,默认是\"left\"，在左边追加\"*\"，可选值:\"left\"/\"right\"\r\n\t\t\t, rules: {}\t// {json} 校验规则,Example:<br/>\r\n\t\t\t// $(\"#myform\").validate({\r\n\t\t\t// \trules: {\r\n\t\t\t// \t\t// 简洁写法, 等价于 {required:true}\r\n\t\t\t// \t\tname: \"required\",\r\n\t\t\t// \t\t// 完整写法\r\n\t\t\t// \t\temail: {\r\n\t\t\t// \t\t\trequired: true,\r\n\t\t\t// \t\t\temail: true\r\n\t\t\t// \t\t}\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t\t, messages: {}\t// {json} 校验信息：{\"name\": \"自定义错误提示\"}\r\n\t\t\t, onkeyup: false\r\n\t\t\t// , onsubmit: true\t// {Boolean} 在提交时验证表单。设置为false仅用于其他事件进行验证。\r\n\t\t\t// , onfocusin: false\r\n\t\t\t// , onfocusout: function(element){\r\n\t\t\t// \tconsole.info(\"focusin\")\r\n\t\t\t// }\r\n\t\t\t// , onclick: false\r\n\t\t\t// , onfocusin: function(element){console.info(\"focusin\")}\r\n\t\t\t// // , onfocusout: false\r\n\t\t\t// , onkeyup: false\r\n\t\t\t// , onclick: false\r\n\t\t\t// // , onfocusin: function(element){$(element).valid();}\r\n\t\t\t// , onfocusout: function(element){\r\n\t\t\t// \tif($(element).attr(\"ui-type\")){\r\n\t\t\t// \t\tvar uiType = $(element).attr(\"ui-type\");\r\n\t\t\t// \t\tswitch(uiType){\r\n\t\t\t// \t\t\tcase 'date':\r\n\t\t\t// \t\t\t\tbreak;\r\n\t\t\t// \t\t\tdefault:\r\n\t\t\t// \t\t\t\t$(element).valid();\r\n\t\t\t// \t\t\t\tbreak;\r\n\t\t\t// \t\t}\r\n\t\t\t// \t\t// console.info(\"date\");\r\n\t\t\t// \t}else{\r\n\t\t\t// \t\t$(element).valid();\r\n\t\t\t// \t}\r\n\t\t\t\t\r\n\t\t\t// } // {false/Function} 验证的元素（除复选框、单选按钮）模糊。如果未输入任何内容,则所有规则都将跳过,除非字段已标记为无效/设置为一个函数来决定何时运行验证。\r\n\t\t\t// , onkeyup: function(element){$(element).valid();}\t// {false/Function} 验证元素KeyUp事件。当在元素上按下键时触发。设置为false以禁用。\r\n\t\t\t// , onclick: function(element){$(element).valid();}\t// {false/Function} 验证复选框,单选按钮,并选择元素上单击。设置为false以禁用。\r\n\t\t\t, errorPlacement: ui.CONSTANTS.EMPTYFUNC\t// {function} 自定义创建错误标签的位置。第一个参数：创建的错误标签jQuery对象。第二个参数：校验无效的jQuery对象。\r\n\t\t\t, highlight: ui.CONSTANTS.EMPTYFUNC\t// {function} 突出显示无效字段执行方法.参数1:校验无效元素；参数2:当前添加errorClass节点;参数3:当前添加validClass节点\r\n\t\t\t, unhighlight: ui.CONSTANTS.EMPTYFUNC\t// {function} 恢复选项高亮显示的更改,与高亮显示相同参数。参数1:校验无效元素；参数2:当前添加errorClass节点;参数3:当前添加validClass节点\r\n\t\t\t, submitHandler: ui.CONSTANTS.EMPTYFUNC\t\t// {function} 当表单有效时,用于处理实际提交的回调。获取表单作为唯一参数。替换默认提交。\r\n\t\t}\r\n\r\n\t\t//默认配置项:不作为配置改动参数\r\n\t\tvar defaults = {\r\n\t\t\tmessages: {\r\n\t\t\t\trequired: \"这是必填字段\",\r\n\t\t\t\twidgetRequired: \"此组件值不能为空\",\r\n\t\t\t\tremote: \"请修正此字段\",\r\n\t\t\t\temail: \"请输入有效的电子邮件地址\",\r\n\t\t\t\turl: \"请输入有效的网址\",\r\n\t\t\t\tdate: \"请输入有效的日期\",\r\n\t\t\t\tdateISO: \"请输入有效的日期 (yyyy-mm-dd)\",\r\n\t\t\t\tnumber: \"请输入合法的数字(包括负数,小数)\",\r\n\t\t\t\tdigits: \"只能输入非负数\",\r\n\t\t\t\tcreditcard: \"请输入有效的信用卡号码\",\r\n\t\t\t\tequalTo: \"你的输入不相同\",\r\n\t\t\t\textension: \"请输入有效的后缀\",\r\n\t\t\t\tmaxlength: $.validator.format(\"最多可以输入 {0} 个字符\"),\r\n\t\t\t\tminlength: $.validator.format(\"最少要输入 {0} 个字符\"),\r\n\t\t\t\trangelength: $.validator.format(\"请输入长度在 {0} 到 {1} 之间的字符串\"),\r\n\t\t\t\trange: $.validator.format(\"请输入范围在 {0} 到 {1} 之间的数值\"),\r\n\t\t\t\tmax: $.validator.format(\"请输入不大于 {0} 的数值\"),\r\n\t\t\t\tmin: $.validator.format(\"请输入不小于 {0} 的数值\")\r\n\t\t\t},\t// {json} 校验信息\r\n            ruleAttribute: \"id\",\r\n\t\t\tdataAttribute: ui.validateAttributeField || \"validate\",\r\n\t\t\tmessageAttribute: \"message\",\r\n\t\t\tmessageSplitString: \"###\"\t\t// 校验信息写在标签中时,多个校验信息的切割字符串,默认是\"###\"\r\n\t\t};\r\n\r\n\t\tfunction formValidate(form, options){\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init();\t\r\n\t\t}\r\n\r\n\t\tformValidate.prototype = {\r\n\t\t\tconstructor: formValidate,\r\n\r\n\t\t\tinit: function(){\r\n                // 初始化对象静态属性\r\n                this.pluginName = _widgetName;      // 缓存插件名字\r\n\t\t\t\tthis.form = form;\t\t\t\t\t// 保存默认值\r\n\t\t\t\tthis.$form = $(form);\t\t\t\t// 保存默认值\r\n                this.defaults = defaults;           // 保存静态默认配置项\r\n\t\t\t\tthis._option = options;\t\t// 缓存传递进来的配置\r\n\r\n\t\t\t\t// this.status = \"init\";\r\n\r\n\t\t\t\t// 初始化对象模板\r\n\t\t\t\tthis.requiredHtml = '<i class=\"red-star\">*</i> ';\r\n\r\n\t\t\t\t// 初始化对象动态属性\r\n\t            this.hasDom = false; \t\t// 检查dom树中此节点是否存在\r\n\t\t\t\t// this._opt = $.extend(true, {}, config, options);\t// 合并之后的可配置结果\r\n\r\n\t\t\t\t// 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$form, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n\t\t\t\t// console.error(this._opt);\r\n\t\t\t\tthis._validate = null;\r\n\t\t\t\tthis._formatParams();\r\n\t\t\t\tthis.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\r\n\t\t\t\t// this.status = \"loaded\";\r\n\t\t\t},\r\n\t\t\t_formatParams: function(){\r\n\t\t\t\tvar self = this, params = this._opt;\r\n\r\n\t\t\t\tif(params.errorTipStyle && ui.validateUtilConfig.errorTipStyles[params.errorTipStyle] != undefined){\r\n\t\t\t\t\tparams.errorPlacement = ui.validateUtilConfig.errorTipStyles[params.errorTipStyle];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tparams.errorPlacement = ui.validateUtilConfig.errorTipStyles[\"tips\"];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.info(params.errorPlacement);\r\n\t\t\t},\r\n\t\t\t// _setValidateStyle: function(){\r\n\t\t\t// \tvar self = this, params = this._opt;\r\n\t\t\t// \tif(params.validateStyle == \"tips\"){\r\n\t\t\t// \t\t// 悬浮提示\r\n\t\t\t// \t\tparams.errorElement = null;\r\n\t\t\t// \t\tparams.errorPlacement = null;\r\n\t\t\t// \t\tparams.highlight = function(element, labelErrorClass, validClass){\r\n\r\n\t\t\t// \t\t}\r\n\t\t\t// \t}\r\n\t\t\t// },\r\n\t\t\t_getOptions: function(){\r\n\t\t\t\tvar self = this, param = self._opt, $form = this.$form;\r\n\t\t\t\t// console.error(param.rules)\r\n\t\t\t\tvar thatOpions = {\r\n            \t\trules: param.rules,\r\n            \t\tmessages: param.messages,\r\n            \t\tignore: param.ignore,\r\n            \t\terrorClass: param.labelErrorClass,\r\n            \t\tvalidClass: param.validClass,\r\n            \t\tonfocusin: param.onfocusin,\t\t// 获得焦点时验证（不包括复选框/单选按钮）\r\n            \t\tonfocusout: param.onfocusout,\t// 失去焦点时验证（不包括复选框/单选按钮）\r\n            \t\tonkeyup: param.onkeyup,\t\t\t// 在 keyup 时验证。\r\n            \t\tonclick: param.onclick,\t\t\t// 在点击复选框和单选按钮时验证。\r\n            \t\tonsubmit: param.onsubmit,\t// 提交时验证。设置为 false 就用其他方法去验证。\r\n            \t\terrorElement: param.errorElement,\r\n            \t\tfocusInvalid: param.focusInvalid,\t// 提交表单后，未通过验证的表单（第一个或提交之前获得焦点的未通过验证的表单）会获得焦点。默认是true\r\n            \t\tfocusCleanup: param.focusCleanup,\t// 如果是 true 那么当未通过验证的元素获得焦点时，移除错误提示。避免和 focusInvalid 一起用。默认是false\r\n            \t\terrorPlacement: function(error, theElement){\r\n            \t\t\tparam.errorPlacement(error, theElement, param.errorTipSetting);\r\n            \t\t},\r\n            \t\thighlight: function(element, errorClass, validClass){\r\n\t              \t\tvar elementErrorClass = param.elementErrorClass,\r\n\t                    \telementSuccessClass = param.elementSuccessClass;\r\n\t                    if($(element).attr(\"ui-type\")){\r\n                        \tvar uiType = $(element).attr(\"ui-type\");\r\n                        \tswitch (uiType) {\r\n\t                            case 'file': // 文件上传\r\n\t                                $(element).parent().removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t                                break;\r\n\t                            case 'date': // 日期选择\r\n\t                                $(element).removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t                                break;\r\n\t                            case 'img': // 图片上传\r\n\t                                $(element).parent().removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t                                break;\r\n\t\t\t\t                case 'opinionBox':\r\n\t\t\t\t                \t$(element).next().children(\"textarea\").removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t                                break;\r\n\t                            default:\r\n\t                                $(element).parent().removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t                        }\r\n\t                    }else{\r\n\t                    \tif(param.highlight && typeof(param.highlight) === \"function\"){\r\n\t                    \t\tparam.highlight(element, errorClass, validClass);\r\n\t                    \t}else{\r\n\t                    \t\tif ($(element).is(\"select\")) {\r\n\t\t                            $(element).removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t\t                        } else if ($(element).prop(\"type\") === \"checkbox\") {\r\n\t\t                        \tif($(element).parents(\".wui-valid-tip\") && $(element).parents(\".wui-valid-tip\").length > 0){\r\n\t\t                            \tvar theParents = $(element).parents(\".wui-valid-tip\");\r\n\t\t                            \t// console.info(theParents);\r\n\t\t                            \ttheParents.removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t\t                            }else{\r\n\t\t                            \t$(element).parent().removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t\t                            }\r\n\t\t                        } else if ($(element).prop(\"type\") === \"radio\") {\r\n\t\t                        \tif($(element).parents(\".wui-valid-tip\") && $(element).parents(\".wui-valid-tip\").length > 0){\r\n\t\t                            \tvar theParents = $(element).parents(\".wui-valid-tip\");\r\n\t\t                            \ttheParents.removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t\t                            }else{\r\n\t\t                            \t$(element).parent().removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t\t                            }\r\n\t\t                        } else {\r\n\t\t                            $(element).removeClass(elementSuccessClass).addClass(elementErrorClass);\r\n\t\t                        }\r\n\t                    \t}\r\n\t\t                        \r\n\t                    }\r\n            \t\t},\r\n            \t\tunhighlight: function (element, errorClass, validClass) {\r\n\t                    // console.info(\"unhighlight\");\r\n\t                    // console.info(element);\r\n\t                    // console.info(errorClass);\r\n\t                    // console.info(validClass);\r\n\t                    var elementErrorClass = param.elementErrorClass,\r\n\t                    \telementSuccessClass = param.elementSuccessClass;\r\n\t                    if($(element).attr(\"ui-type\")){\r\n                        \tvar uiType = $(element).attr(\"ui-type\");\r\n                        \tswitch (uiType) {\r\n\t                            case 'file': // 文件上传\r\n\t                                $(element).parent().removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t                                break;\r\n\t                            case 'date': // 日期选择\r\n\t                                $(element).removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t                                break;\r\n\t                            case 'img': // 图片上传\r\n\t                                $(element).parent().removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t                                break;\r\n\t\t\t\t                case 'opinionBox':\r\n\t\t\t\t                \t$(element).next().children(\"textarea\").removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t                                break;\r\n\t                            default:\r\n\t                                $(element).parent().removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t                        }\r\n\t                    }else{\r\n\r\n\t                    \tif(param.unhighlight && typeof(param.unhighlight) === \"function\"){\r\n\t                    \t\tparam.unhighlight(element, errorClass, validClass);\r\n\t                    \t}else{\r\n\t                    \t\tif ($(element).is(\"select\")) {\r\n\t\t                            $(element).removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t\t                        } else if ($(element).prop(\"type\") === \"checkbox\") {\r\n\t\t                        \tif($(element).parents(\".wui-valid-tip\") && $(element).parents(\".wui-valid-tip\").length > 0){\r\n\t\t                            \tvar theParents = $(element).parents(\".wui-valid-tip\");\r\n\t\t                            \ttheParents.removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t\t                            }else{\r\n\t\t                            \t$(element).parent().removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t\t                            }\r\n\t\t                        } else if ($(element).prop(\"type\") === \"radio\") {\r\n\t\t                        \tif($(element).parents(\".wui-valid-tip\") && $(element).parents(\".wui-valid-tip\").length > 0){\r\n\t\t                            \tvar theParents = $(element).parents(\".wui-valid-tip\");\r\n\t\t                            \ttheParents.removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t\t                            }else{\r\n\t\t                            \t$(element).parent().removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t\t                            }\r\n\t\t                        } else {\r\n\t\t                            $(element).removeClass(elementErrorClass).addClass(elementSuccessClass);\r\n\t\t                        }\r\n\t                    \t}\r\n\t                    }\r\n\t                }\r\n            \t}\r\n\r\n            \treturn thatOpions;\r\n\t\t\t},\r\n\t\t\t_initDom: function() { // 生成DOM节点\r\n\t\t\t\tvar self = this, param = self._opt, $form = this.$form;\r\n\r\n\t\t\t\tself._addWidgetValidateMethod();\r\n\t\t\t\tthis._bindNameAttribute();\r\n\r\n\t            // 汉化提示语\r\n\t            $.extend($.validator.messages, self.defaults.messages);\r\n\t            self._validateRuleSettings();\r\n\t            // console.info(param.rules);\r\n\t            if(this._validate){\r\n\t            \t$form.destroy();\r\n\t            }\r\n\r\n\t            var thatOpions = self._getOptions();\r\n\r\n                ui.logParamValue({\r\n                    paramName: \"options\",\r\n                    paramValue: thatOpions,\r\n                    methodName: \"_initValidate\",\r\n                    className: \"wui.validate\",\r\n                    isDebug: true\r\n                });\r\n\t            // 验证提交表单\r\n            \tthis._validate = $form.validate(thatOpions);\r\n                this.hasDom = true;\r\n\r\n                \r\n                return $form.parent().prop(\"outerHTML\");\r\n\t        },\r\n\t        // 添加组件校验方法\r\n\t        _addWidgetValidateMethod: function(){\r\n\t        \tvar self = this;\r\n\r\n\t\t\t\t// 组件必填校验\r\n\t\t\t\t$.validator.addMethod(\"widgetRequired\", function(value, element) {\r\n\t\t\t\t\tvar widgetName = $(element).attr(\"ui-type\"),\r\n\t\t\t\t\t\twidgetId = element.id || element.name;\r\n\r\n\t\t\t\t\tif(widgetName === \"file\" || widgetName === \"img\"){\r\n\t\t\t\t\t\twidgetId = $(element).parent().attr(\"_fileId\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(ui && ui[widgetName]){\r\n\t\t\t\t\t\tvar widgetValue = ui[widgetName](widgetId).get(\"value\");\r\n\t\t\t\t\t\t// console.group(widgetName + \":\" + widgetValue);\r\n\t\t\t\t\t\tif(!widgetValue || (widgetValue.length == 0)){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}, self.defaults.messages.widgetRequired);\r\n\t        },\r\n\t        // 校验元素(绑定dataAttribute参数属性的)关联name属性\r\n\t        _bindNameAttribute: function(){\r\n\t\t\t\tvar self = this, param = self._opt, $form = this.$form, dataAttribute = self.defaults.dataAttribute;\r\n\r\n\t            $form.find(\"[\" + dataAttribute + \"]\").each(function(index, elem){\r\n\t            \tif(!$(elem).attr(\"name\")){\r\n\t            \t\t$(elem).attr(\"name\", $(elem).attr(\"id\"));\r\n\t            \t}\r\n\t            });\r\n\r\n\t            if(self.defaults.ruleAttribute == \"id\"){\r\n\t            \t// 强制添加\"name\"属性\r\n\t            \t$.each(param.rules, function(key, value){\r\n\t\t            \t$('#' + key).attr(\"name\", key);\r\n\t\t            })\r\n\t            }\r\n\t\t            \r\n\t        },\r\n\t        _normalizeAttributeRule: function(methodName, type, value){\r\n\t        \t// console.error(methodName);\r\n\t        \t// console.info(value);\r\n\t        \tvar reg = /[^\\[]*\\[(.*)\\][^\\]]*/;\r\n\t        \t// convert the value to a number for number inputs, and for text for backwards compability\r\n\t\t\t\t// allows type=\"date\" and others to be compared as strings\r\n\t\t\t\tif ( /min|max/.test( methodName ) && ( type === null || /number|range|text/.test( type ) ) ) {\r\n\t\t\t\t\tvalue = Number( value );\r\n\r\n\t\t\t\t\t// Support Opera Mini, which returns NaN for undefined minlength\r\n\t\t\t\t\tif ( isNaN( value ) ) {\r\n\t\t\t\t\t\tvalue = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(/range/.test( methodName )){\r\n\t\t\t\t\t// var execValue = reg.exec(value);\r\n\t\t\t\t\tvar execValue = value.replace(reg,'$1')\r\n\t\t\t\t\t// console.info(execValue);\r\n\t\t\t\t\tif(execValue){\r\n\t\t\t\t\t\t// console.info(execValue[1]);\r\n\t\t\t\t\t\tvalue = execValue.split(\",\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( value || value === 0 ) {\r\n\t\t\t\t\tvalue = value;\r\n\t\t\t\t} else if ( type === methodName && type !== \"range\" ) {\r\n\r\n\t\t\t\t\t// exception: the jquery validate 'range' method\r\n\t\t\t\t\t// does not test for the html5 'range' type\r\n\t\t\t\t\tvalue = true;\r\n\t\t\t\t}\r\n\t        \t// console.info(value);\r\n\r\n\t\t\t\treturn value;\r\n\t        },\r\n\t        // 从标签\"validate=\"转化为{}\r\n\t        _validateRuleSettings: function(){\r\n\t        \tvar self = this, params = this._opt, $form = this.$form, \r\n\t        \t\tdataAttribute = self.defaults.dataAttribute,\t// 标签中绑定校验规则属性名\r\n\t        \t\tmessageAttribute = self.defaults.messageAttribute,\t// 标签中绑定校验出错信息属性名\r\n\t        \t\tmessageSplitString = self.defaults.messageSplitString; // 标签中绑定多条校验出错信息时的分隔字符串\r\n\r\n\t        \t// 分为普通校验和组件校验\r\n\t        \t// 组件校验步骤(设置默认的校验方法)：\r\n\t        \t// (1) 判断是否有ui-type属性,有则进入(2),否则进入(3)\r\n\t        \t// (2) 判断validate=\"required\" OR validate=\"widgetRequired\",全部归类为{widgetRequired: true},进入(4)\r\n\t        \t// (3) 普通校验规则获取\r\n\t        \t// (4) 初始化\r\n\t        \tvar validateElement = $form.find('[' + dataAttribute + ']'),\r\n\t        \t\trulesConfig = {},\r\n\t        \t\tmessagesConfig = {},\r\n\t        \t\trequireStr = this.requiredHtml;\r\n\t        \t// alert(self.status)\r\n\t        \t\t// requireStr = '<span class=\"required\">*</span>';\r\n\t        \t// console.info($form.find(\":hidden\"));\r\n\t        \tvalidateElement.each(function(index, elem){\r\n\t        \t\tvar name = elem.name,\r\n\t        \t\t\tid = elem.id, \r\n\t        \t\t\ttheRulesString, theMessagesString, \r\n\t        \t\t\ttheRegRules, \r\n\t        \t\t\ttheRules, theMessages, \r\n\t        \t\t\ttheRule, theRuleObject = {}, theMessageObject = {};\r\n\r\n\t        \t\tif (elem.type == \"submit\" || elem.type == \"button\" || elem.type == \"reset\")\r\n\t                    return true;\r\n\t\t\t\t\t// 考虑四种复杂情况\r\n                    // required,password --- 用\",\"切割\r\n                    // required,equalTo:'#password'\t --- 用\",\"切割,再用\":\"切割\r\n                    // required,rangelength:[3,6]\t --- 替换[,]里面的\",\"为###,然后再用\",\"切割,替换回\",\",再用\":\"切割\r\n                    // required,minlength:6,rangelength:[4,7],range:[2,9]\r\n                    // 想法：\r\n                    // 1.找到\"[,]\"组合,替换里面的\",\"为\"###\";\r\n                    // 2.\",\"分隔字符串split(\",\");\r\n                    // 遍历,单个规则用\":\"分隔,[1]用\"###\"分隔\r\n                    theRulesString = elem.getAttribute(dataAttribute);\r\n                    theMessagesString = elem.getAttribute(messageAttribute);\t// 获取标签绑定的校验出错信息字符串\r\n                    if(theMessagesString == undefined){\r\n                    \ttheMessagesString = \"\";\r\n                    }\r\n                    if(!theRulesString){\r\n                    \treturn true;\r\n                    }\r\n                    theRegRules = theRulesString.match(/\\[[^\\]]+(\\]\\]|\\])/g);\t// [\"[3,6]\"]\r\n                    // 匹配到\"[]\"\r\n                    if(theRegRules){\r\n                    \t$.each(theRegRules, function(i, v){\r\n                    \t\tvar temp = this.replace(\",\", \"###\");\r\n                    \t\ttheRulesString = theRulesString.replace(this, temp);\r\n                    \t})\r\n                    \t// console.info(theRulesString);\t// required,minlength:6,rangelength:[4###7],range:[2###9]\r\n                    }\r\n                    \r\n                    theRules = theRulesString.split(\",\");\r\n                    theMessages = theMessagesString.split(messageSplitString);\r\n                    // console.info(theMessages)\r\n                    // console.info(theRules);\r\n                    \r\n                    $.each(theRules, function(i, val){\r\n                    \t// console.info(val);\r\n                    \ttheRule = val.replace(\"###\", \",\");\t// rangelength:[4,7]\r\n                    \tvar theTemp = theRule.split(\":\");\r\n                    \t// 必填项：检测追加\"*\"\r\n                    \t\r\n                    \tif(ui.isUndefined($(elem).attr(\"wui-attr-isaddrequiredstar\"))){\r\n\r\n                    \t\t// console.error(params.isAddRequiredStar)\r\n                    \t\tif(theTemp[0] == \"required\" || theTemp[0] == \"widgetRequired\"){\r\n\t                    \t\t// var theLabel = $(\"#\" + id).parents(\"td\").eq(0).prevAll(\".form-label\").eq(0);\r\n\t                    \t\t\r\n\t                    \t\tif(params.isAddRequiredStar){\r\n\t                    \t\t\tvar theLabel = $(elem).closest(\"td\") ? $(elem).closest(\"td\").prev(\"td\") : null;\r\n\t\t                    \t\tif(theLabel && theLabel.text() && theLabel.children(\".red-star\").length == 0){\r\n\t\t                    \t\t\tif(params.starDirection == \"left\"){\r\n\t\t                    \t\t\t\ttheLabel.prepend(requireStr);\r\n\t\t                    \t\t\t}else{\r\n\t\t                    \t\t\t\ttheLabel.append(requireStr);\r\n\t\t                    \t\t\t}\r\n\t\t                    \t\t}\r\n\t                    \t\t}\r\n\r\n\t                    \t\t$(elem).attr(\"wui-attr-isaddrequiredstar\", params.isAddRequiredStar);\r\n\t                        }\r\n                    \t}\r\n\t                    \t\r\n\r\n                        if($(elem).attr(\"ui-type\") && (theTemp[0] == \"required\" || theTemp[0] == \"widgetRequired\")){\r\n\t\t                \ttheRuleObject[\"widgetRequired\"] = true;\r\n\t\t                \tif(!!theMessages[i]){\r\n\t\t                \t\ttheMessageObject[\"widgetRequired\"] = theMessages[i];\r\n\t\t                \t}\r\n\t\t                }else{\r\n\t\t                \tif(theTemp.length == 1){\r\n\t\t\t\t\t\t\t\tif(theTemp[0] == \"float\" || theTemp[0] == \"double\"){\r\n\t\t\t\t\t\t\t\t\ttheRuleObject[theTemp[0]] = 2;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\ttheRuleObject[theTemp[0]] = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t                    \t}else{\r\n\t                    \t\tvar theVal = self._normalizeAttributeRule(theTemp[0], elem.type, theTemp[1]);\r\n\t                    \t\ttheRuleObject[theTemp[0]] = theVal;\r\n\t                    \t}\r\n\t                    \tif(!!theMessages[i]){\r\n\t                    \t\ttheMessageObject[theTemp[0]] = theMessages[i];\r\n\t                    \t}\r\n\t\t                \t\r\n\t\t                }\r\n                    })\r\n\r\n                    rulesConfig[name] = theRuleObject;\r\n                    messagesConfig[name] = theMessageObject;\r\n                    return true;\r\n\t        \t})\r\n\r\n\t            var optRules = self._opt.rules, optMessages = self._opt.messages;\r\n\t            self._opt.rules = $.extend(true, {}, rulesConfig, optRules);\r\n\t            self._opt.messages = $.extend(true, {}, messagesConfig, optMessages);\r\n\t        \t// console.info(self._opt.messages);\r\n\t        },\r\n\t        rules: function(elem, command, argument, isAddRequiredStar){\r\n\t        \tvar self = this, params = this._opt,\r\n\t        \t\trequireStr = this.requiredHtml,\r\n\t        \t\treturnValue;\r\n\t        \t// console.info($(elem));\r\n\t        \t// console.info($(elem)[0]);\r\n\t        \tif(!$(elem).attr(\"name\")){\r\n\t        \t\t$(elem).attr(\"name\", $(elem).attr(\"id\"));\r\n\t        \t}\r\n\r\n\t        \tif(ui.isUndefined(isAddRequiredStar)){\r\n\t        \t\tisAddRequiredStar = params.isAddRequiredStar;\r\n\t        \t}\r\n\r\n\t        \tthis._validate.resetForm();\r\n\t        \t// $(elem).removeClass(params.elementErrorClass).removeClass(params.elementSuccessClass);\r\n\r\n\t        \tif(command == \"add\"){\r\n\t        \t\tif(ui.isJson(argument) && (argument.hasOwnProperty(\"required\") || argument.hasOwnProperty(\"widgetRequired\")) && isAddRequiredStar){\r\n\t        \t\t\tvar theLabel = $(elem).closest(\"td\") ? $(elem).closest(\"td\").prev(\"td\") : null;\r\n\t            \t\tif(theLabel && theLabel.text() && theLabel.children(\".red-star\").length == 0){\r\n\t            \t\t\tif(params.starDirection == \"left\"){\r\n\t            \t\t\t\ttheLabel.prepend(requireStr);\r\n\t            \t\t\t}else{\r\n\t            \t\t\t\ttheLabel.append(requireStr);\r\n\t            \t\t\t}\r\n\t            \t\t}\r\n\t        \t\t}\r\n\t        \t}else{\r\n\t        \t\t\r\n\t        \t\tif(!argument || (argument.indexOf(\"required\") > -1 || argument.indexOf(\"widgetRequired\") > -1)){\r\n\t        \t\t\tvar theLabel = $(elem).closest(\"td\") ? $(elem).closest(\"td\").prev(\"td\") : null;\r\n\t        \t\t\t// console.error(theLabel);\r\n\t            \t\tif(theLabel && theLabel.text() && theLabel.children(\".red-star\").length > 0){\r\n\t            \t\t\ttheLabel.children(\".red-star\").remove();\r\n\t            \t\t}\r\n\t        \t\t}\r\n\t        \t}\r\n\r\n\t        \treturnValue = $(elem).rules(command, argument);\r\n\t        \t\r\n\t        \treturn returnValue;\r\n\t        },\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t\r\n\t        \tif(!!newOptions){\r\n\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t        \t\t\tthis._resetOption(newOptions);\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] ? params[newOptions] : ui.logWarn(\"查找的属性值不存在\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t}else{\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n\t        _resetOption: function(newOptions){\r\n\t\t\t\tvar params = this._opt, self = this, isClear = false;\r\n\t\t\t\tthis._validate.resetForm();\r\n\t\t\t\tthis._initDom();\r\n\t        },\r\n\t        resetForm: function(){\r\n\t        \tthis._validate.resetForm();\r\n\t        },\r\n\t        destroy: function(callback){\r\n\t        \t// console.info(this.$form);\r\n\t            // this.$form.destroy();\r\n\t            // this.$form.parent().replaceWith(this.initDom);\r\n\t            this.$form.removeData(_pluginDataName);\r\n\t            // this.$form.removeData();\r\n\r\n\t            return this;\r\n\t        },\r\n\t        // 是否校验通过\r\n\t        valid: function(){\r\n\t        \treturn this.$form.valid();\r\n\t        \t// return this._validate.valid();\r\n\t        },\r\n\t        // 当前表单下单个节点校验\r\n\t        validElement: function($element){\r\n                return this._validate.element($element);\r\n\t        }\r\n\t\t}\r\n\r\n\t\t$.fn[_pluginName] = function(param1){\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t// console.info(form);\r\n\t\t\t\t//生成插件类实例。\r\n\t\t\t\t// $.data(form, _pluginDataName, new formValidate(this, param1));\r\n\t\t\t\t// console.info($.data(form, _pluginDataName));\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(form, _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(form, _pluginDataName, new formValidate(this, param1));\r\n\t\t\t\t}else{\r\n\t\t\t\t\t$.data(form, _pluginDataName)._validate.resetForm();\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(form, _pluginDataName, new formValidate(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\r\n\t\t\tvar data = $.data(form, _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"wui.validate 未初始化或已被销毁\", FRAME_NAME+\".\"+_widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('wui.validate 中不存在 ' + funcName + '() 方法', FRAME_NAME+\".\"+_widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        /**\r\n        * 重置表单,把前面验证的 FORM 恢复到验证前原来的状态\r\n        * @method resetForm\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            formValidate.resetForm();\r\n                \r\n        */\r\n\t\tfunction _resetForm(params){\r\n\t\t\treturn _executeMethod(\"resetForm\", params);\r\n\t\t}\r\n\r\n        /**\r\n        * 检查当前表单是否校验通过\r\n        * @method valid\r\n        * @since 0.0.1\r\n        * @return {Boolean} 检查当前表单是否校验通过,若是,返回true,否则,返回false\r\n        * @example \r\n            \r\n            // 表单是否校验通过\r\n            formValidate.valid();\r\n                \r\n        */\r\n\t\tfunction _valid(){\r\n\t\t\treturn _executeMethod(\"valid\");\r\n\t\t}\r\n\r\n        /**\r\n        * 给单个元素动态添加或者删除校验规则\r\n        * @method rules\r\n        * @since 0.0.1\r\n        * @param {Selector} element 校验的jquery节点要操作校验的节点选择器,比如\"#element\"\r\n        * @param {String} command 是添加校验规则还是移除校验规则,可选值:\"add\"/\"remove\",默认是\"add\"\r\n        * @param {Object} argument 添加或者移除的校验规则对象\r\n        * @param {Object} [isAddRequiredStar] 新增必填时,是否添加\"*\"号,默认和初始化一致\r\n        * @return {JSON} 该节点绑定的校验规则\r\n        * @example \r\n            \r\n            // 表单添加校验ID为inputRequired1的元素,校验规则为\"required\",且不添加\"*\"\r\n            formValidate.rules(\"#element\", \"add\", {\r\n\t\t\t\trequired: true,\r\n                messages:{  \r\n                    required:\"新增的这个字段是必填的\"  \r\n                }\r\n            }, false);\r\n\r\n            或者你也可以直接\r\n            $(\"#element\").rules(\"add\", {\r\n\t\t\t\trequired: true,\r\n                messages:{  \r\n                    required:\"新增的这个字段是必填的\"  \r\n                }\r\n            })\r\n            \r\n            // 表单移除校验ID为inputRequired1的元素,校验规则为\"required\"\r\n            formValidate.rules(\"#element\", \"remove\", [\"required\"]);\r\n            \r\n            或者你也可以直接\r\n            $(\"#element\").rules(\"remove\", \"required\")\r\n        */\r\n\t\tfunction _rules(elem, command, argument, isAddRequiredStar){\r\n\t\t\treturn _executeMethod(\"rules\", elem, command, argument, isAddRequiredStar);\r\n\t\t}\r\n\r\n        /**\r\n        * 检查当前表单下的某个元素节点是否校验通过\r\n        * @method validElement\r\n        * @since 0.0.1\r\n        * @param {jQuery} $element 校验的jquery节点\r\n        * @return {Boolean} 此节点是否校验通过,若是,返回true,否则,返回false\r\n        * @example \r\n            \r\n            formValidate.validElement($(\"#password\"));\r\n                \r\n        */\r\n\t\tfunction _validElement($element){\r\n\t\t\treturn _executeMethod(\"validElement\", $element);\r\n\t\t}\r\n\r\n        /*\r\n        * 销毁组件(不可用)\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            formValidate.destroy();\r\n                \r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n            // 重新初始化组件,若是传递参数,则\r\n            var myValidate = formValidate.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n        \t$(form)[_pluginName](opt);\r\n   \t\t\t// if(!$.data(form, _pluginDataName)){\r\n\t\t\t// \t$(form)[_pluginName](opt);\r\n\t\t\t// }else{\r\n\t\t\t// \tif(opt && ui.isJson(opt)){\r\n\t\t\t// \t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t// \t}else{\r\n\t\t\t// \t\treturn;\r\n\t\t\t// \t}\r\n\t\t\t\t\r\n\t\t\t// }\r\n        }\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\t\treturn {\r\n            init: _init,        // 初始化\r\n            valid: _valid,\t\t// 是否校验通过\r\n            validElement: _validElement,\t// 表单下单个节点校验\r\n            rules: _rules,\t// 添加或者删除校验规则\r\n\t\t\tresetForm: _resetForm\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * 校验单个节点\r\n\t * @param  {[type]} $dom [description]\r\n\t * @param  {[type]} form [description]\r\n\t * @return {[type]}      [description]\r\n\t */\r\n\tui.validElement = function($dom, form){\r\n        ui.logUtilConfig.debugLog.methodName = \"validElement\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n\r\n\t\tif($dom === undefined){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(form === undefined){\r\n\t\t\tform = $dom.parents(\"form\").get(0);\r\n\t\t}\r\n\t\tif(form === undefined){\r\n\t\t\treturn;\r\n\t\t}\r\n        // alert(\"validElement\");\r\n        var validator = $.data( form, \"validator\" );\r\n        // console.info(validator);\r\n        if ( validator ) {\r\n            validator.element( $dom );\r\n            return validator;\r\n        }\r\n\r\n\t}\r\n\r\n    /**\r\n     * <p>添加自定义校验方法</p>\r\n     * @namespace wui\r\n     * @class addValidateMethod\r\n     * @constructor \r\n     * @param validateName {String} 自定义校验名\r\n     * @param validateMethod {Function} 自定义校验方法\r\n     * @param errorMessage {String} 自定义校验出错提示字符串\r\n     * @return {Boolean} [是否添加成功]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 初始化自定义校验方法\r\n            // 校验输入框输入字段是否为 \"test\"\r\n            wui.addValidateMethod(\"customInput\", function(value, element){\r\n                if(!value || value != \"test\"){\r\n                    return false;\r\n                }\r\n                return true;\r\n            }, \"只能输入内容为test\");\r\n\r\n            // 界面调用1\r\n            <form id=\"form1\">\r\n                <input type=\"text\" validate=\"customInput\" name=\"customTest\" />\r\n            </form>\r\n            <script>\r\n                wui.validate(\"form1\");\r\n            </script>\r\n\r\n            // 界面调用2\r\n            <form id=\"form1\">\r\n                <input type=\"text\" name=\"customTest\" />\r\n            </form>\r\n\r\n            <script>\r\n                wui.validate(\"form1\", {\r\n                    rules: {\r\n                        customTest: \"customInput\"\r\n                    }\r\n                });\r\n            </script>\r\n     *\r\n     */\r\n    ui.addValidateMethod = function(validateName, validateMethod, errorMessage){\r\n        ui.logUtilConfig.debugLog.methodName = \"addValidateMethod\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"addValidateMethod\", FRAME_NAME);\r\n        \r\n        if($.validator && typeof($.validator) === \"function\" && typeof($.validator.addMethod) === \"function\"){\r\n            if(validateName != undefined && typeof(validateMethod) === \"function\"){\r\n                var theValidateMethod = {\r\n                    name: validateName,\r\n                    method: validateMethod,\r\n                    message: errorMessage\r\n                }\r\n                // ui.validateMethod.push(theValidateMethod);\r\n                $.validator.addMethod(validateName, validateMethod, errorMessage);\r\n                return true;\r\n            }\r\n        }else{\r\n            ui.logWarn(\"无法添加自定义校验方法,原因是:没引入校验的第三方插件\", \"wui.addValidateMethod\", true);\r\n        }\r\n        // console.error(\"false\");\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>设置校验的默认参数配置</p>\r\n     * @namespace wui\r\n     * @class setValidateDefault\r\n     * @constructor \r\n     * @param [validateDefaultParams] {JSON} 默认的校验参数键值对\r\n     * @return {Boolean} [是否设置成功]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *\r\n            // 设置默认校验成功提交事件\r\n            wui.setValidateDefault({\r\n                submitHandler: function () {\r\n                    alert( \"submitted!\" );\r\n                }\r\n            });\r\n     *\r\n     */\r\n    ui.setValidateDefault = function(validateDefaultParams){\r\n        ui.logUtilConfig.debugLog.methodName = \"setValidateDefault\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"setValidateDefault\", FRAME_NAME);\r\n\r\n        if($.validator && typeof($.validator) === \"function\" && typeof($.validator.addMethod) === \"function\"){\r\n            if(validateDefaultParams != undefined && typeof(validateDefaultParams) === \"object\"){\r\n                $.validator.setDefaults(validateDefaultParams);\r\n                return true;\r\n            }\r\n        }else{\r\n            ui.logWarn(\"无法设置默认的校验参数,原因是:没引入校验的第三方插件\", \"wui.setValidateDefault\", true);\r\n        }\r\n        // console.error(\"false\");\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * <p>添加校验出错节点全局提示样式</p>\r\n     * @namespace wui\r\n     * @class addValidateErrorTipStyle\r\n     * @constructor \r\n     * @param [styleName] {String} 提示风格名\r\n     * @param [styleMethod] {Function} 提示执行方法,传递两个参数:第一个参数：创建的错误标签jQuery对象。第二个参数：校验无效的jQuery对象\r\n     * @return {Boolean} [是否添加成功]\r\n     * @example\r\n     *  \r\n     *   js: \r\n     *   \r\n            // 添加校验出错节点全局提示样式custom\r\n            wui.addValidateErrorTipStyle(\"custom\", function(error, element){\r\n                var tipsOptions = {\r\n\t\t    \t\ttime: 1 * 1000\t//设置最大等待时长\r\n\t\t    \t};\r\n\t\t    \twui.tips(error[0].innerHTML, element, tipsOptions);\r\n            });\r\n\r\n            // 界面调用\r\n            <form id=\"form1\">\r\n                <input type=\"text\" validate=\"customInput\" name=\"customTest\" />\r\n            </form>\r\n            <script>\r\n                wui.validate(\"form1\", {\r\n\t\t\t\t\terrorTipStyle: \"custom\"\r\n                });\r\n            </script>\r\n     *\r\n     */\r\n    ui.addValidateErrorTipStyle = function(styleName, styleMethod){\r\n        ui.logUtilConfig.debugLog.methodName = \"addValidateErrorTipStyle\";\r\n        ui.logMethodCalled(ui.logUtilConfig.debugLog);\r\n        // ui.logMethodCalled(\"addValidateErrorTipStyle\", FRAME_NAME);\r\n        \r\n        if(styleName && styleMethod && typeof(styleMethod) === \"function\"){\r\n            try{\r\n            \tui.validateUtilConfig.errorTipStyles[styleName] = styleMethod;\r\n            \treturn true;\r\n            }catch(ex){\r\n            \tui.logWarn(\"无法添加校验出错节点全局提示样式\", \"wui.addValidateErrorTipStyle\", true);\r\n            }\r\n        }else{\r\n            ui.logWarn(\"无法添加校验出错节点全局提示样式,原因是:传递参数不符合规则\", \"wui.addValidateErrorTipStyle\", true);\r\n        }\r\n        // console.error(\"false\");\r\n        return false;\r\n    }\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );",";(function (ui, $, undefined){\r\n    /*\r\n     * 单个标签节点组件\r\n     * @Author   Chenzx\r\n     * @DateTime 2018-11-28\r\n     * @param    {JSON}     obj       节点数据\r\n     * @param    {JSON}     opt       组件配置\r\n     * @param    {Object}   component 组件对象\r\n     * @param    {Boolean}   isEnableRemove 组件是否启用\r\n     */\r\n    function TagNode(obj, opt, component, isEnableRemove){\r\n        \r\n        // 组件配置\r\n        this.opt = opt;\r\n\r\n        // 整个组件对象\r\n        this.component = component;\r\n\r\n        // 当前节点是否选中状态\r\n        this.active = false;\r\n\r\n        this.textFields = ui.getTextField(opt[\"text\"]);\r\n\r\n        // 节点索引\r\n        // this.index = component.nodes.length;\r\n        \r\n        // 节点数据\r\n        this.data = obj;\r\n        if(typeof(obj) === \"object\"){\r\n            this.item = obj;\r\n            this.enable = ui.isUndefined(this.item[\"isEnableRemove\"]) ? isEnableRemove : this.item[\"isEnableRemove\"];\r\n        }\r\n\r\n        if(typeof(obj) === \"string\"){\r\n            this.enable = isEnableRemove;\r\n            this.item = {};\r\n            this.item[opt[\"name\"]] = obj;\r\n            for(var _i = 0; _i < this.textFields.length; _i++){\r\n                var jTextField = this.textFields[_i];\r\n                this.item[jTextField.value] = obj;\r\n            }\r\n            // this.item[opt[\"text\"]] = obj;\r\n            this.item[\"isEnableRemove\"] = this.enable;\r\n        }\r\n\r\n        // 节点是否启用状态:节点传递的\"isEnableRemove\"属性 > isEnableRemove > component.isClosable\r\n        this.enable = ui.isUndefined(this.enable) ? component.isClosable : this.enable;\r\n\r\n        // 节点key字段\r\n        this.key = typeof(obj) === \"string\" ? obj : obj[opt[\"name\"]];\r\n\r\n        // 节点模板\r\n        // this.tagTmp = '<span class=\"tag\"><em></em><span data-role=\"remove\"></span></span>';\r\n        this.tagTmp = '<span class=\"tag label\"><span wui-attr=\"title\"></span><span data-role=\"remove\"></span></span>';\r\n\r\n        // 节点对象\r\n        this.node = $(this.tagTmp);\r\n\r\n        // 渲染节点\r\n        this.renderNode();\r\n\r\n\r\n        this.component.itemsName.push(this.key);\r\n    }\r\n\r\n    TagNode.prototype = {\r\n        constructor: TagNode,\r\n\r\n        /*\r\n         * 渲染节点\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-11-28\r\n         * @return   {[type]}   [description]\r\n         */\r\n        renderNode: function(){\r\n            var that = this, obj = this.data;\r\n\r\n            // 渲染节点标题\r\n            this.renderTitle(this.item);\r\n\r\n            this.addClass(this.opt.tagClass);\r\n\r\n            this.component.$input ? this.component.$input.before(this.node) : this.component.$viewBox.append(this.node);\r\n\r\n            // 节点更新渲染状态\r\n            this.nodeRenderStatus();\r\n\r\n            this.node.on(\"click\", function(event){\r\n                event.stopPropagation();    // 阻止事件冒泡\r\n            });\r\n\r\n            // this.node.keypress(function(event){\r\n            //     var keynum = window.event ? event.keyCode : event.which;\r\n            //     ui.notice(keynum)\r\n            //     // if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n            //     //     ui.stopPropagation(event);  // 阻止事件冒泡\r\n            //     //     ui.preventDefault(event);\r\n            //     // }\r\n            // }).keyup(function(event){\r\n            //     var keynum = window.event ? event.keyCode : event.which;\r\n            //     ui.notice(keynum)\r\n            //     if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n            //         that.enter();\r\n            //     }\r\n            // });\r\n\r\n            this.node.children('[data-role=\"remove\"]').on(\"click\", function(event){\r\n                // 阻止事件冒泡\r\n                event.stopPropagation();\r\n                // 节点移除\r\n                that.component.removeNode(that.data);\r\n                // that.remove();\r\n            })\r\n        },\r\n        /*\r\n         * 节点更新渲染状态\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-28\r\n         * @return   {[type]}   [description]\r\n         */\r\n        nodeRenderStatus: function(){\r\n\r\n            this.setEnable(this.enable);\r\n\r\n            this.component.trigger(\"nodeRender\", this);\r\n        },\r\n        addClass: function(classNames){\r\n            this.node.addClass(classNames);\r\n        },\r\n        removeClass: function(classNames){\r\n            this.node.removeClass(classNames);\r\n        },\r\n        /*\r\n         * 移除节点\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-11-28\r\n         * @return   {[type]}   [description]\r\n         */\r\n        remove: function(){\r\n            // console.info(this.opt)\r\n            var index = this.node.index();\r\n            this.node.remove();\r\n            this.component.nodes.splice(index, 1);\r\n            this.component.itemsName.splice(index, 1);\r\n        },\r\n        /*\r\n         * 渲染节点标题\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-11-29\r\n         * @return   {[type]}   [description]\r\n         */\r\n        renderTitle: function(itemData){\r\n            var that = this,\r\n                text = this.opt.text,\r\n                // 结果显示文本\r\n                showTitle = text;\r\n\r\n            if(ui.isUndefined(itemData)){\r\n                itemData = this.item;\r\n            }\r\n\r\n            if(this.textFields.length > 0){\r\n                for(var _i = 0; _i < this.textFields.length; _i++){\r\n                    var jTextField = this.textFields[_i];\r\n                    if(ui.isUndefined(itemData[jTextField.value])){\r\n                        itemData[jTextField.value] = \"\";\r\n                    }\r\n\r\n                    showTitle = showTitle.replace(jTextField.match, itemData[jTextField.value]);\r\n                }\r\n            }else{\r\n                // 若text字段为空,则默认保存全部\r\n                if(typeof(itemData) === \"string\"){\r\n                    showTitle = itemData;\r\n                }else{\r\n                    showTitle = JSON.stringify(itemData);\r\n                }\r\n            } \r\n\r\n            // 节点文本\r\n            this.title = that.normChars(showTitle);\r\n\r\n            this.node.find('[wui-attr=\"title\"]').each(function(i){\r\n                $(this).html(that.title);\r\n            })\r\n\r\n            return that.title;\r\n        },\r\n        /*\r\n         * 规范节点标题字符个数\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-11-29\r\n         * @return   {[type]}   [description]\r\n         */\r\n        normChars: function(title){\r\n            var that = this,\r\n                maxChars = this.opt.maxChars;\r\n            \r\n            if(maxChars > 0 && title.length > maxChars){\r\n                title = title.substr(0, maxChars) + that.opt.ellipsis;\r\n            }\r\n            return title;\r\n        },\r\n        /*\r\n         * 设置启用或禁用状态\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-28\r\n         * @param    {Boolean}  isEnable [description]\r\n         */\r\n        setEnable: function(isEnable){\r\n            this.enable = isEnable === false ? false : true;\r\n            if(this.enable && this.component.enable){\r\n                this.node.children('[data-role=\"remove\"]').removeClass('hide');\r\n            }else{\r\n                this.node.children('[data-role=\"remove\"]').addClass('hide');\r\n            }\r\n        },\r\n        isEnable: function(){\r\n            return this.enable;\r\n        },\r\n        enter: function(){\r\n            this.node.children('[data-role=\"remove\"]').trigger(\"click\");\r\n        },\r\n        focus: function(){\r\n            this.node.focus();\r\n        },\r\n        blur: function(){\r\n            this.node.blur();\r\n        },\r\n        setActive: function(isActive){\r\n            if(isActive){\r\n                this.addClass(\"selected\");\r\n            }else{\r\n                this.removeClass(\"selected\");\r\n            }\r\n\r\n            this.active = isActive ? true : false;\r\n        },\r\n        isActive: function(){\r\n            return this.active;\r\n        }\r\n    }\r\n\r\n    // 最后将插件对象暴露给全局对象\r\n    var _global = (function(){ return this || (0, eval)('this'); }());\r\n    if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports = TagNode;\r\n    } else if (typeof define === \"function\" && define.amd) {\r\n        define(function(){return TagNode;});\r\n    } else {\r\n        !('TagNode' in _global) && (_global.TagNode = TagNode);\r\n    }\r\n\r\n})( wui || {}, libs );",";(function (ui, $, undefined){\r\n    /*\r\n     * 单个下拉节点组件\r\n     * @Author   Chenzx\r\n     * @DateTime 2018-11-28\r\n     * @param    {JSON}     obj        节点数据\r\n     * @param    {JSON}     opt        组件配置\r\n     * @param    {Object}   component  组件对象\r\n     * @param    {Boolean}  parentNode 组件的父组件对象\r\n     */\r\n    function SelectNode(obj, opt, component, parentNode){\r\n        \r\n        // 组件配置\r\n        this.opt = $.extend(true, {}, this.getInitOpt(), opt);\r\n\r\n        // 整个组件对象\r\n        this.component = component;\r\n\r\n        // 节点key字段\r\n        this.key = obj[this.opt[\"name\"]];\r\n        \r\n        this.textFields = ui.getTextField(this.opt[\"text\"]);\r\n\r\n        // 节点文本\r\n        this.title = obj[this.opt[\"text\"]];\r\n        // delete obj[opt[\"text\"]];\r\n\r\n        // 节点是否启用状态\r\n        this.enable = !!obj[this.opt.jsonReader[\"disabled\"]] ? false : true;\r\n        delete obj[this.opt.jsonReader[\"disabled\"]];\r\n\r\n        // 节点是否组头\r\n        this.group = obj[this.opt.jsonReader[\"children\"]] ? true : false;\r\n\r\n        // 节点是否选中状态\r\n        this.selected = obj[this.opt.jsonReader[\"selected\"]] ? true : false;\r\n        delete obj[this.opt.jsonReader[\"selected\"]];\r\n\r\n        // 节点是否隐藏状态\r\n        this.hidden = obj[this.opt.jsonReader[\"hidden\"]] ? true : false;\r\n        delete obj[this.opt.jsonReader[\"hidden\"]];\r\n\r\n        // 节点数据\r\n        this.data = obj;\r\n        if(typeof(obj) === \"object\"){\r\n            this.item = obj;\r\n        }\r\n\r\n        if(typeof(obj) === \"string\"){\r\n            this.item = {};\r\n            this.item[opt[\"name\"]] = obj;\r\n            for(var _i = 0; _i < this.textFields.length; _i++){\r\n                var jTextField = this.textFields[_i];\r\n                this.item[jTextField.value] = obj;\r\n            }\r\n        }\r\n\r\n        // 渲染节点标题\r\n        this.renderTitle(this.item);\r\n\r\n        // 节点的孩子节点集合\r\n        this.childrens = [];\r\n\r\n        // 节点的直接父节点\r\n        this.parent = parentNode;\r\n\r\n        // 下拉视图单个选项节点模板\r\n        this.optionTmp = '<li tabindex=0 data-original-index=\"' + this.component.pickerNodes.length + '\">'\r\n                    + '<a>'\r\n                        + '<span class=\"text\"><i class=\"' + this.opt.classList.option + '\"></i> ' + this.title + '</span>'\r\n                        + '<span class=\"' + this.opt.classList.checked + ' check-mark\">'\r\n                        + '</span>'\r\n                    + '</a>'\r\n                + '</li>';\r\n\r\n        // 下拉视图中单个分组节点模板\r\n        this.optgroupTmp = '<li class=\"dropdown-header\" tabindex=0 data-optgroup-index=\"' + this.component.pickerNodes.length + '\">'\r\n                            + '<span class=\"text\"><i class=\"' + this.opt.classList.group + '\"></i> ' + this.title + '</span>'\r\n                            + '<span class=\"' + this.opt.classList.checked + ' check-mark\">'\r\n                        + '</li>';\r\n\r\n        // 下拉视图中分割线模板\r\n        this.dividerTmp = '<li class=\"divider\" data-divider-index=\"{0}\"></li>',\r\n\r\n        // 节点对象\r\n        this.node = null;\r\n\r\n        this.renderNode();\r\n    }\r\n\r\n    SelectNode.prototype = {\r\n        constructor: SelectNode,\r\n\r\n        /*\r\n         * 获取初始化配置\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-12-26\r\n         * @return   {[type]}   [description]\r\n         */\r\n        getInitOpt: function(){\r\n            return {\r\n                // {string}  非空,选中值保存的text字段\r\n                text: \"name\"          \r\n                // {string}  非空,选中值保存的value字段\r\n                , name: \"id\" \r\n                // 数据源数据解析\r\n                , jsonReader: {\r\n                    // {String} 子节点集字段名\r\n                    children: \"children\"\r\n                    // {String} 子节点禁用标识字段名\r\n                    , disabled: \"disabled\"\r\n                    // {String} 子节点选中标识字段名\r\n                    , selected: \"selected\"\r\n                    // {String} 子节点隐藏标识字段名\r\n                    , hidden: \"hidden\"\r\n                }\r\n                // 默认样式类\r\n                , classList: {\r\n                    // 选中节点附加样式\r\n                    \"selected\": \"selected\"\r\n                    // 隐藏节点附加样式\r\n                    , \"hidden\": \"hide\"\r\n                    // 禁用节点附加样式\r\n                    , \"disabled\": \"disabled\"\r\n                    // 聚焦节点附件样式\r\n                    , \"active\": \"active\"\r\n                    // {string}  选中节点的图标样式\r\n                    , \"checked\": \"fa fa-check\"\r\n                    // {String} 分组时,组头附加图标样式\r\n                    , \"group\": \"fa fa-group  wui-fa-middle\"\r\n                    // {String} 选项附加图标样式\r\n                    , \"option\": \"\"\r\n                }\r\n                // 节点转态规则\r\n                , rules: {\r\n                    // {function} 隐藏状态规则,返回boolean\r\n                    hidden: null\r\n                    // {function} 禁用状态规则,返回boolean\r\n                    , disabled: null\r\n                    // {function} 选中状态规则,返回boolean\r\n                    , selected: null\r\n                }\r\n                // 当分组时,是否可整组选择,默认是false\r\n                , isSelectGroup: false       \r\n                // {number} 最多可选个数,false代表无限制\r\n                , maxNumber: false\r\n            };\r\n        },\r\n        /*\r\n         * 渲染节点\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-26\r\n         * @return   {[type]}   [description]\r\n         */\r\n        renderNode: function(){\r\n            var that = this, obj = this.data;\r\n\r\n            if(this.group){\r\n                this.node = $(this.optgroupTmp);\r\n                this.$divider1 = $(this.dividerTmp);\r\n\r\n                this.component.addPickerItem(this.$divider1);\r\n                this.component.addPickerItem(this.node);\r\n            }else{\r\n                this.node = $(this.optionTmp);\r\n\r\n                if(this.parent){\r\n                    this.node.children('a').addClass('opt');\r\n                }\r\n                this.component.addPickerItem(this.node);\r\n            }\r\n\r\n            this.node.children('a').attr(\"title\", this.title);\r\n\r\n            this.node.on(\"click\", \"a, span\", function(ev){\r\n                ev.stopPropagation();\r\n                // console.info(this);\r\n                that.click();\r\n            })\r\n\r\n            // 节点焦点事件\r\n            this.node.focus(function(){\r\n                that.addClass(that.opt.classList.active);\r\n            }).blur(function(){\r\n                that.removeClass(that.opt.classList.active);\r\n            }).hover(function(){\r\n                that.focus();\r\n            }, function(){\r\n                that.blur();\r\n            })\r\n\r\n            //监听Enter键选中事件\r\n            this.node.keydown(function(event){\r\n                // event.stopPropagation();\r\n                // event.preventDefault();\r\n                // alert(\"down\")\r\n            }).keyup(function(event){\r\n                event.stopPropagation();\r\n                // event.preventDefault();\r\n                \r\n                var keynum = window.event ? event.keyCode : event.which;\r\n                // alert(keynum)\r\n                if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                    that.enter(this);\r\n                }else if(keynum == ui.CONSTANTS.KEYS.DOWN){\r\n                    var nextSiblingNode = that.getNextSibling();\r\n\r\n                    for(var i = 0; i < nextSiblingNode.length; i++){\r\n                        var node = nextSiblingNode[i];\r\n                        if(!node.isHidden() && node.isEnable()){\r\n                            that.blur();\r\n                            node.focus();\r\n                            break;\r\n                        }\r\n                    }\r\n                }else if(keynum == ui.CONSTANTS.KEYS.UP){\r\n                    var prevSiblingNode = that.getPrevSibling();\r\n                    for(var i = (prevSiblingNode.length - 1); i >= 0; i--){\r\n                        var node = prevSiblingNode[i];\r\n                        if(!node.isHidden() && node.isEnable()){\r\n                            that.blur();\r\n                            node.focus();\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n            this.nodeRenderStatus(this.opt.rules);\r\n        },\r\n        /*\r\n         * 渲染节点标题\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-11-29\r\n         * @return   {[type]}   [description]\r\n         */\r\n        renderTitle: function(itemData){\r\n            var that = this,\r\n                text = this.opt.text,\r\n                // 结果显示文本\r\n                showTitle = text;\r\n\r\n            if(this.textFields.length > 0){\r\n                for(var _i = 0; _i < this.textFields.length; _i++){\r\n                    var jTextField = this.textFields[_i];\r\n                    if(ui.isUndefined(itemData[jTextField.value])){\r\n                        itemData[jTextField.value] = \"\";\r\n                    }\r\n\r\n                    showTitle = showTitle.replace(jTextField.match, itemData[jTextField.value]);\r\n                }\r\n            }else{\r\n                // 若text字段为空,则默认保存全部\r\n                if(typeof(itemData) === \"string\"){\r\n                    showTitle = itemData;\r\n                }else{\r\n                    showTitle = JSON.stringify(itemData);\r\n                }\r\n            } \r\n\r\n            // 节点文本\r\n            this.title = showTitle;\r\n\r\n            // this.node.find('[wui-attr=\"title\"]').each(function(i){\r\n            //     $(this).html(that.title);\r\n            // })\r\n\r\n            return that.title;\r\n        },\r\n        click: function(){\r\n            this.setSelected(!this.isSelected());\r\n        },\r\n        enter: function(){\r\n            this.setSelected(!this.isSelected());\r\n        },\r\n        focus: function(){\r\n            this.node.focus();\r\n        },\r\n        blur: function(){\r\n            this.node.blur();\r\n        },\r\n        hover: function(){\r\n            this.node.hover();\r\n        },\r\n        getPrevSibling: function(){\r\n            var index = this.component.pickerNodes.indexOf(this);\r\n            var prevSiblingNode = this.component.pickerNodes.slice(0, index);\r\n            return prevSiblingNode;\r\n        },\r\n        getNextSibling: function(){\r\n            var index = this.component.pickerNodes.indexOf(this);\r\n            var nextSiblingNode = this.component.pickerNodes.slice(index + 1, this.component.pickerNodes.length);\r\n            return nextSiblingNode;\r\n        },\r\n        setNodeSelected: function(isSelected, isSelectGroup, isExcute){\r\n            var enable = true;\r\n\r\n            if(isSelected == this.isSelected() || !this.isEnable()){\r\n                return;\r\n            }\r\n\r\n            // 隐藏节点可以取消,但是不能选中\r\n            if(isSelected && this.isHidden()){\r\n                return;\r\n            }\r\n\r\n            isSelectGroup = ui.isUndefined(isSelectGroup) ? this.opt.isSelectGroup : isSelectGroup;\r\n            isExcute = ui.isUndefined(isExcute) ? true : isExcute;\r\n\r\n            if(this.isGroup() && !isSelectGroup){\r\n                return;\r\n            }\r\n\r\n            if(isExcute){\r\n                var isContinue = true\r\n                if(isSelected){\r\n                    isContinue = this.component.trigger(\"beforeItemSelect\", {\r\n                        srcElement: this.node.get(0),\r\n                        item: this.data,\r\n                        node: this\r\n                    });\r\n                }else{\r\n                    isContinue = this.component.trigger(\"beforeItemUnselect\", {\r\n                        srcElement: this.node.get(0),\r\n                        item: this.data,\r\n                        node: this\r\n                    });\r\n                }\r\n                \r\n                if(isContinue === false){\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if(this.isGroup()){\r\n                if(isSelected && typeof(this.opt.maxNumber) === \"number\"\r\n                        && this.getEnableChildrens(false).length > (this.opt.maxNumber - this.component.getComponentNodes().length)){\r\n                    enable = false;\r\n                }\r\n                \r\n                if(this.isEnable() && enable){\r\n\r\n                    if(!this.component.isFilter){\r\n                        this.selected = isSelected ? true : false;\r\n                        if(this.selected){\r\n                            this.addClass('selected');\r\n                        }else{\r\n                            this.removeClass('selected');\r\n                        }\r\n                    }\r\n\r\n                    $.each(this.childrens, function(i, childNode){\r\n                        childNode.setNodeSelected(isSelected, isSelectGroup, isExcute);\r\n                    })\r\n                } \r\n            }else{\r\n                this.selected = isSelected ? true : false;\r\n                if(this.selected){\r\n                    this.addClass(this.opt.classList.selected);\r\n\r\n                    this.component.addComponentNodes(this, isExcute);\r\n                }else{\r\n                    this.removeClass(this.opt.classList.selected);\r\n\r\n                    this.component.removeComponentNodes(this, isExcute);\r\n                }\r\n\r\n                if(!this.selected && this.parent){\r\n                    this.parent.setNodeSelected(false, false);\r\n                }\r\n            }\r\n\r\n            // 若是单选,则关闭下拉框\r\n            if(this.opt.maxNumber == 1){\r\n                this.component.closePicker();\r\n            }\r\n        },\r\n        /*\r\n         * 获取该节点下可选的子节点\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-30\r\n         * @param    {Boolean}  isSelected [description]\r\n         * @return   {[type]}              [description]\r\n         */\r\n        getEnableChildrens: function(isSelected){\r\n            var that = this, resultNode = [];\r\n            $.each(this.childrens, function(i, childNode){\r\n                if(childNode.isEnable() && !childNode.isHidden()){\r\n                    if(ui.isUndefined(isSelected)){\r\n                        resultNode.push(childNode);\r\n                    }else if(childNode.isSelected() === isSelected){\r\n                        resultNode.push(childNode);\r\n                    }\r\n                }\r\n            })\r\n            return resultNode;\r\n        },\r\n        addClass: function(className){\r\n            this.node.addClass(className);\r\n        },\r\n        removeClass: function(className){\r\n            this.node.removeClass(className);\r\n        },\r\n        /*\r\n         * 设置选择状态\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-28\r\n         * @param    {Boolean}  isSelected [description]\r\n         */\r\n        setSelected: function(isSelected){\r\n\r\n            // 是否单选,若是单选,则清除已选选项\r\n            if(this.opt.maxNumber === 1 && this.component.getComponentNodes().length > 0 && isSelected){\r\n\r\n                while(this.component.getComponentNodes().length > 0){\r\n                    var lastSelectedNode = this.component.popNodes();\r\n                    lastSelectedNode.setNodeSelected(false, undefined, false);\r\n                }   \r\n            }\r\n\r\n            if(isSelected){\r\n                var isMaxNumber = this.component.isMaxNumber(this.data);\r\n                if(isMaxNumber){\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            this.setNodeSelected(isSelected);\r\n\r\n            this.component.renderResult();\r\n        },\r\n        isSelected: function(){\r\n            return this.selected;\r\n        },\r\n        /*\r\n         * 设置启用或禁用状态\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-28\r\n         * @param    {Boolean}  isEnable [description]\r\n         */\r\n        setEnable: function(isEnable){\r\n            this.enable = isEnable ? true : false;\r\n            if(this.enable){\r\n                this.removeClass(this.opt.classList.disabled);\r\n            }else{\r\n                this.addClass(this.opt.classList.disabled);\r\n            }\r\n        },\r\n        isEnable: function(){\r\n            return this.enable;\r\n        },\r\n        setNodeHidden: function(isHidden, isHiddenGroup){\r\n            this.hidden = isHidden ? true : false;\r\n            // ui.notice(this.hidden)\r\n            if(this.hidden){\r\n                this.addClass(this.opt.classList.hidden);\r\n            }else{\r\n                this.removeClass(this.opt.classList.hidden);\r\n            }\r\n            if(this.isGroup() && isHiddenGroup){\r\n                $.each(this.childrens, function(i, childNode){\r\n                    childNode.setNodeHidden(isHidden, isHiddenGroup);\r\n                })\r\n            }\r\n        },\r\n        setHidden: function(isHidden){\r\n            this.setNodeHidden(isHidden);\r\n        },\r\n        isHidden: function(){\r\n            return this.hidden;\r\n        },\r\n        isGroup: function(){\r\n            return this.group;\r\n        },\r\n        /*\r\n         * 节点更新渲染状态\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-10-28\r\n         * @return   {[type]}   [description]\r\n         */\r\n        nodeRenderStatus: function(rules){\r\n\r\n            // 以 this.isEnable() 为主\r\n            if(this.node.hasClass(this.opt.classList.disabled) === this.isEnable()){\r\n                this.setEnable(this.isEnable());\r\n            }\r\n\r\n            // 以 this.isHidden() 为主\r\n            if(this.node.hasClass(this.opt.classList.hidden) !== this.isHidden()){\r\n                this.setNodeHidden(this.isHidden());\r\n            }\r\n\r\n            // 以 this.isSelected() 为主\r\n            if(this.node.hasClass(this.opt.classList.selected) !== this.isSelected()){\r\n                this.selected = !this.isSelected();\r\n                this.setSelected(!this.selected);\r\n            }\r\n\r\n            this.component.trigger(\"nodeRender\", this);\r\n        }\r\n    }\r\n\r\n    // 最后将插件对象暴露给全局对象\r\n    var _global = (function(){ return this || (0, eval)('this'); }());\r\n    if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports = SelectNode;\r\n    } else if (typeof define === \"function\" && define.amd) {\r\n        define(function(){return SelectNode;});\r\n    } else {\r\n        !('SelectNode' in _global) && (_global.SelectNode = SelectNode);\r\n    }\r\n\r\n})( wui || {}, libs );","/**\r\n * <h3>WUI UI组件库</h3>\r\n * <h5>主要组件</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.date\"}}{{/crossLink}}: 日期选择器 </li>\r\n * <li>{{#crossLink \"wui.chooseBox\"}}{{/crossLink}}: 弹出选择框组件 </li>\r\n * <li>{{#crossLink \"wui.selectBox\"}}{{/crossLink}}: 下拉选择框组件 </li>\r\n * <li>{{#crossLink \"wui.selectComboBox\"}}{{/crossLink}}: 选择组合框组件 </li>\r\n * <li>{{#crossLink \"wui.tagBox\"}}{{/crossLink}}: 建议选择框组件 </li>\r\n * <li>{{#crossLink \"wui.tagComboBox\"}}{{/crossLink}}: 标签选择组合框组件 </li>\r\n * <li>{{#crossLink \"wui.file\"}}{{/crossLink}}: 文件上传组件 </li>\r\n * <li>{{#crossLink \"wui.img\"}}{{/crossLink}}: 图片编辑上传组件 </li>\r\n * <li>{{#crossLink \"wui.ueditor\"}}{{/crossLink}}: 富文本框组件 </li>\r\n * </ol>\r\n * <h5>其他常用组件</h5>\r\n * <ol>\r\n * <li>{{#crossLink \"wui.tagsinput\"}}{{/crossLink}}: 标签输入组件 </li>\r\n * <li>{{#crossLink \"wui.tree\"}}{{/crossLink}}: 树形组件 </li>\r\n * <li>{{#crossLink \"wui.grid\"}}{{/crossLink}}: 列表组件 </li>\r\n * </ol>\r\n * \r\n * <div class=\"example\">\r\n        <h5>组件参数配置方法(WUI组件提供以下两种配置方法,效果一样,注意红色部分)</h5>\r\n        <div class=\"example-content\">\r\n            <ol>\r\n                <li>\r\n                    页面标签附加数据(以\"date\"组件为例),附加数据格式：data-wui-paramName=paramValue\r\n<pre class=\"language-html\"><code class=\"language-html\">&lt;input type=\"text\" id=\"date\" data-wui-format=\"yyyy-mm-dd hh:ii:ss\" /&gt;\r\n</code></pre>\r\n\r\n<pre class=\"language-js\"><code class=\"language-js\">// 初始化\r\nvar uiDate = wui.date( \"date\" );\r\n</code></pre>\r\n                </li>\r\n                <li>\r\n                    脚本对象参数配置(以\"date\"组件为例)：脚本数据格式：{paramName:paramValue}\r\n<pre class=\"language-html\"><code class=\"language-html\">&lt;input type=\"text\" id=\"date\" /&gt;\r\n</code></pre>\r\n\r\n<pre class=\"language-js\"><code class=\"language-js\">// 初始化\r\nvar uiDate = wui.date( \"date\", {\r\n    \"format\":\"yyyy-mm-dd hh:ii:ss\"\r\n});\r\n</code></pre>\r\n                </li>\r\n            </ol>\r\n        </div>\r\n    </div>\r\n * @module Components\r\n */\r\n\r\n;(function (ui,$, undefined) {\r\n    /**\r\n     * <h3>日期选择器</h3>\r\n     * <ol>\r\n     * <li>支持多种日期格式显示，自定义年月日时分秒的排列组合; </li>\r\n     * <li>支持可选日期的限制,限制之后，只能在开始时间到结束时间之间选择某个日期; </li>\r\n     * <li>多种视图选择：十年视图、年视图、月视图、日视图、小时视图等; </li>\r\n     * </ol>\r\n     * <h3>依赖插件</h3>\r\n     * <ul>\r\n     * <li><a href=\"http://www.bootcss.com/p/bootstrap-datetimepicker/index.htm\" target=\"_blank\">bootstrap-datetimepicker</a> </li>\r\n     * </ul>\r\n     * <h3>需引入插件</h3>\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css&quot;/&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.js&quot;&gt;&lt;/script&gt;</code></pre>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiDate\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.date/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.date/set\"}}{{/crossLink}}: 设置组件值 </li>\r\n     * <li>{{#crossLink \"wui.date/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.date/show\"}}{{/crossLink}}: 显示日期选择视图 </li>\r\n     * <li>{{#crossLink \"wui.date/hide\"}}{{/crossLink}}: 隐藏日期选择视图 </li>\r\n     * <li>{{#crossLink \"wui.date/enabled\"}}{{/crossLink}}: 允许点击弹出日期选择视图 </li>\r\n     * <li>{{#crossLink \"wui.date/disabled\"}}{{/crossLink}}: 阻止点击弹出日期选择视图 </li>\r\n     * <li>{{#crossLink \"wui.date/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.date/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.date/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     * \r\n     *  @namespace wui\r\n     *  @class date\r\n     *  @constructor\r\n     *  @param {string} id  元素id@@@###初始化组件元素ID名   \r\n     *  @param {object} option 组件配置@@@###组件初始化配置项集合\r\n     *  @param {string} [option.value=\"\"]  控件加载完成时显示的默认值\r\n     *  @param {string} [option.format=\"yyyy-mm-dd\"]   日期格式， p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy 的任意组合。 <br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <tr>\r\n                    <td>p : 选中值表示为 'am' or 'pm'</td>\r\n                    <td>P : 选中值表示为 'AM' or 'PM'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>s : 秒数表示，不填充'0'</td>\r\n                    <td>ss : 秒数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>i :分数表示，不填充'0'</td> \r\n                    <td>ii : 分数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>h : 24小时制，不填充'0'</td> \r\n                    <td>hh : 24小时制，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>H : 12小时制，不填充'0'</td> \r\n                    <td>HH : 12小时制，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>d : 每月天数表示，不填充'0'</td> \r\n                    <td>dd : 每月天数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>m : 月份表示，不填充'0'</td> \r\n                    <td>mm : 月份表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>M : 一个月的短文本表示，例如一或三</td> \r\n                    <td>MM : 一个月的全文，例如一月或三月</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>yy : 年份的两位数表示法</td> \r\n                    <td>yyyy : 年份的全数字表示法(4位数)</td>\r\n                </tr>\r\n            </table> \r\n     *  @param {Number|String} [option.startView=-1]   打开日期选择视图之后首先显示的视图 <br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>参数值</th>\r\n                        <th>含义</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>-1</td>\r\n                        <td>默认值,根据format参数值检测打开的视图</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>0 或者 'hour'</td>\r\n                        <td>日期视图-h</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>1 或者 'day'</td>\r\n                        <td>小时视图-i</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2 或者 'month'</td>\r\n                        <td>月份视图-d</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>3 或者 'year'</td>\r\n                        <td>12个月概览-m</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>4 或者 'decade'</td>\r\n                        <td>十年概览,可用于选择出生年份-y</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n     *  @param {boolean} [option.isFreeInput=false]   是否可以自由输入日期\r\n     *  @param {String} [option.pickerPosition=\"auto-right\"]   日期选择视图展开方向。bottom、top、right、left自由组合，拼写时先上下再左右\r\n     *  @param {boolean} [option.isShowBtnGroup=false]   是否添加按钮组\r\n     *  @param {boolean} [option.isShowClearBtn=true]   是否在日期选择视图底部显示\"清空\"按钮用以清楚当前选中日期\r\n     *  @param {boolean|string} [option.isShowTodayBtn=true]   是否在日期选择视图底部显示\"今日\"按钮用以切换到当天视图,可选参数true/false/link(当天日期将会被选中)\r\n     *  @param {boolean} [option.isHighlightToday=false]   是否高亮当前日期\r\n     *  @param {number} [option.minuteStep=5]   此数值被当做步进值用于构建分钟视图。对于每个 minuteStep 都会生成一组预设时间（分钟）用于选择\r\n     *  @param {string} [option.startDate=\"\"]   可选日期最小值，格式参考format\r\n     *  @param {string} [option.endDate=\"\"]   可选日期最大值，格式参考format\r\n     *  @param {number} [option.weekStart=0]   一周从哪一天开始。0（星期日）到6（星期六)\r\n     *  @param {JSON} [option.defaultText='{}']   组件文本配置\r\n     *  @param {String} [option.defaultText.emptyText=\"&lt;i&nbsp;class=\\'fa&nbsp;fa-remove\\'&gt;&lt;/i&gt;\"]   清空按钮文本\r\n     *  @example\r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件样式 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Date: &lt;input type=\"text\" id=\"dateId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件脚本 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiDate = wui.date( \"dateId\",{\r\n                value :\"2018-01-01\",\r\n                isFreeInput :true\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n    ui.date = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiDate\",\r\n            _pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"date\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n\r\n        // var $elements;\r\n        // if(ui.isJQuery(element)){\r\n        //     $elements = element;\r\n        //     element = $elements.attr(\"id\");\r\n        // }else{\r\n        //     $elements = $(\"#\" + element);\r\n        // }\r\n        // console.info(element)\r\n\r\n        if(!$(\"#\" + element).exist()){\r\n            ui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n            return false;\r\n        }\r\n\r\n        //需要设置为控件的名字\r\n        var _widgetEventType = [],  // wui组件监听事件类型\r\n            // \"show\"：日期选择视图显示时被触发\r\n            // \"hide\"：日期选择视图隐藏时被触发\r\n            // \"changeDate\"：当日期被改变时被触发\r\n            // \"changeYear\"：当十年视图上的年视图被改变时触发\r\n            // \"changeMonth\"：当年视图上的月视图被改变时触发\r\n            // \"outOfRange\"：当用户选择的日期超出startDate 或endDate 时触发\r\n            _pluginEventType = [\"show\", \"hide\", \"changeValue\", \"changeDate\", \"changeYear\", \"changeMonth\", \"outOfRange\"];   // 传递到wui组件内部使用插件监听事件类型\r\n\r\n        // 组件开放使用配置参数\r\n        var config = {\r\n            // {string} 默认显示值\r\n            value: \"\"\r\n            // {boolean} 是否可以自由输入日期\r\n            , isFreeInput: false    \r\n            // {boolean} 是否显示按钮组：包含弹出日期选择视图和清空组件值两个按钮操作\r\n            , isShowBtnGroup: false \r\n            // {string} 日期格式\r\n            , format : 'yyyy-mm-dd'        \r\n                // p : 选中值表示为 'am' or 'pm' <br/>\r\n                // P : 选中值表示为 'AM' or 'PM'\r\n                // s : 秒数表示，不填充'0'\r\n                // ss : 秒数表示，填充'0'\r\n                // i :分数表示，不填充'0'\r\n                // ii : 分数表示，填充'0'\r\n                // h : 24小时制，不填充'0'\r\n                // hh : 24小时制，填充'0'\r\n                // H : 12小时制，不填充'0'\r\n                // HH : 12小时制，填充'0'\r\n                // d : 每月天数表示，不填充'0'\r\n                // dd : 每月天数表示，填充'0'\r\n                // m : 月份表示，不填充'0'\r\n                // mm : 月份表示，填充'0'\r\n                // M : 一个月的短文本表示，例如一或三\r\n                // MM : 一个月的全文，例如一月或三月\r\n                // yy : 年份的两位数表示法\r\n                // yyyy : 年份的全数字表示法(4位数)\r\n            // {string} 日期选择视图展开方向。bottom、top、right、left自由组合，拼写时先上下再左右\r\n            , pickerPosition: 'auto-right' \r\n\r\n            // {boolean} 是否在日期选择视图底部显示\"清空\"按钮用以清楚当前选中日期\r\n            , isShowClearBtn: true\r\n            // {boolean/string} 是否在日期选择视图底部显示\"今日\"按钮用以选择当前日期\r\n            , isShowTodayBtn: true\r\n                // 如果此值为true 或 \"linked\"，则在日期时间选择器组件的底部显示一个 \"Today\" 按钮用以选择当前日期\r\n                // 如果是true的话，\"Today\" 按钮仅仅将视图转到当天的日期\r\n                // 如果是\"linked\"，当天日期将会被选中。\r\n            // {boolean} 是否高亮当前日期\r\n            , isHighlightToday: false  \r\n            // {number} 一周从哪一天开始。0（星期日）到6（星期六）\r\n            , weekStart: 0   \r\n            // {number} 此数值被当做步进值用于构建分钟视图。对于每个 minuteStep 都会生成一组预设时间（分钟）用于选择\r\n            , minuteStep: 5 \r\n                // 0 < minuteStep < 60，超过范围会出错\r\n            // {string} 可选日期最小值，格式参考format，默认为空，即不限制\r\n            , startDate: \"\" \r\n            // {string} 可选日期最大值，格式参考format，默认为空，即不限制\r\n            , endDate: \"\"   \r\n            // {String} 日期输入框最大宽度\r\n            // , maxWidth: \"220px\"\r\n            // {number/string} 打开日期选择视图之后首先显示的视图,默认是-1\r\n            , startView: -1  \r\n                // 0 或者 'hour' :小时视图-i\r\n                // 1 或者 'day' :日期视图-h\r\n                // 2 或者 'month' :月份视图(默认)-d\r\n                // 3 或者 'year' : 12个月概览-m\r\n                // 4 或者 'decade' : 十年概览,可用于选择出生年份-y\r\n            // {JSON} 设置组件文本内容\r\n            , defaultText: {\r\n                // 清空按钮文本\r\n                emptyText: ui.language.date.clearBtn\r\n            }\r\n        };\r\n\r\n        // 组件内部使用配置参数，不开放\r\n        var defaults = {\r\n            language : 'zh-CN'  // {string} 语言版本\r\n            , isForceParseValue: true       // {boolean} 是否强制解析输入框中的值为正确的日期格式\r\n            , minView: 0    // {number} 日期选择视图能够选择的最精确日期节点视图\r\n            , maxView: 4        //  {number} 日期选择视图能够选择的最大日期节点视图\r\n            , isAutoclose : true    // {boolean} 当选择一个日期之后是否立即关闭此日期时间选择器\r\n            , startView: 2  // {number/string} 打开日期选择视图之后首先显示的视图\r\n                // 0 或者 'hour' :小时视图-i\r\n                // 1 或者 'day' :日期视图-h\r\n                // 2 或者 'month' :月份视图(默认)-d\r\n                // 3 或者 'year' : 12个月概览-m\r\n                // 4 或者 'decade' : 十年概览,可用于选择出生年份-y\r\n        };\r\n\r\n        // 组件原型\r\n        function uiDate(element, options){\r\n            //调用初始函数\r\n            this.init(options);    \r\n        }\r\n\r\n        uiDate.prototype = {\r\n            constructor: uiDate,\r\n\r\n            init: function(options){\r\n                this.pluginName = _widgetName;  //缓存插件名字\r\n                this.hasDom = false;        //检查dom树中此节点是否存在\r\n                this.element = element;\r\n                this.$element = $(\"#\" + this.element);\r\n                this.defaults = defaults;   // 缓存配置项\r\n                this._option = options;     // 缓存传递进来的配置\r\n                this.initDom = $(\"#\" + element).prop(\"outerHTML\");\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n\r\n                // this.form = this.$element.parents(\"form\").get(0);\r\n\r\n                this.listeners = []; //自定义事件，用于监听插件的用户交互\r\n                this.handlers = {};\r\n                this._formatParams();\r\n                this.dom = this._initDom();     // 创建DOM节点,并返回DOM节点的HTML字符串\r\n            },\r\n            _initLanguage: function(){\r\n                // $.fn.datetimepicker.dates['zh-CN'] = {\r\n                //     days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\", \"星期日\"],\r\n                //     daysShort: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\r\n                //     daysMin:  [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"日\"],\r\n                //     months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\r\n                //     monthsShort: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\r\n                //     // monthsShort: [\"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\", \"十\", \"十一\", \"十二\"],\r\n                //     // monthsShort: [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"],\r\n                //     today: \"今日\",\r\n                //     clear: \"清空\",\r\n                //     suffix: [],\r\n                //     meridiem: [\"上午\", \"下午\"]\r\n                // };\r\n\r\n                $.fn.datetimepicker.dates['zh-CN'] = ui.language.date;\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n\r\n                var widgetValue = \"\";\r\n                if(!!params.value){\r\n                    widgetValue = ui.formatDate(params.value, params.format);\r\n                }else if(!!$selector.val()){\r\n                    widgetValue = ui.formatDate($selector.val(), params.format);\r\n                }\r\n                // alert(widgetValue)\r\n\r\n                if(!!widgetValue){\r\n                    params.value = widgetValue;\r\n                }else{\r\n                    params.value = \"\";\r\n                }\r\n                $selector.val(params.value);\r\n                \r\n                // if(!!params.value){\r\n                //     var date = ui.formatDate(params.value, params.format);\r\n                //     // console.info(date);\r\n                //     if(date){\r\n                //         params.value = date;\r\n                //         $selector.val(date);\r\n                //     }else{\r\n                //         ui.logWarn(\"初始化的value参数值无法转化为日期格式\", \"wui.date\", true);\r\n                //         // params.value = \"\";\r\n                //         $selector.val(params.value);\r\n                //     }\r\n                // }else{\r\n                //     params.value = \"\";\r\n                // }\r\n                \r\n                if(params.isShowTodayBtn !== \"linked\"){\r\n                    params.isShowTodayBtn = ui.formatParamToBool(params.isShowTodayBtn);\r\n                }\r\n\r\n                if(!!params.startDate){\r\n                    params.startDate = ui.formatDate(params.startDate, params.format);\r\n                }\r\n\r\n                if(!!params.endDate){\r\n                    params.endDate = ui.formatDate(params.endDate, params.format);\r\n                }\r\n            },\r\n            _initDom: function() { // 生成DOM节点\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                $selector.attr(\"type\", \"text\");\r\n\r\n                this._checkView();\r\n                if(!($selector.hasClass('date-range-input'))){\r\n                    $selector.addClass('wui-input')\r\n                }\r\n\r\n                if(!($selector.attr('name'))){\r\n                    $selector.attr('name', this.element);\r\n                }\r\n                this.name = $selector.attr('name'); //缓存插件名字（并没神马用）\r\n\r\n                // if(!!param.value){\r\n                //     // var date = ui.formatDate(param.value, param.format);\r\n                //     $selector.val(param.value);\r\n                //     // var date = new Date(param.value);\r\n                //     // var time = date.valueOf();\r\n                //     // var value = ui.getTimeFormat(time, param.format);\r\n                //     // this.set(param.value);\r\n                // }\r\n\r\n                if(!(param.isFreeInput)){\r\n                    $selector.attr(\"readonly\", \"readonly\");\r\n                }\r\n\r\n                this.$container = this.$element;\r\n                // 添加按钮组\r\n                var $toolBar = $selector.nextAll('[ui-control=\"toolBar\"]');\r\n                if(param.isShowBtnGroup && $toolBar.length == 0){\r\n                    if(!($selector.parent().hasClass('input-group'))){\r\n                        var parentDiv = '<div class=\"input-group\"></div>';\r\n                        $selector.wrap(parentDiv);    // 增加父容器\r\n                    }\r\n                    this.$container = $selector.parent('input-group');\r\n\r\n                    var btnContents = [\r\n                        // {\"html\":\"<i class='fa fa-calendar'></i>\", \"action\": \"edit\", \"title\": \"选择日期\"},\r\n                        {\"html\": param.defaultText.emptyText, \"action\": \"empty\", \"title\": \"清空\"}\r\n                    ]\r\n                    ui.addToolBar(self.element, btnContents, \"after\");\r\n\r\n                    $selector.nextAll('[ui-control=\"toolBar\"]').each(function(index, elem){\r\n                        $(elem).find('[ui-toolbar-action]').each(function(i, el){\r\n                            var action = $(el).attr(\"ui-toolbar-action\");\r\n\r\n                            if(action == \"edit\"){\r\n                                // 编辑按钮点击事件\r\n                                $(el).on(\"click\", function() {\r\n                                    self.show();\r\n                                });\r\n                            }else if(action == \"empty\"){\r\n                                // 清空按钮\r\n                                $(el).on(\"click\", function() {\r\n                                    // ui.logMethodCalled(editBtnId + \".click\", _className);\r\n                                    self.empty();\r\n                                });\r\n                            }\r\n                        })\r\n                    })  \r\n                }\r\n                self._initLanguage();\r\n\r\n                var dateParam = {\r\n                    autoclose: this.defaults.isAutoclose,\r\n                    format: param.format,\r\n                    formatType: param.formatType,\r\n                    pickerPosition: param.pickerPosition,\r\n                    todayBtn: param.isShowTodayBtn,\r\n                    clearBtn: param.isShowClearBtn,\r\n                    todayHighlight: param.isHighlightToday,\r\n                    weekStart: param.weekStart,\r\n                    minView: this.defaults.minView,\r\n                    maxView: this.defaults.maxView,\r\n                    startView: this.defaults.startView,\r\n                    minuteStep: param.minuteStep,\r\n                    startDate: param.startDate,\r\n                    endDate: param.endDate,\r\n                    forceParse: this.defaults.isForceParseValue,\r\n                    language: this.defaults.language,\r\n                    // isInline: true,\r\n                    hoursDisabled: param.hoursDisabled\r\n                }\r\n\r\n                // console.error(dateParam)\r\n\r\n                ui.logParamValue({\r\n                    paramName: \"dateParam\",\r\n                    paramValue: dateParam, \r\n                    methodName: \"date\", \r\n                    className: FRAME_NAME, \r\n                    isDebug: true\r\n                });\r\n                \r\n                this._date = $selector.datetimepicker(dateParam);   // 初始化日期插件\r\n\r\n                self.$element.on(\"changeValue\", function(event){\r\n                    var elem = self.$element.get(0);\r\n                    // console.info(self.$element)\r\n                    if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                        ui.validElement(self.$element);\r\n                    }\r\n                })\r\n\r\n                self.$element.attr(\"ui-type\", self.pluginName);\r\n\r\n                this.hasDom = true;\r\n\r\n                return this.$container.prop(\"outerHTML\");\r\n            },\r\n            _checkView: function(){\r\n                var format = this._opt.format.toLowerCase(), minView = 0, maxView = 4, startView = 2;\r\n                \r\n                if(format.indexOf('y') > -1){   // 年份\r\n                    maxView = 4;\r\n                }else if(format.indexOf('m') > -1){ // 月份\r\n                    maxView = 3;\r\n                }else if(format.indexOf('d') > -1){ // 天数\r\n                    maxView = 2;\r\n                }else if(format.indexOf('h') > -1){ // 小时\r\n                    maxView = 1;\r\n                }else if(format.indexOf('i') > -1){ // 分钟\r\n                    maxView = 0;\r\n                }\r\n\r\n                // minView\r\n                if(format.indexOf('i') > -1 || format.indexOf('s') > -1){   // 分钟、秒数\r\n                    minView = 0;\r\n                }else if(format.indexOf('h') > -1){ // 小时\r\n                    minView = 1;\r\n                }else if(format.indexOf('d') > -1){ // 天数\r\n                    minView = 2;\r\n                }else if(format.indexOf('m') > -1){ // 月份\r\n                    minView = 3;\r\n                }else if(format.indexOf('y') > -1){ // 年份\r\n                    minView = 4;\r\n                }\r\n\r\n                // startView\r\n                if(this._opt.startView == -1){\r\n                    if(format.indexOf('d') == -1){  // 月份\r\n                        if(format.indexOf('m') > -1){   // 月份\r\n                            startView = 3;\r\n                        }else if(format.indexOf('h') > -1){ // 小时\r\n                            startView = 1;\r\n                        }else if(format.indexOf('i') > -1 || format.indexOf('s') > -1){ // 分钟、秒数\r\n                            startView = 0;\r\n                        }else if(format.indexOf('y') > -1){ // 年份\r\n                            startView = 4;\r\n                        }\r\n                    }\r\n                }else{\r\n                    startView = this._opt.startView;\r\n                }\r\n\r\n                this.defaults.maxView = maxView;\r\n                this.defaults.minView = minView;\r\n                this.defaults.startView = startView;\r\n            },\r\n            option: function(newOptions){\r\n                var params = this._opt;\r\n                \r\n                if(!!newOptions){\r\n\r\n                    if(typeof newOptions === \"object\"){\r\n                        this._resetOption(newOptions);\r\n                    }else if(typeof newOptions === \"string\"){\r\n                        if(newOptions === \"getDefOpt\"){\r\n                            return config;\r\n                        }else{\r\n                            return params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n                        }\r\n                    }\r\n                }else{\r\n\r\n                    return params;\r\n                }\r\n            },\r\n            _resetOption: function(newOptions){\r\n                var self = this, param = this._opt, $selector = this.$element, isResetWidget = false;\r\n\r\n                // isFreeInput\r\n                if(newOptions.isFreeInput != undefined && newOptions.isFreeInput != param.isFreeInput){\r\n                    if(!newOptions.isFreeInput){\r\n                        this._opt.isFreeInput = false;\r\n                        $selector.attr(\"readonly\", \"readonly\");\r\n                    }else{\r\n                        this._opt.isFreeInput = newOptions.isFreeInput;\r\n                        $selector.removeAttr(\"readonly\");\r\n                    }\r\n                }\r\n\r\n                if(newOptions.defaultText != undefined && newOptions.defaultText.emptyText != param.defaultText.emptyText){\r\n                    $.extend(true, this._opt.defaultText, newOptions.defaultText);\r\n                    if(param.isShowBtnGroup){\r\n                        $selector.nextAll('[ui-control=\"toolBar\"]').find('[ui-toolbar-action=\"empty\"]').html(this._opt.defaultText.emptyText);\r\n                    }\r\n                }\r\n\r\n                // isShowBtnGroup\r\n                if(newOptions.isShowBtnGroup != undefined && newOptions.isShowBtnGroup != param.isShowBtnGroup){\r\n                    if(!newOptions.isShowBtnGroup){\r\n                        this._opt.isShowBtnGroup = false;\r\n                        var $toolBar = $selector.nextAll('[ui-control=\"toolBar\"]');\r\n                        if($toolBar.length > 0){\r\n                            $selector.unwrap();    // 移除父容器\r\n                            $toolBar.remove();\r\n                        }\r\n                        this.$container = this.$element;\r\n                    }else{\r\n                        this._opt.isShowBtnGroup = true;\r\n                        if(!($selector.parent().hasClass('input-group'))){\r\n                            var parentDiv = '<div class=\"input-group\"></div>';\r\n                            $selector.wrap(parentDiv);    // 增加父容器\r\n                        }\r\n                        this.$container = $selector.parent('input-group');\r\n\r\n                        // var btnContents = [\r\n                        //     {\"html\":\"<i class='fa fa-calendar'></i>\", \"action\": \"edit\", \"title\": \"显示日期选择视图\"},\r\n                        //     {\"html\":\"<i class='fa fa-trash'></i>\", \"action\": \"empty\", \"title\": \"清空\"}\r\n                        // ]\r\n\r\n                        var btnContents = [\r\n                            // {\"html\":\"<i class='fa fa-calendar'></i>\", \"action\": \"edit\", \"title\": \"选择日期\"},\r\n                            {\"html\": this._opt.defaultText.emptyText, \"action\": \"empty\", \"title\": \"清空\"}\r\n                        ]\r\n                        ui.addToolBar(this.element, btnContents, \"after\");\r\n\r\n                        $selector.nextAll('[ui-control=\"toolBar\"]').each(function(index, elem){\r\n                            $(elem).find('[ui-toolbar-action]').each(function(i, el){\r\n                                var action = $(el).attr(\"ui-toolbar-action\");\r\n\r\n                                if(action == \"edit\"){\r\n                                    // 编辑按钮点击事件\r\n                                    $(el).on(\"click\", function() {\r\n                                        self.show();\r\n                                    });\r\n                                }else if(action == \"empty\"){\r\n                                    // 清空按钮\r\n                                    $(el).on(\"click\", function() {\r\n                                        // ui.logMethodCalled(editBtnId + \".click\", _className);\r\n                                        self.empty();\r\n                                    });\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // format\r\n                if(newOptions.format && newOptions.format != param.format){\r\n                    this._opt.format = newOptions.format;\r\n                    this._checkView();\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // pickerPosition\r\n                if(newOptions.pickerPosition && newOptions.pickerPosition != param.pickerPosition){\r\n                    this._opt.pickerPosition = newOptions.pickerPosition;\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // isShowTodayBtn\r\n                if(newOptions.isShowTodayBtn != undefined && newOptions.isShowTodayBtn != param.isShowTodayBtn){\r\n                    if(!newOptions.isShowTodayBtn){\r\n                        this._opt.isShowTodayBtn = false;\r\n                    }else{\r\n                        this._opt.isShowTodayBtn = newOptions.isShowTodayBtn;\r\n                    }\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // isShowClearBtn\r\n                if(newOptions.isShowClearBtn != undefined && newOptions.isShowClearBtn != param.isShowClearBtn){\r\n                    if(!newOptions.isShowClearBtn){\r\n                        this._opt.isShowClearBtn = false;\r\n                    }else{\r\n                        this._opt.isShowClearBtn = newOptions.isShowClearBtn;\r\n                    }\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // isHighlightToday\r\n                if(newOptions.isHighlightToday != undefined && newOptions.isHighlightToday != param.isHighlightToday){\r\n                    if(!newOptions.isHighlightToday){\r\n                        this._opt.isHighlightToday = false;\r\n                    }else{\r\n                        this._opt.isHighlightToday = newOptions.isHighlightToday;\r\n                    }\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // weekStart:0（星期日）到6（星期六）\r\n                if(newOptions.weekStart != undefined && newOptions.weekStart != param.weekStart){\r\n                    this._opt.weekStart = typeof(newOptions.weekStart);\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // minuteStep\r\n                if(newOptions.minuteStep != undefined && newOptions.minuteStep != param.minuteStep){\r\n                    this._opt.minuteStep = parseInt(newOptions.minuteStep);\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // startDate\r\n                if(newOptions.startDate != undefined && newOptions.startDate != param.startDate){\r\n                    this._opt.startDate = ui.formatDate(newOptions.startDate, this._opt.format);\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                // endDate\r\n                if(newOptions.endDate != undefined && newOptions.endDate != param.endDate){\r\n                    this._opt.endDate = ui.formatDate(newOptions.endDate, this._opt.format);\r\n                    isResetWidget = true;\r\n                }\r\n\r\n                if(isResetWidget){\r\n                    $selector.datetimepicker('remove'); // 移除日期插件\r\n\r\n                    var dateParam = {\r\n                        autoclose: this.defaults.isAutoclose,\r\n                        format: param.format,\r\n                        pickerPosition: param.pickerPosition,\r\n                        todayBtn: param.isShowTodayBtn,\r\n                        clearBtn: param.isShowClearBtn,\r\n                        todayHighlight: param.isHighlightToday,\r\n                        weekStart: param.weekStart,\r\n                        minView: this.defaults.minView,\r\n                        maxView: this.defaults.maxView,\r\n                        startView: this.defaults.startView,\r\n                        minuteStep: param.minuteStep,\r\n                        startDate: param.startDate,\r\n                        endDate: param.endDate,\r\n                        forceParse: this.defaults.isForceParseValue,\r\n                        language: this.defaults.language\r\n                    }\r\n                    $selector.datetimepicker(dateParam);    // 初始化日期插件\r\n                }\r\n            },\r\n            hide: function(){\r\n                this.$element.datetimepicker('hide');\r\n                return this;\r\n            },\r\n            show: function(){\r\n                this.$element.datetimepicker('show');\r\n                return this;\r\n            },\r\n            disabled: function(){\r\n                this.$element.attr(\"disabled\", \"disabled\");\r\n            },\r\n            enabled: function(){\r\n                this.$element.removeAttr(\"disabled\");\r\n            },\r\n            readonly: function(){\r\n                this.$element.attr(\"disabled\", \"disabled\");\r\n                this.$element.addClass(\"wui-readonly\");\r\n            },\r\n            readwrite: function(){\r\n                this.$element.removeAttr(\"disabled\");\r\n                this.$element.removeClass(\"wui-readonly\");\r\n            },\r\n            set: function(value, format){\r\n                var param = this._opt;\r\n\r\n                if(ui.isUndefined(value)){\r\n                    ui.logMessage(\"没有传入组件值\", \"wui.date\", true);\r\n                    return false;\r\n                }else if(typeof(value) === \"string\"){\r\n                    var date;\r\n                    if(format){\r\n                        date = ui.formatDate(value, format);\r\n                    }else{\r\n                        date = ui.formatDate(value, param.format);\r\n                    }\r\n                    if(date){\r\n                        this.$element.val(date);\r\n                        this.$element.datetimepicker('update');\r\n                        this.$element.change();\r\n                        this.$element.trigger({\r\n                            type: 'changeValue'\r\n                        });\r\n                        return true;\r\n                    }else{\r\n                        this.$element.val(\"\");\r\n                        this.$element.datetimepicker('update');\r\n                        this.$element.change();\r\n                        this.$element.trigger({\r\n                            type: 'changeValue'\r\n                        });\r\n                        return false;\r\n                    } \r\n                }\r\n\r\n                return false;\r\n            },\r\n            get: function(){\r\n                return this.$element.val();\r\n            },\r\n            empty: function(){\r\n                var self = this;\r\n                if(this.listeners.indexOf('empty') > -1) {\r\n                    if(!this.emit({type:'empty',target: this.dom})) return ;\r\n                }\r\n\r\n                this.$element.val(\"\");\r\n                this.$element.datetimepicker('update');\r\n                this.$element.change();\r\n\r\n                self.$element.trigger({\r\n                    type: 'changeValue'\r\n                });\r\n\r\n                return this;\r\n            },\r\n            destroy: function(){\r\n\r\n                var $selector = this.$element;\r\n                $selector.datetimepicker('remove');\r\n\r\n                $selector.removeAttr(\"ui-type\");\r\n                $selector.removeData(_pluginDataName);\r\n                this.$container.replaceWith(this.initDom);\r\n\r\n                if(this.listeners.indexOf('destroy') > -1) {\r\n                    if(!this.emit({type:'destroy',target: this.dom})) return ;\r\n                }\r\n                return this;\r\n            },\r\n            on: function(type, handler){\r\n                if(_widgetEventType.indexOf(type) > -1){    // WUI组件事件监听\r\n                    if(typeof this.handlers[type] === 'undefined') {\r\n                        this.handlers[type] = [];\r\n                        this.listeners.push(type);\r\n                    }\r\n                    this.handlers[type].push(handler);\r\n                }else if(_pluginEventType.indexOf(type) > -1){\r\n                    this._date.on(type, handler);\r\n                }\r\n                return this;\r\n            },\r\n            off: function(type, handler){\r\n                var _i, _j, _listeners, _handlers, _len;\r\n                if(_widgetEventType.indexOf(type) > -1){    // 取消WUI组件事件监听\r\n                    if(this.handlers[type] instanceof Array) {\r\n                        _handlers = this.handlers[type];\r\n                        _listeners = this.listeners;\r\n\r\n                        for(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n                            if(_listeners[_i] === type) {\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if(handler === undefined){\r\n                            this.listeners.splice(_i, 1);\r\n                            delete this.handlers[type];\r\n                        }else{\r\n                            for(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n                                if(_handlers[_j] === handler) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if(_j < _len){\r\n                                this.handlers[type].splice(_j, 1);\r\n                                if(this.handlers[type].length == 0){\r\n                                    this.listeners.splice(_i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else if(_pluginEventType.indexOf(type) > -1){\r\n                    this._date.off(type, handler);\r\n                }\r\n                return this;\r\n            },\r\n            emit: function(event){\r\n                if(!event.target) {\r\n                    if(!this.$Maxcontainer){\r\n                        event.target = this;\r\n                    }else{\r\n                        event.target = this.$Maxcontainer;\r\n                    }\r\n                }\r\n                if(this.handlers[event.type] instanceof Array) {\r\n                    var handlers = this.handlers[event.type];\r\n                    for(var i = 0, len = handlers.length; i < len; i++) {\r\n                        handlers[i](event);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            component: function(){\r\n                return this;\r\n            }\r\n        }\r\n\r\n        $.fn[_pluginName] = function(param1, param2, param3){\r\n            //each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n            return this.each(function(){\r\n                //判断有没有插件名字\r\n                if(!$.data(document.getElementById(element), _pluginDataName)){\r\n                    //生成插件类实例。\r\n                    $.data(document.getElementById(element), _pluginDataName, new uiDate(this, param1));\r\n                }\r\n            });\r\n        }\r\n        \r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params){\r\n\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            if(!data){\r\n                ui.logError(\"wui.date 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n            if(typeof (data[funcName]) === \"function\"){\r\n                return data[funcName].apply(data, args);\r\n            }else{\r\n                ui.logWarn('wui.date ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         *  @event on\r\n         *  @param eventType {string} 可监听事件类型如下：<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> eventType </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"show\" </td>\r\n                        <td> 日期选择视图显示时被触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"hide\"</td>\r\n                        <td> 日期选择视图隐藏时被触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"changeDate\"</td>\r\n                        <td> 当日期被改变时被触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"changeYear\"</td>\r\n                        <td> 当十年视图上的年视图被改变时触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"changeMonth\"</td>\r\n                        <td> 当年视图上的月视图被改变时触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"outOfRange\"</td>\r\n                        <td> 当用户选择的日期超出startDate 或endDate 时触发 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         *  @param func {function} 事件类型触发之后的执行方法\r\n         *  @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 日期选择视图显示时被触发\r\nuiDate.on(\"show\", function(e){\r\n    console.log(\"show\");\r\n});</code></pre>\r\n         *\r\n         */\r\n        function on(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可取消监听事件类型同\"on\"方法的eventType参数\r\n         * @param [func] {function} 事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n         * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 取消组件事件监听\r\nuiDate.off(\"show\");</code></pre>\r\n         */\r\n        function off(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n        * @return 组件选中的日期字符串\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件选中的日期字符串\r\nvar value = uiDate.get();   // \"2018-02-15 13:13:13\"</code></pre>\r\n        */\r\n        function get(){\r\n            return _executeMethod(\"get\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件值\r\n        * @method set\r\n        * @since 0.0.1\r\n        * @param data {string} 一个日期值，日期格式参考传入的format参数\r\n        * @param {string} [format]   日期格式， p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy 的任意组合,默认和初始化的format参数一致。\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件值\r\nuiDate.set(\"2018-02-15 13:13:13\");    // 组件设置为\"2018-02-15\"\r\n\r\n// 设置组件值并重定义日期格式\r\nuiDate.set(\"2018-02-15 13:13:13\", \"yyyy-mm-dd hh:ii\");    // 组件设置为\"2018-02-15 13:13\"</code></pre>\r\n        */\r\n        function set(data, format){\r\n            return _executeMethod(\"set\", data, format);\r\n        }\r\n\r\n        /**\r\n        * 隐藏日期选择视图\r\n        * @method hide\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 隐藏日期选择视图\r\nuiDate.hide();</code></pre>\r\n        */\r\n        function _hide(){\r\n            return _executeMethod(\"hide\");\r\n        }\r\n\r\n        /**\r\n        * 显示日期选择视图\r\n        * @method show\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 显示日期选择视图\r\nuiDate.show();</code></pre>\r\n        */\r\n        function _show(){\r\n            return _executeMethod(\"show\");\r\n        }\r\n\r\n        /**\r\n        * 阻止点击弹出日期选择视图\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 阻止点击弹出日期选择视图\r\nuiDate.disabled();</code></pre>\r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出日期选择视图\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 允许点击弹出日期选择视图\r\nuiDate.enabled();</code></pre>\r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件只读\r\nuiDate.readonly();</code></pre>\r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example\r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件可读可写\r\nuiDate.readwrite();</code></pre>\r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件参数\r\nuiDate.option();</code></pre>\r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值：设置不可自由输入时，可通过此方法清除选中值\r\n        * @method empty\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 清空组件值：设置不可自由输入时，可通过此方法清除选中值\r\nuiDate.empty();</code></pre>\r\n        */\r\n        function _empty(){\r\n            return _executeMethod(\"empty\");\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 销毁组件：销毁之后可通过重新初始化组件启用组件\r\nuiDate.destroy();</code></pre>\r\n        */\r\n        function _destroy(){\r\n            return _executeMethod(\"destroy\");\r\n        }\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 获取内部组件对象\r\nvar component = uiDate.component();\r\nwui.logMessage(component);</code></pre>\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 重新初始化组件\r\nvar myDate = uiDate.init();</code></pre>\r\n         */\r\n        function _init(opt){\r\n            if(!$.data(document.getElementById(element), _pluginDataName)){\r\n                $('#' + element)[_pluginName](opt);\r\n            }else{\r\n                if(opt && ui.isJson(opt)){\r\n                    return _executeMethod(\"option\", opt);\r\n                }else{\r\n                    return;\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n        \r\n        return {\r\n            // 初始化\r\n            init: _init,\r\n            // 增加组件事件监听(可监听类型详见_widgetEventType和_pluginEventType两个全局变量)\r\n            on: on,                 \r\n            // 取消组件事件监听(可取消事件类型同on方法)\r\n            off: off,              \r\n            // 获取组件Value值 \r\n            get: get,\r\n            // 设置组件Value值\r\n            set: set,\r\n            // 隐藏日期选择视图\r\n            hide: _hide,            \r\n            // 显示日期选择视图\r\n            show: _show,            \r\n            // 允许点击弹出日期选择视图\r\n            enabled: _enabled,      \r\n            // 阻止点击弹出日期选择视图\r\n            disabled: _disabled,   \r\n            // 可读可写\r\n            readwrite: _readwrite,\r\n            // 只读\r\n            readonly: _readonly, \r\n            // 设置或者获取组件配置\r\n            option: _option,        \r\n            // 清空组件值\r\n            empty: _empty,          \r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            // 销毁组件\r\n            destroy: _destroy       \r\n        };\r\n    };\r\n\r\n    return ui;\r\n\r\n})( wui || {}, libs );","/**\r\n * <h3>WUI 下拉选择组件</h3>\r\n * @module Components\r\n */\r\n;(function (ui,$, undefined) {\r\n    \r\n    /**\r\n     * <h3>下拉选择框组件</h3>\r\n     * <ol>\r\n     * <li>支持加载后台服务作为下拉数据源; </li>\r\n     * <li>支持下拉数据即时查找; </li>\r\n     * <li>支持多选个数限制; </li>\r\n     * <li>自定义开启全选/全不选按钮; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiselectBox\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.selectBox/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/set\"}}{{/crossLink}}: 设置组件值 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/select\"}}{{/crossLink}}: 选中选项 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/unselect\"}}{{/crossLink}}: 取消选项选中 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/selectAll\"}}{{/crossLink}}: 全部选项选中 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/unselectAll\"}}{{/crossLink}}: 全部选项不选中 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/enabled\"}}{{/crossLink}}: 允许点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/disabled\"}}{{/crossLink}}: 阻止点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.selectBox/reload\"}}{{/crossLink}}: 重加载下拉数据(会重新请求数据源) </li>\r\n     * <li>{{#crossLink \"wui.selectBox/refresh\"}}{{/crossLink}}: 刷新组件下拉选项(不会请求数据源) </li>\r\n     * <li>{{#crossLink \"wui.selectBox/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class selectBox\r\n     *  @constructor \r\n     *  @param {string} id  组件id@@@###初始化组件元素ID名  \r\n     *  @param {object} option  组件配置项@@@###组件初始化传递配置项\r\n     *  @param {string} option.loadUrl 后台服务地址,返回数据格式配置详见\"jsonReader\"参数设置\r\n     *  @param {string} [option.method]  #@default:\"get\"# 请求后台服务方法\r\n     *  @param {Boolean} [option.async]  #@default:false# 是否异步加载数据\r\n     *  @param {String} [option.otherParam]  #@default:null# 发送到服务器的数据,必须为 Key/Value 格式\r\n     *  @param {Array} [option.loadData]   #@default:null# 选项的JSON数据,注意格式[{ \"fieldValue\":\"value1\",\"fieldText\":\"text1\" },{ \"fieldValue\":\"value2\",\"fieldText\":\"text2\" },...]\r\n     *  @param {string} [option.value]   #@default:\"\"# 初始化完成时,选中值的value属性值\r\n     *  @param {string} [option.text] #@default:\"name\"# 选中值保存的text字段\r\n     *  @param {string} [option.name] #@default:\"id\"# 选中值保存的name字段\r\n     *  @param {string} [option.direction]   #@default:\"auto\"# 下拉视图展开方向,\"dropup\":向上,\"dropdown\"/不填:向下;\r\n     *  @param {string} [option.multipleSeparator]   #@default:\",\"# 多选的分隔符\r\n     *  @param {boolean} [option.isEnabledLiveSearch]   #@default:true# 是否启用即时搜索\r\n     *  @param {boolean} [option.isShowActionsBox]   #@default:true# 是否显示“全选”和“全不选”两个按钮\r\n     *  @param {number} [option.maxNumber]   #@default:false# 最多可选个数,false表示不限制    \r\n     *  @param {string} [option.width]   #@default:\"100%\"# 组件宽度\r\n     *  @param {number} [option.maxHeight]   #@default:0# 下拉选项最大高度,单位\"px\",0表示自适应高度\r\n     *  @param {JSON} [option.offset]   下拉选项视图计算尺寸的偏移量   \r\n     *  @param {Number} [option.offset.top]   距离父节点的顶部偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.offset.bottom]   距离父节点的底部偏移量,单位是\"px\",默认是20  \r\n     *  @param {Number} [option.offset.left]   距离父节点的左边偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.offset.right]   距离父节点的右边偏移量,单位是\"px\",默认是0 \r\n     *  @param {Boolean} [option.isSelectGroup]   #@default:false# 当分组时,是否可整组选择\r\n     *  @param {JSON} [option.jsonReader]   默认从服务器端返回数据参数名称设置集合,如下参数设置之后,服务器返回数据格式为 < br />\r\n     *  [ \r\n            { \"name\":\"北京市\",   \"id\":\"beijing\" },\r\n            { \"name\":\"天津市\",   \"id\":\"tianjin\" },\r\n            ...\r\n        ]\r\n     *  @param {String} [option.jsonReader.root]    #@default:null# json中代表实际模型数据的入口,若为null,则返回数据作为实际加载数据,内容以数组格式返回\r\n     *  @param {String} [option.jsonReader.children]    #@default:\"children\"# 子节点集字段名\r\n     *  @param {String} [option.jsonReader.isSuccess]   #@default:\"isSuccess\"# 是否请求成功字段名\r\n     *  @param {String} [option.jsonReader.message]   #@default:\"message\"# 请求成功或者失败信息字段名 \r\n     *  @param {Function} [option.onLoadComplete]   组件加载完成触发方法(当采用异步加载数据时,可能会产生数据加载不同步,可将后续操作在此方法内执行),传递参数data:下拉视图数据 \r\n     *  @example\r\n     * \r\n     *   html:\r\n     *\r\n            // 页面初始化方法1：select 标签\r\n            <select id=\"selectbox\">\r\n                <option value=\"option1\">选项1</option>\r\n                <option value=\"option2\">选项2</option>\r\n            </select>\r\n            // 页面初始化方法2：Input 标签\r\n            <input type=\"text\" id=\"selectbox\">\r\n     *      \r\n     *   js: \r\n     *   \r\n            // 初始化\r\n            var uiSelectBox = wui.selectBox( \"selectBox\",{\r\n                loadUrl :\"json/address.json\"\r\n            });\r\n     *\r\n     */\r\n    ui.selectBox = function(id, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiSelectBox\",\r\n            _pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"selectBox\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: id\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, id);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n        if(!$(\"#\" + id).exist()){\r\n            ui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + id + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n            return false;\r\n        }\r\n\r\n            // \"beforeItemSelect\"：选中的单个节点之前触发\r\n            // \"itemSelectError\"：单个节点选中出错触发\r\n            // \"itemSelected\"：单个节点选中成功触发\r\n            // \"beforeItemUnselect\"：取消选中单个节点之前触发\r\n            // \"itemUnselectError\"：单个节点取消选中出错触发\r\n            // \"itemUnselected\"：单个节点取消选中成功触发\r\n        // var _widgetEventType = [\"beforeItemSelect\", \"itemSelectError\", \"itemSelected\", \"beforeItemUnselect\", \"itemUnselectError\", \"itemUnselected\"]; // wui组件监听事件类型\r\n\r\n        function uiSelectBox(element, opt){\r\n            //调用初始函数\r\n            // this.init();\r\n            // 初始化组件关联属性\r\n            var components = this.initComponentAttributes(id, opt);\r\n            $.extend(true, this, components);\r\n\r\n            // console.info(this);\r\n            this.renderComponent();\r\n        }\r\n\r\n        uiSelectBox.prototype = {\r\n            constructor: uiSelectBox,\r\n            /*\r\n             * 初始化组件基础属性\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            initComponentAttributes: function(id, opt){\r\n\r\n                // 组件默认配置\r\n                var defaultSetting = {\r\n                    // {string} 后台服务地址\r\n                    loadUrl: \"\"             \r\n                    // {string} 请求后台服务方法\r\n                    , method: \"get\"         \r\n                    // {String} 请求后台服务的其他参数,将自动转换为请求字符串格式。GET 请求中将附加在 URL 后\r\n                    , otherParam: \"\"        \r\n                    // {Boolean} 是否异步加载数据,默认为false\r\n                    , async: false       \r\n                    // {json}   选项的JSON数据,注意格式[{ \"fieldValue\":\"value1\",\"fieldText\":\"text1\" },{ \"fieldValue\":\"value2\",\"fieldText\":\"text2\" },...]    \r\n                    , loadData: null\r\n                    // 数据源\r\n                    , source: ui.EMPTYFUNC\r\n                    // {string} 初始化完成时,默认选中值的value属性值\r\n                    , value: \"\"             \r\n                    // {string}  非空,选中值保存的text字段\r\n                    , text: \"name\"          \r\n                    // {string}  非空,选中值保存的value字段\r\n                    , name: \"id\"        \r\n                    // {string} 下拉数据框展开方向,dropup:向上,dropdown/不填则默认向下\r\n                    , direction: \"auto\" \r\n                    // {boolean} 是否在下拉框内开启关闭按钮,默认是false\r\n                    , isShowCloseBtn : false    \r\n                    // {string}  多选的分隔符\r\n                    , multipleSeparator : \",\"   \r\n                    // {boolean} 是否启用即时搜索\r\n                    , isEnabledLiveSearch : true    \r\n                    // {boolean} 增加“全选”和“全不选”两个按钮\r\n                    , isShowActionsBox : true       \r\n                    // {number} 最多可选个数,false代表无限制\r\n                    , maxNumber: false\r\n                    // {number} 下拉选项视图最大高度,单位\"px\",默认为0,表示自适应到页面底部高度\r\n                    , maxHeight: 0 \r\n                    // {JSON} 下拉选项视图计算尺寸的偏移量\r\n                    , offset: {\r\n                        top: 0\r\n                        , bottom: 20\r\n                        , left: 0\r\n                        , right: 0\r\n                    }\r\n                    // {Number} 组件宽度,默认\"100%\"\r\n                    , width: \"\"  \r\n                    // {Number} 设置下拉视图宽度,默认和组件宽度一致\r\n                    , menuWidth: \"\"\r\n                    // {JSON} 默认显示文本设置         \r\n                    , defaultText: {\r\n                        // 没有选中选项时,显示文本\r\n                        noneSelectedText : $(\"#\" + id).attr(\"placeholder\") ? $(\"#\" + id).attr(\"placeholder\") : \"没有选中任何项\"    \r\n                        // 下拉搜索匹配不到内容时显示文本\r\n                        , noneResultsText : \"匹配不到'{0}'\"     \r\n                        // 选中下拉分组提示文本\r\n                        // , countSelectedText : \"选中{1}中的{0}项\" \r\n                        // 超过最大可选个数限制时提示文本\r\n                        // , maxOptionsText : ['超出限制 (最多选择{n}项)', '组选择超出限制(最多选择{n}组)'] \r\n                         // 下拉视图中,\"全不选\"按钮文本\r\n                        , deselectAllText : \"全不选\" \r\n                        // 下拉视图中,\"全选\"按钮文本\r\n                        , selectAllText : \"全选\"      \r\n                        // 下拉视图中,\"关闭\"按钮文本\r\n                        , doneButtonText : \"关闭\"     \r\n                        // 下拉视图中,搜索框提示语\r\n                        , liveSearchPlaceholder : \"查找选项\" \r\n                        // 下拉视图中,没有下拉选项时提示语\r\n                        , noneOptionText: \"没有可选的选项\"\r\n                        // 下拉视图中,数据加载失败提示语\r\n                        , queryErrorText: \"<span class=\\\"wui-text-danger\\\">Sorry,尽力了,但数据还是加载失败..</span>\"\r\n                    }\r\n                    // 数据源数据解析\r\n                    , jsonReader: {\r\n                        // {String} 服务器返回的实际加载数据字段名,若为null,则返回数据作为实际加载数据\r\n                        root: null  \r\n                        // {String} 是否请求成功字段名\r\n                        , isSuccess: \"isSuccess\"    \r\n                        // {String} 请求成功或者失败信息字段名\r\n                        , message: \"message\"\r\n                        // {String} 子节点集字段名\r\n                        , children: \"children\"\r\n                        // {String} 子节点禁用标识字段名\r\n                        , disabled: \"disabled\"\r\n                        // {String} 子节点选中标识字段名\r\n                        , selected: \"selected\"\r\n                        // {String} 子节点隐藏标识字段名\r\n                        , hidden: \"hidden\"\r\n                    }\r\n                    // 当分组时,是否可整组选择,默认是false\r\n                    , isSelectGroup: false\r\n\r\n                    // 默认样式类\r\n                    , classList: {\r\n                        // 选中节点附加样式\r\n                        \"selected\": \"selected\"\r\n                        // 隐藏节点附加样式\r\n                        , \"hidden\": \"hide\"\r\n                        // 禁用节点附加样式\r\n                        , \"disabled\": \"disabled\"\r\n                        // 聚焦节点附件样式\r\n                        , \"active\": \"active\"\r\n                        // {string}  选中节点的图标样式\r\n                        , \"checked\": \"fa fa-check\"\r\n                        // {String} 分组时,组头附加图标样式\r\n                        , \"group\": \"fa fa-group  wui-fa-middle\"\r\n                        // {String} 选项附加图标样式\r\n                        , \"option\": \"\"\r\n                    }\r\n\r\n                    // 是否懒加载数据\r\n                    , lazy: false\r\n\r\n                    // 懒加载参数配置\r\n                    , lazySetting: {\r\n                        // 每次加载数据数,默认是20\r\n                        number: 20\r\n                    }\r\n\r\n                    // {Function} 组件加载完成触发方法(当采用异步加载数据时,可能会产生数据加载不同步,可将后续操作在此方法内执行)\r\n                    , onLoadComplete: ui.CONSTANTS.EMPTYFUNC\r\n                }\r\n\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams($(\"#\" + id), defaultSetting);\r\n\r\n                // 设置组件配置参数\r\n                var params = $.extend(true, {}, defaultSetting, opt, AttributeParams);\r\n\r\n                var component = {\r\n                    // 组件名\r\n                    pluginName: _widgetName,\r\n\r\n                    // 组件初始化元素id\r\n                    id: id,\r\n\r\n                    // 组件初始化元素name属性\r\n                    name: \"\",  \r\n\r\n                    // 初始化节点元素\r\n                    element: document.getElementById(id),\r\n\r\n                    // 初始化节点jQuery对象\r\n                    $element: $(\"#\" + id),\r\n\r\n                    // 组件默认配置\r\n                    defaults: defaultSetting,\r\n\r\n                    // 初始化元素DOM结构\r\n                    initDom: $(\"#\" + id).prop(\"outerHTML\"),\r\n\r\n                    // 组件初始化元素HTML\r\n                    dom: \"\",\r\n\r\n                    // 组件状态值:\"init\"(初始化)/\"loading\"(组件加载中)/\"loaded\"(加载完毕)/\"destroy\"(销毁)/\"error\"(加载过程出错)\r\n                    status: \"init\",\r\n\r\n                    // 是否过滤状态\r\n                    isFilter: false,\r\n\r\n                    // 组件是否启用状态:可以通过disabled()和enabled()改变状态\r\n                    enable: true,\r\n\r\n                    // 组件是否展开状态\r\n                    expanded: false,\r\n\r\n                    // 组件所有子节点集合\r\n                    pickerNodes: [],\r\n\r\n                    // 组件所有选中节点\r\n                    activeNodes: [],\r\n\r\n                    // 初始化对象监听事件容器\r\n                    // listeners: [], \r\n\r\n                    //自定义事件,用于监听插件的用户交互\r\n                    handlers: {},\r\n\r\n                    // 组件加载数据\r\n                    data: null,\r\n\r\n                    // 组件结果对象集\r\n                    itemsArray: [],\r\n\r\n                    // 组件结果key字段集\r\n                    itemsName: [],\r\n\r\n                    // 组件结果title字段集\r\n                    itemsText: [],\r\n\r\n                    // 组件参数配置\r\n                    opt: params,\r\n\r\n                    // 初始化对象页面结构模板\r\n                    // 下拉视图搜索框模板\r\n                    searchBoxTmp: '<div class=\"ws-searchbox\">'\r\n                                    + '<input type=\"text\" class=\"wui-input\" wui-widget-hidden=\"true\" autocomplete=\"off\" placeholder=\"' + params.defaultText.liveSearchPlaceholder + '\">'\r\n                                + '</div>',\r\n                    // 下拉视图操作按钮模板\r\n                    actionsBoxTmp: '<div class=\"ws-actionsbox\">'\r\n                                        + '<div class=\"btn-group btn-group-sm btn-block\">'\r\n                                            + '<button type=\"button\" class=\"actions-btn ws-select-all btn btn-default\">' + params.defaultText.selectAllText + '</button>'\r\n                                            + '<button type=\"button\" class=\"actions-btn ws-deselect-all btn btn-default\">' + params.defaultText.deselectAllText + '</button>'\r\n                                        + '</div>'\r\n                                    + '</div>',\r\n                    // 下拉视图关闭按钮模板\r\n                    closeButtonTmp: '<div class=\"ws-donebutton\">'\r\n                                        + '<div class=\"btn-group btn-block\">'\r\n                                            + '<button type=\"button\" class=\"btn btn-sm btn-default\">' + params.defaultText.doneButtonText + '</button>'\r\n                                        + '</div>'\r\n                                    + '</div>',\r\n                    // 下拉视图中无数据时展示模板\r\n                    tipTmp: '<li class=\"no-result-text\">'\r\n                                + '<a>{0}</a>'\r\n                                // + '<a>'\r\n                                //     + '<span class=\"text\">{0}</span>'\r\n                                // + '</a>'\r\n                            + '</li>',\r\n                    \r\n                    // 初始化对象页面结构\r\n                    // 组件最外层容器(.wui-selectBox): $element + $viewBox\r\n                    $container: null,\r\n                    // 组件可视框([wui-combobox=\"dropdown\"]):$buttonBox + $dropdownBox\r\n                    $viewBox: null,\r\n                    // 组件点击展开区域(.dropdown-toggle):$resultBox\r\n                    $buttonBox: null,\r\n                    // 组件结果显示框(.filter-option.pull-left)\r\n                    $resultBox: null,\r\n                    // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $selectContentBox + closeBox\r\n                    $dropdownBox: null,\r\n                    // 组件下拉视图选择内容框([wui-data=\"menu\"].dropdown-menu)\r\n                    $selectContentBox: null,    \r\n                    // 保存校验出错节点\r\n                    // errorElement: null,\r\n\r\n                    // 自定义拓展属性\r\n                    ext: {}\r\n                }\r\n\r\n                return component;\r\n            },\r\n            /*\r\n             * 渲染组件布局\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-26\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderComponent: function(){\r\n                var that = this, opt = this.opt;\r\n                // 改变组件状态为\"loading\"\r\n                this.status = \"loading\";\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!(this.$element.attr('name'))){\r\n                    this.$element.attr('name', that.id);\r\n                }\r\n                this.name = this.$element.attr('name');\r\n\r\n                if(!(this.$element.parent().hasClass('wui-selectBox'))){\r\n                    var parentDiv = '<div class=\"wui-selectBox\"></div>';\r\n                    this.$element.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n\r\n                // 组件最外层容器(.wui-selectBox): $element + $viewBox\r\n                this.$container = this.$element.parent(); \r\n                // 组件可视框([wui-combobox=\"dropdown\"]):$buttonBox + $dropdownBox\r\n                this.$viewBox = $('<div wui-combobox=\"dropdown\" class=\"btn-group wui-select-box show-tick input-layout\" style=\"width: 100%;\"></div>');   \r\n                // 组件点击展开区域:$resultBox\r\n                this.$buttonBox = $('<button type=\"button\" class=\"wui-btn dropdown-toggle btn-default\" data-toggle=\"dropdown\" aria-expanded=\"true\"></button>').appendTo(this.$viewBox); \r\n                // 组件结果显示框\r\n                this.$resultBox = $('<span class=\"filter-option pull-left\">' + opt.defaultText.noneSelectedText + '</span>').appendTo(this.$buttonBox); \r\n                this.$caret = $('<span class=\"ws-caret\"> <span class=\"caret\"></span> <span class=\"sr-only\">Toggle Dropdown</span> </span>').appendTo(this.$buttonBox);\r\n                // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $selectContentBox + closeBox\r\n                this.$dropdownBox = $('<div class=\"dropdown-menu open\"></div>').appendTo(this.$viewBox);   \r\n                // 组件下拉视图选择内容框\r\n                this.$selectContentBox = $('<ul wui-data=\"menu\" class=\"dropdown-menu focus inner\" role=\"menu\" style=\"overflow-y: auto;\"></ul>');    \r\n\r\n                // 创建一个文档碎片\r\n                // this.fragment = document.createDocumentFragment();\r\n\r\n                this.$element.after(this.$viewBox);\r\n\r\n                this.$element.hide();\r\n\r\n                if(opt.width){\r\n                    this.$container.width(opt.width);\r\n                }\r\n\r\n                if(this.opt.isEnabledLiveSearch){\r\n                    this.renderSearchBox();\r\n                }\r\n                \r\n                if(this.opt.isShowActionsBox){\r\n                    this.renderSelectButton();\r\n                }\r\n                \r\n                this.renderDropdownBox();\r\n\r\n                this.load();\r\n\r\n                this.$element.attr(\"ui-type\", this.pluginName);\r\n\r\n                this.dom = this.$container.prop(\"outerHTML\");\r\n\r\n                // 设置宽度\r\n                this.width();\r\n\r\n                this.$viewBox.on({\r\n                    'hide.bs.dropdown': function (e) {\r\n                        // console.info(\"hide.bs.dropdown\");\r\n                        // self.$selectContentBox.attr('aria-expanded', false);\r\n                    },\r\n                    'hidden.bs.dropdown': function (e) {\r\n                        // console.info(\"hidden.bs.dropdown\");\r\n                    },\r\n                    'show.bs.dropdown': function (e) {\r\n                        // console.info(\"show.bs.dropdown\");\r\n                        // self.$selectContentBox.attr('aria-expanded', true);\r\n                        // 设置方向\r\n                        that.direction();\r\n\r\n                        that.trigger(\"show\", e);\r\n                    },\r\n                    'shown.bs.dropdown': function (e) {\r\n                        // console.info(\"shown.bs.dropdown\");\r\n                        // // 设置方向\r\n                        // that.direction();\r\n                        // // 设置高度\r\n                        // that.height();\r\n                        // 设置高度\r\n                        that.height();\r\n\r\n                        that.trigger(\"shown\", e);\r\n                    }\r\n                });\r\n\r\n                this.trigger(\"init\", {\r\n                    type:'init'\r\n                });\r\n            },\r\n            /*\r\n             * 新增组件选中值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   node                 [description]\r\n             * @param    {Boolean}  isTriggerSelectEvent [description]\r\n             */\r\n            addComponentNodes: function(node, isTriggerSelectEvent){\r\n                this.activeNodes.push(node);\r\n                if(isTriggerSelectEvent){\r\n                    this.trigger(\"itemSelected\", {\r\n                        srcElement: node.node.get(0),\r\n                        item: node.data,\r\n                        node: node\r\n                    });\r\n\r\n                    this.trigger(\"change\", {\r\n                        srcElement: node.node.get(0),\r\n                        item: node.data,\r\n                        node: node,\r\n                        selected: node.selected\r\n                    });\r\n                }\r\n\r\n                // if(this.$dropdownBox.children('.ws-searchbox').length > 0){\r\n                //     this.$dropdownBox.children('.ws-searchbox').find(\"input\").val(\"\");\r\n                //     that.filter(\"\");\r\n                // }\r\n            },\r\n            /*\r\n             * 移除组件选中值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   node                   [description]\r\n             * @param    {Boolean}  isTriggerUnselectEvent [description]\r\n             * @return   {[type]}                          [description]\r\n             */\r\n            removeComponentNodes: function(node, isTriggerUnselectEvent){\r\n                var index = this.activeNodes.indexOf(node); \r\n                if (index > -1) {\r\n                    this.activeNodes.splice(index, 1); \r\n                }\r\n                if(isTriggerUnselectEvent){\r\n                    this.trigger(\"itemUnselected\", {\r\n                        srcElement: node.node.get(0),\r\n                        item: node.data,\r\n                        node: node\r\n                    });\r\n\r\n                    this.trigger(\"change\", {\r\n                        srcElement: node.node.get(0),\r\n                        item: node.data,\r\n                        node: node,\r\n                        selected: node.selected\r\n                    });\r\n                }\r\n            },\r\n            getComponentNodes: function(){\r\n                return this.activeNodes;\r\n            },\r\n            popNodes: function(){\r\n                return this.activeNodes.pop();\r\n            },\r\n            /*\r\n             * 添加下拉节点DOM\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   htmlDom [description]\r\n             */\r\n            addPickerItem: function(htmlDom){\r\n                this.$selectContentBox.append(htmlDom);\r\n            },\r\n            /*\r\n             * 是否达到可选最大值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @return   {Boolean}  [description]\r\n             */\r\n            isMaxNumber: function(item){\r\n                var codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\"\r\n                    };\r\n\r\n                // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                if (this.opt.maxNumber != false && this.opt.maxNumber > 1 && (this.activeNodes.length >= this.opt.maxNumber)){\r\n                    this.trigger(\"itemSelectError\", {\r\n                        type:'itemSelectError',\r\n                        item: item, \r\n                        code: -1, \r\n                        message: codes[\"-1\"]\r\n                    })\r\n                    return true;\r\n                }\r\n            },\r\n            direction: function(){\r\n                if(this.opt.direction == \"auto\"){\r\n                    var viewSize = ui.getViewSize(),\r\n                        offsetSize = this.$container.offset();\r\n                    // console.error(viewSize);\r\n                    // console.error(offsetSize);\r\n                    if((viewSize.height / 2) > offsetSize.top){\r\n                        this.$viewBox.removeClass(\"dropup\").addClass(\"dropdown\");\r\n                    }else{\r\n                        this.$viewBox.addClass(\"dropup\").removeClass(\"dropdown\");\r\n                    }\r\n                }else if(this.opt.direction == \"dropup\"){\r\n                    this.$viewBox.addClass(\"dropup\");\r\n                }else{\r\n                    this.$viewBox.addClass(\"dropdown\")\r\n                }\r\n            },\r\n            scroll: function(){\r\n                ui.scroll(this.$selectContentBox);\r\n            },\r\n            width: function(){\r\n                if(!!this.opt.width){\r\n                    this.$container.width(this.opt.width);\r\n                }\r\n\r\n                if(!!this.opt.menuWidth){\r\n                    this.$selectContentBox.width(this.opt.menuWidth);\r\n                }\r\n            },\r\n            height: function(){\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = null,\r\n                    otherHeight = 0;\r\n                \r\n                if(this.$viewBox.hasClass(\"dropup\")){\r\n                    offsetSize = this.$buttonBox.offset();\r\n                    this.$dropdownBox.children().filter('.ws-searchbox, .ws-actionsbox, .ws-donebutton').each(function(i, elem){\r\n                        otherHeight += $(elem).outerHeight(true);\r\n                    })\r\n                    \r\n                    var maxHeight = !this.opt.maxHeight ? (offsetSize.top - otherHeight - this.opt.offset.top - this.opt.offset.bottom) : this.opt.maxHeight;\r\n                    \r\n                    if(this.$selectContentBox.height() > maxHeight){\r\n                        this.$selectContentBox.css({\r\n                            \"max-height\": maxHeight + \"px\"\r\n                            // \"height\": (maxHeight + 10) + \"px\"\r\n                        });\r\n                    }\r\n                }else{\r\n                    offsetSize = this.$selectContentBox.offset();\r\n                    this.$dropdownBox.children().filter('.ws-donebutton').each(function(i, elem){\r\n                        otherHeight += $(elem).outerHeight(true);\r\n                    })\r\n                    \r\n                    var maxHeight = !this.opt.maxHeight ? (viewSize.height - offsetSize.top - otherHeight - this.opt.offset.top - this.opt.offset.bottom) : this.opt.maxHeight;\r\n                    \r\n                    if(this.$selectContentBox.height() > maxHeight){\r\n                        this.$selectContentBox.css({\r\n                            \"max-height\": maxHeight + \"px\"\r\n                            // \"height\": (maxHeight + 10) + \"px\"\r\n                        });\r\n                    }\r\n                }\r\n                this.scroll();\r\n            },\r\n            /*\r\n             * 渲染搜索框\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderSearchBox: function(){\r\n                var that = this;\r\n                var $searchBox = $(this.searchBoxTmp).appendTo(this.$dropdownBox);\r\n                $searchBox.children('input').on(\"input propertychange\", function(e){\r\n                    var searchKeyword = $(this).val();\r\n                    that.filter(searchKeyword);\r\n                });\r\n\r\n                //监听Enter键选中第一项\r\n                $searchBox.children('input').keypress(function(event){\r\n                    var keynum = window.event ? event.keyCode : event.which;\r\n                    if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                        ui.stopPropagation(event);  // 阻止事件冒泡\r\n                        ui.preventDefault(event);\r\n                    }\r\n                    // console.info(\"keypress\");\r\n                }).keyup(function(event){\r\n                    // event.stopPropagation();\r\n                    var keynum = window.event ? event.keyCode : event.which;\r\n                    // ui.logError(keynum);\r\n                    if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                        // 获取到第一条显示的可选的数据\r\n                        $.each(that.pickerNodes, function(i, node){\r\n                            if(!node.isHidden() && node.isEnable()){\r\n                                node.focus();\r\n                                node.click();\r\n                                return false;\r\n                            }\r\n                        })\r\n                    }else if(keynum == ui.CONSTANTS.KEYS.DOWN){\r\n                        $.each(that.pickerNodes, function(i, node){\r\n                            if(!node.isHidden() && node.isEnable()){\r\n                                // this.blur();\r\n                                node.focus();\r\n                                return false;\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n            },\r\n            /*\r\n             * 移除搜索框\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @return   {[type]}   [description]\r\n             */\r\n            removeSearchBox: function(){\r\n                if(this.$dropdownBox.children('.ws-searchbox').length > 0){\r\n                    this.$dropdownBox.children('.ws-searchbox').remove();\r\n                }\r\n            },\r\n            /*\r\n             * 渲染选择按钮\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderSelectButton: function(){\r\n                if(this.opt.maxNumber !== false){\r\n                    this.opt.isShowActionsBox = false;\r\n                    ui.logMessage(\"限制节点个数时无法使用开启全选功能\", \"wui.selectBox\", true);\r\n                    return;\r\n                }\r\n                var that = this;\r\n                var $actionsbox = $(this.actionsBoxTmp).appendTo(this.$dropdownBox);\r\n\r\n                $actionsbox.find('.ws-select-all').each(function(){\r\n\r\n                    $(this).off(\"click\").on(\"click\", function(e){\r\n                        e.stopPropagation();\r\n                        that.selectAll();\r\n                    });\r\n                });\r\n\r\n                $actionsbox.find('.ws-deselect-all').each(function(){\r\n                    $(this).off(\"click\").on(\"click\", function(e){\r\n                        e.stopPropagation();\r\n                        that.unselectAll();\r\n                    });\r\n                });\r\n            },\r\n            /*\r\n             * 移除选择按钮\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @return   {[type]}   [description]\r\n             */\r\n            removeSelectButton: function(){\r\n                if(this.$dropdownBox.children('.ws-actionsbox').length > 0){\r\n                    this.$dropdownBox.children('.ws-actionsbox').remove();\r\n                }\r\n            },\r\n            /*\r\n             * 渲染关闭按钮\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderCloseButton: function(){\r\n                var that = this;\r\n                var $closeBtn = $(this.closeButtonTmp).appendTo(this.$dropdownBox);\r\n\r\n                $closeBtn.find(\"button\").on(\"click\", function(e){\r\n                    that.closePicker();\r\n                });\r\n            },\r\n            /*\r\n             * 打开下拉视图\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            openPicker: function(){\r\n                this.$viewBox.addClass(\"open\");\r\n            },\r\n            /*\r\n             * 关闭下拉视图\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            closePicker: function(){\r\n                this.$viewBox.removeClass(\"open\");\r\n            },\r\n            /*\r\n             * 移除关闭按钮\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @return   {[type]}   [description]\r\n             */\r\n            removeCloseButton: function(){\r\n                if(this.$dropdownBox.children('.ws-donebutton').length > 0){\r\n                    this.$dropdownBox.children('.ws-donebutton').remove();\r\n                }\r\n            },\r\n            /*\r\n             * 渲染下拉框\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderDropdownBox: function(){\r\n                var that = this;\r\n\r\n                // 添加下拉选项容器\r\n                if(this.$dropdownBox.children('[wui-data=\"menu\"]').length == 0){\r\n                    this.$dropdownBox.append(this.$selectContentBox);\r\n                }else{\r\n                    this.$selectContentBox = this.$dropdownBox.children('[wui-data=\"menu\"]');\r\n                }\r\n\r\n                this.$selectContentBox.empty();\r\n\r\n                // isShowCloseBtn: {boolean} 是否开启关闭按钮\r\n                if(this.opt.isShowCloseBtn){\r\n                    this.renderCloseButton();\r\n                }\r\n            },\r\n            /*\r\n             * 创建新节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   item       [description]\r\n             * @param    {[type]}   parentNode [description]\r\n             * @return   {[type]}              [description]\r\n             */\r\n            createNode: function(item, parentNode){\r\n                // 节点配置\r\n                var opt = {\r\n                    // {string}  非空,选中值保存的text字段\r\n                    text: this.opt.text\r\n                    // {string}  非空,选中值保存的value字段\r\n                    , name: this.opt.name\r\n                    // 数据源数据解析\r\n                    , jsonReader: {\r\n                        // {String} 子节点集字段名\r\n                        children: this.opt.jsonReader.children\r\n                        // {String} 子节点禁用标识字段名\r\n                        , disabled: this.opt.jsonReader.disabled\r\n                        // {String} 子节点选中标识字段名\r\n                        , selected: this.opt.jsonReader.selected\r\n                        // {String} 子节点隐藏标识字段名\r\n                        , hidden: this.opt.jsonReader.hidden\r\n                    }\r\n                    // 默认样式类\r\n                    , classList: {\r\n                        // 选中节点附加样式\r\n                        \"selected\": this.opt.classList.selected\r\n                        // 隐藏节点附加样式\r\n                        , \"hidden\": this.opt.classList.hidden\r\n                        // 禁用节点附加样式\r\n                        , \"disabled\": this.opt.classList.disabled\r\n                        // 聚焦节点附件样式\r\n                        , \"active\": this.opt.classList.active\r\n                        // {string}  选中节点的图标样式\r\n                        , \"checked\": this.opt.classList.checked\r\n                        // {String} 分组时,组头附加图标样式\r\n                        , \"group\": this.opt.classList.group\r\n                        // {String} 选项附加图标样式\r\n                        , \"option\": this.opt.classList.option\r\n                    }\r\n                    // 当分组时,是否可整组选择,默认是false\r\n                    , isSelectGroup: this.opt.isSelectGroup       \r\n                    // {number} 最多可选个数,false代表无限制\r\n                    , maxNumber: this.opt.maxNumber\r\n                };\r\n\r\n                return new SelectNode(item, opt, this, parentNode);\r\n            },\r\n            /*\r\n             * 根据关键字过滤下拉选项\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   keyword [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            filter: function(keyword){\r\n                var showNodes = [];\r\n\r\n                this.removeNoneOptionTip();\r\n\r\n                if(!keyword){\r\n                    this.isFilter = false;\r\n                }else{\r\n                    this.isFilter = true;\r\n                }\r\n                $.each(this.pickerNodes, function(i, node){\r\n                    if(node.title.indexOf(keyword) > -1){\r\n                        node.setNodeHidden(false, true);\r\n                        showNodes.push(node);\r\n                        if(!node.isGroup() && node.parent){\r\n                            node.parent.setNodeHidden(false);\r\n                            showNodes.push(node.parent);\r\n                            if(!node.isSelected()){\r\n                                node.parent.setNodeSelected(false, false, false);\r\n                            }\r\n                        }\r\n                    }else{\r\n                        node.setNodeHidden(true, true);\r\n                    }\r\n                })\r\n\r\n                if(showNodes.length == 0){\r\n                    var tipText = this.opt.defaultText.noneResultsText.replace(\"{0}\", keyword);\r\n                    this.renderNoneOptionTip(tipText, \"append\");\r\n                }\r\n            },\r\n            /*\r\n             * 渲染节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderNodes: function(items){\r\n                var that = this, showNodes = [];\r\n                this.data = items;\r\n\r\n                $.each(items, function(i, item){\r\n                    var node = that.createNode(item, null);\r\n                    that.pickerNodes.push(node);\r\n                    if(!node.isHidden()){\r\n                        showNodes.push(node);\r\n                    }\r\n                    if(!!item[that.opt.jsonReader.children]){\r\n                        $.each(item[that.opt.jsonReader.children], function(i, childItem){\r\n                            var subNode = that.createNode(childItem, node);\r\n                            node.childrens.push(subNode);\r\n                            that.pickerNodes.push(subNode);\r\n                            if(!subNode.isHidden()){\r\n                                showNodes.push(subNode);\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n                if(this.getShowNodes().length > 0){\r\n                    this.removeNoneOptionTip();\r\n                }\r\n\r\n                // 数据加载完成\r\n                this.trigger(\"loadComplete\", items);\r\n            },\r\n            /*\r\n             * 渲染结果\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderResult: function(){\r\n\r\n                var that = this, nodeTexts = [];\r\n                $.each(this.activeNodes, function(i, node){\r\n                    // console.info(node);\r\n                    nodeTexts.push(node.title);\r\n                })\r\n                \r\n                \r\n                var result = this.opt.defaultText.noneSelectedText;\r\n                if(nodeTexts.length > 0){\r\n                    result = nodeTexts.join(this.opt.multipleSeparator);\r\n                }\r\n\r\n                this.$resultBox.text(result);\r\n                this.$resultBox.attr(\"title\", result);\r\n\r\n                var itemValue = this.get(\"value\");\r\n                if(ui.isArray(itemValue)){\r\n                    this.$element.val(itemValue.join(\",\"));\r\n                }else{\r\n                    this.$element.val(itemValue);\r\n                }\r\n\r\n                var elem = this.$element.get(0);\r\n                // console.group(this.id)\r\n                // console.group(this.$element)\r\n                // console.group($.data( elem.form, \"validator\" ))\r\n                // console.group(ui.isEmptyType(this.$element.rules()));\r\n                // console.groupEnd();\r\n                // console.groupEnd();\r\n                // console.groupEnd();\r\n                // console.groupEnd();\r\n\r\n                // !ui.isEmptyType(this.$element.rules()):可以区分是否有校验规则\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(this.$element.rules())){\r\n                    ui.validElement(this.$element);\r\n                }\r\n            },\r\n            disabled: function(){\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\");\r\n                this.enable = false;\r\n            },\r\n            enabled: function(){\r\n                this.$buttonBox.removeAttr(\"disabled\");\r\n                this.enable = true;\r\n            },\r\n            renderNoneOptionTip: function(tipText, command){\r\n                tipText = tipText || this.opt.defaultText.noneOptionText;\r\n                command = command || \"html\";\r\n                var noneOptionTipText = this.tipTmp.replace(\"{0}\", tipText);\r\n                this.$selectContentBox[command](noneOptionTipText);\r\n            },\r\n            removeNoneOptionTip: function(){\r\n                this.$selectContentBox.children(\".no-result-text\") && this.$selectContentBox.children(\".no-result-text\").remove();\r\n            },\r\n            // addNode: function(item, parentNode){\r\n            //     var that = this, showNodes = [];\r\n            //     var node = this.createNode(item, parentNode);\r\n            //     this.pickerNodes.push(node);\r\n            //     if(!!item[this.opt.jsonReader.children]){\r\n            //         $.each(item[that.opt.jsonReader.children], function(i, childItem){\r\n            //             var subNode = that.createNode(childItem, node);\r\n            //             node.childrens.push(subNode);\r\n            //             that.pickerNodes.push(subNode);\r\n            //         })\r\n            //     }\r\n\r\n            //     if(this.getShowNodes().length > 0){\r\n            //         this.removeNoneOptionTip();\r\n            //     }\r\n            // },\r\n            /*\r\n             * 接口请求成功\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   response       后台返回数据\r\n             * @param    {[type]}   status         后台请求返回状态\r\n             * @param    {[type]}   XMLHttpRequest 后台与服务器交换数据\r\n             * @return   {[type]}                  [description]\r\n             */\r\n            querySuccess: function(response, status, XMLHttpRequest){\r\n                var that = this, opt = this.opt;\r\n                var isContinue = this.trigger(\"success\", response, status, XMLHttpRequest),\r\n                    code, items;\r\n\r\n                var codes = {\r\n                    \"-1\": \"数据请求失败\",\r\n                    \"0\": opt.jsonReader.isSuccess + \"字段返回false\",\r\n                    \"1\": \"服务器返回数据不包含参数\" + opt.jsonReader.root\r\n                }\r\n\r\n                if(isContinue === false){\r\n                    return;\r\n                }\r\n\r\n                if(opt.jsonReader.root){\r\n                    if(!ui.isUndefined(response[opt.jsonReader.root])){\r\n                        var data = response[opt.jsonReader.root];\r\n                        // 有判断是否成功请求的,要先判断\r\n                        if(opt.jsonReader.isSuccess && !ui.isUndefined(response[opt.jsonReader.isSuccess])){ \r\n                            if(response[opt.jsonReader.isSuccess]){\r\n\r\n                                items = $.extend(true, [], data, that.getItemsFromSelect());\r\n                                // 改变组件状态为\"loaded\"\r\n                                this.status = \"loaded\";\r\n                            }else{\r\n                                // 改变组件状态为\"error\"\r\n                                this.status = \"error\";\r\n                                code = \"0\";\r\n                            }\r\n                        }else{  // 没有判断是否成功请求的,直接执行成功方法\r\n                            items = $.extend(true, [], data, that.getItemsFromSelect());\r\n                            // 改变组件状态为\"loaded\"\r\n                            this.status = \"loaded\";\r\n                        }\r\n                    }else{\r\n                        // 改变组件状态为\"error\"\r\n                        this.status = \"error\";\r\n                        code = \"1\";\r\n                    }\r\n                        \r\n                }else{\r\n\r\n                    items = $.extend(true, [], response, that.getItemsFromSelect());\r\n                    // 改变组件状态为\"loaded\"\r\n                    this.status = \"loaded\";\r\n                }\r\n\r\n                if(this.status == \"error\"){\r\n                    this.removeSelectButton();\r\n                    this.removeSearchBox();\r\n                    this.renderNoneOptionTip(this.opt.defaultText.queryErrorText);\r\n                    this.trigger(\"loadError\", code, codes[code], response, status, XMLHttpRequest);\r\n                }else if(this.status == \"loaded\"){\r\n                    // 数据加载完成\r\n                    this.trigger(\"loadSuccess\", response, status, XMLHttpRequest);\r\n                    that.renderNodes(items);\r\n                }\r\n            },\r\n            /*\r\n             * 请求失败方法\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   XMLHttpRequest 后台与服务器交换数据\r\n             * @param    {[type]}   textStatus     后台请求返回状态\r\n             * @param    {[type]}   errorThrown    抛出错误异常\r\n             * @return   {[type]}                  [description]\r\n             */\r\n            queryError: function(XMLHttpRequest, textStatus, errorThrown){\r\n                // 改变组件状态为\"error\"\r\n                this.status = \"error\";\r\n                var codes = {\r\n                    \"-1\": \"数据请求失败\",\r\n                    \"0\": this.opt.jsonReader.isSuccess + \"字段返回false\",\r\n                    \"1\": \"服务器返回数据不包含参数\" + this.opt.jsonReader.root\r\n                }\r\n                \r\n                this.removeSelectButton();\r\n                this.removeSearchBox();\r\n                this.renderNoneOptionTip(this.opt.defaultText.queryErrorText);\r\n                this.trigger(\"loadError\", \"-1\", codes[\"-1\"], XMLHttpRequest, textStatus, errorThrown);\r\n            },\r\n            /*\r\n             * 从初始化元素的下拉选项中获取节点数据\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   element [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            getItemFromOption: function(element){\r\n                var that = this, items = [];\r\n                var name = this.opt.name, text = this.opt.text, \r\n                    children = this.opt.jsonReader.children,\r\n                    selected = this.opt.jsonReader.selected,\r\n                    disabled = this.opt.jsonReader.disabled,\r\n                    hidden = this.opt.jsonReader.hidden;\r\n\r\n                var item = {};\r\n                if(element.tagName.toLowerCase() == \"option\"){\r\n                    var itemText = $(element).text();\r\n                    var itemValue = $(element).val();\r\n\r\n                    item[name] = itemValue;\r\n                    item[text] = itemText;\r\n\r\n                    if(element.hasAttribute(\"disabled\")){\r\n                        item[disabled] = true;\r\n                    }\r\n\r\n                    if(element.hasAttribute(\"selected\")){\r\n                        item[selected] = true;\r\n                    }\r\n\r\n                    if(element.hasAttribute(\"hidden\")){\r\n                        item[hidden] = true;\r\n                    }\r\n                }else if(element.tagName.toLowerCase() == \"optgroup\"){\r\n                    var itemText = $(element).attr(\"label\");\r\n                    var itemValue = $(element).attr(\"value\");\r\n\r\n                    item[name] = itemValue;\r\n                    item[text] = itemText;\r\n\r\n                    if(element.hasAttribute(\"disabled\")){\r\n                        item[disabled] = true;\r\n                    }\r\n\r\n                    if(element.hasAttribute(\"selected\")){\r\n                        item[selected] = true;\r\n                    }\r\n\r\n                    if(element.hasAttribute(\"hidden\")){\r\n                        item[hidden] = true;\r\n                    }\r\n\r\n                    item[children] = [];\r\n                    $(element).children().each(function(i, subOption){\r\n                        var subItem = that.getItemFromOption(subOption);\r\n                        if(subItem.length > 0){\r\n                            item[children].push(subItem);\r\n                        }\r\n                    })\r\n                }\r\n\r\n                return item;\r\n            },\r\n            /*\r\n             * 从select初始化元素获取下拉数据\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            getItemsFromSelect: function(){\r\n\r\n                var that = this, items = [];\r\n\r\n                // 初始化元素是select\r\n                if(this.$element.is(\"select\")){\r\n                    this.$element.children().each(function(i, optionNode){\r\n                        var item = that.getItemFromOption(optionNode);\r\n                        items.push(item);\r\n                    })\r\n                }\r\n\r\n                return items;\r\n            },\r\n            /*\r\n             * 获取可以选择的节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @param    {Boolean}  isSelected [description]\r\n             * @return   {[type]}              [description]\r\n             */\r\n            getEnableSelectNodes: function(isSelected){\r\n                var that = this, resultNode = [];\r\n                $.each(this.pickerNodes, function(i, node){\r\n                    if(node.isEnable() && !node.isHidden()){\r\n                        if(ui.isUndefined(isSelected)){\r\n                            resultNode.push(node);\r\n                        }else if(node.isSelected() === isSelected){\r\n                            resultNode.push(node);\r\n                        }\r\n                    }\r\n                })\r\n                return resultNode;\r\n            },\r\n            getShowNodes: function(isSelected){\r\n                var that = this, resultNode = [];\r\n                $.each(this.pickerNodes, function(i, node){\r\n                    if(!node.isHidden()){\r\n                        if(ui.isUndefined(isSelected)){\r\n                            resultNode.push(node);\r\n                        }else if(node.isSelected() === isSelected){\r\n                            resultNode.push(node);\r\n                        }\r\n                    }\r\n                })\r\n                return resultNode;\r\n            },\r\n            getEnableNodes: function(isSelected){\r\n                var that = this, resultNode = [];\r\n                $.each(this.pickerNodes, function(i, node){\r\n                    if(node.isEnable()){\r\n                        if(ui.isUndefined(isSelected)){\r\n                            resultNode.push(node);\r\n                        }else if(node.isSelected() === isSelected){\r\n                            resultNode.push(node);\r\n                        }\r\n                    }\r\n                })\r\n                return resultNode;\r\n            },\r\n            /*\r\n             * 加载组件数据\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @return   {[type]}   [description]\r\n             */\r\n            load: function(){\r\n                var that = this, opt = this.opt;\r\n\r\n                if(this.opt.source){\r\n                    if(typeof(this.opt.source) === \"function\"){\r\n                        this.opt.source.apply(this);\r\n                    }\r\n                }else{\r\n                    if(this.opt.loadData){\r\n                        if(ui.isArray(this.opt.loadData)){\r\n\r\n                            $.extend(true, that.opt.loadData, that.getItemsFromSelect());\r\n                            that.renderNodes(that.opt.loadData);\r\n                        } else{\r\n                            ui.logWarn(\"传入的下拉数据格式不是数组\", FRAME_NAME + \".selectBox().load\", true);\r\n                        }\r\n                    }\r\n\r\n                    if(opt.loadUrl != \"\"){\r\n                        var ajaxParam = {\r\n                            url: this.opt.loadUrl,\r\n                            data: this.opt.otherParam,\r\n                            method: this.opt.method,\r\n                            onSuccess: function(response, status, XMLHttpRequest){\r\n                                that.querySuccess(response, status, XMLHttpRequest);\r\n                            }, \r\n                            onError: function(XMLHttpRequest, textStatus, errorThrown){\r\n                                that.queryError(XMLHttpRequest, textStatus, errorThrown);\r\n                            }, \r\n                            async: this.opt.async, \r\n                            dataType: \"json\"\r\n                        }\r\n                        ui.ajax(ajaxParam);\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 重加载组件数据\r\n             * 1、向初始化的SELECT标签中新增选项之后,重新排列下拉选项;\r\n             * 2、重新加载数据源:loadUrl/loadData\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @return   {[type]}   [description]\r\n             */\r\n            reload: function(items){\r\n                this.pickerNodes = [];\r\n                this.activeNodes = [];\r\n                this.$selectContentBox.empty();\r\n                this.renderResult();\r\n\r\n                if(items){\r\n                    this.renderNodes(items);\r\n                }else{\r\n                    this.load();\r\n                }\r\n            },\r\n            /*\r\n             * 根据传入的key值集合选中对应的节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   data [description]\r\n             * @return   {[type]}        [description]\r\n             */\r\n            select: function(data){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\",\r\n                        \"2\": \"选项中不存在 \" + name + \" 字段值为{0}的数据\",\r\n                        \"3\": \"节点已经被选中\",\r\n                        \"4\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"6\": \"添加的节点不能为空类型\"\r\n                    };\r\n                // console.error(data)\r\n                // 不是空数据\r\n                if(!ui.isEmptyType(data)){\r\n                    if(ui.isArray(data)){\r\n                        $.each(data, function(i, record){\r\n                            var key = record;\r\n\r\n                            // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                            if(that.opt.maxNumber != false && that.opt.maxNumber > 1 && (that.activeNodes.length >= that.opt.maxNumber)){\r\n                                that.trigger(\"itemSelectError\", {\r\n                                    type:'itemSelectError',\r\n                                    item: record, \r\n                                    code: -1,\r\n                                    message: codes[\"-1\"]\r\n                                })\r\n                                return false;\r\n                            }\r\n\r\n                            if(ui.isJson(record)){\r\n                                key = record[name];\r\n                            }\r\n\r\n                            if(ui.isEmptyType(key)){\r\n                                that.trigger('itemSelectError', {\r\n                                    type:'itemSelectError',\r\n                                    item: record, \r\n                                    code: 4, \r\n                                    message: codes[\"4\"].replace('{0}', JSON.stringify(record))\r\n                                })\r\n\r\n                                return true;\r\n                            }\r\n\r\n                            var isHasNode = false;\r\n                            $.each(that.pickerNodes, function(index, node){\r\n                                if(node.key == key){\r\n                                    if(!node.isSelected()){\r\n                                        node.setSelected(true);\r\n                                    }else{\r\n                                        that.trigger('itemSelectError', {\r\n                                            type:'itemSelectError',\r\n                                            item: data, \r\n                                            code: 3, \r\n                                            message: codes[\"3\"]\r\n                                        })\r\n                                    }\r\n                                    isHasNode = true;\r\n                                    return false;\r\n                                }\r\n                            })\r\n\r\n                            if(!isHasNode){\r\n                                that.trigger('itemSelectError', {\r\n                                    type:'itemSelectError',\r\n                                    item: record, \r\n                                    code: 2, \r\n                                    message: codes[\"2\"].replace('{0}', key)\r\n                                })\r\n                            }\r\n                        })\r\n                        return true;\r\n                    }else if(ui.isJson(data)){\r\n                        var key = data[name];\r\n\r\n                        // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                        if (that.opt.maxNumber != false && that.opt.maxNumber > 1 && (that.activeNodes.length >= that.opt.maxNumber)){\r\n                            that.trigger('itemSelectError', {\r\n                                type:'itemSelectError',\r\n                                item: data, \r\n                                code: -1, \r\n                                message: codes[\"-1\"]\r\n                            })\r\n                            return false;\r\n                        }\r\n\r\n                        if(ui.isEmptyType(key)){\r\n                            that.trigger('itemSelectError', {\r\n                                type:'itemSelectError',\r\n                                item: data, \r\n                                code: 4, \r\n                                message: codes[\"4\"].replace('{0}', JSON.stringify(data))\r\n                            })\r\n                        }\r\n\r\n                        var isHasNode = false;\r\n                        $.each(that.pickerNodes, function(index, node){\r\n                            if(node.key == key){\r\n                                if(!node.isSelected()){\r\n                                    node.setSelected(true);\r\n                                }else{\r\n                                    that.trigger('itemSelectError', {\r\n                                        type:'itemSelectError',\r\n                                        item: data, \r\n                                        code: 3, \r\n                                        message: codes[\"3\"]\r\n                                    })\r\n                                }\r\n                                isHasNode = true;\r\n                                return false;\r\n                            }\r\n                        })\r\n                        if(!isHasNode){\r\n                            that.trigger('itemSelectError', {\r\n                                type:'itemSelectError',\r\n                                item: data, \r\n                                code: 2, \r\n                                message: codes[\"2\"].replace('{0}', key)\r\n                            })\r\n\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }else if(ui.isString(data)){\r\n                        // console.error(data)\r\n                        $.each(data.split(\",\"), function(index, key){\r\n\r\n                            // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                            if (that.opt.maxNumber != false && that.opt.maxNumber > 1 && (that.activeNodes.length >= that.opt.maxNumber)){\r\n                                that.trigger('itemSelectError', {\r\n                                    type:'itemSelectError',\r\n                                    item: data, \r\n                                    code: -1, \r\n                                    message: codes[\"-1\"]\r\n                                })\r\n                                return false;\r\n                            }\r\n\r\n                            var isHasNode = false;\r\n                            $.each(that.pickerNodes, function(index, node){\r\n                                if(node.key == key){\r\n                                    if(!node.isSelected()){\r\n                                        node.setSelected(true);\r\n                                    }else{\r\n                                        that.trigger('itemSelectError', {\r\n                                            type:'itemSelectError',\r\n                                            item: data, \r\n                                            code: 3, \r\n                                            message: codes[\"3\"]\r\n                                        })\r\n                                    }\r\n                                    isHasNode = true;\r\n                                    return false;\r\n                                }\r\n                            })\r\n\r\n                            if(!isHasNode){\r\n                                that.trigger('itemSelectError', {\r\n                                    type:'itemSelectError',\r\n                                    item: data, \r\n                                    code: 2, \r\n                                    message: codes[\"2\"].replace('{0}', key)\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                        return true;\r\n                    }else if(ui.isNumber(data)){\r\n                        var key = data;\r\n\r\n                        // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                        if (that.opt.maxNumber != false && that.opt.maxNumber > 1 && (that.activeNodes.length >= that.opt.maxNumber)){\r\n                            that.trigger('itemSelectError', {\r\n                                type:'itemSelectError',\r\n                                item: data, \r\n                                code: -1, \r\n                                message: codes[\"-1\"]\r\n                            })\r\n                            return false;\r\n                        }\r\n\r\n                        // if(ui.isEmptyType(key)){\r\n                        //     that.trigger('itemSelectError', {\r\n                        //         type:'itemSelectError',\r\n                        //         item: data, \r\n                        //         code: 4, \r\n                        //         message: codes[\"4\"].replace('{0}', data)\r\n                        //     })\r\n                        // }\r\n\r\n                        var isHasNode = false;\r\n                        $.each(that.pickerNodes, function(index, node){\r\n                            if(node.key == key){\r\n                                if(!node.isSelected()){\r\n                                    node.setSelected(true);\r\n                                }else{\r\n                                    that.trigger('itemSelectError', {\r\n                                        type:'itemSelectError',\r\n                                        item: data, \r\n                                        code: 3, \r\n                                        message: codes[\"3\"]\r\n                                    })\r\n                                }\r\n                                isHasNode = true;\r\n                                return false;\r\n                            }\r\n                        })\r\n                        if(!isHasNode){\r\n                            that.trigger('itemSelectError', {\r\n                                type:'itemSelectError',\r\n                                item: data, \r\n                                code: 2, \r\n                                message: codes[\"2\"].replace('{0}', key)\r\n                            })\r\n\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                }else{\r\n                    this.trigger('itemSelectError', {\r\n                        type:'itemSelectError',\r\n                        item: data, \r\n                        code: 6, \r\n                        message: codes[\"6\"]\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            /*\r\n             * 根据传入的key值集合取消选中对应的节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   data [description]\r\n             * @return   {[type]}        [description]\r\n             */\r\n            unselect: function(data){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        // \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\",\r\n                        \"0\": \"移除的数据不能为空\",\r\n                        \"1\": \"取消数据类型不是string或JSON\",\r\n                        \"2\": \"选项中不存在 \" + name + \" 字段值为{0}的数据\",\r\n                        \"3\": \"节点未被选中\",\r\n                        \"4\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"6\": \"去选选择的数据不能为空类型\"\r\n                    };\r\n                // 不是空数据\r\n                if(!ui.isEmptyType(data)){\r\n                    if(ui.isArray(data)){\r\n                        $.each(data, function(i, record){\r\n                            var key = record;\r\n\r\n                            if(ui.isJson(record)){\r\n                                key = record[name];\r\n                            }\r\n\r\n                            if(ui.isEmptyType(key)){\r\n                                that.trigger('itemUnselectError', {\r\n                                    type:'itemUnselectError',\r\n                                    item: record, \r\n                                    code: 4, \r\n                                    message: codes[\"4\"].replace('{0}', JSON.stringify(record))\r\n                                })\r\n\r\n                                return true;\r\n                            }\r\n\r\n                            var isHasNode = false;\r\n                            $.each(that.pickerNodes, function(index, node){\r\n                                if(node.key == key){\r\n                                    if(node.isSelected()){\r\n                                        node.setSelected(false);\r\n                                    }else{\r\n                                        that.trigger('itemUnselectError', {\r\n                                            type:'itemUnselectError',\r\n                                            item: data, \r\n                                            code: 3, \r\n                                            message: codes[\"3\"]\r\n                                        })\r\n                                    }\r\n                                    isHasNode = true;\r\n                                    return false;\r\n                                }\r\n                            })\r\n\r\n                            if(!isHasNode){\r\n                                that.trigger('itemUnselectError', {\r\n                                    type:'itemUnselectError',\r\n                                    item: record, \r\n                                    code: 2, \r\n                                    message: codes[\"2\"].replace('{0}', key)\r\n                                })\r\n                            }\r\n                        })\r\n                        return true;\r\n                    }else if(ui.isJson(data)){\r\n                        var key = data[name];\r\n\r\n                        if(ui.isEmptyType(key)){\r\n                            that.trigger('itemUnselectError', {\r\n                                type:'itemUnselectError',\r\n                                item: data, \r\n                                code: 4, \r\n                                message: codes[\"4\"].replace('{0}', JSON.stringify(data))\r\n                            })\r\n                        }\r\n\r\n                        var isHasNode = false;\r\n                        $.each(that.pickerNodes, function(index, node){\r\n                            if(node.key == key){\r\n                                if(node.isSelected()){\r\n                                    node.setSelected(false);\r\n                                }else{\r\n                                    that.trigger('itemUnselectError', {\r\n                                        type:'itemUnselectError',\r\n                                        item: data, \r\n                                        code: 3, \r\n                                        message: codes[\"3\"]\r\n                                    })\r\n                                }\r\n                                isHasNode = true;\r\n                                return false;\r\n                            }\r\n                        })\r\n                        if(!isHasNode){\r\n                            that.trigger('itemUnselectError', {\r\n                                type:'itemUnselectError',\r\n                                item: data, \r\n                                code: 2, \r\n                                message: codes[\"2\"].replace('{0}', key)\r\n                            })\r\n\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }else if(ui.isString(data)){\r\n                        $.each(data.split(\",\"), function(index, key){\r\n\r\n                            var isHasNode = false;\r\n                            $.each(that.pickerNodes, function(index, node){\r\n                                if(node.key == key){\r\n                                    if(node.isSelected()){\r\n                                        node.setSelected(false);\r\n                                    }else{\r\n                                        that.trigger('itemUnselectError', {\r\n                                            type:'itemUnselectError',\r\n                                            item: data, \r\n                                            code: 3, \r\n                                            message: codes[\"3\"]\r\n                                        })\r\n                                    }\r\n                                    isHasNode = true;\r\n                                    return false;\r\n                                }\r\n                            })\r\n\r\n                            if(!isHasNode){\r\n                                that.trigger('itemUnselectError', {\r\n                                    type:'itemUnselectError',\r\n                                    item: data, \r\n                                    code: 2, \r\n                                    message: codes[\"2\"].replace('{0}', key)\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                        return true;\r\n                    }else if(ui.isNumber(data)){\r\n                        var key = data;\r\n\r\n                        // if(ui.isEmptyType(key)){\r\n                        //     that.trigger('itemUnselectError', {\r\n                        //         type:'itemUnselectError',\r\n                        //         item: data, \r\n                        //         code: 4, \r\n                        //         message: codes[\"4\"].replace('{0}', data)\r\n                        //     })\r\n                        // }\r\n\r\n                        var isHasNode = false;\r\n                        $.each(that.pickerNodes, function(index, node){\r\n                            if(node.key == key){\r\n                                if(node.isSelected()){\r\n                                    node.setSelected(false);\r\n                                }else{\r\n                                    that.trigger('itemUnselectError', {\r\n                                        type:'itemUnselectError',\r\n                                        item: data, \r\n                                        code: 3, \r\n                                        message: codes[\"3\"]\r\n                                    })\r\n                                }\r\n                                isHasNode = true;\r\n                                return false;\r\n                            }\r\n                        })\r\n                        if(!isHasNode){\r\n                            that.trigger('itemUnselectError', {\r\n                                type:'itemUnselectError',\r\n                                item: data, \r\n                                code: 2, \r\n                                message: codes[\"2\"].replace('{0}', key)\r\n                            })\r\n\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                }else{\r\n                    this.trigger('itemUnselectError', {\r\n                        type:'itemUnselectError',\r\n                        item: data, \r\n                        code: 6, \r\n                        message: codes[\"6\"]\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            /*\r\n             * 全选操作\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            selectAll: function(isExcute){\r\n                $.each(this.pickerNodes, function(i, node){\r\n                    if(node.isEnable() && !node.isHidden()){\r\n                        node.setNodeSelected(true, false, isExcute);\r\n                    }\r\n                })\r\n\r\n                this.renderResult();\r\n\r\n                this.trigger(\"selectAll\");\r\n            },\r\n            /*\r\n             * 全不选操作\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            unselectAll: function(isExcute){\r\n                $.each(this.pickerNodes, function(i, node){\r\n                    if(node.isEnable() && !node.isHidden()){\r\n                        node.setNodeSelected(false, false, isExcute);\r\n                    }\r\n                })\r\n\r\n                this.renderResult();\r\n\r\n                this.trigger(\"unselectAll\");\r\n            },\r\n            set: function(data){\r\n                while(this.activeNodes.length > 0){\r\n                    var lastSelectedNode = this.activeNodes.pop();\r\n                    lastSelectedNode.setNodeSelected(false, false, false);\r\n                }\r\n                // 避免触发两次校验\r\n                // this.renderResult();\r\n                this.select(data);\r\n            },\r\n            option: function(params){\r\n                if(ui.isUndefined(params)){\r\n                    return this.opt;\r\n                }else{\r\n                    if(typeof params === \"object\"){\r\n                        this.reoption(params);  // 重置配置\r\n                    }else if(typeof params === \"string\"){\r\n                        if(params === \"getDefOpt\"){\r\n                            return this.defaults;\r\n                        }else{\r\n                            return this.opt[params];\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            reoption: function(newOptions){\r\n\r\n                var that = this, params = this.opt, isLoadData = false;\r\n\r\n                // direction: {string} 下拉框展开方向,默认是为空,即向下,若是dropup,即向上\r\n                if(newOptions.direction != undefined && params.direction != newOptions.direction){\r\n                    this.opt.direction = newOptions.direction;\r\n                    this.direction();\r\n                }\r\n\r\n                // text: {string}  选中值保存的text字段\r\n                if(newOptions.text != undefined && params.text != newOptions.text){\r\n                    isLoadData = true;\r\n                    this.opt.text = newOptions.text;\r\n                }\r\n                // name: {string}  选中值保存的name字段\r\n                if(newOptions.name != undefined && params.name != newOptions.name){\r\n                    isLoadData = true;\r\n                    this.opt.name = newOptions.name;\r\n                }\r\n\r\n                // loadUrl: {string} 数据服务地址\r\n                if(newOptions.loadUrl != undefined && params.loadUrl != newOptions.loadUrl){\r\n                    // 重新加载下拉数据\r\n                    this.opt.loadUrl = newOptions.loadUrl;\r\n                    isLoadData = true;\r\n                }\r\n\r\n                // otherParam: {string} 发送到服务器的数据\r\n                if(newOptions.otherParam !== undefined && params.otherParam !== newOptions.otherParam){\r\n                    // 重新加载下拉数据\r\n                    this.opt.otherParam = newOptions.otherParam;\r\n                    isLoadData = true;\r\n                }\r\n\r\n                // jsonReader: {string} 解析服务数据\r\n                if(newOptions.jsonReader != undefined && params.jsonReader != newOptions.jsonReader){\r\n                    if(ui.isJson(newOptions.jsonReader)){\r\n                        /* debugConfig 合并到 wui 中 */\r\n                        $.extend(true, this.opt.jsonReader, newOptions.jsonReader);\r\n                        isLoadData = true;\r\n                    }\r\n                }\r\n\r\n                // loadData: {Array} 下拉数据数据\r\n                if(newOptions.loadData && params.loadData != newOptions.loadData){\r\n                    // 重新加载下拉数据\r\n                    this.opt.loadData = newOptions.loadData;\r\n                    isLoadData = true;\r\n                }\r\n                // 重新加载下拉数据\r\n                if(isLoadData){\r\n                    this.reload();\r\n                }\r\n\r\n                // maxNumber: {number} 最多可选节点个数,0代表不限制\r\n                if(newOptions.maxNumber != undefined && params.maxNumber != parseInt(newOptions.maxNumber)){\r\n                    var maxNumber = ui.formatMaxNumber(newOptions.maxNumber);\r\n\r\n                    this.opt.maxNumber = maxNumber;\r\n                    if(maxNumber !== false){\r\n                        while(this.activeNodes.length > maxNumber){\r\n                            var lastSelectedNode = this.component.activeNodes.pop();\r\n                            lastSelectedNode.setNodeSelected(false, undefined, false);\r\n                        }\r\n                        this.renderResult();\r\n                        newOptions.isShowActionsBox = false;    // 限制个数时,不允许全选/全不选按钮出现\r\n                    }\r\n                }\r\n\r\n                // multipleSeparator: {char} 显示选中值的分隔字符\r\n                if(newOptions.multipleSeparator && params.multipleSeparator != newOptions.multipleSeparator){\r\n                    this.opt.multipleSeparator = newOptions.multipleSeparator;\r\n                    this.renderResult();\r\n                }\r\n\r\n                // isShowActionsBox: {boolean} 是否开启全选/全不选工具栏\r\n                if(newOptions.isShowActionsBox != undefined && params.isShowActionsBox != newOptions.isShowActionsBox){\r\n                    if(params.maxNumber !== false){\r\n                        newOptions.isShowActionsBox = false;\r\n                        ui.logMessage(\"限制节点个数时无法使用开启全选功能\", \"wui.selectBox\", true);\r\n                    }\r\n                    this.opt.isShowActionsBox = newOptions.isShowActionsBox;\r\n                    // 全选、全不选按钮\r\n                    if(newOptions.isShowActionsBox){\r\n                        this.renderSelectButton();\r\n                    }else{\r\n                        this.removeSelectButton();\r\n                    }\r\n                }\r\n                // isEnabledLiveSearch: {boolean} 是否开启搜索栏\r\n                if(newOptions.isEnabledLiveSearch != undefined && params.isEnabledLiveSearch != newOptions.isEnabledLiveSearch){\r\n                    this.opt.isEnabledLiveSearch = newOptions.isEnabledLiveSearch;\r\n                    if(newOptions.isEnabledLiveSearch){\r\n                        this.renderSearchBox();\r\n                    }else{\r\n                        this.removeSearchBox();\r\n                    }\r\n                }\r\n                // isShowCloseBtn: {boolean} 是否开启关闭按钮\r\n                if(newOptions.isShowCloseBtn != undefined && params.isShowCloseBtn != newOptions.isShowCloseBtn){\r\n                    this.opt.isShowCloseBtn = newOptions.isShowCloseBtn;\r\n                    if(newOptions.isShowCloseBtn){\r\n                        this.renderCloseButton();\r\n                    }else{\r\n                        this.removeCloseButton();\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 清空组件值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            empty: function(isExcute){\r\n                var that = this;\r\n                isExcute = isExcute || false;\r\n                while(this.activeNodes.length > 0){\r\n                    var lastSelectedNode = this.activeNodes.pop();\r\n                    lastSelectedNode.setNodeSelected(false, false, isExcute);\r\n                }\r\n\r\n                this.renderResult();\r\n\r\n                this.trigger(\"empty\", {\r\n                    type:'empty',\r\n                    component: that\r\n                });\r\n            },\r\n            // 向初始化的SELECT标签中新增选项之后,重新排列下拉选项\r\n            refresh: function(){\r\n\r\n            },\r\n            destroy: function(){\r\n                this.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.$container.replaceWith(this.initDom);\r\n                this.status = \"destroy\";\r\n            },\r\n            get: function(type){\r\n                var that = this, items = [],\r\n                    name = this.opt.name, text = this.opt.text\r\n                var selectItems = [];\r\n                type = type || \"json\";\r\n\r\n                $.each(this.activeNodes, function(i, node){\r\n                    var item;\r\n                    if(type == \"json\"){\r\n                        var keyObject = {};\r\n                        keyObject[name] = node.key;\r\n                        keyObject[text] = node.title;\r\n                        item = $.extend(true, {}, node.data, keyObject);\r\n                    }else if(type == \"text\"){\r\n                        item = node.title;\r\n                    }else if(type == \"value\"){\r\n                        item = node.key;\r\n                    }else{\r\n                        item = node;\r\n                    }\r\n\r\n                    selectItems.push(item);\r\n                })\r\n\r\n                if(this.opt.maxNumber == 1){\r\n                    return selectItems[0];\r\n                // }else if(type == \"text\" || type == \"value\"){\r\n                //     return selectItems.join(\",\");\r\n                }else{\r\n                    return selectItems;\r\n                }\r\n            },\r\n            /*\r\n             * 触发方法\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   method 方法名\r\n             * @param    {[type]}   params 方法配置参数\r\n             * @return   {[type]}          [description]\r\n             */\r\n            trigger: function(method, params){\r\n                var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n                // 将方法名首字母变大写: 如init -> Init\r\n                var method2 = method.substring(0,1).toUpperCase() + method.substring(1);\r\n\r\n                var result1, result2, result3;\r\n\r\n                if( this.opt[method] && typeof(this.opt[method]) === \"function\" ){\r\n\r\n                    result1 = this.opt[method].apply(this, args);\r\n\r\n                    if(!ui.isUndefined(result1)){\r\n                        return result1;\r\n                    }\r\n\r\n                }\r\n\r\n                if( this.opt[\"on\" + method2] && typeof(this.opt[\"on\" + method2]) === \"function\" ){\r\n\r\n                    result2 = this.opt[\"on\" + method2].apply(this, args);\r\n\r\n                    if(!ui.isUndefined(result2)){\r\n                        return result2;\r\n                    }\r\n                }\r\n\r\n                if( this.handlers[method] instanceof Array ){\r\n                    var event = {\r\n                        type: method,\r\n                        target: this,\r\n                        srcElement: this.element\r\n                    };\r\n                    \r\n                    $.extend(true, event, params);\r\n                    var handlers = this.handlers[method];\r\n                    for(var i = 0, len = handlers.length; i < len; i++) {\r\n                        var returnValue = handlers[i](event);\r\n                        if(!ui.isUndefined(returnValue)){\r\n                            return returnValue;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 获取内部组件对象\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            component: function(){\r\n                return this;\r\n            },\r\n            /*\r\n             * 组件绑定监听事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   type    [description]\r\n             * @param    {[type]}   handler [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            on: function(type, handler){\r\n                if(typeof this.handlers[type] === 'undefined') {\r\n                    this.handlers[type] = [];\r\n                }\r\n                this.handlers[type].push(handler);\r\n\r\n                return this;\r\n            },\r\n            /*\r\n             * 组件取消绑定监听事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   type    [description]\r\n             * @param    {[type]}   handler [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            off: function(type, handler){\r\n                if(type){\r\n                    if(this.handlers[type] instanceof Array){\r\n                        var currentHandlers = this.handlers[type];\r\n                        if(handler && currentHandlers.indexOf(handler) > -1){\r\n                            var index = currentHandlers.indexOf(handler);\r\n                            this.handlers[type].splice(index, 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            }\r\n        }\r\n\r\n        //fn就是prototype\r\n        $.fn[_pluginName] = function(param1, param2, param3){\r\n            // each表示对多个元素调用,用return 是为了返回this,进行链式调用\r\n            return this.each(function(){\r\n                //判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n                if(!$.data(document.getElementById(id), _pluginDataName)){\r\n                    //生成插件类实例。\r\n                    $.data(document.getElementById(id), _pluginDataName, new uiSelectBox(this, param1));\r\n                }\r\n            });\r\n        }\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params){\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            if(!data){\r\n                ui.logError(\"wui.selectBox 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n\r\n            if(typeof (data[funcName]) === \"function\"){\r\n                return data[funcName].apply(data, args);\r\n            }else{\r\n                ui.logWarn('组件中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         * @event on\r\n         * @param eventType {string} 可监听事件类型如下：<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> eventType </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\"beforeItemSelect\"</td>\r\n                        <td>单个节点选中之前触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemSelectError\"</td>\r\n                        <td>单个节点选中出错触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemSelected\"</td>\r\n                        <td>单个节点选中之后触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeItemUnselect\"</td>\r\n                        <td>单个节点取消选中之前触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemUnselectError\"</td>\r\n                        <td>单个节点取消选中出错触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemUnselected\"</td>\r\n                        <td>单个节点取消选中之后触发</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         * @param func {function} 事件类型触发之后的执行方法\r\n         * @return 组件对象\r\n         * @example \r\n            \r\n            // 组件添加节点出错时被触发\r\n            uiSelectBox.on(\"itemSelectError\", function(e){\r\n                console.log(\"itemSelectError\");\r\n            });\r\n                \r\n         */\r\n        function _on(eventType, func){\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            // console.info(this);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n         * @param func {function} 选填,事件类型触发之后的执行方法,不传则默认取消该类型绑定的全部事件方法\r\n         * @return 组件对象\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiSelectBox.off(\"itemSelectError\");\r\n                \r\n         */\r\n        function _off(eventType, func){\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n        * 设置组件值\r\n        * @method set\r\n        * @param value {String|Object|Number} 选中选项的value属性值,多个数据用\",\"分隔或者数组封装传递\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值\r\n            uiSelectBox.set(\"tianjin,guangzhou\");\r\n                \r\n        */\r\n        function _set(value, isTriggerUnselectEvent){\r\n            return _executeMethod(\"set\", value, isTriggerUnselectEvent);\r\n        }\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n        * @param type {string} 获取的组件值的类型,可选:value/text/json,默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取组件选中的日期字符串\r\n            var value = uiSelectBox.get(\"value\");   // \"beijing,guangzhou\"\r\n                \r\n        */\r\n        function _get(type){\r\n            return _executeMethod(\"get\", type);\r\n        }\r\n\r\n        /**\r\n        * 选中选项\r\n        * @method select\r\n        * @param value {String|Object|Number} 选中选项的value属性值,多个数据用\",\"分隔或者数组封装传递\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值\r\n            uiSelectBox.select(\"beijing\");\r\n                \r\n        */\r\n        function _select(value){\r\n            return _executeMethod(\"select\", value);\r\n        }\r\n\r\n        /**\r\n        * 取消选项选中\r\n        * @method unselect\r\n        * @param value {String|Object|Number} 取消选中选项的value属性值,多个数据用\",\"分隔或者数组封装传递\r\n        * @since 0.0.1\r\n        * @example \r\n            // 取消选中组件值\r\n            uiSelectBox.unselect(\"tianjin\");\r\n                \r\n        */\r\n        function _unselect(value){\r\n            return _executeMethod(\"unselect\", value);\r\n        }\r\n\r\n        /**\r\n        * 全部选项选中\r\n        * @method selectAll\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值\r\n            uiSelectBox.selectAll();\r\n                \r\n        */\r\n        function _selectAll(){\r\n            return _executeMethod(\"selectAll\");\r\n        }\r\n\r\n        /**\r\n        * 全部选项不选中\r\n        * @method unselectAll\r\n        * @since 0.0.1\r\n        * @example \r\n            // 不选中组件值\r\n            uiSelectBox.unselectAll();\r\n                \r\n        */\r\n        function _unselectAll(){\r\n            return _executeMethod(\"unselectAll\");\r\n        }\r\n\r\n        /**\r\n        * 阻止点击弹出下拉框\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 阻止点击弹出下拉框\r\n            uiSelectBox.disabled();\r\n                \r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出下拉框\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 允许点击弹出下拉框\r\n            uiSelectBox.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 刷新下拉数据,以下两种可能会用到这个方法:<br/>\r\n            1、向初始化的SELECT标签中新增选项之后,重新排列下拉选项;<br/>\r\n            2、重新加载数据源:loadUrl/loadData\r\n        * @method reload\r\n        * @param [source] {string/Array} [重新加载下拉数据源,若为空,则重新加载传递参数]\r\n        * @since 0.0.1\r\n        * @example \r\n            html:\r\n            <select>\r\n                <option value=\"option1\">选项1</option>\r\n                <option value=\"option2\">选项2</option>\r\n            </select>\r\n            JS:\r\n            // 添加下拉选项\r\n            $(\"select\").append(\"<option value=\"option3\">选项3</option>\");\r\n            // 刷新组件下拉选项\r\n            uiSelectBox.reload();\r\n                \r\n        */\r\n        function _reload(data){\r\n            return _executeMethod(\"reload\", data);\r\n        }\r\n        \r\n        /**\r\n        * 向初始化的SELECT标签中新增选项之后,重新排列下拉选项(只针对初始化标签是SELECT有效)(不会重新请求数据源)\r\n        * @method refresh\r\n        * @since 0.0.1\r\n        * @example \r\n            html:\r\n            <select>\r\n                <option value=\"option1\">选项1</option>\r\n                <option value=\"option2\">选项2</option>\r\n            </select>\r\n            JS:\r\n            // 添加下拉选项\r\n            $(\"select\").append(\"<option value=\"option3\">选项3</option>\");\r\n            // 刷新组件下拉选项\r\n            uiSelectBox.refresh();\r\n                \r\n        */\r\n        function _refresh(){\r\n            return _executeMethod(\"refresh\");\r\n        }\r\n        \r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiSelectBox.option();   // 返回组件配置对象\r\n                \r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空组件值\r\n            uiSelectBox.empty();\r\n                \r\n        */\r\n        function _empty(isTriggerUnselectEvent){\r\n            return _executeMethod(\"empty\", isTriggerUnselectEvent);\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiSelectBox.destroy();\r\n                \r\n        */\r\n        function _destroy(){\r\n            return _executeMethod(\"destroy\");\r\n        }\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiSelectBox.component();\r\n            console.info(component);\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example\r\n\r\n            // 初始化组件\r\n            uiSelectBox.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n            if(!$.data(document.getElementById(id), _pluginDataName)){\r\n                $('#' + id)[_pluginName](opt);\r\n            }else{\r\n                if(opt && ui.isJson(opt)){\r\n                    return _executeMethod(\"option\", opt);\r\n                }else{\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n        return {\r\n            init: _init,\r\n            on: _on,\r\n            off: _off,\r\n            set: _set,\r\n            get: _get,\r\n            select: _select,\r\n            unselect: _unselect,\r\n            selectAll: _selectAll,\r\n            unselectAll: _unselectAll,\r\n            enabled: _enabled,      // 允许点击弹出下拉框\r\n            disabled: _disabled,    // 阻止点击弹出下拉框\r\n            option: _option,\r\n            reload: _reload,\r\n            refresh: _refresh,\r\n            empty: _empty,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            destroy: _destroy\r\n        }\r\n    }\r\n\r\n    return ui;\r\n})( wui || {}, libs );","/*\r\n * <h3>WUI 标签输入组件</h3>\r\n * @module Components\r\n */\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>标签输入组件</h3>\r\n     * <ol>\r\n     * <li>支持自由输入生成标签块; </li>\r\n     * <li>支持单个标签删除; </li>\r\n     * <li>支持增删事件监听; </li>\r\n     * <li>自定义标签块样式类参数传入; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiTagsinput\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.tagsinput/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/set\"}}{{/crossLink}}: 设置组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/add\"}}{{/crossLink}}: 添加组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/remove\"}}{{/crossLink}}: 移除组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/enabled\"}}{{/crossLink}}: 允许标签栏点击 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/disabled\"}}{{/crossLink}}: 阻止标签栏点击 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagsinput/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class tagsinput\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {Object} [option.value] 初始化完成时,默认选中数据,默认是[]\r\n     *  @param {boolean} [option.isFreeInput] 是否可以自由输入,默认是true\r\n     *  @param {string} option.text 选中值保存的text字段,默认值是\"name\"\r\n     *  @param {string} option.name 选中值保存的name字段,默认值是\"id\" \r\n     *  @param {number} [option.maxNumber] 最多可选个数,默认为false,即不限制     \r\n     *  @param {string} [option.width]   组件宽度,默认\"\"     \r\n     *  @param {string} [option.initHeight]  组件初始化高度,默认\"\"\r\n     *  @param {string} [option.maxHeight]   组件最大高度,默认\"\"\r\n     *  @param {boolean} [option.isAddRemoveLink] 是否添加删除操作,优先级:节点传递的\"isEnableRemove\"属性 > add()/set()方法传递的\"isEnableRemove\" > isAddRemoveLink,默认是true  \r\n     *  @param {boolean} [option.isAllowDuplicates] 是否允许标签数据name参数值重复,默认是false  \r\n     *  @param {string} [option.tagClass] 标签块样式类,默认是\"label label-info\"\r\n     *  @param {number} [option.maxChars] 是每个标签字符限制个数,默认是0,代表不限制 \r\n     *  @param {boolean} [option.isShowAnimate] 当节点存在时,是否动画展示该节点,默认是true \r\n     *  @param {string} [option.ellipsis] 省略符号,当标签个数达到最大字符数时替换多余字符的字符串,默认是\"...\"\r\n     *  @param {Function} [option.onInput] 启用自动输入时,输入框输入触发方法,传递参数element:输入框节点对象;node:输入数据;event:事件对象\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面,任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Choose Box: &lt;input type=\"text\" id=\"tagsId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery,所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiTagsinput = wui.tagsinput( \"tagsId\",{\r\n                \"maxNumber\": 3\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.tagsinput = function(id, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiTagsinput\",\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"tagsinput\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: id\r\n        });\r\n        \r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, id);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n        if(!$(\"#\" + id).exist()){\r\n            ui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + id + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n            return false;\r\n        }\r\n\r\n        function uiTagsinput(element, opt){\r\n            var modalIndex = ui.load();\r\n            // 初始化组件关联属性\r\n            var components = this.initComponentAttributes(id, opt);\r\n            $.extend(true, this, components);\r\n\r\n            // 格式化参数\r\n            this.formatParams();\r\n\r\n            // 渲染组件布局\r\n            this.renderComponent();\r\n\r\n            ui.closeIndex(modalIndex);\r\n        }\r\n\r\n        uiTagsinput.prototype = {\r\n            constructor: uiTagsinput,\r\n            /*\r\n             * 初始化组件基础属性\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            initComponentAttributes: function(id, opt){\r\n\r\n                // 组件默认配置\r\n                var defaultSetting = {\r\n                    // {object} 默认选中数据\r\n                    value: []\r\n                    // {boolean} 是否可以自由输入   \r\n                    , isFreeInput: true\r\n                    // {String} 组件初始化宽度,默认\"\"\r\n                    , width: \"\"    \r\n                    // {String} 组件初始化高度,默认\"\"\r\n                    , initHeight: \"\"    \r\n                    // {String} 组件最大宽度,默认\"\"\r\n                    , maxHeight: \"\"\r\n                    // {string} 非空,节点的value字段\r\n                    , name: 'id'\r\n                    // {string} 非空,节点的text字段\r\n                    , text: 'name'\r\n                    // {number} 最多可选个数,false代表无限制\r\n                    , maxNumber: false\r\n                    // {Boolean} 是否添加删除操作\r\n                    , isAddRemoveLink: true     \r\n                    // {boolean} 是否允许标签数据name参数值重复\r\n                    , isAllowDuplicates: false\r\n                    // {string} 标签块样式类\r\n                    , tagClass: 'label wui-bg-primary'  \r\n                    // {number} 每个标签字符限制个数,0代表不限制\r\n                    , maxChars: 0           \r\n                    // {string} 省略符号,当标签个数达到最大字符数时替换多余字符的字符串\r\n                    , ellipsis: \"...\"\r\n                    // {Boolean} 当节点存在时,是否动画展示该节点,默认是true\r\n                    , isShowAnimate: true\r\n                    // {string} 提示文本\r\n                    , placeholderText : \"\"\r\n                    // {string} 没有选中节点时显示内容\r\n                    , noneItemText : ui.language.tagsinput.noneItem  \r\n                    // {function/Boolean} 启用自动输入时,输入框输入触发方法,传递参数element:输入框节点对象;node:输入数据;event:事件对象\r\n                    , onInput: ui.CONSTANTS.EMPTYFUNC\r\n                    // {function/Boolean} 启用自动输入时,按\"Enter\"键生成标签,默认是true,设置为false时禁用,可自定义方法,传递参数element:输入框节点对象;node:输入数据;event:事件对象\r\n                    , onEnter: true\r\n                }\r\n\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams($(\"#\" + id), defaultSetting);\r\n\r\n                // 设置组件配置参数\r\n                var params = $.extend(true, {}, defaultSetting, opt, AttributeParams);\r\n\r\n                var component = {\r\n                    // 组件名\r\n                    pluginName: _widgetName,\r\n\r\n                    // 组件初始化元素id\r\n                    id: id,\r\n\r\n                    // 组件初始化元素name属性\r\n                    name: \"\",  \r\n\r\n                    // 初始化节点元素\r\n                    element: document.getElementById(id),\r\n\r\n                    // 初始化节点jQuery对象\r\n                    $element: $(\"#\" + id),\r\n\r\n                    // 组件默认配置\r\n                    defaults: defaultSetting,\r\n\r\n                    // 初始化元素DOM结构\r\n                    initDom: $(\"#\" + id).prop(\"outerHTML\"),\r\n\r\n                    // 组件初始化元素HTML\r\n                    dom: \"\",\r\n\r\n                    // 组件状态值:\"init\"(初始化)/\"loading\"(组件加载中)/\"loaded\"(加载完毕)/\"destroy\"(销毁)/\"error\"(加载过程出错)\r\n                    status: \"init\",\r\n\r\n                    // 组件是否启用状态:可以通过disabled()和enabled()改变状态\r\n                    enable: true,\r\n\r\n                    // {Boolean} 是否可关闭\r\n                    isClosable: params.isAddRemoveLink,\r\n\r\n                    // 组件所有子节点集合\r\n                    nodes: [],\r\n\r\n                    //自定义事件,用于监听插件的用户交互\r\n                    handlers: {},\r\n\r\n                    // 组件加载数据\r\n                    // data: null,\r\n\r\n                    // // 组件结果对象集\r\n                    // itemsArray: [],\r\n\r\n                    // // 组件结果key字段集\r\n                    itemsName: [],\r\n\r\n                    // // 组件结果title字段集\r\n                    // itemsText: [],\r\n\r\n                    // 组件参数配置\r\n                    opt: params,\r\n\r\n                    // 初始化对象页面结构模板\r\n                    // 视图容器模板\r\n                    viewBoxTmp: '<div class=\"tag-container wui-input\" wui-attr=\"view\"></div>',\r\n\r\n                    // 输入框模板\r\n                    inputBoxTmp: '<input type=\"text\" wui-widget-hidden=\"true\" wui-attr=\"input\"/>',\r\n\r\n                    // 下拉视图中无数据时展示模板\r\n                    tipTmp: '<span class=\"placeholder\">{0}</span>',\r\n                    \r\n                    // 初始化对象页面结构\r\n                    // 组件最外层容器([wui-attr=\"container\"]): $element + $viewBox\r\n                    $container: null,\r\n                    // 组件可视框([wui-attr=\"view\"]):$tags + $input\r\n                    $viewBox: null,\r\n                    // 组件输入框([wui-attr=\"input\"])\r\n                    $input: null,    \r\n                    // 保存校验出错节点\r\n                    // errorElement: null,\r\n\r\n                    // 自定义拓展属性\r\n                    ext: {}\r\n                }\r\n\r\n                return component;\r\n            },\r\n            resize: function(){\r\n                this.width(this.opt.width);\r\n                this.height(this.opt.initHeight, this.opt.maxHeight);\r\n            },\r\n            width: function(containerWidth){\r\n\r\n                if(containerWidth){\r\n                    this.$container.width(containerWidth);\r\n                }\r\n                \r\n            },\r\n            height: function(containerHeight, containerMaxHeight){\r\n\r\n                if(containerHeight){\r\n                    this.$viewBox.css({\r\n                        \"height\": containerHeight\r\n                    });\r\n                }\r\n\r\n                if(containerMaxHeight){\r\n                    this.$viewBox.css({\r\n                        \"maxHeight\": containerMaxHeight\r\n                    });\r\n                }\r\n                ui.scroll(this.$viewBox)\r\n            },\r\n            /*\r\n             * 格式化参数\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-11-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            formatParams: function(){\r\n                var that = this;\r\n                this.opt.maxNumber = ui.formatMaxNumber(this.opt.maxNumber);\r\n                this.opt.maxChars = ui.formatMaxChars(this.opt.maxChars);\r\n            },\r\n            /*\r\n             * 渲染组件布局\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-26\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderComponent: function(){\r\n                var that = this, opt = this.opt;\r\n                // 改变组件状态为\"loading\"\r\n                this.status = \"loading\";\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!(this.$element.attr('name'))){\r\n                    this.$element.attr('name', that.id);\r\n                }\r\n                this.name = this.$element.attr('name');\r\n\r\n                if(!(this.$element.parent().hasClass('wui-tagsinput'))){\r\n                    var parentDiv = '<div class=\"wui-tagsinput\"></div>';\r\n                    this.$element.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n\r\n                // 组件最外层容器(.wui-selectBox): $element + $viewBox\r\n                this.$container = this.$element.parent();\r\n                this.$container.attr(\"wui-attr\", \"container\");\r\n                // 视图容器模板\r\n                this.$viewBox = $(this.viewBoxTmp);   \r\n                \r\n                // 创建一个文档碎片\r\n                // this.fragment = document.createDocumentFragment();\r\n\r\n                this.$element.after(this.$viewBox);\r\n\r\n                this.$element.hide();\r\n\r\n                this.renderInputBox();\r\n\r\n                this.resize();\r\n                \r\n                if(!ui.isEmptyType(this.opt.value)){\r\n                    this.addNodes(this.opt.value);\r\n                }\r\n                // this.load();\r\n\r\n                this.$element.attr(\"ui-type\", this.pluginName);\r\n\r\n                this.dom = this.$container.prop(\"outerHTML\");\r\n\r\n                this.trigger(\"init\", {\r\n                    type:'init'\r\n                });\r\n            },\r\n            /*\r\n             * 更新节点之后执行\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-08\r\n             * @return   {[type]}   [description]\r\n             */\r\n            updatedNodes: function(){\r\n                this.$element.val(this.itemsName.join(\",\"));\r\n\r\n                var elem = this.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(this.$element.rules())){\r\n                    ui.validElement(this.$element);\r\n                }\r\n            },\r\n            /*\r\n             * 创建新节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   item       [description]\r\n             * @param    {[type]}   parentNode [description]\r\n             * @return   {[type]}              [description]\r\n             */\r\n            createNode: function(item, isEnableRemove){\r\n                return new TagNode(item, this.opt, this, isEnableRemove, ui);\r\n            },\r\n            /*\r\n             * 添加单个节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @param    {[type]}   item [description]\r\n             */\r\n            addNode: function(item, isTriggerSelectedEvent, isEnableRemove){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\",\r\n                        \"0\": \"添加的数据不能为空\",\r\n                        \"1\": \"name属性值没设置,无法添加object类型数据\",\r\n                        \"2\": \"标签数据\" + name + \"属性值重复\",\r\n                        \"3\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"5\": \"只能添加类型为object、string的数据\"\r\n                    };\r\n\r\n                var key = item;\r\n\r\n                if(ui.isUndefined(isTriggerSelectedEvent)){\r\n                    isTriggerSelectedEvent = true;\r\n                }\r\n\r\n                // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                if (typeof(that.opt.maxNumber) === \"number\" && that.opt.maxNumber > 0 && (that.nodes.length >= that.opt.maxNumber)){\r\n\r\n                    that.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: item, \r\n                        code: -1,\r\n                        message: codes[\"-1\"]\r\n                    });\r\n                    return false;\r\n                }\r\n\r\n                if(ui.isJson(item)){\r\n                    key = item[name];\r\n                }\r\n\r\n                if(ui.isEmptyType(key)){\r\n                    that.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: item, \r\n                        code: 3, \r\n                        message: codes[\"3\"].replace('{0}', JSON.stringify(item))\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(!that.opt.isAllowDuplicates && that.itemsName.indexOf(key) > -1){\r\n                    if(that.opt.isShowAnimate){\r\n                        this.$viewBox.children('span').eq(that.itemsName.indexOf(key)).hide().fadeIn(); // 标签块已有时的显示动画\r\n                    }\r\n                    that.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: item, \r\n                        code: 2, \r\n                        message: codes[\"2\"]\r\n                    })\r\n                    return true;\r\n                }\r\n\r\n                if(isTriggerSelectedEvent){\r\n                    var isContinue = that.trigger(\"beforeItemAdd\", {\r\n                        type:'beforeItemAdd',\r\n                        item: item,\r\n                        items: that.get(\"json\"),\r\n                        nodes: that.nodes\r\n                    })\r\n\r\n                    if(isContinue === false){\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var newNode = that.createNode(item, isEnableRemove);\r\n                that.nodes.push(newNode);\r\n\r\n                // 更新节点之后执行\r\n                that.updatedNodes();\r\n\r\n                if(isTriggerSelectedEvent){\r\n                    that.trigger(\"itemAdded\", {\r\n                        type:'itemAdded',\r\n                        item: item,\r\n                        items: that.get(\"json\"),\r\n                        nodes: that.nodes,\r\n                        node: newNode\r\n                    })\r\n                }\r\n                    \r\n\r\n                return true;\r\n            },\r\n            /*\r\n             * 添加多个节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @param    {[type]}   data [description]\r\n             */\r\n            addNodes: function(data, isTriggerSelectedEvent, isEnableRemove){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\",\r\n                        \"0\": \"添加的数据不能为空\",\r\n                        \"1\": \"name属性值没设置,无法添加object类型数据\",\r\n                        \"2\": \"标签数据\" + name + \"属性值重复\",\r\n                        \"3\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"5\": \"只能添加类型为object、string的数据\"\r\n                    };\r\n                // console.error(data)\r\n                // 不是空数据\r\n                if(!ui.isEmptyType(data)){\r\n                    if(ui.isArray(data)){\r\n                        $.each(data, function(i, item){\r\n                            return that.addNode(item, isTriggerSelectedEvent, isEnableRemove);\r\n                        })\r\n                        return true;\r\n                    }else if(ui.isJson(data)){\r\n                        return that.addNode(data, isTriggerSelectedEvent, isEnableRemove);\r\n                    }else if(ui.isString(data)){\r\n                        $.each(data.split(\",\"), function(index, key){\r\n                            return that.addNode(key, isTriggerSelectedEvent, isEnableRemove);\r\n                        })\r\n\r\n                        return true;\r\n                    }else{\r\n                        this.trigger('itemAddError', {\r\n                            type:'itemAddError',\r\n                            item: data, \r\n                            code: 5, \r\n                            message: codes[\"5\"]\r\n                        })\r\n                    }\r\n                    return false;\r\n                }else{\r\n                    this.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: data, \r\n                        code: 0, \r\n                        message: codes[\"0\"]\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            removeNode: function(item, isTriggerUnselectedEvent){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"0\": \"移除的数据不能为空\",\r\n                        \"1\": name + \"属性值没设置,无法移除object类型数据\",\r\n                        \"2\": \"组件中不存在{0}节点\",\r\n                        \"3\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"5\": \"只能根据类型为object、string的数据来移除节点\",\r\n                        \"6\": \"移除的节点不能为空\"\r\n                    };\r\n\r\n                var key = item;\r\n\r\n                if(ui.isUndefined(isTriggerUnselectedEvent)){\r\n                    isTriggerUnselectedEvent = true;\r\n                }\r\n\r\n                if(ui.isEmptyType(item)){\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 0, \r\n                        message: codes[\"0\"]\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(ui.isJson(item)){\r\n                    if(ui.isUndefined(item[this.opt.name])){\r\n                        that.trigger(\"itemRemoveError\", {\r\n                            type:'itemRemoveError',\r\n                            item: item,\r\n                            code: 1, \r\n                            message: codes[\"1\"]\r\n                        });\r\n\r\n                        return true;\r\n                    }\r\n\r\n                    key = item[name];\r\n                }\r\n\r\n                if(ui.isEmptyType(key)){\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 3, \r\n                        message: codes[\"3\"].replace('{0}', JSON.stringify(item))\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(typeof(key) !== \"string\"){\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 5, \r\n                        message: codes[\"5\"]\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(that.itemsName.indexOf(key) > -1){\r\n\r\n                    var node = null;\r\n                    if(this.opt.isAllowDuplicates){\r\n                        $.each(that.nodes, function(index, theNode){\r\n\r\n                            if(theNode.data == item){\r\n                                node = theNode;\r\n                            }\r\n                        })\r\n                    }else{\r\n                        var index = that.itemsName.indexOf(key);\r\n                        node = that.nodes[index];\r\n                    }\r\n                    \r\n                    if(node){\r\n                        if(isTriggerUnselectedEvent){\r\n                            var isContinue = that.trigger(\"beforeItemRemove\", {\r\n                                type:'beforeItemRemove',\r\n                                item: item,\r\n                                items: that.get(\"json\"),\r\n                                nodes: that.nodes,\r\n                                node: node\r\n                            })\r\n\r\n                            if(isContinue === false){\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        node.remove();\r\n                        \r\n                        // 更新节点之后执行\r\n                        that.updatedNodes();\r\n\r\n                        if(isTriggerUnselectedEvent){\r\n                            that.trigger(\"itemRemoved\", {\r\n                                type:'itemRemoved',\r\n                                item: item,\r\n                                items: this.get(\"json\"),\r\n                                nodes: that.nodes,\r\n                                node: node\r\n                            })\r\n                        }\r\n                    }\r\n                        \r\n                        \r\n                    \r\n                }else{\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 2, \r\n                        message: codes[\"2\"].replace('{0}', JSON.stringify(item))\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            removeNodes: function(data, isTriggerUnselectedEvent){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"0\": \"移除的数据不能为空\",\r\n                        \"1\": name + \"属性值没设置,无法移除object类型数据\",\r\n                        \"2\": \"传入数据{0}不存在\",\r\n                        \"5\": \"只能根据类型为object、string的数据来移除节点\",\r\n                        \"6\": \"移除的节点不能为空\"\r\n                    };\r\n\r\n                // 不是空数据\r\n                if(!ui.isEmptyType(data)){\r\n                    if(ui.isArray(data)){\r\n                        $.each(data, function(i, item){\r\n                            return that.removeNode(item, isTriggerUnselectedEvent);\r\n                        })\r\n                        return true;\r\n                    }else if(ui.isJson(data)){\r\n                        return that.removeNode(data, isTriggerUnselectedEvent);\r\n                    }else if(ui.isString(data)){\r\n                        $.each(data.split(\",\"), function(index, key){\r\n                            return that.removeNode(key, isTriggerUnselectedEvent);\r\n                        })\r\n\r\n                        return true;\r\n                    }else{\r\n                        this.trigger('itemRemoveError', {\r\n                            type:'itemRemoveError',\r\n                            item: data, \r\n                            code: 5, \r\n                            message: codes[\"5\"]\r\n                        })\r\n                    }\r\n                    return false;\r\n                }else{\r\n                    this.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: data, \r\n                        code: 6, \r\n                        message: codes[\"6\"]\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            /*\r\n             * 渲染输入框\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderInputBox: function(){\r\n                var that = this, opt = this.opt;\r\n\r\n                if(this.opt.isFreeInput && !this.$input){\r\n                    // 组件输入框(input)\r\n                    this.$input = $(this.inputBoxTmp).appendTo(this.$viewBox);\r\n                    ui.input(this.$input, 40);\r\n\r\n                    this.$input.on(\"click\", function(event){\r\n                        ui.stopPropagation(event);  // 阻止事件冒泡\r\n                    }).keypress(function(event){\r\n                        var keynum = window.event ? event.keyCode : event.which;\r\n                        if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                            ui.stopPropagation(event);  // 阻止事件冒泡\r\n                            ui.preventDefault(event);\r\n                        }\r\n                    }).keyup(function(event){\r\n                        // ui.logMessage(\"您按了enter键\", \"wui.tagsinput\", true);\r\n                        var inputString = $(this).val();\r\n                        var keynum = window.event ? event.keyCode : event.which;\r\n                        if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                            if(opt.onEnter === true){\r\n                                that.addNode(inputString);\r\n                                $(this).val(''); // 输入值清空\r\n                            }else if(opt.onEnter && typeof(opt.onEnter) === \"function\"){\r\n                                opt.onEnter(this, event, inputString);\r\n                            }\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.DELETE || keynum == ui.CONSTANTS.KEYS.BACKSPACE || keynum == ui.CONSTANTS.KEYS.CLEAR){\r\n                            if(inputString == \"\"){\r\n                                // 找到最后一个可删除的节点\r\n                                for(var i = (that.nodes.length - 1); i >= 0; i--){\r\n                                    var node = that.nodes[i];\r\n\r\n                                    if(node.isEnable()){\r\n                                        if(node.isActive()){\r\n                                            node.remove();\r\n                                        }else{\r\n                                            node.setActive(true)\r\n                                        }\r\n\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                // var $lastNode = that.nodes.length > 0 ? that.nodes[that.nodes.length - 1] : null;\r\n                                // if($lastNode){\r\n                                //     if($lastNode.isActive()){\r\n                                //         $lastNode.remove();\r\n                                //     }else{\r\n                                //         $lastNode.setActive(true)\r\n                                //     }\r\n                                // }\r\n                            }\r\n                        }\r\n                    })\r\n                    // 输入事件\r\n                    this.$input.on(\"input propertychange\", function(event){\r\n                        ui.stopPropagation(event);  // 阻止事件冒泡\r\n                        var inputString = $(this).val(), isStop = false;\r\n                        if(opt.onInput && typeof(opt.onInput) === \"function\"){\r\n                            isStop = opt.onInput(this, event);\r\n                        }\r\n\r\n                        if(isStop === false){\r\n                            return;\r\n                        }\r\n                        if(inputString != \"\"){\r\n                            var $lastNode = that.nodes.length > 0 ? that.nodes[that.nodes.length - 1] : null;\r\n                            if($lastNode){\r\n                                if(!$lastNode.isActive()){\r\n                                    $lastNode.setActive(false)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    \r\n                    that.$viewBox.off(\"click\").on(\"click\", function(){\r\n                        that.$input.focus();\r\n                    })\r\n                }else if(!this.opt.isFreeInput && this.$input){\r\n                    this.$input.remove();\r\n                    this.$input = null;\r\n                }  \r\n            },\r\n            /*\r\n             * 设置所有节点是否启用\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-11\r\n             * @param    {Boolean}  isEnable 修改后的状态\r\n             * @param    {Boolean}  isAll    是否包含初始化时禁用的节点\r\n             */\r\n            setEnable: function(isEnable, isAll){\r\n                var that = this;\r\n\r\n                this.enable = isEnable;\r\n\r\n                $.each(that.nodes, function(i, node){\r\n                    if(!isAll && node.item.isEnableRemove === false){\r\n                        return true;\r\n                    }\r\n                    node.setEnable(isEnable);\r\n                })\r\n\r\n                // if(isEnable){\r\n                //     that.$input ? that.$input.removeAttr(\"disabled\") : null;\r\n                //     that.$viewBox.removeClass(\"disabled\");\r\n                // }else{\r\n                //     that.$input ? that.$input.attr(\"disabled\", true) : null;\r\n                //     that.$viewBox.addClass(\"disabled\");\r\n                // }\r\n            },\r\n            /*\r\n             * 设置标签\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @param    {[type]}   data [description]\r\n             */\r\n            set: function(data, isTriggerSelectedEvent, isEnableRemove){\r\n                if(this.nodes.length > 0){\r\n                    this.empty();\r\n                }\r\n                \r\n                this.addNodes(data, isTriggerSelectedEvent, isEnableRemove);\r\n            },\r\n            get: function(type){\r\n                type = type || \"json\";\r\n                if(type.toLowerCase() == \"value\"){\r\n                    return this.itemsName;\r\n                }else if(type.toLowerCase() == \"json\"){\r\n                    var itemsArray = [];\r\n                    $.each(this.nodes, function(i, node){\r\n                        itemsArray.push(node.item)\r\n                    })\r\n                    return itemsArray;\r\n                }else if(type.toLowerCase() == \"text\"){\r\n                    var itemsText = [];\r\n                    $.each(this.nodes, function(i, node){\r\n                        itemsText.push(node.title)\r\n                    })\r\n                    return itemsText;\r\n                }else if(type.toLowerCase() == \"data\"){\r\n                    var itemsText = [];\r\n                    $.each(this.nodes, function(i, node){\r\n                        itemsArray.push(node.data)\r\n                    })\r\n                    return itemsText;\r\n                }else{\r\n                    return this.nodes;\r\n                }\r\n            },\r\n            add: function(data, isTriggerSelectedEvent, isEnableRemove){\r\n                this.addNodes(data, isTriggerSelectedEvent, isEnableRemove);\r\n            },\r\n            remove: function(data, isTriggerUnselectedEvent){\r\n                this.removeNodes(data, isTriggerUnselectedEvent);\r\n            },\r\n            disabled: function(isAll){\r\n                this.setEnable(false, isAll);\r\n\r\n                this.$input ? this.$input.attr(\"disabled\", true) : null;\r\n                this.$viewBox.addClass(\"disabled\");\r\n            },\r\n            enabled: function(isAll){\r\n                this.setEnable(true, isAll);\r\n\r\n                this.$input ? this.$input.removeAttr(\"disabled\") : null;\r\n                this.$viewBox.removeClass(\"disabled\");\r\n            },\r\n            readonly: function(isAll){\r\n                this.setEnable(false, isAll);\r\n\r\n                this.$input ? this.$input.attr(\"readonly\", true) : null;\r\n                this.$viewBox.addClass(\"readonly\");\r\n            },\r\n            readwrite: function(isAll){\r\n                this.setEnable(true, isAll);\r\n\r\n                this.$input ? this.$input.removeAttr(\"readonly\") : null;\r\n                this.$viewBox.removeClass(\"readonly\");\r\n            },\r\n            _refresh: function(params){\r\n                var that = this, isResetHeight = false, isClear = false, isResetText = false;\r\n\r\n                // isAllowDuplicates: {boolean} 是否允许标签数据name参数值重复\r\n                if(params.isAllowDuplicates != undefined && this.opt.isAllowDuplicates != params.isAllowDuplicates){\r\n                    this.opt.isAllowDuplicates = params.isAllowDuplicates;\r\n                    if(!params.isAllowDuplicates){\r\n                        isClear = true;\r\n                    }\r\n                }\r\n                // {String} 组件初始化宽度\r\n                if(params.width != undefined && this.opt.width != params.width){\r\n                    this.opt.width = params.width;\r\n                    this.width(this.opt.width);\r\n                }\r\n                // {String} 组件初始化高度\r\n                if(params.initHeight != undefined && this.opt.initHeight != params.initHeight){\r\n                    this.opt.initHeight = params.initHeight;\r\n                    isResetHeight = true;\r\n                }\r\n                // {String} 组件最大宽度\r\n                if(params.maxHeight != undefined && this.opt.maxHeight != params.maxHeight){\r\n                    this.opt.maxHeight = params.maxHeight;\r\n                    isResetHeight = true;\r\n                }\r\n\r\n                // 重置高度\r\n                if(isResetHeight){\r\n                    this.height(this.opt.initHeight, this.opt.maxHeight);\r\n                }\r\n                \r\n                // isAddRemoveLink: {boolean} 是否添加删除操作\r\n                if(params.isAddRemoveLink != undefined && this.opt.isAddRemoveLink != params.isAddRemoveLink){\r\n                    this.opt.isAddRemoveLink = params.isAddRemoveLink;\r\n                    this.setEnable(this.opt.isAddRemoveLink);\r\n                }\r\n\r\n                // isShowAnimate: {boolean} 当节点存在时,是否动画展示该节点\r\n                if(params.isShowAnimate != undefined && this.opt.isShowAnimate != params.isShowAnimate){\r\n                    this.opt.isShowAnimate = params.isShowAnimate;\r\n                }\r\n\r\n                // text: {string}  选中值保存的text字段\r\n                if(params.text != undefined && this.opt.text != params.text){\r\n                    isClear = true;\r\n                    this.opt.text = params.text;\r\n                }\r\n                // name: {string}  选中值保存的name字段\r\n                if(params.name != undefined && this.opt.name != params.name){\r\n                    isClear = true;\r\n                    this.opt.name = params.name;\r\n                }\r\n                // 清空节点\r\n                if(isClear){\r\n                    this.empty();\r\n                }\r\n\r\n                // tagClass: {string} 标签块样式类\r\n                if(params.tagClass != undefined && this.opt.tagClass != params.tagClass){\r\n                    if(this.opt.tagClass != \"\"){\r\n                        $.each(that.nodes, function(i, node){\r\n                            node.node.removeClass(that.opt.tagClass).addClass(params.tagClass);\r\n                        })\r\n                    }\r\n\r\n                    this.opt.tagClass = params.tagClass;\r\n                }\r\n\r\n                // maxNumber: {number} 最多可选节点个数,false代表不限制\r\n                if(params.maxNumber != undefined && this.opt.maxNumber !== ui.formatMaxNumber(params.maxNumber)){\r\n                    var maxNumber = ui.formatMaxNumber(params.maxNumber);\r\n                    this.opt.maxNumber = maxNumber;\r\n                    if(!!maxNumber){\r\n                        // var len = that.nodes.length;\r\n                        while(that.nodes.length > maxNumber){\r\n                            var lastNode = that.nodes[that.nodes.length - 1];\r\n                            lastNode.remove();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // ellipsis: {string} 是省略符号,当标签个数达到最大字符数时替换多余字符的字符串\r\n                if(params.ellipsis != undefined && this.opt.ellipsis != params.ellipsis){\r\n                    this.opt.ellipsis = params.ellipsis;\r\n                    isResetText = true;\r\n                }\r\n\r\n                // maxChars: {number} 每个标签字符限制个数,0代表不限制\r\n                if(params.maxChars != undefined && this.opt.maxChars != ui.formatMaxChars(params.maxChars)){\r\n                    var maxChars = ui.formatMaxChars(params.maxChars);\r\n                    this.opt.maxChars = maxChars;\r\n                    isResetText = true;\r\n                }\r\n\r\n                // 更新文本值\r\n                if(!isClear && isResetText){\r\n                    $.each(that.nodes, function(i, node){\r\n                        node.renderTitle();\r\n                    })\r\n                }\r\n\r\n                // isFreeInput: {boolean} 是否可以自由输入\r\n                if(params.isFreeInput != undefined && this.opt.isFreeInput != params.isFreeInput){\r\n                    this.opt.isFreeInput = params.isFreeInput;\r\n\r\n                    that.renderInputBox();\r\n                }\r\n                return true;\r\n            },\r\n            option: function(args){\r\n                var that = this;\r\n                \r\n                if(args){\r\n                    if(typeof args === \"object\"){\r\n                        this._refresh(args);\r\n                    }else if(typeof args === \"string\"){\r\n                        if(args === \"getDefOpt\"){\r\n                            return that.defaults;\r\n                        }else{\r\n                            return that.opt[args];\r\n                        }\r\n                    }\r\n                        \r\n                }else{\r\n                    return this.opt;\r\n                }\r\n            },\r\n            empty: function(isTriggerUnselectEvent){\r\n                var that = this;\r\n                if(isTriggerUnselectEvent === undefined){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n\r\n                if(isTriggerUnselectEvent){\r\n                    while(that.nodes.length > 0){\r\n                        var firstNode = that.nodes[0];\r\n                        var data = firstNode.data;\r\n                        firstNode.remove();\r\n\r\n\r\n                        that.trigger(\"itemRemoved\", {\r\n                            type:'itemRemoved',\r\n                            item: data,\r\n                            items: that.get(\"json\"),\r\n                            nodes: that.nodes\r\n                        })\r\n                    }\r\n                }else{\r\n                    while(that.nodes.length > 0){\r\n                        var firstNode = that.nodes[0];\r\n                        firstNode.remove();\r\n                    }\r\n                }\r\n\r\n                that.trigger(\"empty\", {\r\n                    type:'empty',\r\n                    component: that\r\n                });\r\n            },\r\n            destroy: function(){\r\n                this.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.$container.replaceWith(this.initDom);\r\n\r\n                // 改变组件状态为\"destroy\"\r\n                this.status = \"destroy\";\r\n\r\n                return this;\r\n            },\r\n            /*\r\n             * 触发方法\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   method [description]\r\n             * @param    {[type]}   params [description]\r\n             * @return   {[type]}          [description]\r\n             */\r\n            trigger: function(method, params){\r\n                var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n                // 将方法名首字母变大写: 如init -> Init\r\n                var method2 = method.substring(0,1).toUpperCase() + method.substring(1);\r\n\r\n                if( this.opt[method] && typeof(this.opt[method]) === \"function\" ){\r\n\r\n                    return this.opt[method].apply(this, args);\r\n\r\n                }\r\n\r\n                if( this.opt[\"on\" + method2] && typeof(this.opt[\"on\" + method2]) === \"function\" ){\r\n\r\n                    return this.opt[\"on\" + method2].apply(this, args);\r\n\r\n                }\r\n\r\n                if( this.handlers[method] instanceof Array ){\r\n                    var event = {\r\n                        type: method,\r\n                        target: this,\r\n                        srcElement: this.element\r\n                    };\r\n                    \r\n                    $.extend(true, event, params);\r\n                    var handlers = this.handlers[method];\r\n                    for(var i = 0, len = handlers.length; i < len; i++) {\r\n                        var returnValue = handlers[i](event);\r\n                        if(!ui.isUndefined(returnValue)){\r\n                            return returnValue;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 获取内部组件对象\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            component: function(){\r\n                return this;\r\n            },\r\n            /*\r\n             * 组件绑定监听事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   type    [description]\r\n             * @param    {[type]}   handler [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            on: function(type, handler){\r\n                if(typeof this.handlers[type] === 'undefined') {\r\n                    this.handlers[type] = [];\r\n                }\r\n                this.handlers[type].push(handler);\r\n\r\n                return this;\r\n            },\r\n            /*\r\n             * 组件取消绑定监听事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   type    [description]\r\n             * @param    {[type]}   handler [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            off: function(type, handler){\r\n                if(type){\r\n                    if(this.handlers[type] instanceof Array){\r\n                        var currentHandlers = this.handlers[type];\r\n                        if(handler && currentHandlers.indexOf(handler) > -1){\r\n                            var index = currentHandlers.indexOf(handler);\r\n                            this.handlers[type].splice(index, 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            }\r\n        }\r\n\r\n\t\t\r\n\t\t\t// \"beforeItemAdd\"：单个节点添加之前触发\r\n\t\t\t// \"itemAddError\"：单个节点添加出错时触发\r\n\t\t\t// \"itemAdded\"：单个节点添加成功之后触发\r\n\t\t\t// \"beforeItemRemove\"：单个节点移除之前触发\r\n\t\t\t// \"itemRemoveError\"：单个节点移除出错时触发\r\n\t\t\t// \"itemRemoved\"：单个节点移除成功之后触发\r\n\t\t// var _widgetEventType = [\"beforeItemAdd\", \"itemAddError\", \"itemAdded\", \"beforeItemRemove\", \"itemRemoveError\", \"itemRemoved\"];\t// wui组件监听事件类型\r\n\r\n\t\t$.fn[_pluginName] = function(param1){\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(document.getElementById(id), _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(document.getElementById(id), _pluginDataName, new uiTagsinput(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params){\r\n\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            if(!data){\r\n                ui.logError(\"组件未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n            if(typeof (data[funcName]) === \"function\"){\r\n                return data[funcName].apply(data, args);\r\n            }else{\r\n                ui.logWarn('组件中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         *  @event on\r\n         *  @param eventType {string} 可监听事件类型如下：<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> eventType </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"beforeItemAdd\" </td>\r\n                        <td> 单个节点添加之前触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemAddError\"</td>\r\n                        <td> 单个节点添加出错时触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemAdded\"</td>\r\n                        <td> 单个节点添加成功之后触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeItemRemove\"</td>\r\n                        <td> 单个节点移除之前触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemRemoveError\"</td>\r\n                        <td> 单个节点移除出错时触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemRemoved\"</td>\r\n                        <td> 单个节点移除成功之后触发 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         *  @param func {function} 事件类型触发之后的执行方法\r\n         *  @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 绑定组件事件:单个节点添加出错时触发\r\nuiTagsinput.on(\"itemAddError\", function(event){\r\n    wui.warnNotice(event.message)\r\n});</code></pre>\r\n                \r\n         */\r\n        function _on(eventType, func){\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可取消监听事件类型同\"on\"方法的eventType参数\r\n         * @param [func] {function} 事件类型触发之后的执行方法,不传则默认取消该类型绑定的全部事件方法\r\n         * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 取消绑定组件事件\r\nuiTagsinput.off(\"itemAddError\");</code></pre>\r\n                \r\n         */\r\n        function _off(eventType, func){\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /*\r\n        * 获取组件剩余可添加标签个数,若不限制,则返回false\r\n        * @method getMaxNumber\r\n        * @since 0.0.1\r\n        * @return {Number/Boolean} 返回组件剩余可添加标签个数,若不限制,则返回false\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 取消绑定组件事件\r\nuiTagsinput.getMaxNumber();</code></pre>\r\n                \r\n        */\r\n        function _getMaxNumber(){\r\n            return _executeMethod(\"getMaxNumber\");\r\n        }\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n\t\t* @param type {string} 获取的组件值的类型,可选:value/text/json,默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件值\r\nvar value = uiTagsinput.get(\"value\");   // \"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\"</code></pre>\r\n                \r\n        */\r\n        function _get(type){\r\n            return _executeMethod(\"get\", type);\r\n        }\r\n\r\n        /**\r\n        * 设置组件值\r\n        * @method set\r\n        * @param data {Object/String} 设置的组件数据,可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> value值和text值默认一致(多个可以用数组表示或者用\",\"分隔开) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> Object </td>\r\n\t\t\t\t\t\t<td> 必须存在配置参数name和配置参数text的参数值对应的键值对,且此值作为保存的JSON对象,比如：配置参数中{\"name\":\"id\",\"text\":\"title\"},那传入键值对必须包含\"id\"、\"title\"的键值对 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @param isTriggerSelectedEvent {Boolean} 是否触发itemSelected监听事件,默认是true\r\n        * @param isEnableRemove {Boolean} 是否标签添加删除链接,默认是和初始化的\"isAddRemoveLink\"参数一致\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件值\r\nuiTagsinput.set({\"id\":\"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\",\"name\":\"李文\",\"sex\":\"男\",\"age\":\"25\",\"email\":\"15875354693@163.com\"});</code></pre> \r\n      \r\n        */\r\n        function _set(data, isTriggerSelectedEvent, isEnableRemove){\r\n            return _executeMethod(\"set\", data, isTriggerSelectedEvent, isEnableRemove);\r\n        }\r\n\r\n        /**\r\n        * 添加组件值\r\n        * @method add\r\n        * @param data {Object/String} 添加的组件数据,可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> value值和text值默认一致(多个可以用数组表示或者用\",\"分隔开) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> Object </td>\r\n\t\t\t\t\t\t<td> 必须存在配置参数name和配置参数text的参数值对应的键值对,且此值作为保存的JSON对象,比如：配置参数中{\"name\":\"id\",\"text\":\"title\"},那传入键值对必须包含\"id\"、\"title\"的键值对 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @param isTriggerSelectedEvent {Boolean} 是否触发itemSelected监听事件,默认是true\r\n        * @param isEnableRemove {Boolean} 是否标签添加删除链接,默认是和初始化的\"isAddRemoveLink\"参数一致\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 添加组件值\r\nuiTagsinput.add({\"id\":\"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\",\"name\":\"李文\",\"sex\":\"男\",\"age\":\"25\",\"email\":\"15875354693@163.com\"});</code></pre> \r\n       \r\n        */\r\n        function _add(data, isTriggerSelectedEvent, isEnableRemove){\r\n            return _executeMethod(\"add\", data, isTriggerSelectedEvent, isEnableRemove);\r\n        }\r\n\r\n        /**\r\n        * 移除组件节点\r\n        * @method remove\r\n        * @param data {Object/String} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 移除组件值的name参数对应的值集合(多个值用数组表示或者用\",\"分隔开) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> Object </td>\r\n\t\t\t\t\t\t<td> 移除组件值,必须存在name参数和text参数对应的键值对(不建议使用,但是存在多个重复name值时,可采用此参数),(多个值用数组表示) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @param isTriggerUnselectedEvent {Boolean} 是否触发itemUnselected监听事件,默认是true\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 移除组件节点和值\r\nuiTagsinput.remove(\"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\");</code></pre> \r\n                \r\n        */\r\n\t\tfunction _remove(data, isTriggerUnselectedEvent){\r\n\t\t\treturn _executeMethod(\"remove\", data, isTriggerUnselectedEvent);\r\n\t\t}\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> undefined </td>\r\n\t\t\t\t\t\t<td> 获取组件的配置参数 </td>\r\n\t\t\t\t\t\t<td> JSON 组件的配置参数 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 获取传入字符串对应的参数值 </td>\r\n\t\t\t\t\t\t<td> 传递的字符串对应的组件配置值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> JSON </td>\r\n\t\t\t\t\t\t<td> 重置组件参数配置 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 返回组件配置对象\r\nuiTagsinput.option();</code></pre>\r\n                \r\n        */\r\n\t\tfunction _option(params){\r\n\t\t\treturn _executeMethod(\"option\", params);\r\n\t\t}\r\n\r\n        /**\r\n        * 阻止标签栏点击事件触发\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 阻止标签栏点击事件触发\r\nuiTagsinput.disabled();</code></pre>\r\n                \r\n        */\r\n        function _disabled(isAll){\r\n            return _executeMethod(\"disabled\", isAll);\r\n        }\r\n\r\n        /**\r\n        * 允许标签栏点击事件触发\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 允许标签栏点击事件触发\r\nuiTagsinput.enabled();</code></pre>\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件只读\r\nuiTagsinput.readonly();</code></pre>\r\n                \r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件可读可写\r\nuiTagsinput.readwrite();</code></pre>\r\n                \r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 清空组件值\r\nuiTagsinput.empty();</code></pre> \r\n                \r\n        */\r\n        function _empty(isTriggerUnselectEvent){\r\n            return _executeMethod(\"empty\", isTriggerUnselectEvent);\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 销毁组件：销毁之后可通过重新初始化组件启用组件\r\nuiTagsinput.destroy();</code></pre>\r\n                \r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 获取wui组件的内部定义组件\r\nuiTagsinput.component();</code></pre>\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example\r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 初始化组件,若是已经初始化,则返回初始化对象,若是传递参数,则重新初始化配置\r\nvar myTagsinput = uiTagsinput.init();</code></pre>\r\n                \r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(id), _pluginDataName)){\r\n\t\t\t\t$('#' + id)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\t\treturn {\r\n            // 初始化方法\r\n            init: _init,            \r\n\t\t\ton: _on,\r\n\t\t\toff: _off,\r\n\t\t\tgetMaxNumber: _getMaxNumber,\r\n\t\t\tget: _get,\r\n\t\t\tset: _set,\r\n\t\t\tadd: _add,\r\n\t\t\tremove: _remove,\r\n            disabled: _disabled,\r\n            enabled: _enabled,\r\n            readonly: _readonly,\r\n            readwrite: _readwrite,\r\n\t\t\tempty: _empty,\r\n            option: _option,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n\t\t\tdestroy: _destroy\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","/**\r\n * <h3>WUI 弹出选择组件</h3>\r\n * @module Components\r\n */\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>弹出选择组件</h3>\r\n     * <ol>\r\n     * <li>支持弹出层选择数据; </li>\r\n     * <li>支持选中数据填充节点; </li>\r\n     * <li>支持增删事件监听; </li>\r\n     * <li>自定义标签块样式类参数传入; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiChooseBox\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.chooseBox/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/set\"}}{{/crossLink}}: 设置组件值 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/add\"}}{{/crossLink}}: 添加组件值 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/remove\"}}{{/crossLink}}: 移除组件值 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/enabled\"}}{{/crossLink}}: 允许标签栏点击 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/disabled\"}}{{/crossLink}}: 阻止标签栏点击 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/openPopup\"}}{{/crossLink}}: 打开弹窗 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.chooseBox/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     * \r\n     *  @namespace wui\r\n     *  @class chooseBox\r\n     *  @constructor \r\n     *  @param {string} id  元素id@@@###初始化组件元素ID名   \r\n     *  @param {object} option 组件配置@@@###组件初始化配置项集合\r\n     *  @param {Object} [option.value]  #@default:null# 组件默认值@@@###初始化完成时,默认选中数据\r\n     *  @param {string} [option.name] #@default:\"id\"# 关键字段@@@###选中值保存的name字段\r\n     *  @param {string} [option.text] #@default:\"name\"# 文本字段@@@###选中值保存的text字段,显示多个字段时,字段用\"{{}}\"包裹表示,其他字符串原样输出,比如: {{id}}-{{name}}\r\n     *  @param {string} option.tabUrl 列表URL@@@###弹出层列表页面URL(假如是相对路径,那是相对于popPageUrl参数所在页面路径。多个数据用\",\"分隔开)\r\n     *  @param {string} [option.ellipsis]   #@default:\"...\"# 省略符号@@@###当标签个数达到最大字符数时替换多余字符的字符串\r\n     *  @param {boolean} [option.isFreeInput=false]   自由输入@@@###是否可以自由输入,默认是false \r\n     *  @param {boolean} [option.isShowBtnGroup=true]  操作按钮@@@###是否添加按钮组\r\n     *  @param {boolean} [option.isShowInputBar=true]  标签栏@@@###是否显示标签栏,若为false,就不显示输入栏\r\n     *  @param {boolean} [option.isClickTriggerPopup=true]   启用标签栏弹出层@@@###是否点击标签栏弹出层,默认是true\r\n     *  @param {boolean} [option.isVoluation=false]   是否可赋值到其他标签中@@@###是否可赋值到其他标签中,默认是false    \r\n     *  @param {boolean} [option.isAllowDuplicates]   是否允许数据重复@@@###是否允许标签数据name参数值重复,默认是false \r\n     *  @param {Number|Boolean} [option.maxNumber=false]   可选个数@@@###最多可选个数,false表示即不限制    \r\n     *  @param {string} [option.width=\"100%\"]   组件宽度@@@###组件宽度\r\n     *  @param {number} [option.maxChars=0]   标签字符个数@@@###是每个标签字符限制个数,0代表不限制 \r\n     *  @param {Object} [option.otherParam={}]   自定义URL参数@@@###初始化完成时,默认选中数据传递到弹出页面的各个子页面的自定义json数据,默认是{} \r\n     *  @param {string} [option.popPageUrl]  弹窗页面URL@@@###弹出公共页面URL,默认是 wui.commonPageBasePath + \"wui.choosebox.popup.html\"\r\n     *  @param {string} [option.pageHeight=\"570px\"]  弹出层页面高度,可以通过wui.pageHeight 配置全局\r\n     *  @param {string} [option.pageWidth=\"1200px\"] 弹出层页面宽度,可以通过wui.pageWidth 配置全局\r\n     *  @param {boolean} [option.isFull=false]  弹出层是否全屏展示    \r\n     *  @param {string} [option.pageTitle=\"弹出层页面:【element】\"]   弹出层页面标题\r\n     *  @param {string} [option.treeTitle=\"\"]   弹出层树结构标题\r\n     *  @param {string} [option.treeUrl=\"\"]    弹出层树服务数据源\r\n     *  @param {String} [option.lazyField=\"parentDeptId\"]  懒加载请求字段名@@@###弹出层树结构懒加载时,每一次懒加载传递当前节点key值的字段名 \r\n     *  @param {boolean} [option.isEnabledSearch=true]  树结构是否启用搜索栏@@@###树结构是否启用搜索栏\r\n     *  @param {string} [option.tabTitle=\"\"]   @@@###弹出层Tab选项卡标题(多个数据用\",\"分隔开),默认是\"\"\r\n     *  @param {string} [option.tagClass=\"wui-bg-primary\"]   标签块样式类@@@###标签块样式类\r\n     *  @param {string} [option.treeExtSetting]  #@default:null# 树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n     *  @param {string} [option.tabsExtSetting]  #@default:null# 选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n     *  @param {string} [option.gridExtSetting]  #@default:null# 列表组件拓展配置,具体参数详见\"wui.grid\",不支持传递方法属性值\r\n     *  @param {string} [option.tagsExtSetting]  #@default:null# 标签组件拓展配置,具体参数详见\"wui.tagsinput\",不支持传递方法属性值\r\n     *  @param {string} [option.modalExtSetting]  #@default:null# 模态框组件拓展配置,具体参数详见\"wui.openModalDialog\",不支持传递方法属性值\r\n     *  @param {Function} [option.onBeforeOpenPopup]  每一次弹出窗口之前执行的方法@@@###每一次弹出窗口之前执行的方法,传递参数为popupParams:表示打开弹窗传递的参数对象,若想修改参数,则修改后返回该修改对象即可,若返回false,则会阻断弹出窗口\r\n     *  @param {Function} [option.onSuccessCallback]  关闭成功回调执行方法@@@###关闭成功回调执行方法,参数是一个json对象,由弹出层调用wui.closeModalDialog()关闭层时返回数据决定,传递什么参数就返回什么参数\r\n     *  @param {Function} [option.onCancelCallback]  弹出层右上角关闭按钮触发的回调@@@###弹出层右上角关闭按钮触发的回调,该回调携带两个参数,分别为：当前层索引参数(index)、当前层的DOM对象(layero),默认会自动触发关闭。如果不想关闭,return false即可\r\n     *  @param {Function} [option.onClosedLayer]  关闭回调@@@###无论是否成功关闭都会执行的回调方法,执行顺序: onSuccessCallback() 优先于 onClosedLayer()(即模态框的closedCallback方法,这也保证了在这个方法内可以获取到chooseBox的组件值),参数:chooseBoxNodes: 组件值(包括弹窗返回数据)\r\n     *  @param {Function} [option.onEmpty] empty触发方法@@@###组件清空之后调用方法(包括set之前的empty等都会触发)\r\n     *  @param {Function} [option.onEmptyBtn] 清空按钮触发方法@@@###清空按钮单独触发事件\r\n     *  @param {Boolean|Function} [option.onInput=true] 监听输入框输入事件@@@###监听输入框输入事件,若为true,则启用自动完成功能,若为false,则关闭,若为function,则用自定义方法\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面,任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Choose Box: &lt;input type=\"text\" id=\"chooseBoxId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery,所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiChooseBox = wui.chooseBox( \"chooseBoxId\",{\r\n                \"treeTitle\": \"测试树\",\r\n                \"treeUrl\": \"../json/tree.json\",\r\n                \"tabTitle\": \"列表1,列表2,列表3\",\r\n                \"tabUrl\": \"../curd_pages/wui.popup.list.html,../curd_pages/wui.popup.list.html,../curd_pages/wui.popup.list1.html\"\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.chooseBox = function(id, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiChooseBox\",\r\n            _pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"chooseBox\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: id\r\n        });\r\n        \r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n\t\tif(!$(\"#\" + id).exist()){\r\n\t\t\tui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + id + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n        /*\r\n         * 关闭弹窗填充数据到其他组件\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-12-18\r\n         * @param    {[type]}   itemsArray [description]\r\n         * @return   {[type]}              [description]\r\n         */\r\n\t\tfunction _fillForm(itemsArray){\r\n        \tvar data = {};\r\n        \tfor(var i = 0; i < itemsArray.length; i++){\r\n        \t\tvar itemJson = itemsArray[i];\r\n        \t\tfor(var key in itemJson){\r\n        \t\t\tif(data[key]){\r\n\t\t\t\t\t\tdata[key] = data[key] + ',' + itemJson[key];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdata[key] = itemJson[key];\r\n\t\t\t\t\t}\r\n        \t\t}\r\n        \t}\r\n\r\n        \tui.fillForm(data);\r\n\t\t}\r\n\r\n        /*\r\n         * 默认关闭弹窗执行方法\r\n         * @Author   Chenzx\r\n         * @DateTime 2018-12-18\r\n         * @param    {[type]}   params [description]\r\n         * @return   {[type]}          [description]\r\n         */\r\n\t\tfunction _close(params){\r\n\r\n        \tif(params){\r\n\r\n                ui.logParamValue({\r\n                    paramName: \"params\",\r\n                    paramValue: params, \r\n                    methodName: \"_close\", \r\n                    className: FRAME_NAME + \".\" + _pluginName, \r\n                    isDebug: true\r\n                });\r\n                // ui.logParamValue(\"_close.params\", params, _pluginName);\r\n\r\n                var option = _option();\r\n                // 返回的数据[]\r\n                var data = params.data;\r\n                _set(data);\r\n\r\n                if(option.isVoluation){\r\n                \tvar itemsArray = _get(\"json\");\r\n                \t_fillForm(itemsArray);\r\n                }\r\n            } \r\n        }\r\n\r\n\t\tfunction uiChooseBox(element, opt){\r\n\t\t\t// //调用初始函数\r\n\t\t\t// this.init();\r\n            var modalIndex = ui.load();\r\n            // 初始化组件关联属性\r\n            var components = this.initComponentAttributes(id, opt);\r\n            $.extend(true, this, components);\r\n\r\n            // 格式化参数\r\n            this.formatParams();\r\n\r\n            // 渲染组件布局\r\n            this.renderComponent();\r\n\r\n            this.status = \"loaded\";\r\n\r\n            ui.closeIndex(modalIndex);\t\r\n\t\t}\r\n\r\n\t\tuiChooseBox.prototype = {\r\n\t\t\tconstructor: uiChooseBox,\r\n\r\n            /*\r\n             * 初始化组件基础属性\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            initComponentAttributes: function(id, opt){\r\n\r\n                // 组件默认配置\r\n                var defaultSetting = {\r\n                    // {string} 非空,弹出页面URL\r\n                    popPageUrl: ui.commonPageBasePath + \"wui.choosebox.popup.html\"\r\n                    // {object} 默认选中数据\r\n                    , value: [] \r\n                    // {String} 组件宽度,默认\"\"\r\n                    , width: \"\"    \r\n                    // {String} 组件初始化高度,默认\"\"\r\n                    , initHeight: \"\"    \r\n                    // {String} 组件最大宽度,默认\"\"\r\n                    , maxHeight: \"\"\r\n                    // {boolean} 是否添加按钮组\r\n                    , isShowBtnGroup: true\r\n                    // {json} 传递到弹出页面的各个子页面的自定义json字符串数据\r\n                    , otherParam: {}\r\n                    // {boolean} 是否点击标签栏弹出层\r\n                    , isClickTriggerPopup: true\r\n                    // {boolean} 是否可赋值到其他标签中\r\n                    , isVoluation: false        \r\n                    // {Boolean} 是否显示标签栏,若为false,就不显示输入栏\r\n                    , isShowInputBar: true\r\n                    // {Boolean} 是否弹窗时拼接已选节点到弹出层链接里面\r\n                    , isOpenWithNodes: false\r\n                    // {Boolean} 是否在弹出层里面禁用删除传递的值\r\n                    , isDisableRemove: false\r\n\r\n                    /* 弹出层配置 */\r\n                    // {string} 弹出层页面高度\r\n                    , pageHeight: ui.pageHeight\r\n                    // {string} 弹出层页面宽度 \r\n                    , pageWidth: ui.pageWidth\r\n                    // {Boolean} 是否全屏展示,默认为false,此时pageHeight、pageWidth不起作用\r\n                    , isFull: false             \r\n                    // {string} 弹出层页面标题\r\n                    , pageTitle: '弹出层页面:【 ' + id+' 】'     \r\n\r\n                    /* 树配置 */\r\n                    // {string} 树列表标题\r\n                    , treeTitle: '' \r\n                    // {string} 树形数据URL             \r\n                    , treeUrl: ''\r\n                    // 树结构懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"parentDeptId\" \r\n                    , lazyField: 'parentDeptId'\r\n                    // 树结构是否启用搜索栏,默认是true\r\n                    , isEnabledSearch: true\r\n                    /* 选项卡/列表配置 */\r\n                    // {string} Tab选项卡标题(多个数据用\",\"分隔开)\r\n                    , tabTitle:''               \r\n                    // {string} 必填,列表页面URL(多个数据用\",\"分隔开)\r\n                    , tabUrl: ''\r\n\r\n                    // 当设置本标题和url时,弹出页面不再嵌套iframe\r\n                    // {string} 列表标题\r\n                    , gridTitle:''               \r\n                    // {string} 列表url\r\n                    , gridUrl: ''\r\n\r\n                    // 新功能:下拉查询输入数据\r\n                    // {Boolean} 是否启用数据过滤\r\n                    , isFilterable: false\r\n                    // {String} 下拉可供搜索数据URL\r\n                    , filterUrl: null\r\n                    // {String} 下拉可供搜索数据对象\r\n                    , filterData: null\r\n                    // {String} 下拉查询视图宽度\r\n                    , filterPickerWidth: \"\"\r\n                    // {String} 下拉查询视图最大高度\r\n                    , filterPickerMaxHeight: \"auto\"\r\n                    // {JSON} 过滤数据源参数解析\r\n                    , filterSourceReader: {\r\n                        // {String} 服务器返回的实际加载数据字段名,若为null,则返回数据作为实际加载数据\r\n                        root: null\r\n                        // {String} 子节点集字段名\r\n                        , children: \"children\"\r\n                        // {string} 非空,节点value字段\r\n                        // , key: \"id\"\r\n                        // // {string} 非空,节点text字段\r\n                        // , title: \"name\"\r\n                    }\r\n                    // 过滤搜索关键字段值\r\n                    , filterField: \"key\"\r\n                    // 下拉视图展开方向\r\n                    , filterDirection: \"auto\"\r\n                    // 下拉视图展开最大高度\r\n                    , filterMaxHeight: 0\r\n                    // {Number} 设置下拉视图宽度,默认和组件宽度一致\r\n                    , filterMenuWidth: \"auto\" \r\n\r\n                    // 默认样式类\r\n                    , filterClassList: {\r\n                        // 选中节点附加样式\r\n                        \"selected\": \"\"\r\n                        // 隐藏节点附加样式\r\n                        , \"hidden\": \"hide\"\r\n                        // 禁用节点附加样式\r\n                        , \"disabled\": \"disabled\"\r\n                        // 聚焦节点附件样式\r\n                        , \"active\": \"active\"\r\n                        // {string}  选中节点的图标样式\r\n                        , \"checked\": \"fa fa-check\"\r\n                        // {String} 分组时,组头附加图标样式\r\n                        , \"group\": \"fa fa-group  wui-fa-middle\"\r\n                        // {String} 选项附加图标样式\r\n                        , \"option\": \"\"\r\n                    }\r\n\r\n                    /* tags配置 */\r\n                    // {string} 非空,节点value字段\r\n                    , name: 'id'\r\n                    // {string} 非空,节点text字段,显示多个字段时,字段用\"{{}}\"包裹表示,其他字符串原样输出,比如: {{id}}-{{name}}\r\n                    , text: 'name'\r\n                    // {number} 最多可选个数,false代表无限制\r\n                    , maxNumber: false   \r\n                    // {boolean} 是否可以自由输入           \r\n                    , isFreeInput: false        \r\n                    // {Boolean} 是否添加删除操作\r\n                    , isAddRemoveLink: true \r\n                    // {boolean} 是否允许重复填充数据 \r\n                    , isAllowDuplicates: false  \r\n                    // {string} 标签块样式类\r\n                    , tagClass: 'wui-bg-primary'   \r\n                    // {number} 每个标签字符限制个数,0代表不限制\r\n                    , maxChars: 0               \r\n                    // {string} 省略符号,当标签个数达到最大字符数时替换多余字符的字符串\r\n                    , ellipsis: \"...\"\r\n                    // {Function} 每一次弹出窗口之前执行的方法,传递参数为popupParams:表示打开弹窗传递的参数对象,若想修改参数,则修改后返回该修改对象即可,若返回false,则会阻断弹出窗口\r\n                    , onBeforeOpenPopup: ui.CONSTANTS.EMPTYFUNC\r\n                    // {Function} 无论是否成功关闭都会执行的回调方法,执行顺序: onSuccessCallback() 优先于 onClosedLayer()(即模态框的closedCallback方法,这也保证了在这个方法内可以获取到chooseBox的组件值),参数:chooseBoxNodes: 组件值(包括弹窗返回数据)           \r\n                    , onClosedLayer: ui.CONSTANTS.EMPTYFUNC    \r\n                    // {Function} 关闭成功回调执行方法,参数是一个json对象,由弹出层调用wui.closeModalDialog()关闭层时返回数据决定,传递什么参数就返回什么参数\r\n                    , onSuccessCallback: ui.CONSTANTS.EMPTYFUNC   \r\n                    // {Function} 弹出层右上角关闭按钮触发的回调,该回调携带两个参数,分别为：当前层索引参数(index)、当前层的DOM对象(layero),默认会自动触发关闭。如果不想关闭,return false即可\r\n                    , onCancelCallback: ui.CONSTANTS.EMPTYFUNC\r\n                    // {Function} 清空触发事件(包括set之前的empty等都会触发)\r\n                    , onEmpty: ui.CONSTANTS.EMPTYFUNC\r\n                    // {Function} 清空按钮触发事件\r\n                    , onEmptyBtn: ui.CONSTANTS.EMPTYFUNC\r\n                    // {Boolean/Function} 监听输入框输入事件,若为true,则启用自动完成功能,若为false,则关闭,若为function,则用自定义方法\r\n                    , onInput: true\r\n                    // {function/Boolean} 启用自动输入时,按\"Enter\"键生成标签,默认是true,设置为false时禁用,可自定义方法,传递参数element:输入框节点对象;node:输入数据;event:事件对象\r\n                    , onEnter: true\r\n                    // {Boolean} 是否每次打开弹窗都重置数据,即不要旧数据,默认是true\r\n                    , isRewrite: false\r\n\r\n                    // {JSON} 设置组件文本内容\r\n                    , defaultText: {\r\n                        // 清空按钮文本\r\n                        editBtn: ui.language.chooseBox.editBtn,\r\n                        // 清空按钮文本\r\n                        clearBtn: ui.language.chooseBox.clearBtn\r\n                    }\r\n                    // 拓展参数:树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n                    , treeExtSetting: null\r\n                    // 拓展参数:选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n                    , tabsExtSetting: null\r\n                    // 拓展参数:列表组件拓展配置,具体参数详见\"wui.grid\",不支持传递方法属性值\r\n                    , gridExtSetting: null\r\n                    // 拓展参数:标签组件拓展配置,具体参数详见\"wui.tagsinput\",不支持传递方法属性值\r\n                    , tagsExtSetting: null\r\n                    // 拓展参数:模态框组件拓展配置,具体参数详见\"wui.openModalDialog\",不支持传递方法属性值\r\n                    , modalExtSetting: null\r\n                }\r\n\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams($(\"#\" + id), defaultSetting);\r\n\r\n                // 设置组件配置参数\r\n                var params = $.extend(true, {}, defaultSetting, opt, AttributeParams);\r\n\r\n                var component = {\r\n                    // 组件名\r\n                    pluginName: _widgetName,\r\n\r\n                    // 组件初始化元素id\r\n                    id: id,\r\n\r\n                    // 组件初始化元素name属性\r\n                    name: \"\",  \r\n\r\n                    // 初始化节点元素\r\n                    element: document.getElementById(id),\r\n\r\n                    // 初始化节点jQuery对象\r\n                    $element: $(\"#\" + id),\r\n\r\n                    // 组件默认配置\r\n                    defaults: defaultSetting,\r\n\r\n                    // 初始化元素DOM结构\r\n                    initDom: $(\"#\" + id).prop(\"outerHTML\"),\r\n\r\n                    // 组件初始化元素HTML\r\n                    dom: \"\",\r\n\r\n                    // 组件状态值:\"init\"(初始化)/\"loading\"(组件加载中)/\"loaded\"(加载完毕)/\"destroy\"(销毁)/\"error\"(加载过程出错)\r\n                    status: \"init\",\r\n\r\n                    // 是否渲染下拉视图节点,用于在加载静态数据时,只在第一次输入才加载下拉数据\r\n                    isRendPickerNode: false,\r\n\r\n                    // 组件是否启用状态:可以通过disabled()和enabled()改变状态\r\n                    enable: true,\r\n\r\n                    // {Boolean} 是否可关闭\r\n                    isClosable: params.isAddRemoveLink,\r\n\r\n                    // 组件所有子节点集合\r\n                    nodes: [],\r\n\r\n                    //自定义事件,用于监听插件的用户交互\r\n                    handlers: {},\r\n\r\n                    // 组件加载数据\r\n                    // data: null,\r\n\r\n                    // // 组件结果对象集\r\n                    // itemsArray: [],\r\n\r\n                    // // 组件结果key字段集\r\n                    itemsName: [],\r\n\r\n                    // // 组件结果title字段集\r\n                    // itemsText: [],\r\n\r\n                    // 组件参数配置\r\n                    opt: params,\r\n\r\n                    // 初始化对象页面结构模板\r\n                    // 视图容器模板\r\n                    // viewConTmp: '<div class=\"tag-container wui-input\" wui-attr=\"view\"></div>',\r\n                    viewConTmp: '<div class=\"tag-container btn-group wui-select-box dropdown\"><div wui-attr=\"view\" class=\"wui-view-tags\"></div></div>',\r\n\r\n                    // 输入框模板\r\n                    inputBoxTmp: '<input type=\"text\" wui-widget-hidden=\"true\" wui-attr-clear-node=\"true\" wui-attr=\"input\"/>',\r\n\r\n                    // 下拉视图中无数据时展示模板\r\n                    tipTmp: '<span class=\"placeholder\">{0}</span>',\r\n\r\n                    // 下拉视图选择模板\r\n                    pickerTmp: '<ul wui-attr=\"menu\" class=\"dropdown-menu focus inner\" role=\"menu\" style=\"overflow-y: auto;\"></ul>',\r\n                    \r\n                    // 初始化对象页面结构\r\n                    // 组件最外层容器([wui-attr=\"container\"]): $element + $viewBox\r\n                    $container: null,\r\n                    // 组件可视框([wui-attr=\"view\"]):$tags + $input\r\n                    $viewBox: null,\r\n                    // 组件可视框容器\r\n                    $viewCon: null,\r\n                    // 组件输入框(input)\r\n                    $input: null,\r\n                    // 组件下拉框容器(.dropdown-menu.wui-open)\r\n                    $dropdownBox: null,\r\n                    // 组件下拉视图选择内容框([wui-attr=\"menu\"].dropdown-menu)\r\n                    $selectContentBox: null, \r\n                    // 下拉视图可供选择节点\r\n                    pickerNodes: [],\r\n\r\n                    // 保存下拉返回数据\r\n                    data: [],\r\n\r\n                    // 保存校验出错节点\r\n                    // errorElement: null,\r\n                    \r\n                    // 标签组件对象\r\n                    // _tagsComponent: null,\r\n\r\n                    // 标签组件配置参数\r\n                    // _tagsSetting: null,\r\n\r\n                    // 自定义拓展属性\r\n                    ext: {}\r\n                }\r\n\r\n                return component;\r\n            },\r\n            resize: function(){\r\n                this.width(this.opt.width);\r\n                this.height(this.opt.initHeight, this.opt.maxHeight);\r\n            },\r\n            width: function(containerWidth){\r\n                this.$container.width(containerWidth);\r\n            },\r\n            height: function(containerHeight, containerMaxHeight){\r\n                \r\n                if(containerHeight){\r\n                    this.$viewBox.css({\r\n                        \"height\": containerHeight\r\n                    });\r\n                }\r\n\r\n                if(containerMaxHeight){\r\n                    this.$viewBox.css({\r\n                        \"maxHeight\": containerMaxHeight\r\n                    });\r\n                }\r\n\r\n                ui.scroll(this.$viewBox)\r\n            },\r\n            /*\r\n             * 格式化参数\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-11-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            formatParams: function(){\r\n                var that = this;\r\n                this.opt.maxNumber = ui.formatMaxNumber(this.opt.maxNumber);\r\n                this.opt.maxChars = ui.formatMaxChars(this.opt.maxChars);\r\n            },\r\n            /*\r\n             * 渲染组件布局\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-26\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderComponent: function(){\r\n                var that = this, opt = this.opt;\r\n                // 改变组件状态为\"loading\"\r\n                this.status = \"loading\";\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!(this.$element.attr('name'))){\r\n                    this.$element.attr('name', that.id);\r\n                }\r\n                this.name = this.$element.attr('name');\r\n\r\n                if(!(this.$element.parent().hasClass('wui-tagsinput'))){\r\n                    var parentDiv = '<div class=\"wui-tagsinput\"></div>';\r\n                    this.$element.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n\r\n                // 组件最外层容器(.wui-selectBox): $element + $viewBox\r\n                this.$container = this.$element.parent();\r\n                this.$container.attr(\"wui-attr\", \"container\");\r\n                // 视图容器模板\r\n                this.$viewCon = $(this.viewConTmp);\r\n                this.$viewBox = this.$viewCon.find('[wui-attr=\"view\"]');\r\n                \r\n                // 创建一个文档碎片\r\n                // this.fragment = document.createDocumentFragment();\r\n\r\n                this.$element.after(this.$viewCon);\r\n\r\n                this.$element.hide();\r\n\r\n                this.renderInputBox();\r\n\r\n                // 渲染按钮栏\r\n                this.renderToolbar(this.opt.isShowBtnGroup);\r\n\r\n                // 渲染下拉数据源\r\n                this.renderPicker(this.opt.isShowBtnGroup);\r\n                \r\n\r\n                // 点击标签栏弹出选择框事件\r\n                if(this.opt.isClickTriggerPopup){\r\n                    this.$viewBox.on(\"click\", function(){\r\n                        that.open();\r\n                    })\r\n                }\r\n\r\n                if(!this.opt.isShowInputBar){\r\n                    this.$viewCon.hide();\r\n                }\r\n\r\n                this.resize();\r\n                \r\n                if(!ui.isEmptyType(this.opt.value)){\r\n                    this.addNodes(this.opt.value);\r\n                }\r\n                // this.load();\r\n\r\n                this.$element.attr(\"ui-type\", this.pluginName);\r\n\r\n                this.dom = this.$container.prop(\"outerHTML\");\r\n\r\n                this.trigger(\"init\", {\r\n                    type: 'init'\r\n                });\r\n            },\r\n            /*\r\n             * 新增组件选中值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   node                 [description]\r\n             * @param    {Boolean}  isTriggerSelectEvent [description]\r\n             */\r\n            addComponentNodes: function(node, isTriggerSelectEvent){\r\n                this.addNode(node.data, isTriggerSelectEvent);\r\n                this.$input.val(\"\");\r\n                this.closePicker();\r\n            },\r\n            /*\r\n             * 移除组件选中值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   node                   [description]\r\n             * @param    {Boolean}  isTriggerUnselectEvent [description]\r\n             * @return   {[type]}                          [description]\r\n             */\r\n            removeComponentNodes: function(node, isTriggerUnselectEvent){\r\n                // this.removeNode(node.key, isTriggerUnselectEvent);\r\n            },\r\n            getComponentNodes: function(){\r\n                return this.nodes;\r\n            },\r\n            popNodes: function(){\r\n                return this.nodes.pop();\r\n            },\r\n            /*\r\n             * 是否达到可选最大值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @return   {Boolean}  [description]\r\n             */\r\n            isMaxNumber: function(item){\r\n                var codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\"\r\n                    };\r\n\r\n                // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                if (this.opt.maxNumber != false && this.opt.maxNumber > 1 && (this.nodes.length >= this.opt.maxNumber)){\r\n                    this.trigger(\"itemSelectError\", {\r\n                        type:'itemSelectError',\r\n                        item: item, \r\n                        code: -1, \r\n                        message: codes[\"-1\"]\r\n                    })\r\n                    return true;\r\n                }\r\n            },\r\n            renderResult: function(){\r\n                this.focus();\r\n                this.updatedNodes();\r\n            },\r\n            /*\r\n             * 添加下拉节点DOM\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   htmlDom [description]\r\n             */\r\n            addPickerItem: function(htmlDom){\r\n                this.$selectContentBox.append(htmlDom);\r\n            },\r\n            /*\r\n             * 更新节点之后执行\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-08\r\n             * @return   {[type]}   [description]\r\n             */\r\n            updatedNodes: function(){\r\n                this.$element.val(this.itemsName.join(\",\"));\r\n\r\n                var elem = this.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(this.$element.rules())){\r\n                    ui.validElement(this.$element);\r\n                }\r\n            },\r\n            /*\r\n             * 创建新节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   item       [description]\r\n             * @param    {[type]}   parentNode [description]\r\n             * @return   {[type]}              [description]\r\n             */\r\n            createNode: function(item, isEnableRemove){\r\n                return new TagNode(item, this.opt, this, isEnableRemove, ui);\r\n            },\r\n            /*\r\n             * 添加单个节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @param    {[type]}   item [description]\r\n             */\r\n            addNode: function(item, isTriggerSelectedEvent, isEnableRemove){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\",\r\n                        \"0\": \"添加的数据不能为空\",\r\n                        \"1\": \"name属性值没设置,无法添加object类型数据\",\r\n                        \"2\": \"标签数据\" + name + \"属性值重复\",\r\n                        \"3\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"5\": \"只能添加类型为object、string的数据\"\r\n                    };\r\n\r\n                var key = item;\r\n\r\n                if(ui.isUndefined(isTriggerSelectedEvent)){\r\n                    isTriggerSelectedEvent = true;\r\n                }\r\n\r\n                // -1：超过可选个数(当parseInt(maxNumber)>0且不等于false时,已有节点个数>=maxNumber)\r\n                if (typeof(that.opt.maxNumber) === \"number\" && that.opt.maxNumber > 0 && (that.nodes.length >= that.opt.maxNumber)){\r\n\r\n                    that.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: item, \r\n                        code: -1,\r\n                        message: codes[\"-1\"]\r\n                    });\r\n                    return false;\r\n                }\r\n\r\n                if(ui.isJson(item)){\r\n                    key = item[name];\r\n                }\r\n\r\n                if(ui.isEmptyType(key)){\r\n                    that.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: item, \r\n                        code: 3, \r\n                        message: codes[\"3\"].replace('{0}', JSON.stringify(item))\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(!that.opt.isAllowDuplicates && that.itemsName.indexOf(key) > -1){\r\n                    if(that.opt.isShowAnimate){\r\n                        this.$viewBox.children('span').eq(that.itemsName.indexOf(key)).hide().fadeIn(); // 标签块已有时的显示动画\r\n                    }\r\n                    that.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: item, \r\n                        code: 2, \r\n                        message: codes[\"2\"]\r\n                    })\r\n                    return true;\r\n                }\r\n\r\n                if(isTriggerSelectedEvent){\r\n                    var isContinue = that.trigger(\"beforeItemAdd\", {\r\n                        type:'beforeItemAdd',\r\n                        item: item,\r\n                        items: that.get(\"json\"),\r\n                        nodes: that.nodes\r\n                    })\r\n\r\n                    if(isContinue === false){\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var newNode = that.createNode(item, isEnableRemove);\r\n                that.nodes.push(newNode);\r\n\r\n                // 更新节点之后执行\r\n                that.updatedNodes();\r\n\r\n                if(isTriggerSelectedEvent){\r\n                    that.trigger(\"itemAdded\", {\r\n                        type:'itemAdded',\r\n                        item: item,\r\n                        items: that.get(\"json\"),\r\n                        node: newNode\r\n                    })\r\n                }\r\n\r\n                return true;\r\n            },\r\n            /*\r\n             * 添加多个节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @param    {[type]}   data [description]\r\n             */\r\n            addNodes: function(data, isTriggerSelectedEvent, isEnableRemove){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"-1\": \"最多可选择\" + this.opt.maxNumber + \"个标签\",\r\n                        \"0\": \"添加的数据不能为空\",\r\n                        \"1\": \"name属性值没设置,无法添加object类型数据\",\r\n                        \"2\": \"标签数据\" + name + \"属性值重复\",\r\n                        \"3\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"5\": \"只能添加类型为object、string的数据\"\r\n                    };\r\n                    // alert(data)\r\n                // 不是空数据\r\n                if(!ui.isEmptyType(data)){\r\n                    if(ui.isArray(data)){\r\n                        $.each(data, function(i, item){\r\n                            return that.addNode(item, isTriggerSelectedEvent, isEnableRemove);\r\n                        })\r\n                        return true;\r\n                    }else if(ui.isJson(data)){\r\n                        return that.addNode(data, isTriggerSelectedEvent, isEnableRemove);\r\n                    }else if(ui.isString(data)){\r\n                        $.each(data.split(\",\"), function(index, key){\r\n                            return that.addNode(key, isTriggerSelectedEvent, isEnableRemove);\r\n                        })\r\n\r\n                        return true;\r\n                    }else{\r\n                        this.trigger('itemAddError', {\r\n                            type:'itemAddError',\r\n                            item: data, \r\n                            code: 5, \r\n                            message: codes[\"5\"]\r\n                        })\r\n                    }\r\n                    return false;\r\n                }else{\r\n                    this.trigger(\"itemAddError\", {\r\n                        type:'itemAddError',\r\n                        item: data, \r\n                        code: 0, \r\n                        message: codes[\"0\"]\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            removeNode: function(item){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"0\": \"移除的数据不能为空\",\r\n                        \"1\": name + \"属性值没设置,无法移除object类型数据\",\r\n                        \"2\": \"{0} 中不存在\" + name + \"属性\",\r\n                        \"3\": \"组件中不存在{0}节点\",\r\n                        \"5\": \"只能根据类型为object、string的数据来移除节点\",\r\n                        \"6\": \"移除的节点不能为空\"\r\n                    };\r\n\r\n                var key = item;\r\n\r\n                if(ui.isEmptyType(item)){\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 0, \r\n                        message: codes[\"0\"]\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(ui.isJson(item)){\r\n                    if(!this.opt.name){\r\n                        that.trigger(\"itemRemoveError\", {\r\n                            type:'itemRemoveError',\r\n                            item: item, \r\n                            code: 1, \r\n                            message: codes[\"1\"]\r\n                        });\r\n\r\n                        return true;\r\n                    }\r\n\r\n                    key = item[name];\r\n                }\r\n\r\n                if(ui.isEmptyType(key)){\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 2, \r\n                        message: codes[\"2\"].replace('{0}', JSON.stringify(item))\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(typeof(key) !== \"string\"){\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 5, \r\n                        message: codes[\"5\"]\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                if(that.itemsName.indexOf(key) > -1){\r\n                    var index = that.itemsName.indexOf(key);\r\n                    var node = that.nodes[index];\r\n\r\n                    var isContinue = that.trigger(\"beforeItemRemove\", {\r\n                        type:'beforeItemRemove',\r\n                        item: item,\r\n                        items: that.get(\"json\"),\r\n                        nodes: that.nodes,\r\n                        node: node\r\n                    })\r\n\r\n                    if(isContinue === false){\r\n                        return;\r\n                    }\r\n\r\n                    node.remove();\r\n\r\n                    // if(this.opt.isFilterable && this.opt.filterData){\r\n                    //     // 下拉视图设置取消选中\r\n                    //     var pickerNodeIndex = this.pickerNodes.\r\n                    //     if(){\r\n\r\n                    //     }\r\n                    // }\r\n\r\n                    // 更新节点之后执行\r\n                    that.updatedNodes();\r\n\r\n                    that.trigger(\"itemRemoved\", {\r\n                        type:'itemRemoved',\r\n                        item: item,\r\n                        items: this.get(\"json\"),\r\n                        nodes: that.nodes\r\n                    })\r\n                    \r\n                }else{\r\n                    that.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: item, \r\n                        code: 3, \r\n                        message: codes[\"3\"].replace('{0}', JSON.stringify(item))\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            removeNodes: function(data){\r\n                var that = this, code, name = this.opt.name,\r\n                    codes = {\r\n                        \"0\": \"移除的数据不能为空\",\r\n                        \"1\": name + \"属性值没设置,无法移除object类型数据\",\r\n                        \"2\": \"传入数据{0}不存在\",\r\n                        \"5\": \"只能根据类型为object、string的数据来移除节点\",\r\n                        \"6\": \"移除的节点不能为空\"\r\n                    };\r\n\r\n                // 不是空数据\r\n                if(!ui.isEmptyType(data)){\r\n                    if(ui.isArray(data)){\r\n                        $.each(data, function(i, item){\r\n                            return that.removeNode(item);\r\n                        })\r\n                        return true;\r\n                    }else if(ui.isJson(data)){\r\n                        return that.removeNode(data);\r\n                    }else if(ui.isString(data)){\r\n                        $.each(data.split(\",\"), function(index, key){\r\n                            return that.removeNode(key);\r\n                        })\r\n\r\n                        return true;\r\n                    }else{\r\n                        this.trigger('itemRemoveError', {\r\n                            type:'itemRemoveError',\r\n                            item: data, \r\n                            code: 5, \r\n                            message: codes[\"5\"]\r\n                        })\r\n                    }\r\n                    return false;\r\n                }else{\r\n                    this.trigger(\"itemRemoveError\", {\r\n                        type:'itemRemoveError',\r\n                        item: data, \r\n                        code: 6, \r\n                        message: codes[\"6\"]\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            /*\r\n             * 渲染输入框\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderInputBox: function(){\r\n                var that = this, opt = this.opt;\r\n\r\n                // 1、\"isFreeInput\"为false且\"isFilterable\"为false,关闭输入框\r\n                // 2、\"isFreeInput\"为false且\"isFilterable\"为true,只能从下拉选择\r\n                // 3、\"isFreeInput\"为true且\"isFilterable\"为false,只能自由输入\r\n                // 4、\"isFreeInput\"为true且\"isFilterable\"为true,可以自由输入且可以从下拉选择\r\n\r\n                if((this.opt.isFreeInput || this.opt.isFilterable) && !this.$input){\r\n                    // 组件输入框(input)\r\n                    this.$input = $(this.inputBoxTmp).appendTo(this.$viewBox);\r\n                    ui.input(this.$input, 40);\r\n\r\n                    this.$input.on(\"click\", function(event){\r\n                        // 阻止事件冒泡\r\n                        ui.stopPropagation(event);  \r\n                    }).keypress(function(event){\r\n                        var keynum = window.event ? event.keyCode : event.which;\r\n                        if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                            ui.stopPropagation(event);  // 阻止事件冒泡\r\n                            ui.preventDefault(event);\r\n                        }\r\n                    }).keyup(function(event){\r\n                        // ui.logMessage(\"您按了enter键\", \"wui.tagsinput\", true);\r\n                        var inputString = $(this).val();\r\n                        var keynum = window.event ? event.keyCode : event.which;\r\n                        if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                            if(opt.onEnter === true){\r\n                                if(opt.isFreeInput){\r\n                                    that.addNode(inputString);\r\n                                }else if(opt.isFilterable){\r\n                                    that.addNode(inputString);\r\n                                }\r\n                                $(this).val(''); // 输入值清空\r\n                            }else if(opt.onEnter && typeof(opt.onEnter) === \"function\"){\r\n                                opt.onEnter(this, event, inputString);\r\n                            }\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.DELETE || keynum == ui.CONSTANTS.KEYS.BACKSPACE || keynum == ui.CONSTANTS.KEYS.CLEAR){\r\n                            that.keyDelete(inputString);\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.DOWN){\r\n                            that.keyDown();\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.UP){\r\n                            that.keyUp();\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.END){\r\n                            that.keyEnd();\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.LEFT){\r\n                            that.keyLeft();\r\n                        }else if(keynum == ui.CONSTANTS.KEYS.RIGHT){\r\n                            that.keyRight();\r\n                        }\r\n                    })\r\n                    // 输入事件\r\n                    this.$input.on(\"input propertychange\", function(event){\r\n                        // 阻止事件冒泡\r\n                        ui.stopPropagation(event);\r\n\r\n                        var inputString = $(this).val(), isStop = true;\r\n\r\n                        if(opt.onInput && typeof(opt.onInput) === \"function\"){\r\n                            isStop = opt.onInput(this, event);\r\n                        }\r\n\r\n                        if(isStop === false){\r\n                            return;\r\n                        }\r\n\r\n                        that.$input.attr(\"wui-attr-clear-node\", \"false\");\r\n                        if(inputString != \"\"){\r\n                            // var $lastNode = that.nodes.length > 0 ? that.nodes[that.nodes.length - 1] : null;\r\n                            // if($lastNode){\r\n                            //     if(!$lastNode.isActive()){\r\n                            //         $lastNode.setActive(false)\r\n                            //     }\r\n                            // }\r\n                            var lastEnableNode = that.findLastEnableNode();\r\n                            if(lastEnableNode && lastEnableNode.isActive()){\r\n                                lastEnableNode.setActive(false);\r\n                            }\r\n\r\n                            if(opt.isFilterable){\r\n                                that.loadPickerNodes(inputString);\r\n                            }\r\n                        }else{\r\n                            if(opt.isFilterable){\r\n                                that.closePicker();\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    if(!that.opt.isClickTriggerPopup){\r\n                        that.$viewBox.off(\"click\").on(\"click\", function(){\r\n                            that.$input.focus();\r\n                        })\r\n                    }\r\n                        \r\n                }else if(this.$input){\r\n                    this.$input.remove();\r\n                    this.$input = null;\r\n                }  \r\n            },\r\n            /*\r\n             * 输入框\"left\"按键触发事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @return   {[type]}               [description]\r\n             */\r\n            keyLeft: function(){\r\n                var that = this;\r\n                var lastEnableNode = that.findLastEnableNode();\r\n                if(lastEnableNode && !lastEnableNode.isActive()){\r\n                    lastEnableNode.setActive(true)\r\n                }\r\n            },\r\n            /*\r\n             * 输入框\"right\"按键触发事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @return   {[type]}               [description]\r\n             */\r\n            keyRight: function(){\r\n                // var that = this;\r\n                // $.each(that.pickerNodes, function(i, pickerNode){\r\n                //     // 节点显示切没有被选择,则聚焦\r\n                //     if(!pickerNode.isHidden()){\r\n                //         pickerNode.focus();\r\n                //         return false;\r\n                //     }\r\n                // })\r\n            },\r\n            /*\r\n             * 输入框\"down\"按键触发事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @return   {[type]}               [description]\r\n             */\r\n            keyDown: function(){\r\n                var that = this;\r\n                $.each(that.pickerNodes, function(i, pickerNode){\r\n                    // 节点显示切没有被选择,则聚焦\r\n                    if(!pickerNode.isHidden()){\r\n                        pickerNode.focus();\r\n                        return false;\r\n                    }\r\n                })\r\n            },\r\n            /*\r\n             * 输入框\"up\"按键触发事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @return   {[type]}               [description]\r\n             */\r\n            keyUp: function(){\r\n                var that = this;\r\n\r\n                for(var i = that.pickerNodes.length - 1; i >= 0; i--){\r\n                    var pickerNode = that.pickerNodes[i];\r\n                    // 节点显示切没有被选择,则聚焦\r\n                    if(!pickerNode.isHidden()){\r\n                        pickerNode.focus();\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 输入框\"end\"按键触发事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @return   {[type]}               [description]\r\n             */\r\n            keyEnd: function(){\r\n                var that = this;\r\n\r\n                for(var i = that.pickerNodes.length - 1; i >= 0; i--){\r\n                    var pickerNode = that.pickerNodes[i];\r\n                    // 节点显示切没有被选择,则聚焦\r\n                    if(!pickerNode.isHidden()){\r\n                        pickerNode.focus();\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 输入框删除按键触发事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @param    {[type]}   inputString [description]\r\n             * @return   {[type]}               [description]\r\n             */\r\n            keyDelete: function(inputString){\r\n                var that = this, opt = this.opt;\r\n                // alert(inputString);\r\n                if(inputString == \"\"){\r\n                    var lastEnableNode = that.findLastEnableNode();\r\n                    if(lastEnableNode){\r\n                        if(that.$input.attr(\"wui-attr-clear-node\") == \"true\"){\r\n                            if(lastEnableNode.isActive()){\r\n                                lastEnableNode.remove();\r\n                            }else{\r\n                                lastEnableNode.setActive(true);\r\n                            }\r\n                        }else{\r\n                            that.$input.attr(\"wui-attr-clear-node\", \"true\");\r\n                            // lastEnableNode.setActive(true);\r\n                        }\r\n                    }\r\n\r\n                    if(opt.isFilterable){\r\n                        that.closePicker();\r\n                    }\r\n                }else{\r\n                    that.$input.attr(\"wui-attr-clear-node\", \"false\");\r\n                    if(opt.isFilterable){\r\n                        that.loadPickerNodes(inputString);\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 查找最后一个启用的节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-01-07\r\n             * @return   {[type]}   [description]\r\n             */\r\n            findLastEnableNode: function(){\r\n                var that = this, lastEnableNode = null;\r\n                for(var i = (that.nodes.length - 1); i >= 0; i--){\r\n                    var node = that.nodes[i];\r\n\r\n                    if(node.isEnable()){\r\n                        lastEnableNode = node;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                return lastEnableNode;\r\n            },\r\n            focus: function(){\r\n                if(this.$input){\r\n                    this.$input.focus();\r\n                }\r\n            },\r\n            blur: function(){\r\n                if(this.$input){\r\n                    this.$input.blur();\r\n                }\r\n            },\r\n            /*\r\n             * 渲染工具栏\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-13\r\n             * @return   {[type]}   [description]\r\n             */\r\n            renderToolbar: function(isShow){\r\n                var that = this, params = this.opt;\r\n                if(isShow){\r\n                    if(this.$element.parent().hasClass('wui-tagsinput')){\r\n                        if(!(this.$element.parent().hasClass('input-group'))){\r\n                            this.$element.parent().addClass('input-group');\r\n                        }\r\n                    }else{\r\n                        var parentDiv = '<div class=\"wui-tagsinput input-group\"></div>';\r\n                        this.$element.wrap(parentDiv);    // 增加父容器\r\n                    }\r\n                    \r\n                    var btnContents = [\r\n                        {\"html\": params.defaultText.editBtn, \"action\": \"edit\", \"title\": \"弹出窗口\"},\r\n                        {\"html\": params.defaultText.clearBtn, \"action\": \"empty\", \"title\": \"清空\"}\r\n                    ];\r\n\r\n                    ui.addToolBar(this.$viewCon, btnContents, \"after\");\r\n\r\n                    this.$container.find('[wui-toolBar-action]').each(function(i, el){\r\n                        var action = $(el).attr(\"wui-toolBar-action\");\r\n\r\n                        if(action == \"edit\"){\r\n                            // 编辑按钮点击事件\r\n                            $(el).off(\"click\").on(\"click\", function() {\r\n                                that.open();\r\n                            });\r\n                        }else if(action == \"empty\"){\r\n                            // 清空按钮\r\n                            $(el).off(\"click\").on(\"click\", function() {\r\n                                that.empty(\"btn\");\r\n                            });\r\n                        }\r\n                    })\r\n                }else{\r\n                    this.$container.find('[wui-toolBar-action]').remove();\r\n                    this.$container.removeClass('input-group');\r\n                } \r\n            },\r\n            /*\r\n             * 打开下拉视图\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            openPicker: function(){\r\n                this.$viewCon.addClass(\"open\");\r\n\r\n                // 设置方向\r\n                this.direction();\r\n                this.viewWidth();\r\n                this.viewHeight();\r\n\r\n\r\n                this.keyDown();\r\n            },\r\n            /*\r\n             * 关闭下拉视图\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            closePicker: function(){\r\n                if(!this.opt.isFilterable){\r\n                    return false;\r\n                }\r\n                this.$viewCon.removeClass(\"open\");\r\n\r\n                if(this.opt.filterUrl){\r\n                    this.emptyPicker();\r\n                }\r\n            },\r\n            /*\r\n             * 清空下拉视图数据\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            emptyPicker: function(){\r\n                this.data = [];\r\n                this.pickerNodes = [];\r\n                this.$selectContentBox.empty();\r\n                // 循环删除下拉节点数据\r\n                // while(this.pickerNodes.length > 0){\r\n                //     this.pickerNodes[0].remove();\r\n                //     this.pickerNodes.splice(0, 1);\r\n                // }\r\n            },\r\n            /*\r\n             * 创建新节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   item       [description]\r\n             * @param    {[type]}   parentNode [description]\r\n             * @return   {[type]}              [description]\r\n             */\r\n            createSelectNode: function(item, parentNode){\r\n\r\n                // 节点配置\r\n                var opt = {\r\n                    // {string}  非空,选中值保存的text字段,显示多个字段时,字段用\"{{}}\"包裹表示,其他字符串原样输出,比如: {{id}}-{{name}}\r\n                    text: this.opt.text\r\n                    // {string}  非空,选中值保存的value字段\r\n                    , name: this.opt.name\r\n                    // 数据源数据解析\r\n                    , jsonReader: {\r\n                        // {String} 子节点集字段名\r\n                        children: this.opt.filterSourceReader.children\r\n                        // {String} 子节点禁用标识字段名\r\n                        // , disabled: this.opt.filterSourceReader.disabled\r\n                        // // {String} 子节点选中标识字段名\r\n                        // , selected: this.opt.filterSourceReader.selected\r\n                        // // {String} 子节点隐藏标识字段名\r\n                        // , hidden: this.opt.filterSourceReader.hidden\r\n                    }\r\n                    // 默认样式类\r\n                    , classList: {\r\n                        // 选中节点附加样式\r\n                        \"selected\": this.opt.filterClassList.selected\r\n                        // 聚焦节点附件样式\r\n                        , \"active\": this.opt.filterClassList.active\r\n                        // {string}  选中节点的图标样式\r\n                        , \"checked\": this.opt.filterClassList.checked\r\n                        // {String} 分组时,组头附加图标样式\r\n                        , \"group\": this.opt.filterClassList.group\r\n                        // {String} 选项附加图标样式\r\n                        , \"option\": this.opt.filterClassList.option\r\n                    }\r\n                    // 当分组时,是否可整组选择,默认是false\r\n                    , isSelectGroup: false\r\n                    // {number} 最多可选个数,false代表无限制\r\n                    , maxNumber: this.opt.maxNumber\r\n                };\r\n                return new SelectNode(item, opt, this, parentNode);\r\n                // this.$selectContentBox.append('<li data-original-index=\"0\"> <a tabindex=\"1\"> <span class=\"text\">' + item.name + '</span> </a> </li>');\r\n            },\r\n            /*\r\n             * 渲染下拉节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @param    {[type]}   data [description]\r\n             * @return   {[type]}        [description]\r\n             */\r\n            renderPickerNodes: function(items){\r\n                var that = this, showNodes = [];\r\n                this.data = items;\r\n\r\n                $.each(items, function(i, item){\r\n                    var node = that.createSelectNode(item, null);\r\n                    that.pickerNodes.push(node);\r\n                    if(!node.isHidden()){\r\n                        showNodes.push(node);\r\n                    }\r\n                    if(!!item[that.opt.filterSourceReader.children]){\r\n                        $.each(item[that.opt.filterSourceReader.children], function(i, childItem){\r\n                            var subNode = that.createSelectNode(childItem, node);\r\n                            node.childrens.push(subNode);\r\n                            that.pickerNodes.push(subNode);\r\n                            if(!subNode.isHidden()){\r\n                                showNodes.push(subNode);\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n                this.openPicker();\r\n\r\n                // if(this.getShowNodes().length > 0){\r\n                //     this.removeNoneOptionTip();\r\n                // }\r\n\r\n                // 数据加载完成\r\n                this.trigger(\"loadComplete\", items);\r\n            },\r\n            /*\r\n             * 加载下拉节点\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @return   {[type]}   [description]\r\n             */\r\n            loadPickerNodes: function(key){\r\n                var that = this, opt = this.opt,\r\n                    data = {},\r\n                    rootField = this.opt.filterSourceReader.root;\r\n                data[opt.filterField] = key;\r\n\r\n                if(!this.opt.isFilterable){\r\n                    return false;\r\n                }\r\n\r\n                // ui.notice(key);\r\n                // console.error(this.opt.filterData)\r\n\r\n                // 从接口服务获取数据源\r\n                if(this.opt.filterUrl){\r\n                    ui.ajax({\r\n                        url: opt.filterUrl, \r\n                        data: JSON.stringify(data),\r\n                        onSuccess: function(res){\r\n                            if(rootField){\r\n                                var data = res[rootField];\r\n                                // console.info(data);\r\n                                if(ui.isArray(data) && data.length > 0){\r\n                                    that.renderPickerNodes(data);\r\n                                }\r\n                            }else{\r\n                                that.renderPickerNodes(res);\r\n                            }\r\n                            \r\n                        }, \r\n                        onError: function(res){\r\n                           ui.logError(res);\r\n                        }, \r\n                        async: true, \r\n                        dataType: \"json\", \r\n                        method: \"get\"\r\n                    })\r\n                }else if(!this.isRendPickerNode && this.opt.filterData){\r\n                    that.renderPickerNodes(this.opt.filterData);\r\n                    this.filterPicker(key);\r\n                    this.isRendPickerNode = true;\r\n                }else if(this.isRendPickerNode){\r\n                    this.filterPicker(key);\r\n                    this.openPicker();\r\n                }\r\n            },\r\n            /*\r\n             * 过滤下拉视图\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-26\r\n             * @param    {[type]}   key [description]\r\n             * @return   {[type]}       [description]\r\n             */\r\n            filterPicker: function(key){\r\n                var that = this;\r\n                $.each(this.pickerNodes, function(i, pickerNode){\r\n                    // 如果包含当前关键字(pickerNode.title.indexOf(key) > -1),显示\r\n                    if(pickerNode.title.indexOf(key) > -1){\r\n                        // 如果已经选中(that.itemsName.indexOf(pickerNode.key) > -1),隐藏\r\n                        if(that.itemsName.indexOf(pickerNode.key) > -1){\r\n                            if(that.opt.isAllowDuplicates){\r\n                                pickerNode.setHidden(false);\r\n                            }else{\r\n                                pickerNode.setHidden(true);\r\n                            }\r\n                        }else{\r\n                            pickerNode.setHidden(false);\r\n                        }\r\n                    }else{\r\n                        pickerNode.setHidden(true);\r\n                    }\r\n                })\r\n            },\r\n            /*\r\n             * 渲染下拉视图\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @param    {Boolean}  isHasPicker [description]\r\n             * @return   {[type]}               [description]\r\n             */\r\n            renderPicker: function(){\r\n                this.$dropdownBox = $('<div class=\"dropdown-menu wui-open\"></div>').appendTo(this.$viewCon);\r\n                \r\n                this.$selectContentBox = $(this.pickerTmp).appendTo(this.$dropdownBox);\r\n            },\r\n            direction: function(){\r\n                if(this.opt.filterDirection == \"auto\"){\r\n                    var viewSize = ui.getViewSize(),\r\n                        offsetSize = this.$container.offset();\r\n                    // console.info(viewSize);\r\n                    // console.info(offsetSize);\r\n                    if((viewSize.height / 2) > offsetSize.top){\r\n                        this.$viewCon.removeClass(\"dropup\").addClass(\"dropdown\");\r\n                    }else{\r\n                        this.$viewCon.addClass(\"dropup\").removeClass(\"dropdown\");\r\n                    }\r\n                }else if(this.opt.filterDirection == \"dropup\"){\r\n                    this.$viewCon.addClass(\"dropup\");\r\n                }else{\r\n                    this.$viewCon.addClass(\"dropdown\")\r\n                }\r\n            },\r\n            scroll: function(){\r\n                ui.scroll(this.$selectContentBox);\r\n            },\r\n            viewWidth: function(){\r\n\r\n                if(this.opt.filterMenuWidth == \"auto\"){\r\n                    this.$selectContentBox.width(this.$container.width());\r\n                }else{\r\n                    this.$selectContentBox.width(this.opt.filterMenuWidth);\r\n                }\r\n            },\r\n            viewHeight: function(){\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = null;\r\n                \r\n                if(this.$viewCon.hasClass(\"dropup\")){\r\n                    offsetSize = this.$container.offset();\r\n                    \r\n                    var maxHeight = !this.opt.filterMaxHeight ? (offsetSize.top - 20) : this.opt.filterMaxHeight;\r\n                    \r\n                    if(this.$selectContentBox.height() > maxHeight){\r\n                        this.$selectContentBox.css({\r\n                            \"max-height\": maxHeight + \"px\"\r\n                        });\r\n                    }\r\n                }else{\r\n                    offsetSize = this.$selectContentBox.offset();\r\n                    \r\n                    var maxHeight = !this.opt.filterMaxHeight ? (viewSize.height - offsetSize.top - 20) : this.opt.filterMaxHeight;\r\n                    \r\n                    if(this.$selectContentBox.height() > maxHeight){\r\n                        this.$selectContentBox.css({\r\n                            \"max-height\": maxHeight + \"px\"\r\n                        });\r\n                    }\r\n                }\r\n                this.scroll();\r\n            },\r\n            /*\r\n             * 设置是否启用\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-11\r\n             * @param    {Boolean}  isEnable 修改后的状态\r\n             * @param    {Boolean}  isAll    是否包含初始化时禁用的节点\r\n             */\r\n            setEnable: function(isEnable, isAll){\r\n                var that = this;\r\n\r\n                this.enable = isEnable;\r\n\r\n                $.each(that.nodes, function(i, node){\r\n                    if(!isAll && node.item.isEnableRemove === false){\r\n                        return true;\r\n                    }\r\n                    node.setEnable(isEnable);\r\n                })\r\n            },\r\n            /*\r\n             * 设置标签\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-10\r\n             * @param    {[type]}   data [description]\r\n             */\r\n            set: function(data, isTriggerUnselectEvent){\r\n                if(this.nodes.length > 0){\r\n                    this.empty(isTriggerUnselectEvent);\r\n                }\r\n                \r\n                this.addNodes(data);\r\n            },\r\n            /*\r\n             * 获取组件数值\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-12-25\r\n             * @param    {[type]}   type [description]\r\n             * @return   {[type]}        [description]\r\n             */\r\n            get: function(type){\r\n                type = type || \"json\";\r\n                if(type.toLowerCase() == \"value\"){\r\n                    return this.itemsName;\r\n                }else if(type.toLowerCase() == \"json\"){\r\n                    var itemsArray = [];\r\n                    $.each(this.nodes, function(i, node){\r\n                        itemsArray.push(node.item)\r\n                    })\r\n                    return itemsArray;\r\n                }else if(type.toLowerCase() == \"text\"){\r\n                    var itemsText = [];\r\n                    $.each(this.nodes, function(i, node){\r\n                        itemsText.push(node.title)\r\n                    })\r\n                    return itemsText;\r\n                }else if(type.toLowerCase() == \"data\"){\r\n                    var itemsArray = [];\r\n                    $.each(this.nodes, function(i, node){\r\n                        itemsArray.push(node.data)\r\n                    })\r\n                    return itemsArray;\r\n                }else{\r\n                    return this.nodes;\r\n                }\r\n            },\r\n            add: function(data, isTriggerSelectedEvent, isEnableRemove){\r\n                this.addNodes(data, isTriggerSelectedEvent, isEnableRemove);\r\n            },\r\n            remove: function(data){\r\n                this.removeNodes(data);\r\n            },\r\n            disabled: function(isAll){\r\n                var that = this;\r\n                that.setEnable(false, isAll);\r\n\r\n                that.$input ? that.$input.attr(\"disabled\", true) : null;\r\n                that.$viewBox.off(\"click\").addClass(\"disabled\");\r\n                that.$container.find('[wui-toolBar-action]').attr(\"disabled\", \"disabled\");\r\n                // that.$container.attr(\"disabled\", \"disabled\");\r\n            },\r\n            enabled: function(isAll){\r\n                var that = this;\r\n                that.setEnable(true, isAll);\r\n\r\n                that.$input ? that.$input.removeAttr(\"disabled\") : null;\r\n                that.$viewBox.removeClass(\"disabled\");\r\n\r\n                // 点击标签栏弹出选择框事件\r\n                if(that.opt.isClickTriggerPopup){\r\n                    that.$viewBox.off(\"click\").on(\"click\", function(){\r\n                        that.open();\r\n                    })\r\n                }\r\n\r\n                that.$container.find('[wui-toolBar-action]').removeAttr(\"disabled\");\r\n                // that.$container.removeAttr(\"disabled\");\r\n            },\r\n            readonly: function(isAll){\r\n                var that = this;\r\n                that.setEnable(false, isAll);\r\n\r\n                that.$input ? that.$input.attr(\"readonly\", true) : null;\r\n                that.$viewBox.off(\"click\").addClass(\"readonly\");\r\n                that.$container.find('[wui-toolBar-action]').attr(\"disabled\", \"disabled\");\r\n                // that.$container.attr(\"disabled\", \"disabled\");\r\n            },\r\n            readwrite: function(isAll){\r\n                var that = this;\r\n                that.setEnable(true, isAll);\r\n\r\n                that.$input ? that.$input.removeAttr(\"readonly\") : null;\r\n                that.$viewBox.removeClass(\"readonly\");\r\n\r\n                // 点击标签栏弹出选择框事件\r\n                if(that.opt.isClickTriggerPopup){\r\n                    that.$viewBox.off(\"click\").on(\"click\", function(){\r\n                        that.open();\r\n                    })\r\n                }\r\n\r\n                that.$container.find('[wui-toolBar-action]').removeAttr(\"disabled\");\r\n                // that.$container.removeAttr(\"disabled\");\r\n            },\r\n            _refresh: function(params){\r\n                var that = this, isResetHeight = false, \r\n                    isClear = false, isResetText = false, isRenderInput = false;\r\n                // {string} 弹出页面URL\r\n                if(params.popPageUrl != undefined && this.opt.popPageUrl != params.popPageUrl){\r\n                    if(params.popPageUrl != \"\"){\r\n                        this.opt.popPageUrl = params.popPageUrl;\r\n                    }\r\n                }\r\n\r\n                // {string} 传递到弹出页面的各个子页面的自定义json数据\r\n                if(params.otherParam != undefined && this.opt.otherParam != params.otherParam){\r\n                    this.opt.otherParam = params.otherParam;\r\n                }\r\n\r\n                // {string} 树列表标题\r\n                if(params.treeTitle != undefined && this.opt.treeTitle != params.treeTitle){\r\n                    this.opt.treeTitle = params.treeTitle;\r\n                }\r\n\r\n                // {string} 树形数据URL\r\n                if(params.treeUrl != undefined && this.opt.treeUrl != params.treeUrl){\r\n                    this.opt.treeUrl = params.treeUrl;\r\n                }\r\n\r\n                // {string} 树形懒加载字段\r\n                if(params.lazyField != undefined && this.opt.lazyField != params.lazyField){\r\n                    this.opt.lazyField = params.lazyField;\r\n                }\r\n\r\n                // {string} 树形是否可搜索\r\n                if(params.isEnabledSearch != undefined && this.opt.isEnabledSearch != params.isEnabledSearch){\r\n                    this.opt.isEnabledSearch = params.isEnabledSearch;\r\n                }\r\n\r\n                // {string} Tab选项卡标题(多个数据用\",\"分隔开)\r\n                if(params.tabTitle != undefined && this.opt.tabTitle != params.tabTitle){\r\n                    this.opt.tabTitle = params.tabTitle;\r\n                }\r\n\r\n                // {string} 列表页面URL(多个数据用\",\"分隔开)\r\n                if(params.tabUrl != undefined && this.opt.tabUrl != params.tabUrl){\r\n                    this.opt.tabUrl = params.tabUrl;\r\n                }\r\n\r\n                // {string} 列表标题\r\n                if(params.gridTitle != undefined && this.opt.gridTitle != params.gridTitle){\r\n                    this.opt.gridTitle = params.gridTitle;\r\n                }\r\n\r\n                // {string} 列表地址\r\n                if(params.gridUrl != undefined && this.opt.gridUrl != params.gridUrl){\r\n                    this.opt.gridUrl = params.gridUrl;\r\n                }\r\n\r\n                // {string} 弹出层页面高度\r\n                if(params.pageHeight != undefined && this.opt.pageHeight != params.pageHeight){\r\n                    this.opt.pageHeight = params.pageHeight;\r\n                }\r\n                // {string} 弹出层页面宽度\r\n                if(params.pageWidth != undefined && this.opt.pageWidth != params.pageWidth){\r\n                    this.opt.pageWidth = params.pageWidth;\r\n                }\r\n                // {string} 弹出层页面标题\r\n                if(params.pageTitle != undefined && this.opt.pageTitle != params.pageTitle){\r\n                    this.opt.pageTitle = params.pageTitle;\r\n                }\r\n                // {boolean} 是否可赋值到其他标签中\r\n                if(params.isVoluation != undefined && this.opt.isVoluation != params.isVoluation){\r\n                    this.opt.isVoluation = params.isVoluation;\r\n                }\r\n                // {boolean} 是否清空原有的数据再填充数据\r\n                if(params.isRewrite != undefined && this.opt.isRewrite != params.isRewrite){\r\n                    this.opt.isRewrite = params.isRewrite;\r\n                }\r\n\r\n                // isAllowDuplicates: {boolean} 是否允许标签数据name参数值重复\r\n                if(params.isAllowDuplicates != undefined && this.opt.isAllowDuplicates != params.isAllowDuplicates){\r\n                    this.opt.isAllowDuplicates = params.isAllowDuplicates;\r\n                    if(!params.isAllowDuplicates){\r\n                        isClear = true;\r\n                    }\r\n                }\r\n                // {String} 组件初始化宽度\r\n                if(params.width != undefined && this.opt.width != params.width){\r\n                    this.opt.width = params.width;\r\n                    this.width(this.opt.width);\r\n                }\r\n                // {String} 组件初始化高度\r\n                if(params.initHeight != undefined && this.opt.initHeight != params.initHeight){\r\n                    this.opt.initHeight = params.initHeight;\r\n                    isResetHeight = true;\r\n                }\r\n                // {String} 组件最大宽度\r\n                if(params.maxHeight != undefined && this.opt.maxHeight != params.maxHeight){\r\n                    this.opt.maxHeight = params.maxHeight;\r\n                    isResetHeight = true;\r\n                }\r\n\r\n                // 重置高度\r\n                if(isResetHeight){\r\n                    this.height(this.opt.initHeight, this.opt.maxHeight);\r\n                }\r\n                \r\n                // isAddRemoveLink: {boolean} 是否添加删除操作\r\n                if(params.isAddRemoveLink != undefined && this.opt.isAddRemoveLink != params.isAddRemoveLink){\r\n                    this.opt.isAddRemoveLink = params.isAddRemoveLink;\r\n                    this.setEnable(this.opt.isAddRemoveLink);\r\n                }\r\n\r\n                // isShowAnimate: {boolean} 当节点存在时,是否动画展示该节点\r\n                if(params.isShowAnimate != undefined && this.opt.isShowAnimate != params.isShowAnimate){\r\n                    this.opt.isShowAnimate = params.isShowAnimate;\r\n                }\r\n\r\n                // text: {string}  选中值保存的text字段\r\n                if(params.text != undefined && this.opt.text != params.text){\r\n                    isClear = true;\r\n                    this.opt.text = params.text;\r\n                }\r\n                // name: {string}  选中值保存的name字段\r\n                if(params.name != undefined && this.opt.name != params.name){\r\n                    isClear = true;\r\n                    this.opt.name = params.name;\r\n                }\r\n                // 清空节点\r\n                if(isClear){\r\n                    this.empty();\r\n                }\r\n\r\n                // tagClass: {string} 标签块样式类\r\n                if(params.tagClass != undefined && this.opt.tagClass != params.tagClass){\r\n                    if(this.opt.tagClass != \"\"){\r\n                        $.each(that.nodes, function(i, node){\r\n                            node.node.removeClass(that.opt.tagClass).addClass(params.tagClass);\r\n                        })\r\n                    }\r\n\r\n                    this.opt.tagClass = params.tagClass;\r\n                }\r\n\r\n                // maxNumber: {number} 最多可选节点个数,false代表不限制\r\n                if(params.maxNumber != undefined && this.opt.maxNumber !== ui.formatMaxNumber(params.maxNumber)){\r\n                    var maxNumber = ui.formatMaxNumber(params.maxNumber);\r\n                    this.opt.maxNumber = maxNumber;\r\n                    if(!!maxNumber){\r\n                        // var len = that.nodes.length;\r\n                        while(that.nodes.length > maxNumber){\r\n                            var lastNode = that.nodes[that.nodes.length - 1];\r\n                            lastNode.remove();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // ellipsis: {string} 是省略符号,当标签个数达到最大字符数时替换多余字符的字符串\r\n                if(params.ellipsis != undefined && this.opt.ellipsis != params.ellipsis){\r\n                    this.opt.ellipsis = params.ellipsis;\r\n                    isResetText = true;\r\n                }\r\n\r\n                // maxChars: {number} 每个标签字符限制个数,0代表不限制\r\n                if(params.maxChars != undefined && this.opt.maxChars != ui.formatMaxChars(params.maxChars)){\r\n                    var maxChars = ui.formatMaxChars(params.maxChars);\r\n                    this.opt.maxChars = maxChars;\r\n                    isResetText = true;\r\n                }\r\n\r\n                // 更新文本值\r\n                if(!isClear && isResetText){\r\n                    $.each(that.nodes, function(i, node){\r\n                        node.renderTitle();\r\n                    })\r\n                }\r\n\r\n                // isFreeInput: {boolean} 是否可以自由输入\r\n                if(params.isFreeInput != undefined && this.opt.isFreeInput != params.isFreeInput){\r\n                    this.opt.isFreeInput = params.isFreeInput;\r\n\r\n                    isRenderInput = true;\r\n                }\r\n\r\n                // isFilterable: {boolean} 是否启用数据过滤\r\n                if(params.isFilterable != undefined && this.opt.isFilterable != params.isFilterable){\r\n                    this.opt.isFilterable = params.isFilterable;\r\n\r\n                    isRenderInput = true;\r\n                }\r\n\r\n                if(isRenderInput){\r\n                    that.renderInputBox();\r\n                }\r\n\r\n                if(params.isShowInputBar != undefined && this.opt.isShowInputBar != params.isShowInputBar){\r\n                    this.opt.isShowInputBar = params.isShowInputBar;\r\n                    if(params.isShowInputBar){\r\n                        this.$viewCon.show();\r\n                    }else{\r\n                        this.$viewCon.hide();\r\n                    }\r\n                }\r\n\r\n                if(params.isShowBtnGroup != undefined && this.opt.isShowBtnGroup != params.isShowBtnGroup){\r\n                    this.opt.isShowBtnGroup = params.isShowBtnGroup;\r\n                    this.renderToolbar(this.opt.isShowBtnGroup);\r\n                }\r\n\r\n                // 标签栏是否可点击弹窗\r\n                if(params.isClickTriggerPopup != undefined && this.opt.isClickTriggerPopup != params.isClickTriggerPopup){\r\n                    this.opt.isClickTriggerPopup = params.isClickTriggerPopup;\r\n                    this.$viewBox.off(\"click\");\r\n                    if(this.opt.isClickTriggerPopup){\r\n                        this.$viewBox.on(\"click\", function(){\r\n                            that.open();\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            option: function(args){\r\n                var that = this;\r\n                \r\n                if(args){\r\n                    if(typeof args === \"object\"){\r\n                        this._refresh(args);\r\n                    }else if(typeof args === \"string\"){\r\n                        if(args === \"getDefOpt\"){\r\n                            return that.defaults;\r\n                        }else{\r\n                            return that.opt[args];\r\n                        }\r\n                    }\r\n                        \r\n                }else{\r\n                    return this.opt;\r\n                }\r\n            },\r\n            // 关闭回调执行顺序: successCallback() 优先于 onClosedLayer()(即模态框的closedCallback方法,这也保证了在这个方法内可以获取到chooseBox的组件值)\r\n            open: function(newParam){\r\n                newParam = ui.formatOtherParam(newParam);\r\n\r\n                var that = this, opt = this.opt;\r\n                // 设置弹窗数据\r\n                var url = newParam.url || opt.popPageUrl;\r\n                var width = newParam.width || opt.pageWidth;\r\n                var height = newParam.height || opt.pageHeight;\r\n                var title = newParam.title || opt.pageTitle;\r\n\r\n                // 成功关闭执行回调方法\r\n                var closeFunc = function(res){\r\n                    var isContinue = true;\r\n                    var onSuccessCallback = newParam.onSuccessCallback || opt.onSuccessCallback;\r\n                    if(onSuccessCallback && typeof(onSuccessCallback) === \"function\"){\r\n                        isContinue = onSuccessCallback(res);\r\n                    }\r\n                    if(isContinue !== false){\r\n                        _close(res);\r\n                    }\r\n                }\r\n                // 右上角关闭按钮执行回调\r\n                var onCancelCallback = newParam.onCancelCallback || opt.onCancelCallback;\r\n                // 层关闭执行回调方法\r\n                var onClosedLayer = newParam.onClosedLayer || opt.onClosedLayer;\r\n\r\n                var urlParams ={\r\n                    selectorId: this.id\r\n                    // 树列表标题\r\n                    , treeTitle: opt.treeTitle    \r\n                    // 树形数据URL\r\n                    , treeUrl: opt.treeUrl        \r\n                    // 树形结构懒加载字段\r\n                    , lazyField: opt.lazyField \r\n                    // 树形结构是否可搜索   \r\n                    , isEnabledSearch: opt.isEnabledSearch\r\n                    // 列表页面URL\r\n                    , tabUrl: opt.tabUrl        \r\n                    // 选项卡标题\r\n                    , tabTitle: opt.tabTitle \r\n                    // 列表页面URL\r\n                    , gridUrl: opt.gridUrl        \r\n                    // 列表标题\r\n                    , gridTitle: opt.gridTitle \r\n\r\n                    // text字段     \r\n                    , text: opt.text        \r\n                    // name字段\r\n                    , name: opt.name       \r\n                    // 最多可选个数\r\n                    , maxNumber: opt.maxNumber      \r\n                    // 是否允许重复填充数据\r\n                    , isAllowDuplicates: opt.isAllowDuplicates  \r\n                    // 是否重写数据,即清空原有数据\r\n                    , isRewrite: opt.isRewrite\r\n                    // {Boolean} 是否在弹出层里面禁用删除传递的值\r\n                    , isDisableRemove: opt.isDisableRemove\r\n                    // {JSON} 可传入任意的json参数,特殊情况下,场景需要额外的参数\r\n                    , otherParam: opt.otherParam\r\n\r\n                    // 拓展参数:树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n                    , treeExtSetting: opt.treeExtSetting\r\n                    // 拓展参数:选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n                    , tabsExtSetting: opt.tabsExtSetting\r\n                    // 拓展参数:列表组件拓展配置,具体参数详见\"wui.grid\",不支持传递方法属性值\r\n                    , gridExtSetting: opt.gridExtSetting\r\n                    // 拓展参数:标签组件拓展配置,具体参数详见\"wui.tagsinput\",不支持传递方法属性值\r\n                    , tagsExtSetting: opt.tagsExtSetting\r\n                }\r\n\r\n                // var urlParams ={\r\n                //     selectorId: this.id\r\n                //     // 树列表标题\r\n                //     , treeTitle: opt.treeTitle    \r\n                //     // 树形数据URL\r\n                //     , treeUrl: opt.treeUrl        \r\n                //     // 树形结构懒加载字段\r\n                //     , lazyField: opt.lazyField \r\n                //     // 树形结构是否可搜索   \r\n                //     , isEnabledSearch: opt.isEnabledSearch\r\n                //     // 列表页面URL\r\n                //     , tabUrl: opt.tabUrl        \r\n                //     // 选项卡标题\r\n                //     , tabTitle: opt.tabTitle \r\n                //     // 列表页面URL\r\n                //     , gridUrl: opt.gridUrl        \r\n                //     // 列表标题\r\n                //     , gridTitle: opt.gridTitle \r\n\r\n                //     // text字段     \r\n                //     , text: opt.text        \r\n                //     // name字段\r\n                //     , name: opt.name       \r\n                //     // 最多可选个数\r\n                //     , maxNumber: opt.maxNumber      \r\n                //     // 是否允许重复填充数据\r\n                //     , isAllowDuplicates: ui.formatParamToNumberBool(opt.isAllowDuplicates)    \r\n                //     // 是否重写数据,即清空原有数据\r\n                //     , isRewrite: ui.formatParamToNumberBool(opt.isRewrite)\r\n                //     // 页面高度\r\n                //     , pageHeight: height\r\n                //     // {Boolean} 是否在弹出层里面禁用删除传递的值\r\n                //     , isDisableRemove: ui.formatParamToNumberBool(opt.isDisableRemove)\r\n                //     // {JSON} 可传入任意的json参数,特殊情况下,场景需要额外的参数\r\n                //     , otherParam: JSON.stringify(opt.otherParam)      \r\n                // }\r\n\r\n                if(typeof(url) === \"string\" && url != \"\"){\r\n                    if(opt.isRewrite){\r\n                        that.empty();\r\n                    }\r\n\r\n                    var data = that.get(\"json\");\r\n                    \r\n                    ui.addChooseBoxNode(data);\r\n                    \r\n                    if(opt.onBeforeOpenPopup && typeof(opt.onBeforeOpenPopup) === \"function\"){\r\n                        var returnParams = opt.onBeforeOpenPopup(urlParams);\r\n                        if(returnParams && ui.isJson(returnParams)){\r\n                            urlParams = returnParams;\r\n                        }else if(returnParams === false){\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    // console.info(data);\r\n                    if(opt.isOpenWithNodes){\r\n                        urlParams.value = JSON.stringify(data);\r\n                    }else{\r\n                        urlParams.value = \"\";\r\n                    }\r\n\r\n                    if(opt.beforeOpenPop && typeof(opt.beforeOpenPop) === \"function\"){\r\n                        opt.beforeOpenPop(url, urlParams);\r\n                    }\r\n\r\n                    var commonPageUrl = ui.buildUrl(url, urlParams, true, true);\r\n                    var modalDialogParams = {\r\n                        url: commonPageUrl,\r\n                        width: width,\r\n                        height: height,\r\n                        title: title,\r\n                        isFull: opt.isFull,\r\n                        successCallback: closeFunc,\r\n                        cancelCallback: onCancelCallback,\r\n                        closedCallback: function(){\r\n                            ui.removeChooseBoxNode();\r\n                            var chooseBoxNodes = that.get(\"json\");\r\n                            if(onClosedLayer && typeof(onClosedLayer) === \"function\"){\r\n                                onClosedLayer(chooseBoxNodes);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(opt.modalExtSetting){\r\n                        $.extend(true, modalDialogParams, opt.modalExtSetting);\r\n                    }\r\n \r\n                    ui.openModalDialog(modalDialogParams)\r\n                    // ui.openModalDialog(commonPageUrl, closeFunc, width, height, title);\r\n                }else{\r\n                    ui.logWarn(\"打开页面的URL不能为空\", FRAME_NAME + \".\" + _widgetName, true);\r\n                }\r\n                return this;\r\n            },\r\n            empty: function(isTriggerUnselectEvent){\r\n                var that = this;\r\n                if(isTriggerUnselectEvent === undefined){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n\r\n                if(isTriggerUnselectEvent){\r\n                    while(that.nodes.length > 0){\r\n                        var firstNode = that.nodes[0];\r\n                        var data = firstNode.data;\r\n                        firstNode.remove();\r\n\r\n\r\n                        that.trigger(\"itemRemoved\", {\r\n                            type:'itemRemoved',\r\n                            item: data,\r\n                            items: that.get(\"json\"),\r\n                            nodes: that.nodes\r\n                        })\r\n                    }\r\n                }else{\r\n                    while(that.nodes.length > 0){\r\n                        var firstNode = that.nodes[0];\r\n                        firstNode.remove();\r\n                    }\r\n                }\r\n\r\n                // 更新节点之后执行\r\n                that.updatedNodes();\r\n\r\n                that.trigger(\"empty\", {\r\n                    type:'empty',\r\n                    component: that\r\n                });\r\n\r\n                if(isTriggerUnselectEvent === \"btn\"){\r\n                    that.trigger(\"emptyBtn\", {\r\n                        type:'emptyBtn',\r\n                        component: that\r\n                    });\r\n                }\r\n            },\r\n            destroy: function(){\r\n                this.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.$container.replaceWith(this.initDom);\r\n\r\n                // 改变组件状态为\"destroy\"\r\n                this.status = \"destroy\";\r\n\r\n                return this;\r\n            },\r\n            /*\r\n             * 触发方法\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-28\r\n             * @param    {[type]}   method [description]\r\n             * @param    {[type]}   params [description]\r\n             * @return   {[type]}          [description]\r\n             */\r\n            trigger: function(method, params){\r\n                var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n                // 将方法名首字母变大写: 如init -> Init\r\n                var method2 = method.substring(0,1).toUpperCase() + method.substring(1);\r\n\r\n                var result1, result2, result3;\r\n\r\n                if( this.opt[method] && typeof(this.opt[method]) === \"function\" ){\r\n\r\n                    result1 = this.opt[method].apply(this, args);\r\n\r\n                    if(!ui.isUndefined(result1)){\r\n                        return result1;\r\n                    }\r\n\r\n                }\r\n\r\n                if( this.opt[\"on\" + method2] && typeof(this.opt[\"on\" + method2]) === \"function\" ){\r\n\r\n                    result2 = this.opt[\"on\" + method2].apply(this, args);\r\n\r\n                    if(!ui.isUndefined(result2)){\r\n                        return result2;\r\n                    }\r\n                }\r\n\r\n                if( this.handlers[method] instanceof Array ){\r\n                    var event = {\r\n                        type: method,\r\n                        target: this,\r\n                        srcElement: this.element\r\n                    };\r\n                    \r\n                    $.extend(true, event, params);\r\n                    var handlers = this.handlers[method];\r\n                    for(var i = 0, len = handlers.length; i < len; i++) {\r\n                        var returnValue = handlers[i](event);\r\n                        if(!ui.isUndefined(returnValue)){\r\n                            return returnValue;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             * 获取内部组件对象\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @return   {[type]}   [description]\r\n             */\r\n            component: function(){\r\n                return this;\r\n            },\r\n            /*\r\n             * 组件绑定监听事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   type    [description]\r\n             * @param    {[type]}   handler [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            on: function(type, handler){\r\n                if(typeof this.handlers[type] === 'undefined') {\r\n                    this.handlers[type] = [];\r\n                }\r\n                this.handlers[type].push(handler);\r\n\r\n                return this;\r\n            },\r\n            /*\r\n             * 组件取消绑定监听事件\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-29\r\n             * @param    {[type]}   type    [description]\r\n             * @param    {[type]}   handler [description]\r\n             * @return   {[type]}           [description]\r\n             */\r\n            off: function(type, handler){\r\n                if(type){\r\n                    if(this.handlers[type] instanceof Array){\r\n                        var currentHandlers = this.handlers[type];\r\n                        if(handler && currentHandlers.indexOf(handler) > -1){\r\n                            var index = currentHandlers.indexOf(handler);\r\n                            this.handlers[type].splice(index, 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            }\r\n\t\t}\r\n\r\n        $.fn[_pluginName] = function(param1){\r\n            return this.each(function(){\r\n                //判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n                if(!$.data(document.getElementById(id), _pluginDataName)){\r\n                    //生成插件类实例。\r\n                    $.data(document.getElementById(id), _pluginDataName, new uiChooseBox(this, param1));\r\n                }\r\n            });\r\n        }\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params){\r\n\r\n            var data = $.data(document.getElementById(id), _pluginDataName);\r\n            if(!data){\r\n                ui.logError(\"组件未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n            if(typeof (data[funcName]) === \"function\"){\r\n                return data[funcName].apply(data, args);\r\n            }else{\r\n                ui.logWarn('组件中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         *  @event on\r\n         *  @param eventType {string} 可监听事件类型如下：<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> eventType </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"beforeItemAdd\" </td>\r\n                        <td> 单个节点添加之前触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemAddError\"</td>\r\n                        <td> 单个节点添加出错时触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemAdded\"</td>\r\n                        <td> 单个节点添加成功之后触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeItemRemove\"</td>\r\n                        <td> 单个节点移除之前触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemRemoveError\"</td>\r\n                        <td> 单个节点移除出错时触发 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemRemoved\"</td>\r\n                        <td> 单个节点移除成功之后触发 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         *  @param func {function} 事件类型触发之后的执行方法\r\n         *  @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 单个节点添加出错时触发\r\nuiChooseBox.on(\"itemAddError\", function(e){\r\n    console.log(e.message);\r\n});</code></pre>\r\n         */\r\n        function _on(eventType, func){\r\n            // var data = $.data(document.getElementById(id), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可取消监听事件类型同\"on\"方法的eventType参数\r\n         * @param [func] {function} 事件类型触发之后的执行方法,不传则默认取消该类型绑定的全部事件方法\r\n         * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 取消组件事件监听\r\nuiChooseBox.off(\"itemAddError\");</code></pre>\r\n         */\r\n        function _off(eventType, func){\r\n            // var data = $.data(document.getElementById(id), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n        * 设置组件值\r\n        * @method set\r\n        * @since 0.0.1\r\n        * @param data {Object/String} 设置的组件数据,可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> value值和text值默认一致(多个可以用数组表示或者用\",\"分隔开) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> Object </td>\r\n\t\t\t\t\t\t<td> 必须存在配置参数name和配置参数text的参数值对应的键值对,且此值作为保存的JSON对象,比如：配置参数中{\"name\":\"id\",\"text\":\"title\"},那传入键值对必须包含\"id\"、\"title\"的键值对 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @example  \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件值\r\nuiChooseBox.set({\"id\" :\"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\",\"name\":\"李文\",\"sex\":\"男\",\"age\":\"25\",\"email\":\"15875354693@163.com\"});</code></pre>\r\n        */\r\n\t\tfunction _set(data, isTriggerUnselectEvent){\r\n\t\t\treturn _executeMethod(\"set\", data, isTriggerUnselectEvent);\r\n\t\t}\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n\t\t* @param type {string} 获取的组件值的类型,可选:value/text/json,默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件值\r\nvar value = uiChooseBox.get(\"value\");   // \"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\"</code></pre>\r\n        */\r\n        function _get(type){\r\n            return _executeMethod(\"get\", type);\r\n        }\r\n\r\n        /**\r\n        * 添加组件值\r\n        * @method add\r\n        * @since 0.0.1\r\n        * @param data {Object/String} 添加的组件数据@@@###添加的组件数据,可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-hover\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> value值和text值默认一致(多个可以用数组表示或者用\",\"分隔开) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> Object </td>\r\n\t\t\t\t\t\t<td> 必须存在配置参数name和配置参数text的参数值对应的键值对,且此值作为保存的JSON对象,比如：配置参数中{\"name\":\"id\",\"text\":\"title\"},那传入键值对必须包含\"id\"、\"title\"的键值对 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @example\r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件值\r\nuiChooseBox.add({\"id\" :\"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\",\"name\":\"李文\",\"sex\":\"男\",\"age\":\"25\",\"email\":\"15875354693@163.com\"});</code></pre>     \r\n        */\r\n\t\tfunction _add(data){\r\n\t\t\treturn _executeMethod(\"add\", data);\r\n\t\t}\r\n\r\n\t\t/**\r\n        * 移除组件节点\r\n        * @method remove\r\n        * @since 0.0.1\r\n        * @param data {Object/String} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 移除组件值的name参数对应的值集合(多个值用数组表示或者用\",\"分隔开) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> Object </td>\r\n\t\t\t\t\t\t<td> 移除组件值,必须存在name参数和text参数对应的键值对(不建议使用,但是存在多个重复name值时,可采用此参数),(多个值用数组表示) </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 移除组件节点和值\r\nuiChooseBox.remove(\"0cce8be5-d07e-e2b0-501a-44cb4d78b8be\");</code></pre>\r\n        */\r\n\t\tfunction _remove(data){\r\n\t\t\treturn _executeMethod(\"remove\", data);\r\n\t\t}\r\n\r\n        /**\r\n         * 打开弹窗\r\n         * @method openPopup\r\n\t\t * @param [newParam] {json} 打开弹窗的自定义参数配置,不填则采用默认参数,参数内容如下\r\n\t\t * @param newParam.url {string} 打开的弹窗页面地址\r\n\t\t * @param newParam.width {string} 打开弹窗宽度,需要带单位\r\n\t\t * @param newParam.height {string} 打开弹窗高度,需要带单位\r\n\t\t * @param newParam.title {string} 打开弹窗的标题\r\n\t\t * @param {Function} [newParam.onSuccessCallback]  关闭成功回调执行方法,参数是一个json对象,由弹出层调用wui.closeModalDialog()关闭层时返回数据决定,传递什么参数就返回什么参数\r\n         * @param {Function} [newParam.onCancelCallback]  弹出层右上角关闭按钮触发的回调,该回调携带两个参数,分别为：当前层索引参数(index)、当前层的DOM对象(layero),默认会自动触发关闭。如果不想关闭,return false即可\r\n         * @param {Function} [newParam.onClosedLayer]  无论是否成功关闭都会执行的回调方法,执行顺序: onSuccessCallback() 优先于 onClosedLayer()(即模态框的closedCallback方法,这也保证了在这个方法内可以获取到chooseBox的组件值),参数:chooseBoxNodes: 组件值(包括弹窗返回数据)\r\n         * @since 0.0.1\r\n         * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 打开弹窗\r\nuiChooseBox.openPopup({\r\n    \"title\": \"弹窗新标题\",\r\n    \"url\": \"http://hostname:post/new.html\"\r\n});</code></pre>\r\n        */\r\n\t\tfunction _openPopup(newParam){\r\n\t\t\tnewParam = newParam || {};\r\n\t\t\treturn _executeMethod(\"open\", newParam);\r\n\t\t}\r\n\r\n        /**\r\n        * 阻止点击弹出层和删除标签\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 阻止点击弹出层和删除标签\r\nuiChooseBox.disabled();</code></pre>\r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出层和删除标签\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 允许点击弹出层和删除标签\r\nuiChooseBox.enabled();</code></pre>\r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件只读\r\nuiChooseBox.readonly();</code></pre>\r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example\r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件可读可写\r\nuiChooseBox.readwrite();</code></pre>\r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> undefined </td>\r\n\t\t\t\t\t\t<td> 获取组件的配置参数 </td>\r\n\t\t\t\t\t\t<td> JSON 组件的配置参数 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 获取传入字符串对应的参数值 </td>\r\n\t\t\t\t\t\t<td> 传递的字符串对应的组件配置值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> JSON </td>\r\n\t\t\t\t\t\t<td> 重置组件参数配置 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件参数\r\nuiChooseBox.option();</code></pre>\r\n        */\r\n\t\tfunction _option(params){\r\n\t\t\treturn _executeMethod(\"option\", params);\r\n\t\t}\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 清空组件值：设置不可自由输入时,可通过此方法清除选中值\r\nuiChooseBox.empty();</code></pre>\r\n        */\r\n\t\tfunction _empty(isTriggerUnselectEvent){\r\n\t\t\treturn _executeMethod(\"empty\", isTriggerUnselectEvent);\r\n\t\t}\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 销毁组件：销毁之后可通过重新初始化组件启用组件\r\nuiChooseBox.destroy();</code></pre>\r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 阻止点击弹出层和删除标签\r\nvar component = uiChooseBox.component();</code></pre>\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 重新初始化组件,若是传递参数,则\r\nvar myChooseBox = uiChooseBox.init();</code></pre>\r\n         */\r\n        function _init(opt){\r\n            if(!$.data(document.getElementById(id), _pluginDataName)){\r\n                $('#' + id)[_pluginName](opt);\r\n            }else{\r\n                if(opt && ui.isJson(opt)){\r\n                    return _executeMethod(\"option\", opt);\r\n                }else{\r\n                    return;\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        // 初始化组件\r\n        _init(options);\r\n\r\n\t\treturn {\r\n            // 初始化组件\r\n            init: _init,\r\n            // 监听组件事件            \r\n\t\t\ton: _on,\r\n            // 取消绑定组件事件\r\n\t\t\toff: _off,\r\n            // 获取组件值\r\n\t\t\tget: _get,\r\n            // 设置组件值\r\n\t\t\tset: _set,\r\n            // 增加组件节点和值\r\n\t\t\tadd: _add,\r\n            // 移除组件节点和值\r\n\t\t\tremove: _remove,\r\n            // 启用组件\r\n            enabled: _enabled,\r\n            // 禁用组件\r\n            disabled: _disabled,\r\n            // 可读可写\r\n            readwrite: _readwrite,\r\n            // 只读\r\n            readonly: _readonly,\r\n            // 弹出窗口\r\n\t\t\topenPopup: _openPopup,\r\n            // 销毁组件\r\n\t\t\tdestroy: _destroy,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            // 设置或者获取组件参数\r\n\t\t\toption: _option,\r\n            // 清空组件值\r\n\t\t\tempty: _empty\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","// wui.selectComboBox\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>下拉选择组合框</h3>\r\n     * <ol>\r\n     * <li>支持自定义下拉数据源:树形结构、列表结构、树+列表结构; </li>\r\n     * <li>支持自定义下拉框弹出页面内容; </li>\r\n     * <li>支持多选个数限制; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiSelectComboBox\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.selectComboBox/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/select\"}}{{/crossLink}}: 选中选项 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/unselect\"}}{{/crossLink}}: 取消选项选中 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/enabled\"}}{{/crossLink}}: 允许点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/disabled\"}}{{/crossLink}}: 阻止点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/refresh\"}}{{/crossLink}}: 刷新组件下拉框 </li>\r\n     * <li>{{#crossLink \"wui.selectComboBox/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class selectComboBox\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string} option.pageUrl 下拉页面地址,默认公共页面：common_pages/wui.selectComboBox.dropdown.html \r\n     *  @param {string} [option.value] 初始化完成时，选中值的value属性值,默认是\"\"\r\n     *  @param {string} option.text 选中值保存的text字段,默认值是\"name\"\r\n     *  @param {string} option.name 选中值保存的name字段,默认值是\"id\"\r\n     *  @param {string} [option.direction] 下拉数据框展开方向,\"dropup\":向上，\"dropdown\"/不填:向下; 默认是\"auto\"\r\n     *  @param {JSON} [option.otherParam] 传递到弹出页面的各个子页面的自定义json数据，默认是{}\r\n     *  @param {string} [option.multipleSeparator] 多选的分隔符,默认是\",\"\r\n     *  @param {number} [option.maxHeight] 下拉页面最大高度,单位\"px\",默认为0，表示自适应高度\r\n     *  @param {number} [option.maxNumber] 最多可选个数,默认是false, 代表无限制  \r\n     *  @param {string} [option.width]   组件宽度，默认是\"100%\"\r\n     *  @param {Boolean} [option.isReload] 是否每次打开下拉视图都重新加载内容,默认是false\r\n     *  @param {String} option.treeTitle 树结构标题,默认是\"\"   \r\n     *  @param {String} option.treeUrl  树结构加载服务地址,默认是\"\"    \r\n     *  @param {String} [option.lazyField]  树结构懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"parentDeptId\" \r\n     *  @param {boolean} [option.isEnabledSearch]  树结构是否启用搜索栏,默认是true  \r\n     *  @param {String} option.tabTitle Tab选项卡标题(多个数据用\",\"分隔开),默认是\"\" \r\n     *  @param {String} option.tabUrl Tab选项卡对应列表页面URL(多个数据用\",\"分隔开),默认是\"\" \r\n     *  @param {string} [option.treeExtSetting]  #@default:null# 树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n     *  @param {string} [option.tabsExtSetting]  #@default:null# 选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值 \r\n     *  @param {Function} [option.beforeIframeLoad] 在Iframe加载之前调用,传递参数iframe(下拉框iframe对象),urlParams(传入下拉框链接参数),默认是空值\r\n     *  @param {Function} [option.updateSubpageItem] 父页面增删节点失败时,更新子页面节点数据,传递参数args   <br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 参数 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> args.item </td>\r\n\t\t\t\t\t\t<td>增删失败的节点数据</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> args.isDelError </td>\r\n\t\t\t\t\t\t<td>是否是删除失败的节点</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> args.iframe </td>\r\n\t\t\t\t\t\t<td>下拉页面的iframe对象</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Select Combo Box: &lt;input type=\"text\" id=\"selectComboBoxId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiSelectComboBox = wui.selectComboBox( \"selectComboBoxId\",{\r\n                \"treeTitle\": \"测试树\",     // 下拉树导航标题\r\n                \"treeUrl\": \"json/tree.json\",    // 下拉树导航数据地址\r\n                \"tabTitle\": \"列表1,列表2,列表3\",  // 下拉列表页面选项卡标题\r\n                \"tabUrl\": \"wui.popup.list.html,wui.popup.list.html,wui.popup.list1.html\"    // 下拉列表页面选项卡页面地址\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.selectComboBox = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiSelectComboBox\",\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n\t\t\t_widgetName = \"selectComboBox\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n\t\tif(!$(\"#\" + element).exist()){\r\n\t\t\tui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t\t// _widgetDataName = 'plugin_'+_widgetName,\r\n\t\t\t// \"iframeLoaded\"：下拉页面加载完成\r\n\t\t\t// \"beforeItemSelect\"：选中的单个节点之前触发\r\n\t\t\t// \"itemSelectError\"：单个节点选中出错触发\r\n\t\t\t// \"itemSelected\"：单个节点选中成功触发\r\n\t\t\t// \"beforeItemUnselect\"：取消选中单个节点之前触发\r\n\t\t\t// \"itemUnselectError\"：单个节点取消选中出错触发\r\n\t\t\t// \"itemUnselected\"：单个节点取消选中成功触发\r\n\t\tvar _widgetEventType = [\"iframeLoaded\", \"beforeItemSelect\", \"itemSelectError\", \"itemSelected\", \"beforeItemUnselect\", \"itemUnselectError\", \"itemUnselected\"];\t// wui组件监听事件类型\r\n\t\t\r\n\t\t//默认配置项\r\n\t\tvar config = {\r\n            // {string} 下拉数据框展开方向,dropup:向上，不填则默认向下\r\n\t\t\tdirection: \"auto\"\t\r\n            // {string}  多选的分隔符\r\n            , multipleSeparator : \",\" \t\r\n            // {number} 最多可选个数，false代表无限制\r\n            , maxNumber: false         \t\r\n            // {string}  初始化完成时，默认选中值的value属性值\r\n            , value: \"\"\t\t\t\r\n            // {string}  非空,选中值保存的value字段\r\n            , name: \"id\"   \t\t\r\n            // {string}  非空,选中值保存的text字段\r\n            , text: \"name\"  \t\r\n\r\n            // 下拉页面设置\r\n            // // {string} 必填,下拉页面地址;默认公共页面：wui.selectComboBox.dropdown.html\r\n            , pageUrl: ui.commonPageBasePath + \"wui.comboBox.dropdown.html\"\t\t\r\n            // {json} 传递到弹出页面的各个子页面的自定义json数据\r\n            , otherParam: {}\t\t\r\n            // {number} 下拉视图最大高度,单位\"px\",默认为0，表示自适应到页面底部高度\r\n            , maxHeight: 0             \r\n            // {String} 组件宽度,默认\"100%\"\r\n            , width: \"\"      \r\n            // {Boolean} 是否每次打开下拉视图都重新加载内容,默认是false\r\n            , isReload: false\t\t\r\n            // {function} 在Iframe加载之前调用\r\n            , beforeIframeLoad: ui.CONSTANTS.EMPTYFUNC\t\r\n            /* 树配置 */\r\n            // {string} 树列表标题\r\n            , treeTitle: '' \r\n            // {string} 树形数据URL\r\n            , treeUrl: ''   \r\n            , lazyField: 'parentDeptId'\r\n            , isEnabledSearch: true\r\n            /* 选项卡/列表配置 */\r\n            // {string} Tab选项卡标题(多个数据用\",\"分隔开)\r\n            , tabTitle:''\t\r\n            // {string} 列表页面URL(多个数据用\",\"分隔开)\r\n            , tabUrl: ''\r\n            // 拓展参数:树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n            , treeExtSetting: null\r\n            // 拓展参数:选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n            , tabsExtSetting: null\r\n            , defaultText: {\r\n                noneSelectedText : ui.language.selectComboBox.noneSelected\r\n            }  \r\n            // {function} 父页面增删节点失败时,更新子页面节点数据,传递参数: args\r\n            , updateSubpageItem: ui.CONSTANTS.EMPTYFUNC\t\r\n            \t// args.item: 增删失败的节点\r\n            \t// args.isDelError: 是否是删除失败的节点\r\n            \t// args.iframe: 下拉页面的iframe对象\r\n\t\t};\r\n\r\n\t\t// 不改动的参数配置\r\n\t\tvar defaults = {\r\n            // 提示语汉化\r\n            // noneSelectedText : \"没有选中任何项\"\r\n            maxOptionsText : ['超出限制 (最多选择{n}项)', '组选择超出限制(最多选择{n}组)']\r\n\t\t}\r\n\r\n\t\tfunction uiSelectComboBox(element, options){\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init();\t\r\n\t\t}\r\n\r\n\t\tuiSelectComboBox.prototype = {\r\n\t\t\tconstructor: uiSelectComboBox,\r\n\r\n\t\t\tinit: function(){\r\n\t\t\t\t// 初始化对象静态属性\r\n\t\t\t\tthis.pluginName = _widgetName;      // 缓存插件名字\r\n\t\t\t\tthis.element = element;             // 保存初始化标签id\r\n\t\t\t\tthis.$element = $(\"#\" + element);\t// 保存初始化标签jQuery\r\n\t\t\t\tthis.defaults = defaults;           // 保存静态默认配置项\r\n\r\n\t            // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n\t\t\t\tthis.initDom = this.$element.prop(\"outerHTML\");\r\n\t\t\t\t// this._opt = _opt;\t// 覆盖默认配置项\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n\t\t\t\tthis.itemsArray = [];\t// 存放选中节点JSON数据\r\n\t\t\t\tthis.itemsName = [];\t// 存放选中节点的name参数字段值集合\r\n\t\t\t\tthis.itemsText = [];\t// 存放选中节点的text参数字段值集合\r\n\r\n\t\t\t\t// 初始化对象页面结构模板\r\n\t\t\t\tthis.iframeTmpl = '<iframe id=\"\" name=\"\" allowtransparency=\"true\" width=\"100%\" height=\"98%\" src=\"\" scrolling=\"yes\" frameborder=\"0\"></iframe>';\r\n\r\n                if(this.$element.attr(\"placeholder\")){\r\n                    this.defaults.noneSelectedText = this.$element.attr(\"placeholder\");\r\n                }else{\r\n                    this.defaults.noneSelectedText = this._opt.defaultText.noneSelectedText;\r\n                }\r\n\t\t\t\t// 初始化对象页面结构\r\n                this.$Maxcontainer = null; // 组件最外层容器(.wui-selectcombobox): $element + $viewBox\r\n                this.$viewBox = null;   // 组件可视框([wui-combobox=\"dropdowm\"]):$buttonBox + $dropdownBox\r\n                this.$buttonBox = null; // 组件点击展开区域(.dropdown-toggle):$resultBox\r\n                this.$resultBox = null; // 组件结果显示框(.filter-option.pull-left)\r\n                this.$dropdownBox = null;   // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $contentBox + closeBox\r\n                this.$selectContentBox = null;    // 组件下拉视图选择内容框([wui-data=\"menu\"].dropdown-menu):$iframe\r\n                this.errorElement = null;    // 保存校验出错节点\r\n    \t\t\tthis.iframe = null;\t\t// 下拉iframe\r\n    \t\t\t\r\n\t\t\t\t// 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n            \tthis.handlers = {};\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n                // 构建组件页面容器结构\r\n                this.dom = this._buildContainer();  // 创建DOM节点,并返回$Maxcontainer的HTML字符串\r\n\t\t\t\t// this.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t\t\t},\r\n            _buildContainer: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!($selector.attr('name'))){\r\n                    $selector.attr('name', self.element);\r\n                }\r\n                this.name = $selector.attr('name'); //  保存name属性值\r\n\r\n                if(!($selector.parent().hasClass('wui-selectcombobox'))){\r\n                    var parentDiv = '<div class=\"wui-selectcombobox\"></div>';\r\n                    $selector.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n                this.$Maxcontainer = $selector.parent(); // 组件最外层容器(.wui-selectcombobox): $element + $viewBox\r\n                this.$viewBox = $('<div wui-combobox=\"dropdowm\" class=\"btn-group wui-select-box show-tick input-layout\" style=\"width: 100%;\"></div>');   // 组件可视框([wui-combobox=\"dropdowm\"]):$buttonBox + $dropdownBox\r\n                this.$buttonBox = $('<button type=\"button\" class=\"wui-btn dropdown-toggle btn-default\" data-toggle=\"dropdown\" aria-expanded=\"true\"></button>').appendTo(this.$viewBox); // 组件点击展开区域:$resultBox\r\n                this.$resultBox = $('<span class=\"filter-option pull-left\">' + this.defaults.noneSelectedText + '</span>').appendTo(this.$buttonBox); // 组件结果显示框\r\n                this.$caret = $('<span class=\"ws-caret\"> <span class=\"caret\"></span> <span class=\"sr-only\">Toggle Dropdown</span> </span>').appendTo(this.$buttonBox);\r\n                this.$dropdownBox = $('<div class=\"dropdown-menu open\"></div>').appendTo(this.$viewBox);   // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $selectContentBox + closeBox\r\n                this.$selectContentBox = $('<div wui-data=\"menu\" class=\"dropdown-menu inner\" role=\"menu\" style=\"overflow-y: auto; height: 100%;\"></div>').appendTo(this.$dropdownBox);    // 组件下拉视图选择内容框([wui-data=\"menu\"].dropdown-menu):$iframe\r\n\r\n                $selector.after(this.$viewBox);\r\n                $selector.hide();\r\n\r\n                this._setDirection();\r\n                // this._initDropDownBox();\r\n                this._bindEvent();\r\n\r\n                if(param.width){\r\n                    this.$Maxcontainer.width(param.width);\r\n                }\r\n\r\n                this.select(param.value);   // 选中默认值\r\n\r\n                this.hasDom = true;\r\n\r\n                return this.$Maxcontainer.prop(\"outerHTML\");\r\n            },\r\n            _initDropDownBox: function(){\r\n            \tvar iframe = this._initSelectContentBox();\r\n        \t\tif(!iframe){\r\n        \t\t\tthis.$selectContentBox.height(40);\r\n        \t\t\tui.logWarn(\"没有传入可初始化下拉框的数据\", FRAME_NAME + \".\" + _widgetName, true);\r\n        \t\t\treturn false;\r\n        \t\t}\r\n\r\n        \t\tthis._loadIframe(iframe);\r\n            },\r\n            // 初始化选择内容框\r\n            _initSelectContentBox: function(){\r\n            \tvar self = this, param = this._opt, $selector = this.$element;\r\n\t        \t// 给下拉视图绑定ID并获取\r\n\t        \tvar comboBoxId;\r\n            \tif(!(self.$selectContentBox.attr(\"id\"))){\r\n            \t\tcomboBoxId = ui.guid();\r\n            \t\tself.$selectContentBox.attr(\"id\", comboBoxId);\r\n            \t}else{\r\n            \t\tcomboBoxId = self.$selectContentBox.attr(\"id\");\r\n            \t}\r\n\r\n            \t// var isHasData = false;\r\n        \t\t// console.info(param.pageUrl);\r\n            \tif(param.pageUrl && param.pageUrl != \"\"){\r\n            \t\tif(!(param.treeUrl == \"\" && param.tabUrl.length == 0)){\r\n            \t\t// \tisHasData = false;\r\n            \t\t// }else{\r\n            \t\t\tvar $iframe = $(self.iframeTmpl);\r\n            \t\t\tthis.iframe = $iframe[0];\r\n\t        \t\t\tvar iframeId = comboBoxId + \"_iframe\";\r\n\t            \t\t$iframe.attr({\r\n\t            \t\t\t\"id\": iframeId,\r\n\t            \t\t\t\"name\": iframeId\r\n\t            \t\t});\r\n\r\n\t\t        \t\tself.$selectContentBox.html($iframe);\r\n\r\n\t            \t\t// self._loadDropdown();\r\n\r\n\t            \t\t// isHasData = true;\r\n            \t\t}\r\n        \t\t}\r\n\r\n        \t\treturn this.iframe;\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n                this._opt.maxNumber = ui.formatMaxNumber(param.maxNumber);\r\n\r\n                var value = param.value;\r\n                if(ui.parseToObj(value)){\r\n                    this._opt.value = ui.parseToObj(value);\r\n                }\r\n            },\r\n            // 绑定事件\r\n            _bindEvent: function(){\r\n                var self = this, param = this._opt;\r\n                // $(document).on('click', '[wui-combobox=\"dropdowm\"]', function (e) {\r\n                //     wui.stopPropagation(e);\r\n                // });\r\n                $(document).on('click', '[wui-data=\"menu\"]', function (e) {\r\n\t\t\t\t\tui.stopPropagation(e);\r\n\t\t\t\t\t// console.error(e.target);\r\n\t\t\t\t});\r\n\r\n                this.$viewBox.on({\r\n                    'hide.bs.dropdown': function (e) {\r\n                        // console.info(\"hide.bs.dropdown\");\r\n                        self.$selectContentBox.attr('aria-expanded', false);\r\n                        // that.$element.trigger('hide.bs.select', e);\r\n                    },\r\n                    'hidden.bs.dropdown': function (e) {\r\n                        // console.info(\"hidden.bs.dropdown\");\r\n                    },\r\n                    'show.bs.dropdown': function (e) {\r\n                        // console.info(\"show.bs.dropdown\");\r\n                        self.$selectContentBox.attr('aria-expanded', true);\r\n                    },\r\n                    'shown.bs.dropdown': function (e) {\r\n                        // console.info(\"shown.bs.dropdown\");\r\n                        // console.info(param.isReload);\r\n                        if(param.isReload){\r\n\t                    \tself._setHeight();  // 设置高度\r\n\t\t                \tself._initDropDownBox();\t// 首次创建下拉视图\r\n\t                    }else{\r\n\t\t                    if(!self.iframe){\r\n\t\t                    \t// console.info(\"first load\");\r\n\t\t                    \tself._setHeight();  // 设置高度\r\n\t\t\t                \tself._initDropDownBox();\t// 首次创建下拉视图\r\n\t\t                    }\r\n\t               \t \t}\r\n                    }\r\n                });\r\n                // this.$viewBox.dropdown('show');\r\n                self.$element.attr(\"ui-type\", self.pluginName);\r\n                this.$element.on(\"change\", function(e){\r\n                    var _value = $(this).val();\r\n                    if(_value != \"\"){\r\n                        var _data = ui.parseToObj(_value);\r\n                        if(_data){\r\n                            self.select(_data);\r\n                        }else{\r\n                            self.select(_value);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // this.hasDom = true;\r\n            },\r\n            // 设置下拉视图展开方向\r\n            _setDirection: function(){\r\n                var param = this._opt;\r\n                if(param.direction == \"auto\"){\r\n                    this._checkDropdownPosition();\r\n                }else if(param.direction != \"\"){\r\n                    this.$viewBox.addClass(param.direction);\r\n                }\r\n            },\r\n            _checkDropdownPosition: function(){\r\n                var self = this;\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = self.$Maxcontainer.offset();\r\n                // console.info(viewSize);\r\n                // console.info(offsetSize);\r\n                if((viewSize.height / 2) > offsetSize.top){\r\n                    self.$viewBox.removeClass(\"dropup\");\r\n                    self.$viewBox.addClass(\"dropdown\");\r\n                }else{\r\n                    self.$viewBox.addClass(\"dropup\");\r\n                    self.$viewBox.removeClass(\"dropdown\");\r\n                }\r\n            },\r\n\t        // 加载Iframe\r\n\t        _loadIframe: function(iframe){\r\n\t        \tvar self = this, param = this._opt, $selector = this.$element;\r\n\r\n\t        \tiframe = iframe || this.iframe;\r\n    \t\t\t$(iframe).on(\"load\", function(e){\r\n    \t\t\t\t// console.info(e);\r\n        \t\t\tif(self.listeners.indexOf('iframeLoaded') > -1) {\r\n\t\t                if(!self.emit({type:'iframeLoaded',target: e.target})) return ;\r\n\t\t            }\r\n\t\t            // console.log(iframeId + \"加载完成\");\r\n        \t\t})\r\n\t        \t// self._loadDropdown();\r\n\t        \t// var self = this, param = this._opt, $selector = this.$element;\r\n\t        \t// var urlParams ={\r\n\t         //        selectorId: self.element\r\n          //           // 组件名\r\n\t         //        , widgetName: self.pluginName \t\r\n          //           // 树列表标题\r\n\t         //        , treeTitle: param.treeTitle\t\r\n          //           // 树形数据URL\r\n\t         //        , treeUrl: param.treeUrl    \t\r\n          //           // 树形结构懒加载字段\r\n          //           , lazyField: param.lazyField \r\n          //           // 树形结构是否可搜索   \r\n          //           , isEnabledSearch: param.isEnabledSearch\r\n\t         //        , tabUrl: (ui.isArray(param.tabUrl)) ? param.tabUrl.join(\",\") : param.tabUrl  // 列表页面URL      \t// 列表页面URL\r\n\t         //        , tabTitle: param.tabTitle      // 选项卡标题\r\n\t         //        , text: param.text        \t\t// text字段\r\n\t         //        , name: param.name       \t\t// name字段\r\n\t         //        , maxNumber: param.maxNumber  \t// 最多可选个数\r\n\t         //        , pageHeight: this.$selectContentBox.height()\r\n\t         //        , otherParam: JSON.stringify(param.otherParam)      // string json 可传入任意的json参数，特殊情况下，场景需要额外的参数\r\n\t         //        , data: self.get(\"value\")\r\n\t         //    }\r\n\r\n                var urlParams ={\r\n                    selectorId: this.element\r\n                    // 组件名\r\n                    , widgetName: self.pluginName\r\n                    // 树列表标题\r\n                    , treeTitle: param.treeTitle    \r\n                    // 树形数据URL\r\n                    , treeUrl: param.treeUrl        \r\n                    // 树形结构懒加载字段\r\n                    , lazyField: param.lazyField \r\n                    // 树形结构是否可搜索   \r\n                    , isEnabledSearch: param.isEnabledSearch\r\n                    // 列表页面URL\r\n                    , tabUrl: param.tabUrl        \r\n                    // 选项卡标题\r\n                    , tabTitle: param.tabTitle \r\n                    // 列表页面URL\r\n                    // , gridUrl: opt.gridUrl        \r\n                    // // 列表标题\r\n                    // , gridTitle: opt.gridTitle \r\n\r\n                    // text字段     \r\n                    , text: param.text        \r\n                    // name字段\r\n                    , name: param.name       \r\n                    // 最多可选个数\r\n                    , maxNumber: param.maxNumber\r\n                    // 下拉页面高度\r\n                    // , pageHeight: this.$selectContentBox.height()\r\n                    // // 是否允许重复填充数据\r\n                    // , isAllowDuplicates: opt.isAllowDuplicates  \r\n                    // // 是否重写数据,即清空原有数据\r\n                    // , isRewrite: opt.isRewrite\r\n                    // // {Boolean} 是否在弹出层里面禁用删除传递的值\r\n                    // , isDisableRemove: opt.isDisableRemove\r\n                    // {JSON} 可传入任意的json参数,特殊情况下,场景需要额外的参数\r\n                    , otherParam: param.otherParam\r\n                    // 已选数据key字段\r\n                    , data: self.get(\"value\")\r\n\r\n                    // 拓展参数:树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n                    , treeExtSetting: param.treeExtSetting\r\n                    // 拓展参数:选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n                    , tabsExtSetting: param.tabsExtSetting\r\n                    // 拓展参数:列表组件拓展配置,具体参数详见\"wui.grid\",不支持传递方法属性值\r\n                    // , gridExtSetting: param.gridExtSetting\r\n                    // 拓展参数:标签组件拓展配置,具体参数详见\"wui.tagsinput\",不支持传递方法属性值\r\n                    // , tagsExtSetting: opt.tagsExtSetting\r\n                }\r\n                \r\n    \t\t\tif(param.beforeIframeLoad && typeof(param.beforeIframeLoad) === \"function\" && param.beforeIframeLoad != $.noop){\r\n    \t\t\t\tvar _iframe = param.beforeIframeLoad(iframe, urlParams);\r\n    \t\t\t\t// console.info(_iframe);\r\n    \t\t\t\tif(!_iframe){\r\n\t                \treturn ;\r\n\t                }else{\r\n\t                \tif(_iframe.urlParams && typeof(_iframe.urlParams) === \"object\"){\r\n\t                \t\turlParams = _iframe.urlParams;\r\n\t                \t}\r\n\t                }\r\n    \t\t\t}\r\n\r\n\t            var _src = ui.buildUrl(param.pageUrl, urlParams, true, true);\r\n        \t\t$(iframe).attr(\"src\", _src);\t    // 拼接其他参数到链接\r\n\r\n\t       //  \tself.on(\"itemSelectError\", function(e){\r\n     \t\t\t// \tconsole.error(e.message);\r\n     \t\t\t// \tvar args = {\r\n     \t\t\t// \t\titem: e.item,\r\n     \t\t\t// \t\tiframe: e.iframe,\t// iframe页面\r\n     \t\t\t// \t\tcode: e.code,\r\n     \t\t\t// \t\tmessage: e.message,\r\n     \t\t\t// \t\tisDelError: false\r\n     \t\t\t// \t}\r\n     \t\t\t// \tif(param.updateSubpageItem && typeof(param.updateSubpageItem) === \"function\"){\r\n     \t\t\t// \t\tparam.updateSubpageItem(args);\r\n     \t\t\t// \t}else{\r\n     \t\t\t// \t\tif (args.iframe.contentWindow\r\n\t\t\t     //            && args.iframe.contentWindow.updateSelectedNode\r\n\t\t\t     //            && typeof (args.iframe.contentWindow.updateSelectedNode) === \"function\") {\r\n\t\t\t     //            args.iframe.contentWindow.updateSelectedNode(args.item, args.isDelError);\r\n\t\t\t     //        }else{\r\n\t\t\t     //        \tui.logMessage(\"没有传入updateSubpageItem参数且下拉页面没有 updateSelectedNode() 方法\", \"wui.selectComboBox\", true)\r\n\t\t\t     //        }\r\n     \t\t\t// \t}\r\n     \t\t\t// }).on(\"itemUnselectError\", function(e){\r\n     \t\t\t// \tconsole.error(e.message);\r\n     \t\t\t// \tvar args = {\r\n     \t\t\t// \t\titem: e.item,\r\n     \t\t\t// \t\tiframe: e.iframe,\t// iframe页面\r\n     \t\t\t// \t\tcode: e.code,\r\n     \t\t\t// \t\tmessage: e.message,\r\n     \t\t\t// \t\tisDelError: true\r\n     \t\t\t// \t}\r\n     \t\t\t// \tif(param.updateSubpageItem && typeof(param.updateSubpageItem) === \"function\"){\r\n     \t\t\t// \t\tparam.updateSubpageItem(args);\r\n     \t\t\t// \t}else{\r\n     \t\t\t// \t\tif (args.iframe.contentWindow\r\n\t\t\t     //            && args.iframe.contentWindow.updateSelectedNode\r\n\t\t\t     //            && typeof (args.iframe.contentWindow.updateSelectedNode) === \"function\") {\r\n\t\t\t     //            args.iframe.contentWindow.updateSelectedNode(args.item, args.isDelError);\r\n\t\t\t     //        }else{\r\n\t\t\t     //        \tui.logMessage(\"没有传入updateSubpageItem参数且下拉页面没有 updateSelectedNode() 方法\", \"wui.selectComboBox\", true)\r\n\t\t\t     //        }\r\n     \t\t\t// \t}\r\n     \t\t\t// })\r\n\t        },\r\n\t        _setHeight: function(){\r\n\t        \t// this.$selectContentBox.height(400);\r\n\t        \tvar self = this;\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = null,\r\n                    wScrollTop = $(window).scrollTop();\r\n\r\n                var maxHeight = 0;\r\n                if(self._opt.maxHeight == 0 || self._opt.maxHeight == \"0\"){\r\n                    if(self.$viewBox.hasClass(\"dropup\")){\r\n                        offsetSize = self.$buttonBox.offset();\r\n                        // console.info(offsetSize);\r\n                        var otherHeight = 0;\r\n                        this.$dropdownBox.children().not('[wui-data=\"menu\"]').each(function(i, elem){\r\n                            otherHeight += elem.offsetHeight;\r\n                        });\r\n                        // console.info(otherHeight);\r\n                        // maxHeight = offsetSize.top - otherHeight - 10;\r\n                        maxHeight = offsetSize.top - wScrollTop - otherHeight - 10;\r\n                    }else{\r\n                        offsetSize = self.$selectContentBox.offset();\r\n                        // maxHeight = viewSize.height - offsetSize.top - 30;\r\n                        maxHeight = viewSize.height - (offsetSize.top - wScrollTop) - 10;\r\n                    }\r\n                }else{\r\n                    maxHeight = parseInt(self._opt.maxHeight);\r\n                }\r\n                // console.info(maxHeight);\r\n                this.$selectContentBox.height(maxHeight);\r\n\t        },\r\n\t        _parseText: function(json){\r\n\t        \tvar text = this._opt.text, showText = text;\r\n\r\n\t        \tif(!text){\t// 若text字段为空，则默认保存全部\r\n\t\t    \t\tshowText = JSON.stringify(json);\r\n\t\t    \t}else{\r\n\t\t    \t\tvar reg = /\\{\\{(.+?)\\}\\}/g;\r\n\t\t        \tvar result = text.match(reg);\r\n\t\t        \tif(result){\r\n\t\t        \t\tvar _len = result.length;\r\n\t\t\t        \tfor(var _i = 0; _i < _len; _i++){\r\n\t\t\t        \t\tvar field = /^\\{\\{(.+?)\\}\\}$/.exec(result[_i]);\r\n\t\t\t        \t\tif(field.length > 1){\r\n\t\t\t        \t\t\tshowText = showText.replace(field[0], json[field[1]]);\r\n\t\t\t        \t\t}\r\n\t\t\t        \t}\r\n\t\t        \t}else{\r\n\t\t\t    \t\tvar textFiled = text.split(\",\"), _len = textFiled.length;\r\n\t\t\t    \t\tif(_len < 2){\r\n\t\t\t    \t\t\tshowText = json[text]\r\n\t\t\t    \t\t}else{\r\n\t\t\t    \t\t\tvar textJson = {};\r\n\t\t\t\t    \t\tfor(var _i = 0; _i < _len; _i++){\r\n\t\t\t\t    \t\t\tvar textTemp = textFiled[_i];\r\n\t\t\t\t    \t\t\ttextJson[textTemp] = json[textTemp];\r\n\t\t\t\t    \t\t}\r\n\t\t\t\t    \t\tshowText = JSON.stringify(textJson);\r\n\t\t\t    \t\t}\r\n\t\t        \t}\r\n\t\t    \t}\r\n\r\n\t        \treturn showText;\r\n\t        },\r\n\t        // return number/this \r\n\t        // -1:标签个数超过\r\n\t        // 0: 标签数据没传入\r\n\t        // 1: 添加数据类型不是Object\r\n\t        // 2: 标签不存在选项中\r\n\t        // 3: 标签已经被选中\r\n\t        // 4: 对象中不存在value属性值\r\n\t        // this:添加成功\r\n\t        _addItem: function(item, isTriggerSelectEvent){\r\n\t        \tif(this.listeners.indexOf('beforeItemSelect') > -1) {\r\n\t                if(!this.emit({type:'beforeItemSelect',target: this.$viewBox, iframe: this.iframe})) return ;\r\n\t            }\r\n\t            var self = this, param = this._opt, $selector = this.$element;\r\n\r\n\t            // -1：超过可选个数(当parseInt(maxNumber)不等于0且不等于NaN时，已有节点个数>=maxNumber)\r\n      \t\t\tif (param.maxNumber !== false && (self.itemsArray.length >= param.maxNumber)){\r\n      \t\t\t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: item, code: -1, message: \"最多可添加\" + param.maxNumber + \"个标签\"})) return ;\r\n\t\t            }\r\n        \t\t\treturn;\r\n      \t\t\t}\r\n\r\n        \t\t// 0:标签数据没传入\r\n\t\t\t    if (item == undefined){\r\n\t\t\t    \tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 0, message: \"添加的数据不能为空\"})) return ;\r\n\t\t            }\r\n\t\t\t        return;\r\n\t\t\t    }\r\n\r\n\t\t\t    var itemName, itemJson = {}, itemText;\r\n\t\t\t    if(typeof(item) === \"object\" && item != null){\r\n\t\t    \t\titemJson = item;\r\n\t\t\t    // }else if(typeof item === \"string\" && item != \"\"){\r\n\t\t    \t// \titemJson[param.text] = item;\r\n\t\t    \t// \titemJson[param.name] = item;\r\n\t\t\t    }else{\r\n\t\t\t    \t// 1: 添加数据类型不是Object\r\n\t\t\t    \tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 1, message: \"只能添加类型为Object的数据\"})) return ;\r\n\t\t            }\r\n        \t\t\treturn;\r\n\t\t\t    }\r\n\r\n\t\t\t    itemName = itemJson[param.name];\r\n\r\n\t\t    \tif(ui.isUndefined(itemName)){\r\n\t\t    \t\t// 4: 对象中不存在value属性值\r\n\t\t    \t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 4, message: JSON.stringify(itemJson) + \" 对象中不存在value属性值\"})) return ;\r\n\t\t            }\r\n\t\t            return;\r\n\t\t    \t}\r\n\r\n\t\t\t    if(this.itemsName.indexOf(itemName) > -1){\r\n\t\t\t    \t// 3: 标签已经被选中\r\n\t\t    \t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 3, message: item + \" 已经被选中\"})) return ;\r\n\t\t            }\r\n\t\t            return;\r\n\t\t\t    }\r\n\r\n\r\n\t            itemText = self._parseText(itemJson);\r\n\r\n\t\t\t    this.itemsName.push(itemName);\r\n    \t\t\tthis.itemsArray.push(itemJson);\r\n    \t\t\tthis.itemsText.push(itemText);\r\n    \t\t\t\r\n        \t\tthis.$resultBox.text(this.itemsText.join(param.multipleSeparator));\r\n        \t\t$selector.val(this.itemsName.join(\",\"));\r\n\r\n                var elem = self.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                    ui.validElement(self.$element);\r\n                }\r\n                  \r\n                // ui.validElement(self.$element);\r\n        \t\t// self._validate();\r\n\r\n                if(isTriggerSelectEvent == undefined){\r\n                    isTriggerSelectEvent = true;\r\n                }\r\n\r\n                if(isTriggerSelectEvent){\r\n                    if(this.listeners.indexOf('itemSelected') > -1) {\r\n                        if(!this.emit({type:'itemSelected',target: this.$viewBox, iframe: this.iframe, item: itemJson})) return ;\r\n                    }\r\n                }\r\n            \t\t\r\n\r\n\r\n    \t\t\treturn this;\r\n\t        },\r\n\t        // code number/this \r\n\t        // 0: 标签数据没传入\r\n\t        // 1: 取消数据类型不是string\r\n\t        // 2: 标签不存在选项中\r\n\t        // 3: 标签未被选中\r\n\t        // 4: 对象中不存在value属性值\r\n\t        // this:添加成功\r\n\t        _removeItem: function(item, flag, isTriggerUnselectEvent){\r\n\t        \tif(this.listeners.indexOf('beforeItemUnselect') > -1) {\r\n\t                if(!this.emit({type:'beforeItemUnselect',target: this.$viewBox, iframe: this.iframe})) return ;\r\n\t            }\r\n\r\n\t        \tvar self = this;\r\n\t            var param = self._opt;\r\n\t            var $selector = self.$element;\r\n        \t\t// 0: 标签数据没传入\r\n\t\t\t    if (item === undefined){\r\n\t\t\t    \tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 0, message: \"移除的数据不能为空\"})) return ;\r\n\t\t            }\r\n\t\t\t        return;\r\n\t\t\t    }\r\n\r\n                // name参数没设置时，抛出异常错误\r\n                if (typeof item === \"object\" && !param.name){\r\n                    // 1:name属性值没设置，无法删除object类型数据\r\n                    if(this.listeners.indexOf('itemRemoveError') > -1) {\r\n                        if(!this.emit({type:'itemRemoveError',target: this.$viewBox, item: item, code: 4, message: \"name属性值没设置，无法删除object类型数据\"})) return ;\r\n                    }\r\n\r\n                    return 1;\r\n                }\r\n\r\n\t\t\t    flag = flag || false;\r\n\t\t\t    var index = 0;\r\n\t\t\t    if(flag){\t// 索引值，从0开始\r\n\t\t\t    \tindex = parseInt(item);\r\n\t\t\t    }else{\r\n\t\t\t    \tif(typeof item === \"object\" && !(ui.isArray(item))){\r\n\t\t\t    \t\tvar itemName = item[param.name];\r\n\t\t\t\t    \t// if(itemName == undefined){\r\n\t\t\t\t    \t// \t// 4: 对象中不存在value属性值\r\n\t\t\t\t    \t// \tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t\t\t     //            if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 4, message: item + \" 对象中不存在value属性值\"})) return ;\r\n\t\t\t\t     //        }\r\n\t\t\t\t     //        return;\r\n\t\t\t\t    \t// }\r\n\t\t\t    \t\tindex = this.itemsName.indexOf(itemName);\r\n\t\t\t    \t}else if(typeof item === \"string\"){\r\n\t\t\t    \t\tindex = this.itemsName.indexOf(item);\r\n\t\t\t    \t}else{\r\n\t\t\t    \t\t// 1: 取消数据类型不是string\r\n\t\t\t        \tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 1, message: \"取消数据类型不是string\"})) return ;\r\n\t\t\t            }\r\n\t\t\t    \t\treturn;\r\n\t\t\t    \t}\r\n\t\t\t    }\r\n\r\n\t\t\t    if(index < 0){\r\n\t\t\t    \t// 3: 标签未被选中\r\n\t\t    \t\tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: item, code: 3, message: item + \" 未被选中\"})) return ;\r\n\t\t            }\r\n\t\t            return;\r\n\t    \t\t}\r\n\r\n\t    \t\tvar itemJson = this.itemsArray[index];\r\n\t    \t\tthis.itemsName.splice(index,1);\r\n    \t\t\tthis.itemsArray.splice(index,1);\r\n\t\t\t\tthis.itemsText.splice(index,1);\r\n\r\n\t\t\t\tif(this.itemsText.length == 0){\r\n    \t\t\t\tvar noneSelectedText = this.defaults.noneSelectedText;\r\n    \t\t\t\tthis.$resultBox.text(noneSelectedText);\r\n\t        \t\t$selector.val(\"\");\r\n    \t\t\t}else{\r\n    \t\t\t\tthis.$resultBox.text(this.itemsText.join(param.multipleSeparator));\r\n\t        \t\t$selector.val(this.itemsName.join(\",\"));\r\n    \t\t\t}\r\n                var elem = self.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                    ui.validElement(self.$element);\r\n                }\r\n                  \r\n                // ui.validElement(self.$element);\r\n        \t\t// self._validate();\r\n\r\n                if(isTriggerUnselectEvent == undefined){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n\r\n                if(isTriggerUnselectEvent){\r\n                    if(this.listeners.indexOf('itemUnselected') > -1) {\r\n                        if(!this.emit({type:'itemUnselected',target: this.$viewBox, iframe: this.iframe, item: itemJson})) return ;\r\n                    }\r\n                }\r\n\r\n    \t\t\treturn this;\r\n\t        },\r\n            disabled: function(){\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\");\r\n            },\r\n            enabled: function(){\r\n                this.$buttonBox.removeAttr(\"disabled\");\r\n            },\r\n            readonly: function(){\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\");\r\n                this.$buttonBox.addClass(\"wui-readonly\");\r\n            },\r\n            readwrite: function(){\r\n                this.$buttonBox.removeAttr(\"disabled\");\r\n                this.$buttonBox.removeClass(\"wui-readonly\");\r\n            },\r\n\t        get: function(type){\r\n\t        \ttype = type || \"json\";\r\n\t            var $selector = this.$element;\r\n\t        \tif(type == \"value\"){\r\n\t        \t\treturn this.itemsName;\r\n\t        \t}else if(type == \"json\"){\r\n\t        \t\treturn this.itemsArray;\r\n\t        \t}else if(type == \"text\"){\r\n\t        \t\treturn this.itemsText;\r\n\t        \t}else{\r\n\t        \t\treturn this.itemsArray;\r\n\t        \t}\r\n\t        },\r\n\t        select: function(data, isTriggerSelectEvent){\r\n\t        \tif(data != undefined){\r\n                \tif(typeof data === \"string\"){\r\n                \t\tif(data != \"\"){\r\n                \t\t\tvar arr = data.split(\",\");\r\n\t                \t\tfor(var i = 0; i < arr.length; i++)\r\n\t                \t\t\tthis._addItem(arr[i], isTriggerSelectEvent);\r\n                \t\t}else{\r\n                \t\t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"添加的节点不能为空字符串\"})) return ;\r\n\t\t\t\t            }\r\n                \t\t\treturn false;\r\n                \t\t}\r\n\t                \t\t\r\n                \t}else if(ui.isArray(data)){\r\n                \t\tif(data.length > 0){\r\n                \t\t\tfor(var i = 0; i < data.length; i++)\r\n\t                \t\t\tthis._addItem(data[i], isTriggerSelectEvent);\r\n                \t\t}else{\r\n                \t\t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"添加的节点不能为空数组\"})) return ;\r\n\t\t\t\t            }\r\n                \t\t\treturn false;\r\n                \t\t}\r\n\t                \t\t\r\n                \t}else if(typeof(data) === \"object\"){\r\n                \t\tif(data != null){\r\n                \t\t\tthis._addItem(data, isTriggerSelectEvent);\t// 组合框\r\n                \t\t}else{\r\n                \t\t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"添加的节点不能为空对象\"})) return ;\r\n\t\t\t\t            }\r\n                \t\t\treturn false;\r\n                \t\t}\r\n\t                \t\t\r\n                \t}else{\r\n            \t\t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"传入的参数值不支持赋值\"})) return ;\r\n\t\t\t            }\r\n                \t\treturn false;\r\n                \t}\r\n\r\n                \treturn this;\r\n                }else{\r\n        \t\t\tif(this.listeners.indexOf('itemSelectError') > -1) {\r\n\t\t                if(!this.emit({type:'itemSelectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"必须传入添加的节点\"})) return ;\r\n\t\t            }\r\n\t\t            return this;\r\n                }\r\n\t        },\r\n\t        unselect: function(data, isTriggerUnselectEvent){\r\n                var isIndex = false;\r\n\t        \tif(data != undefined){\r\n                \tif(typeof data === \"string\"){\r\n                \t\tif(data != \"\"){\r\n                \t\t\tvar arr = data.split(\",\");\r\n\t                \t\tfor(var i = 0; i < arr.length; i++)\r\n\t                \t\t\tthis._removeItem(arr[i], isIndex, isTriggerUnselectEvent);\r\n                \t\t}else{\r\n                \t\t\tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"移除的节点不能为空字符串\"})) return ;\r\n\t\t\t\t            }\r\n                \t\t\treturn false;\r\n                \t\t}\r\n\t                \t\t\r\n                \t}else if(ui.isArray(data)){\r\n                \t\tif(data.length > 0){\r\n                \t\t\tfor(var i = 0; i < data.length; i++)\r\n\t                \t\t\tthis._removeItem(data[i], isIndex, isTriggerUnselectEvent);\r\n                \t\t}else{\r\n                \t\t\tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"移除的节点不能为空数组\"})) return ;\r\n\t\t\t\t            }\r\n                \t\t}\r\n\t                \t\t\r\n                \t}else if(typeof data === \"object\" && data != null){\r\n                \t\tif(data != null){\r\n                \t\t\tthis._removeItem(data, isIndex, isTriggerUnselectEvent);\r\n                \t\t}else{\r\n                \t\t\tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"移除的节点不能为空对象\"})) return ;\r\n\t\t\t\t            }\r\n                \t\t}\r\n                \t}else{\r\n            \t\t\tif(this.listeners.indexOf('itemUnselectError') > -1) {\r\n\t\t\t                if(!this.emit({type:'itemUnselectError',target: this.$viewBox, iframe: this.iframe, item: data, code: 6, message: \"传入的参数类型不支持移除\"})) return ;\r\n\t\t\t            }\r\n                \t}\r\n\r\n                \treturn this;\r\n                }\r\n\t        },\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t// console.info(newOptions);\r\n\t        \tif(!!newOptions){\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t        \t\t\tthis._resetOption(newOptions);\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t\t        \t\t\r\n\t        \t}else{\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n\t        _resetOption: function(newOptions){\r\n\t        \tvar params = this._opt,\r\n\t        \t\tself = this,\r\n\t        \t\tisClear = false,\r\n\t        \t\tisRefreshDowndropPage = false;\r\n\t        \t// console.info(newOptions)\r\n\t        \t// direction: {string} 下拉框展开方向,默认是为空,即向下,若是dropup,即向上\r\n\t        \tif(newOptions.direction != undefined && params.direction != newOptions.direction){\r\n\t        \t\tthis._opt.direction = newOptions.direction;\r\n                    this._setDirection();\r\n\t        \t}\r\n\r\n\t        \tif(newOptions.name != undefined && params.name != newOptions.name){\r\n\t        \t\tisClear = true;\r\n\t        \t\tthis._opt.name = newOptions.name;\r\n\t        \t}\r\n\r\n\t        \tif(newOptions.text != undefined && params.text != newOptions.text){\r\n\t        \t\tisClear = true;\r\n\t        \t\tthis._opt.text = newOptions.text;\r\n\t        \t}\r\n\r\n\t        \tif(isClear){\r\n\t        \t\tthis.empty();\r\n\t        \t}\r\n\r\n\t        \t// multipleSeparator: {char} 显示选中值的分隔字符\r\n\t        \tif(newOptions.multipleSeparator != undefined && params.multipleSeparator != newOptions.multipleSeparator){\r\n\t        \t\tvar itemsText = this.itemsText;\r\n\t        \t\tif(itemsText.length > 0){\r\n\t        \t\t\tthis.$resultBox.text(itemsText.join(newOptions.multipleSeparator));\r\n\t        \t\t}\r\n\t        \t\tthis._opt.multipleSeparator = newOptions.multipleSeparator;\r\n\t        \t}\r\n\r\n\t        \t// maxNumber: {number} 最多可选节点个数，0代表不限制\r\n\t        \tif(newOptions.maxNumber != undefined && params.maxNumber != parseInt(newOptions.maxNumber)){\r\n\t        \t\tvar maxNumber = ui.formatMaxNumber(newOptions.maxNumber);\r\n\t        \t\tthis._opt.maxNumber = maxNumber;\r\n\t        \t\tif(maxNumber != false){\r\n\t        \t\t\tvar len = this.itemsName.length;\r\n\t        \t\t\twhile(len > maxNumber){\r\n\t        \t\t\t\tthis._removeItem(--len, true);\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t}\r\n\r\n\t        \t// {string} 传递到弹出页面的各个子页面的自定义json字符串数据\r\n\t        \tif(newOptions.otherParam != undefined && newOptions.otherParam != params.otherParam){\r\n\t        \t\tisRefreshDowndropPage = true;\r\n\t        \t\tthis._opt.otherParam = newOptions.otherParam;\r\n\t        \t}\r\n\r\n\t        \t// {string} 树列表标题\r\n\t        \tif(newOptions.treeTitle != undefined && newOptions.treeTitle != params.treeTitle){\r\n\t        \t\tisRefreshDowndropPage = true;\r\n\t        \t\tthis._opt.treeTitle = newOptions.treeTitle;\r\n\t        \t}\r\n\r\n\t        \t// {string} 树形数据URL\r\n\t        \tif(newOptions.treeUrl != undefined && newOptions.treeUrl != params.treeUrl){\r\n\t        \t\tisRefreshDowndropPage = true;\r\n\t        \t\tthis._opt.treeUrl = newOptions.treeUrl;\r\n\t        \t}\r\n\r\n                // {string} 树形懒加载字段\r\n                if(newOptions.lazyField != undefined && newOptions.lazyField != params.lazyField){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.lazyField = newOptions.lazyField;\r\n                }\r\n\r\n                // {string} 树形是否可搜索\r\n                if(newOptions.isEnabledSearch != undefined && newOptions.isEnabledSearch != params.isEnabledSearch){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.isEnabledSearch = newOptions.isEnabledSearch;\r\n                }\r\n\r\n\t        \t// {string} Tab选项卡标题(多个数据用\",\"分隔开)\r\n\t        \tif(newOptions.tabTitle != undefined && newOptions.tabTitle != params.tabTitle){\r\n\t        \t\tisRefreshDowndropPage = true;\r\n\t        \t\tthis._opt.tabTitle = newOptions.tabTitle;\r\n\t        \t}\r\n\r\n\t        \t// {string} 列表页面URL(多个数据用\",\"分隔开)\r\n\t        \tif(newOptions.tabUrl != undefined && newOptions.tabUrl != params.tabUrl){\r\n\t        \t\tisRefreshDowndropPage = true;\r\n\t        \t\tthis._opt.tabUrl = newOptions.tabUrl;\r\n\t        \t}\r\n\r\n\t        \t// {string} 下拉iframe地址\r\n\t        \tif(newOptions.pageUrl && params.pageUrl  != newOptions.pageUrl){\r\n\t        \t\tif(newOptions.pageUrl != \"\"){\r\n\t        \t\t\tisRefreshDowndropPage = true;\r\n\t        \t\t\tthis._opt.pageUrl = newOptions.pageUrl;\r\n\t        \t\t}else{\r\n\t        \t\t\tui.logError(\"必须传入下拉页面地址\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t        \t\t\treturn false;\r\n\t        \t\t}\r\n\t        \t}\r\n\r\n\t        \t// isReload\r\n\t        \tif(newOptions.isReload != undefined && params.isReload != newOptions.isReload){\r\n\t        \t\tthis._opt.isReload = (newOptions.isReload || newOptions.isReload == \"true\")? true : false;\r\n\t        \t}\r\n\r\n\t        \tif(isRefreshDowndropPage){\r\n\t        \t\tif(!this._opt.isReload){\r\n\t        \t\t\tthis._loadIframe();\r\n\t        \t\t}\r\n\t        \t}\r\n\r\n\t        },\r\n\t        empty: function(isTriggerUnselectEvent){\r\n\t        \tvar self = this, params = this._opt, $selector = this.$element;\r\n                if(isTriggerUnselectEvent === undefined){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n\r\n                // 是否触发节点删除事件\r\n                if(isTriggerUnselectEvent){\r\n                    var len = this.itemsName.length;\r\n                    while(len > 0){\r\n                        this._removeItem(--len, true);\r\n                    }\r\n                }else{\r\n                    this.itemsName = [];\r\n                    this.itemsArray = [];\r\n                    this.itemsText = [];\r\n\r\n                    var noneSelectedText = this.defaults.noneSelectedText;\r\n                    this.$resultBox.text(noneSelectedText);\r\n                    $selector.val(\"\");\r\n                }\r\n\r\n                if(params.onEmpty && typeof(params.onEmpty) === \"function\"){\r\n                    params.onEmpty();\r\n                }\r\n\t            return this;\r\n\t        },\r\n\t        refresh: function(){\r\n\t        \tthis._loadIframe();\r\n\t        \t// this._loadDropdown();\r\n\t        },\r\n\t        destroy: function(callback){\r\n\t        \tif(this.listeners.indexOf('destroy') > -1) {\r\n\t                if(!this.emit({type:'destroy',target: this.dom})) return ;\r\n\t            }\r\n\r\n\t            // this.$viewBox.remove();\r\n\t            // this.$element.show();\r\n\t            this.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.$Maxcontainer.replaceWith(this.initDom);\r\n\r\n\t            callback && typeof(callback) === \"function\" && callback();\r\n\t            return this;\r\n\t        },\r\n\t\t\ton: function(type, handler){\r\n\t\t\t\tif(_widgetEventType.indexOf(type) > -1){\t// WUI组件事件监听\r\n\t            \tif(typeof this.handlers[type] === 'undefined') {\r\n\t\t                this.handlers[type] = [];\r\n\t\t                this.listeners.push(type);\r\n\t\t            }\r\n\t\t            this.handlers[type].push(handler);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        off: function(type, handler){\r\n\t        \tvar _i, _j, _listeners, _handlers, _len;\r\n\t        \tif(_widgetEventType.indexOf(type) > -1){\t// 取消WUI组件事件监听\r\n\t        \t\tif(this.handlers[type] instanceof Array) {\r\n\t        \t\t\t_handlers = this.handlers[type];\r\n\t        \t\t\t_listeners = this.listeners;\r\n\r\n\t        \t\t\tfor(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n\t\t                    if(_listeners[_i] === type) {\r\n\t\t                        break;\r\n\t\t                    }\r\n\t\t                }\r\n\r\n\t\t                if(handler === undefined){\r\n\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t                \tdelete this.handlers[type];\r\n\t\t                }else{\r\n\t\t                \tfor(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n\t\t\t                    if(_handlers[_j] === handler) {\r\n\t\t\t                        break;\r\n\t\t\t                    }\r\n\t\t\t                }\r\n\t\t\t                if(_j < _len){\r\n\t\t\t                \tthis.handlers[type].splice(_j, 1);\r\n\t\t\t                \tif(this.handlers[type].length == 0){\r\n\t\t\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t\t\t                }\r\n\t\t\t                }\r\n\t\t                }\r\n\t\t            }\r\n\t        \t}\r\n\t\t        return this;\r\n\t        },\r\n\t        emit: function(event){\r\n\t        \t// console.info(event);\r\n\t            if(!event.target) {\r\n                    if(!this.$Maxcontainer){\r\n                        event.target = this;\r\n                    }else{\r\n                        event.target = this.$Maxcontainer;\r\n                    }\r\n                }\r\n\t            if(this.handlers[event.type] instanceof Array) {\r\n\t                var handlers = this.handlers[event.type];\r\n\t                for(var i = 0, len = handlers.length; i < len; i++) {\r\n\t                    handlers[i](event);\r\n\t                }\r\n\t                return true;\r\n\t            }\r\n\t            return false;\r\n\t        },\r\n            component: function(){\r\n                return this;\r\n            }\r\n\t\t}\r\n\r\n\t\t//fn就是prototype\r\n\t\t$.fn[_pluginName] = function(param1, param2, param3){\r\n\t\t\t// each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(document.getElementById(element), _pluginDataName, new uiSelectComboBox(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"wui.selectComboBox 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('wui.selectComboBox 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 增加组件事件监听\r\n         * @event on\r\n\t\t * @param eventType {string} 可监听事件类型如下：<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> eventType </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"iframeLoaded\"</td>\r\n\t\t\t\t\t\t<td>下拉页面加载完成</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforeItemSelect\"</td>\r\n\t\t\t\t\t\t<td>单个节点选中之前触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"itemSelectError\"</td>\r\n\t\t\t\t\t\t<td>单个节点选中出错触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"itemSelected\"</td>\r\n\t\t\t\t\t\t<td>单个节点选中之后触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforeItemUnselect\"</td>\r\n\t\t\t\t\t\t<td>单个节点取消选中之前触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"itemUnselectError\"</td>\r\n\t\t\t\t\t\t<td>单个节点取消选中出错触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"itemUnselected\"</td>\r\n\t\t\t\t\t\t<td>单个节点取消选中之后触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n\t\t * @param func {function} 事件类型触发之后的执行方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n            \r\n            // 组件添加节点出错时被触发\r\n            uiSelectComboBox.on(\"itemSelectError\", function(e){\r\n                console.log(\"itemSelectError\");\r\n            });\r\n                \r\n\t\t */\r\n\t\tfunction _on(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"on\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 取消组件事件监听\r\n         * @event off\r\n\t\t * @param eventType {string} 可取消监听事件类型同\"on\"方法的eventType参数\r\n\t\t * @param func {function} 选填,事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiSelectComboBox.off(\"itemSelectError\");\r\n                \r\n\t\t */\r\n\t\tfunction _off(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"off\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n\t\t * @param type {string} 获取的组件值的类型，可选:value/text/json，默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取组件选中的日期字符串\r\n            var value = uiSelectComboBox.get(\"value\");   // \"dsadasdaa01\"\r\n                \r\n        */\r\n\t\tfunction _get(type){\r\n\t\t\treturn _executeMethod(\"get\", type);\r\n\t\t}\r\n\r\n        /**\r\n        * 选中选项\r\n        * @method select\r\n\t\t* @param value {string/object} 选中选项的value属性值，多个数据用\",\"分隔或者数组封装传递\r\n        * @param {Boolean} [isTriggerSelectEvent] 是否触发单个节点添加事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值:此方法只设置组件值,需手动选中下拉框值,下拉页面提供 updateSelectedNode(item, isChecked)方法设置值\r\n            uiSelectComboBox.select({\"id\" :\"dsadasdaa01\",\"name\":\"李文\",\"sex\":\"男\",\"age\":\"25\",\"email\":\"15875354693@163.com\"});\r\n                \r\n        */\r\n\t\tfunction _select(value, isTriggerSelectEvent){\r\n\t\t\treturn _executeMethod(\"select\", value, isTriggerSelectEvent);\r\n\t\t}\r\n\r\n        /**\r\n        * 取消选项选中\r\n        * @method unselect\r\n        * @param value {string/object} 取消选中选项的value属性值，多个数据用\",\"分隔或者数组封装传递\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            // 取消选中组件值:此方法只设置组件值,需手动取消下拉框值,下拉页面提供 updateSelectedNode(item, isChecked)方法设置值\r\n            uiSelectComboBox.unselect(\"dsadasdaa01\");\r\n                \r\n        */\r\n\t\tfunction _unselect(value, isTriggerUnselectEvent){\r\n\t\t\treturn _executeMethod(\"unselect\", value, isTriggerUnselectEvent);\r\n\t\t}\r\n\r\n        /**\r\n        * 阻止点击弹出下拉框\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 阻止点击弹出下拉框\r\n            uiSelectComboBox.disabled();\r\n                \r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出下拉框\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 允许点击弹出下拉框\r\n            uiSelectComboBox.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件只读\r\n            uiSelectComboBox.readonly();\r\n                \r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件可读可写\r\n            uiSelectComboBox.readwrite();\r\n                \r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiSelectComboBox.option();\t// 返回组件配置对象\r\n                \r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空组件值\r\n            uiSelectComboBox.empty();\r\n                \r\n        */\r\n        function _empty(isTriggerUnselectEvent){\r\n            return _executeMethod(\"empty\", isTriggerUnselectEvent);\r\n        }\r\n\r\n        /**\r\n        * 刷新组件下拉框\r\n        * @method refresh\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 刷新组件下拉框\r\n            uiSelectComboBox.refresh();\r\n                \r\n        */\r\n\t\tfunction _refresh(){\r\n\t\t\treturn _executeMethod(\"refresh\");\r\n\t\t}\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiSelectComboBox.destroy();\r\n                \r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiSelectComboBox.component();\r\n            console.info(component);\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过，则返回该组件对象，否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example\r\n\r\n            // 初始化组件\r\n            uiSelectComboBox.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t$('#' + element)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        }\r\n\r\n\r\n\t\t_init(options);\r\n\r\n\t\treturn {\r\n\t\t\tinit: _init,\r\n\t\t\ton: _on,\r\n\t\t\toff: _off,\r\n\t\t\tget: _get,\r\n\t\t\tselect: _select,\r\n\t\t\tunselect: _unselect,\r\n            enabled: _enabled,      // 允许点击弹出下拉框\r\n            disabled: _disabled,    // 阻止点击弹出下拉框\r\n            readwrite: _readwrite,\r\n            readonly: _readonly,\r\n\t\t\toption: _option,\r\n\t\t\tempty: _empty,\r\n\t\t\trefresh: _refresh,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n\t\t\tdestroy: _destroy\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","// wui.file\r\n// 文件控件\r\n// Date : 2018-01-22\r\n// by chenzx\r\n// 后续改进：当设置缩略图为一定的底限是，转为标签块显示文件名(待增加)，双击时表示上传\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>文件上传组件</h3>\r\n     * <ol>\r\n     * <li>支持动态加载后台服务地址; </li>\r\n     * <li>支持多文件选择，并上传; </li>\r\n     * <li>支持单个文件删除和上传; </li>\r\n     * <li>支持上传文件预览; </li>\r\n     * <li>兼容IE8+等; </li>\r\n     * </ol>\r\n     * <h3>依赖插件</h3>\r\n     * <ul>\r\n     * <li><a href=\"http://wxb.github.io/dropzonejs.com.zh-CN/dropzonezh-CN/#configuration\" target=\"_blank\">dropzone</a> </li>\r\n     * <li><a href=\"http://www.cnblogs.com/youring2/archive/2012/07/13/2590010.html\" target=\"_blank\">swfupload</a> (文件上传-IE8/9)</li>\r\n     * </ul>\r\n     * <h3>需引入插件</h3>\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/dropzone/dropzone.css&quot;/&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/dropzone/dropzone.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/swfupload/js/swfupload.js&quot;&gt;&lt;/script&gt;</code></pre>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiFile\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.file/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.file/get\"}}{{/crossLink}}: 获取上传成功文件的信息(\"json\"/\"value\"/\"text\") </li>\r\n     * <li>{{#crossLink \"wui.file/getFilesWithStatus\"}}{{/crossLink}}: 根据文件状态获取文件信息 </li>\r\n     * <li>{{#crossLink \"wui.file/selectFile\"}}{{/crossLink}}: 打开选择文件框,在IE8和IE9下无效 </li>\r\n     * <li>{{#crossLink \"wui.file/upload\"}}{{/crossLink}}: 文件上传 </li>\r\n     * <li>{{#crossLink \"wui.file/cancel\"}}{{/crossLink}}: 取消上传文件队列 </li>\r\n     * <li>{{#crossLink \"wui.file/enabled\"}}{{/crossLink}}: 允许点击弹出文件选择框 </li>\r\n     * <li>{{#crossLink \"wui.file/disabled\"}}{{/crossLink}}: 阻止点击弹出文件选择框 </li>\r\n     * <li>{{#crossLink \"wui.file/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.file/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.file/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class file\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string} option.url 文件提交后台服务地址,默认值为\"\"\r\n     *  @param {json} [option.data]   传递到后台的请求参数对象，默认为空\r\n     *  @param {json} [option.otherParam]   拼接到URL的请求参数对象,JSON 数据或者function\r\n     *  @param {string} [option.method]   提交方法,可选参数:post/get,默认是\"post\"  \r\n     *  @param {number} [option.maxNumber]   最多可选个数，默认为false，即不限制    \r\n     *  @param {String} [option.name]   获取表单值时提交字段名,若为空,则传递整个json数据,默认是\"filePath\" \r\n     *  @param {string} [option.acceptedFiles]   允许上传的文件 mime 类型或拓展名,使用逗号分隔文件类型或者扩展名列表,例如:\".psd,.jpg\",默认为null,即无限制\r\n     *  @param {Number} [option.maxFilesize]   最大文件大小(单位MB),默认是256 \r\n     *  @param {boolean} [option.isCreateImageThumbnails]   是否创建图片缩略图，默认是true\r\n     *  @param {boolean} [option.isAutoProcessQueue]   是否开启自动上传，即选择一次文件向服务器发送一次请求,默认是true\r\n     *  @param {boolean} [option.isAddRemoveLinks]   添加上传取消和删除预览图片的链接,默认是true\r\n     *  @param {boolean} [option.isAddUploadLinks]   是否预览图中显示上传按钮,默认是true \r\n     *  @param {String} [option.conMinWidth]   外层容器最小宽度,默认是\"auto\"(根据内部自适应)\r\n     *  @param {String} [option.conMinHeight]   外层容器最小高度,默认是\"auto\"(根据内部自适应)\r\n     *  @param {Number} [option.thumbnailWidth]   设置缩略图的宽度,建议最小值100 \r\n     *  @param {Number} [option.thumbnailHeight]   设置缩略图的高度,建议最小值100\r\n     *  @param {String} [option.flashUrl]   IE下文件上传的swf文件的位置，指向swfupload目录下的swfupload.swf文件即可,默认是wui.FRAME_PATH + '/plugins/swfupload/Flash/swfupload.swf',可通过wui.uploadFlashUrl 设置全局\r\n     *  @param {JSON} [option.buttonSetting]   IE8/9下Flash上传时的按钮属性设置\r\n     *  @param {String} [option.buttonSetting.image_url]   按钮图片路径，Flash使用，可以有多种状态(mouseout、hover等),默认是wui.FRAME_PATH + '/themes/images/add_button.png'\r\n     *  @param {String} [option.buttonSetting.falshImageSuffix]   IE8/9下，falsh图片上传按钮图片后缀,默认是\"_falsh\",如image_url参数为默认值,则flash上传时，使用按钮图片为wui.FRAME_PATH + '/themes/images/add_button_falsh.png'\r\n     *  @param {Number} [option.buttonSetting.width]   设置选择文件按钮的宽度,最小值20(IE10以下需根据按钮图片设置),默认值时102\r\n     *  @param {Number} [option.buttonSetting.height]   设置选择文件按钮的高度,最小值20(IE10以下需根据按钮图片设置),默认值时102\r\n     *  @param {json} [option.jsonReader]   默认从服务器端返回数据参数名称设置集合,get()方法返回的参数名同此处设置,如下参数设置之后,服务器返回数据格式为 <br />\r\n     *  {\r\n     *  \trows: [{fileName: \"new_file.png\", filePath: \"/upload/new_file.png\", ...}, {},...]\r\n     *  }\r\n     *  @param {String} [option.jsonReader.root]   json中代表实际模型数据的入口,内容以Object格式返回,若为null,则返回数据全部作为实际数据,内容以Object格式返回,默认是\"rows\" \r\n     *  @param {String} [option.jsonReader.fileName]   返回json数据中,文件保存名称的参数名称,默认是\"fileName\"\r\n     *  @param {String} [option.jsonReader.filePath]   返回json数据中,文件保存虚拟路径的参数名称,默认是\"filePath\" \r\n     *  @param {Function} [option.onAddedFile]   文件添加之后触发事件,参数file:新增的文件对象 \r\n     *  @param {Function} [option.onMaxFilesReached]   添加文件达到最大个数时触发,两个参数file:被拒绝的文件对象,maxNumber:最大个数\r\n     *  @param {Function} [option.onRemovedFile]   单个文件移除(指点击预览图中删除按钮或者调用removeFile方法)之后触发回调方法,参数file(对应的该文件信息)\r\n     *  @param {Function} [option.onCancelFile]   文件上传之前时取消上传触发方法(不会删除预览图),参数file:取消的文件对象 \r\n     *  @param {Function} [option.onSuccess]   单个文件上传成功回调方法,参数1: file表示当前上传文件对象, 参数2: response表示上传成功之后服务器返回信息 \r\n     *  @param {Function} [option.onFail]   单个文件上传失败回调方法,参数1: file表示当前上传文件对象, 参数2: response表示上传失败之后服务器返回信息 \r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件样式 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/dropzone/dropzone.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;File: &lt;div id=\"fileId\"&gt;&lt;/div&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件脚本 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/dropzone/dropzone.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/swfupload/js/swfupload.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiFile = wui.file( \"fileId\",{\r\n                \"url\": \"http://localhost:7070/Upload.aspx\",\r\n                \"isAutoProcessQueue\" : false\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.file = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiFile\",\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"file\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n\r\n\t\tif(!$(\"#\" + element).exist()){\r\n\t\t\tui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar _widgetEventType = [\"addedfile\",\"uploading\",\"success\",\"error\",\"complete\",\"canceled\"];\r\n  \r\n        // 获取预览模板\r\n\t\tfunction _getPreviewTemplate(isShow){\r\n\t\t\tvar previewTemplate = '';\r\n            if(isShow){\r\n                previewTemplate += '<div class=\"dz-preview dz-file-preview\">\\n';\r\n            }else{\r\n                previewTemplate += '<div class=\"dz-preview dz-file-preview\" style=\"display: none!important\">\\n';\r\n            }\r\n\t\t\tpreviewTemplate += '\t<div class=\"img-btn-mask\"></div>\\n';\r\n\t\t\tpreviewTemplate += '\t<div class=\"dz-image\"><img data-dz-thumbnail /></div>\\n';\r\n\t\t\tpreviewTemplate += '\t<div class=\"dz-details\">\\n';\r\n\t\t\tpreviewTemplate += '\t\t<div class=\"dz-size\"><span data-dz-size></span></div>\\n';\r\n\t\t\tpreviewTemplate += '\t\t<div class=\"dz-filename\"><span data-dz-name></span></div>\\n';\r\n\t\t\tpreviewTemplate += '\t</div>\\n';\r\n\t\t\tpreviewTemplate += '\t<div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\\n';\r\n\t\t\tpreviewTemplate += '\t<div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\\n';\r\n\t\t\tpreviewTemplate += '\t<div class=\"dz-success-mark\"><i class=\"fa fa-check\"></i></div>\\n';\r\n\t\t\tpreviewTemplate += '\t<div class=\"dz-error-mark\"><i class=\"fa fa-close\"></i></div>\\n';\r\n\t\t\tpreviewTemplate += '</div>\\n';\r\n\t\t\treturn previewTemplate;\r\n\t\t}\r\n\r\n        // 根据文件名返回预览字体图标类\r\n        function _getPrevIcon(fileName){\r\n\r\n            var filePostfix = [\"file-archive-o\",\"file-audio-o\",\"file-code-o\",\"file-excel-o\",\"file-image-o\",\"file-video-o\",\"file-pdf-o\",\"file-powerpoint-o\",\"file-word-o\",\"file-text-o\",\"file-o\"];\r\n            var archive = [\"zip\",\"7z\",\"rar\"],\r\n            \taudio = [\"mp3\",\"wav\",\"wma\"],\r\n            \tcode = [\"htm\",\"html\",\"js\",\"css\",\"java\",\"asp\",\"aspx\",\"php\",\"cs\",\"json\"],\r\n            \texcel = [\"xls\",\"xlsx\"],\r\n            \timage = [\"png\",\"jpg\",\"jpeg\",\"gif\",\"bmp\",\"ico\"],\r\n            \t// video = [\"mp4\",\"avi\",\"wmv\",\"mpeg\",\"mkv\",\"rmvb\"],\r\n                video = [\"mp4\",\"avi\",\"wmv\",\"mpeg\"],\r\n            \tpdf = [\"pdf\"],\r\n            \tpowerpoint = [\"ppt\",\"pptx\"],\r\n            \tword = [\"doc\",\"docx\"],\r\n            \ttext = [\"txt\"]\r\n            var strs = fileName.split(\".\");\r\n            var postfix = strs[strs.length-1], fileIcon = \"file-o\";\r\n\r\n            if(postfix){\r\n            \tpostfix = postfix.toLowerCase();\t// 转化为小写\r\n            \tif(archive.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-archive-o\";\r\n            \t}else if(audio.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-audio-o\";\r\n            \t}else if(code.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-code-o\";\r\n            \t}else if(excel.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-excel-o\";\r\n            \t}else if(image.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-image-o\";\r\n            \t}else if(video.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-video-o\";\r\n            \t}else if(pdf.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-pdf-o\";\r\n            \t}else if(powerpoint.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-powerpoint-o\";\r\n            \t}else if(word.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-word-o\";\r\n            \t}else  if(text.indexOf(postfix) > -1){\r\n            \t\tfileIcon = \"file-text-o\";\r\n            \t}\r\n            }\r\n\r\n            return fileIcon;\r\n        }\r\n\r\n\t\t//默认配置项\r\n\t\tvar config = {\r\n            // {string} 文件提交后台服务地址,默认值为\"\"，本地测试地址：http://localhost:7070/Upload.aspx\r\n\t\t\turl: \"\"\r\n            // {JSON} 传递到后台的请求参数对象，默认为空\r\n            , data: {} \r\n            // {JSON} 拼接到URL的请求参数对象,JSON 数据或者function\r\n\t\t\t, otherParam: {}\t\r\n            // {string} 提交方法,可选参数:post/get\r\n\t\t\t, method: \"post\"\t\r\n            // {int}    同时最多上传文件个数，默认是0,表示不限制\r\n\t\t\t, maxNumber: false\t\t\r\n            // {String} 获取表单值时提交字段名,若为空,则传递整个json数据\r\n            , name: \"filePath\"  \r\n            // {string} 实现检查文件的 mime 类型或扩展名， 使用逗号分隔文件类型或者扩展名列表,例如:\".psd,.jpg\"\r\n\t\t\t, acceptedFiles: null\t\r\n            // {int} 最大文件大小(单位MB),默认是256\r\n\t\t\t, maxFilesize : 256\t\r\n            // {boolean} 是否创建图片缩略图,默认是true\r\n\t\t\t, isCreateImageThumbnails : true\t\r\n            // {boolean} 是否开启自动上传，即选择一次文件向服务器发送一次请求,默认是true\r\n\t\t\t, isAutoProcessQueue : true\t\r\n            // {boolean} 是否添加上传取消和删除预览图片的链接\r\n\t\t\t, isAddRemoveLinks : true\t\t\r\n            // {boolean} 是否预览图中显示上传按钮\r\n\t\t\t, isAddUploadLinks: true\t\t\r\n            // {Boolean} 是否用tags显示\r\n            , TestTags: false           \r\n            // {String} 外层容器最小宽度,默认是\"auto\"(根据内部自适应)\r\n            , conMinWidth: \"auto\"          \r\n            // {String} 外层容器最小高度,默认是\"auto\"(根据内部自适应)\r\n            , conMinHeight: \"auto\"         \r\n            // {int} 设置缩略图的宽度,最小值100\r\n\t\t\t, thumbnailWidth: 100\t\t\r\n            // {int} 设置缩略图的高度,最小值100\r\n\t\t\t, thumbnailHeight: 100\t\t\r\n            // {string} IE下文件上传的swf文件的位置，指向swfupload目录下的swfupload.swf文件即可,默认是wui.FRAME_PATH + '/plugins/swfupload/Flash/swfupload.swf',可通过wui.uploadFlashUrl 设置全局\r\n\t\t\t, flashUrl: ui.uploadFlashUrl\r\n            // {JSON} 弹出选择文件视图按钮设置\r\n\t\t\t, buttonSetting: {\r\n                // 按钮图片路径，Flash使用，可以有多种状态（mouseout、hover等）  \r\n                imageUrl: ui.FRAME_PATH + '/themes/images/add_button.png'\r\n                // IE8/9下，falsh图片上传按钮图片后缀\r\n                , falshImageSuffix: \"_falsh\"\r\n                // 按钮的宽，必须要设置，不设置按钮无法显示  \r\n                , width : 102 \r\n                // 按钮的高，必须要设置，不设置按钮无法显示\r\n                , height : 102 \r\n\t\t\t}\r\n            // 响应头设置        \r\n            , headers: {\r\n                // \"Content-Type\" : \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n                // \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Origin\"\r\n                // \"Access-Control-Allow-Methods\": \"*\", // // 响应类型\r\n                // \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Origin, X-Requested-With, Content-Type, Accept\"    // // 响应头设置\r\n                // \"Access-Control-Allow-Headers\": \"*\"  // \r\n            }\r\n            // , isSaveAsBase64: false, // {Boolean} 是否保存为base64位数据上传到服务器(IE10下不支持,为了适应img组件使用同一个后台服务器)\r\n            // 默认上传完成服务器端返回参数名,get()方法返回的参数名同此处设置,response参数值对应的数据必须为数组，否则prmNames其余参数无效      \r\n            , jsonReader: {\r\n                // 返回数据参数名\r\n                root:\"rows\", \r\n                // {String} 是否请求成功字段名\r\n                isSuccess: \"success\",\r\n                // {String} 请求成功或者失败信息字段名\r\n                message: \"message\",\r\n                // 返回json数据中,文件保存名称的参数名称,默认是\"fileName\"   \r\n                fileName:\"fileName\",\r\n                // 返回json数据中,文件保存虚拟路径的参数名称,默认是\"filePath\"\r\n                filePath: \"filePath\",\r\n\t\t\t\t// {string} 服务器返回文件下载地址参数名\r\n\t\t\t\tfileUrl: \"fileUrl\"\r\n            }\r\n            // 下载主机地址\r\n            // , downloadHostAddress: \"\"\r\n            // 下载服务地址\r\n            , downloadUrl: \"\"\r\n            // 下载服务参数\r\n            , downloadServiceParams: {}\r\n            // 上传子路径\r\n            , subPath: \"\"\r\n            // 上传文件是否重命名\r\n            , isRename: true\r\n            // {Function} 文件添加之后触发事件,参数file:新增的文件对象\r\n            , onAddedFile: ui.CONSTANTS.EMPTYFUNC     \r\n            // {Function} 添加文件达到最大个数时触发,两个参数file:出错的文件对象,maxNumber:最大个数\r\n            , onMaxFilesReached: ui.CONSTANTS.EMPTYFUNC   \r\n            // {Function} 单个文件移除(指点击预览图中删除按钮)之后触发回调方法,参数file(对应的该文件信息)\r\n            , onRemovedFile: ui.CONSTANTS.EMPTYFUNC        \r\n            // {Function} 文件上传之前时取消上传触发方法(不会删除预览图),参数file:取消的文件对象\r\n            , onCancelFile: ui.CONSTANTS.EMPTYFUNC    \r\n            // {function} 上传成功回调方法,两个参数file(上传的文件预览信息),data(服务器返回的该文件上传成功返回信息)\r\n\t\t\t, onSuccess: ui.CONSTANTS.EMPTYFUNC\t\t\r\n            // {function} 上传失败回调方法,两个参数file(上传的文件预览信息),data(服务器返回的该文件上传失败返回信息)\r\n\t\t\t, onFail: ui.CONSTANTS.EMPTYFUNC\r\n\t\t};\r\n\r\n\t\t// 不改动的参数配置\r\n\t\tvar defaults = {\r\n            containerTmp: '<div wui-widget=\"file\" class=\"wui-file-container\"></div>'\t// 容器模板\r\n            , parallelUploads : 100\t // {int},有多少文件将上载到并行处理，记得修改web.config 限制上传文件大小的节\r\n            , uploadMultiple : false  // {boolean},是否允许在一个请求中发送多个文件\r\n            , maxThumbnailFilesize : 10  // float,以MB为单位[也可以使用小数]. 当文件大小超出这里的设置, 将不会生成缩略图\r\n            // , previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"img-btn-mask\\\"></div>\\n   <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n   <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\"><i class=\\\"fa fa-check\\\"></i></div>\\n  <div class=\\\"dz-error-mark\\\"><i class=\\\"fa fa-close\\\"></i></div>\\n</div>\"\t// 包含预览dropzone上传的每个文件的模板字符串\r\n            , previewTemplate: _getPreviewTemplate(true)\r\n            , paramName: \"file\"\t// {string} 设置传输文件名称参数\r\n            // , clickable: \".file-add-icon\"\t\t\t// {boolean} 设置容器本身是否可点击\r\n            , clickable: \".file-add-icon\"\t\t\t// {boolean} 设置容器本身是否可点击,若为true,则容器本身可点击，若为Jquery选择对象,则该区域可点击选择文件\r\n      \t\t, filesizeBase: 1000\r\n            , minThumbnailHeight: 40\r\n            , minThumbnailWidth: 40\r\n            , postfix: \"_file\"  // 节点及属性命名后缀\r\n\r\n            // 提示信息汉化\r\n            // , dictDefaultMessage: \"\"\r\n            // , dictFallbackMessage : \"您的浏览器不支持拖放文件上传.\"\r\n            // , dictFallbackText : \"\"\r\n            // , dictFileTooBig : \"文件 ({{filesize}}MB)字节过大。允许上传的最大文件大小: {{maxFilesize}}MB.\"\r\n            // , dictInvalidFileType : \"此类型文件不被支持上传\"\r\n            // , dictResponseError : \"服务器返回状态代码为 {{statusCode}}\"\r\n            // , dictUploadCanceled : \"文件上传被取消\" \t\t\t\t\t// 取消上传按钮文本\r\n            // , dictCancelUploadConfirmation : \"您确定取消上传吗?\"\r\n            // // 未上传之前单个文件移除按钮文本\r\n            // , dictRemoveFile : \"<i class=\\\"fa fa-trash\\\"></i>\"\r\n            // // 单个上传按钮文本\r\n            // , dictUploadFile : \"<i class=\\\"fa fa-cloud-upload\\\"></i>\"\r\n            // // 上传完成之后的取消删除按钮文本\r\n            // , dictCancelUpload : \"<i class=\\\"fa fa-close\\\"></i>\" \r\n            // , dictMaxFilesExceeded : \"您上传文件数量达到上限。\"\r\n\t\t}\r\n\r\n        $.extend(true, defaults, ui.language.file);\r\n        // console.info(defaults)\r\n\r\n\t\tfunction uiFile(element, options){\r\n\t\t\t//拿到dom元素，获得对应jq对象，要$(element)\r\n\t\t\t\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init();\t\r\n\t\t}\r\n\t\t// .getFilesWithStatus(status)\r\n\t\t// Dropzone:file.status\r\n\t\t// Dropzone.ADDED = \"added\";\r\n\t\t// ui.CONSTANTS.FILE_STATUS.QUEUED = \"queued\";\r\n\t\t// Dropzone.ACCEPTED = ui.CONSTANTS.FILE_STATUS.QUEUED;\r\n\t\t// Dropzone.UPLOADING = \"uploading\";\r\n\t\t// ui.CONSTANTS.FILE_STATUS.PROCESSING = Dropzone.UPLOADING;\r\n\t\t// ui.CONSTANTS.FILE_STATUS.CANCELED = \"canceled\";\r\n\t\t// ui.CONSTANTS.FILE_STATUS.ERROR = \"error\";\r\n\t\t// ui.CONSTANTS.FILE_STATUS.SUCCESS = \"success\";\r\n\r\n\t\t// SWFUpload.FILE_STATUS = { QUEUED : -1, IN_PROGRESS : -2, ERROR : -3, COMPLETE : -4, CANCELLED : -5 };\r\n\t\t// QUEUED - 指示此文件正在等待上传队列中\r\n\t\t// IN_PROGRESS - 指示此文件现在正在上传中\r\n\t\t// ERROR - 指示此文件引发了一个队列或上传错误\r\n\t\t// COMPLETE - 指示此文件已成功传输给服务器\r\n\t\t// CANCELLED - 指示此文件被取消上传（调用了cancelUpload函数）\r\n\r\n\t\tuiFile.prototype = {\r\n\t\t\tconstructor: uiFile,\r\n\r\n\t\t\tinit: function(){\r\n                // 初始化对象静态属性\r\n                this.pluginName = _widgetName;      // 缓存插件名字\r\n                this.element = element;             // 保存初始化标签id\r\n                this.$element = $(\"#\" + element);   // 保存初始化标签jQuery\r\n                this.defaults = defaults;           // 保存静态默认配置项\r\n\r\n                this.inputSelectorId = null;\r\n                this.fileSelectorId = null;\r\n\r\n                // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n                this.initDom = this.$element.prop(\"outerHTML\");\r\n                this.defaults.clickable = \"#\" + this.element + \" \" + this.defaults.clickable;\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);  // 覆盖默认配置项\r\n\r\n                this.isSupport = ui.CONSTANTS.ISSUPPORTH5;\r\n                this._file = null;  // 文件插件\r\n                this.files = [];    // Flash上传时，全部文件对象:队列，上传成功，上传失败,...\r\n                this.filesFormMethod = [];  // 通过方法手动添加的图片\r\n                // this.    // 预置对象\r\n                this.queuedFiles = [];  // 上传队列文件\r\n                this.successFiles = []; // 上传队列文件\r\n                this.errorFiles = [];   // 上传队列文件\r\n                this.uploadNext = false;    // SWF上传时，是否继续上传下一个\r\n\r\n                // 初始化对象页面结构模板\r\n                // this.clickBoxTmp = '<div class=\"dz-message\">\\n<div class=\"file-add-icon\"></div>\\n</div>';\r\n                this.clickBoxTmp = '<div class=\"dz-message\">'+\r\n                '    <a javascript:void(0); class=\"file-add-icon perview-a\">'+\r\n                '          <img src=\"' + this._opt.buttonSetting.imageUrl + '\" />'+\r\n                '    </a>'+\r\n                '</div>';;\r\n\r\n\r\n                // 初始化对象页面结构\r\n                this.$Maxcontainer = null;\r\n                this.$viewBox = null;\r\n                this.previewsContainer = null;\r\n                this.$clickBoxView = null;\r\n\r\n\t\t\t\t// 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n                this.handlers = {};\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n                // 构建组件页面容器结构\r\n                this.dom = this._buildContainer();  // 创建DOM节点,并返回$viewBox的HTML字符串\r\n                // this.dom = this._initDom();  // 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t\t\t},\r\n            _initFileInfo: function(file){\r\n                var self = this, params = this._opt;\r\n                var fileInfo = {\r\n                    accepted: true,\r\n                    isAddFormMethod: true,  // {Boolean} 是否通过方法添加预览图的\r\n                    fileName: \"\",    // {String} 文件名:\"9e78e963-5326-4fde-940a-a4c5ac9082f2.png\"\r\n                    filePath: \"\",    // {String} 文件服务器路径:\"/9e78e963-5326-4fde-940a-a4c5ac9082f2.png\"\r\n                    fileUrl: \"\",    // {String} 文件下载路径:\"/9e78e963-5326-4fde-940a-a4c5ac9082f2.png\"\r\n                    height: 0,       // {Number} 图片文件高度\r\n                    id: \"\",          // {String} 文件标识id:\"8cd4cdda-b837-5736-de40-4ab04a674b55\"\r\n                    lastModified: Date.parse(new Date()),    // {Number} 文件最后修改时间戳:1520324235062\r\n                    lastModifiedDate: new Date(),   // {Date} 文件最后修改日期\r\n                    name: \"\",       // {String} 文件名:\"17-18第二学期功课表.png\"\r\n                    previewElement: null, // {DOM} 文件预览容器:div.dz-preview.dz-processing.dz-image-preview.dz-success.dz-complete\r\n                    previewTemplate: null, // {DOM} 文件预览模板:div.dz-preview.dz-processing.dz-image-preview.dz-success.dz-complete\r\n                    processing: true,    // {Boolean} 是否已经添加完毕\r\n                    size: 0,            // {Number} 文件大小,单位B\r\n                    status: \"success\",  // {String} 文件状态:\"success\"\r\n                    type: \"\",           // {String} 文件类型:\"image/png\"\r\n                    // 文件上传记录\r\n                    upload:{\r\n                        progress: 100,  // 上传进度,百分比\r\n                        total: 0,       // 上传总字节数\r\n                        bytesSent: 0    // 已经上传的字节数\r\n                    },\r\n                    webkitRelativePath:\"\",\r\n                    width: 0   // {Number} 图片文件宽度\r\n                }\r\n\r\n                file = $.extend(true, {}, fileInfo, file);\r\n                if(!file.filePath && file.src){\r\n                    file.filePath = file.src;\r\n                }\r\n                if(!file.id){\r\n                    file.id = ui.guid();\r\n                }\r\n\r\n                if(file.name != \"\" && file.fileName == \"\"){\r\n                    file.fileName = file.name;\r\n                }else if(file.fileName != \"\" && file.name == \"\"){\r\n                    file.name = file.fileName;\r\n                }\r\n\r\n                if(parseInt(file.size) > 0){\r\n                    file.upload.total = parseInt(file.size);\r\n                    file.upload.bytesSent = parseInt(file.size);\r\n                }\r\n\r\n                if(!file.previewElement){\r\n                    file.previewElement = self._createElement(self.defaults.previewTemplate);\r\n                    file.previewTemplate = file.previewElement;\r\n                }\r\n\r\n                if(params.isCreateImageThumbnails && file.type.match(/image.*/)){\r\n                    $(file.previewElement).addClass(\"dz-image-preview\");\r\n                }\r\n                return file;\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n                this._opt.maxNumber = ui.formatMaxNumber(param.maxNumber);\r\n\r\n                if(param.TestTags){\r\n                    this.defaults.previewTemplate = _getPreviewTemplate(false);\r\n                    this.$viewBox.addClass(\"hide-prev\");\r\n                }\r\n            },\r\n            _buildContainer: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n\r\n                if(!($selector.parent().hasClass('wui-file'))){\r\n                    var parentDiv = '<div class=\"wui-file\"></div>';\r\n                    $selector.wrap(parentDiv);    // 增加父容器\r\n                }\r\n                // 初始化对象页面结构\r\n                this.$Maxcontainer = $selector.parent();\r\n                this.$Maxcontainer.attr(\"_fileId\", this.element);\r\n                \r\n                if($selector[0].tagName === \"INPUT\"){\r\n                    this.inputSelectorId = this.element;\r\n                    this.fileSelectorId = this.element + this.defaults.postfix;\r\n                    this.$element.hide();\r\n                    // 后面增加div\r\n                    this.$element.after('<div id=\"' + this.fileSelectorId + '\"></div>');\r\n                }else if($selector[0].tagName === \"DIV\"){\r\n                    this.inputSelectorId = this.element + this.defaults.postfix;\r\n                    this.fileSelectorId = this.element;\r\n                    // 前面增加输入框\r\n                    this.$element.before('<input type=\"text\" wui-widget-hidden=\"true\" style=\"display:none\" id=\"' + this.inputSelectorId + '\" name=\"' + this.inputSelectorId + '\" />')\r\n                }\r\n\r\n                if($selector.attr(ui.validateAttributeField)){\r\n                    $(\"#\" + this.inputSelectorId).attr(ui.validateAttributeField, $selector.attr(ui.validateAttributeField));\r\n                }\r\n\r\n                if($selector.attr(\"required\")){\r\n                    $(\"#\" + this.inputSelectorId).attr(\"required\", true);\r\n                }\r\n\r\n                this.$viewBox = $(\"#\" + this.fileSelectorId);\r\n                this.previewsContainer = document.getElementById(this.fileSelectorId);\r\n\r\n                if(!(this.$viewBox.hasClass('dropzone'))){\r\n                    this.$viewBox.addClass('dropzone');\r\n                }\r\n\r\n                if(!(this.$viewBox.hasClass('wui-file-icon'))){\r\n                    this.$viewBox.addClass('wui-file-icon');\r\n                }\r\n\r\n                if(!(this.$viewBox.find(\".dz-message\") && this.$viewBox.find(\".dz-message\").length > 0)){\r\n                    this.$clickBoxView = $(self._createElement(self.clickBoxTmp))\r\n                    this.$viewBox.append(this.$clickBoxView);\r\n                }else{\r\n                    this.$clickBoxView = this.$viewBox.find(\".dz-message\").eq(0);\r\n                }\r\n\r\n                // 初始化容器尺寸\r\n                self._initSize();\r\n\r\n                var tempId = ui.guid();\r\n                this.$clickBoxView.attr(\"id\", tempId);\r\n                // this.previewsContainer.querySelector(\".dz-message\").setAttribute(\"id\", tempId);\r\n\r\n                // 初始化组件\r\n                self._initWidget();\r\n\r\n                this.$element.attr(\"ui-type\", self.pluginName);\r\n                $(\"#\" + this.inputSelectorId).attr(\"ui-type\", self.pluginName);\r\n                this.hasDom = true;\r\n                return this.$viewBox.prop(\"outerHTML\");\r\n            },\r\n            _initWidget: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                var url = param.url;\r\n                if(url == \"\"){\r\n                    ui.logError(\"url不能为空\", FRAME_NAME + \".\" + _widgetName, true);\r\n                    return false;\r\n                }\r\n\r\n                var tempId = this.$clickBoxView.attr(\"id\");\r\n                // if(param.otherParam != null){\r\n                //     var otherParam = ui.parseToObj(param.otherParam);\r\n                //     if(otherParam){\r\n                //         $.extend(true, otherParam, param.otherParam);\r\n                //         url = ui.buildUrl(url, otherParam);\r\n                //     }\r\n                // }else{\r\n                //     url = ui.buildUrl(url, param.jsonReader);\r\n                // }\r\n                \r\n                var apiParams, serviceParam = {\r\n                    // 上传子路径\r\n                    subPath: param.subPath,\r\n                    // 上传文件是否重命名\r\n                    isRename: param.isRename\r\n                };\r\n                if(!ui.isEmptyType(param.data)){\r\n                    apiParams = $.extend(true, {}, param.data, param.jsonReader);\r\n                }\r\n\r\n                serviceParam = $.extend(true, serviceParam, param.otherParam);\r\n                url = ui.buildUrl(url, serviceParam);\r\n                // var defaultOtherParams = $.extend(true, {}, param.jsonReader);\r\n                // var otherParam = ui.formatOtherParam(param.otherParam);\r\n                // var otherParams = $.extend(true, {}, defaultOtherParams, otherParam);\r\n                    \r\n                if(this.isSupport){\r\n                    Dropzone.autoDiscover = false;\r\n                    var fileParam = {\r\n                        // {string} 文件提交后台服务地址\r\n                        url: url\r\n                        // {string} 提交方法\r\n                        , method: param.method\r\n                        // {int}    同时最多上传文件个数，默认是0,表示不限制\r\n                        // , maxFiles: param.maxNumber > 0 ? param.maxNumber : null\r\n                        // // {int}    同时最多上传文件个数，默认是0,表示不限制\r\n                        , maxFiles: param.maxNumber !== false ? param.maxNumber : null\r\n                        // {string} 实现检查文件的 mime 类型或扩展名， 使用逗号分隔文件类型或者扩展名列表\r\n                        , acceptedFiles: param.acceptedFiles\r\n                        // {int}    最大文件大小(单位MB)\r\n                        , maxFilesize : param.maxFilesize\r\n                        // {boolean} 是否创建图片缩略图\r\n                        , createImageThumbnails : param.isCreateImageThumbnails\r\n                        // {boolean} 关闭自动上传功能，默认会true会自动上传,也就是添加一张图片向服务器发送一次请求\r\n                        , autoProcessQueue : param.isAutoProcessQueue\r\n                        // {boolean} 添加上传取消和删除预览图片的链接\r\n                        , addRemoveLinks : param.isAddRemoveLinks\r\n                        // {boolean} 添加上传取消和删除预览图片的链接\r\n                        // , addRemoveLinks : false\r\n                        // {int} 设置缩略图的宽度\r\n                        , thumbnailWidth: param.thumbnailWidth\r\n                        // {int} 设置缩略图的高度\r\n                        , thumbnailHeight: param.thumbnailHeight\r\n                        // {boolean} 设置容器本身是否可点击\r\n                        , clickable: this.defaults.clickable\r\n                        // {int},有多少文件将上载到并行处理，记得修改web.config 限制上传文件大小的节\r\n                        , parallelUploads : this.defaults.parallelUploads\r\n                        // {boolean},是否允许在一个请求中发送多个文件\r\n                        , uploadMultiple : this.defaults.uploadMultiple\r\n                        // float,以MB为单位[也可以使用小数]. 当文件大小超出这里的设置, 将不会生成缩略图\r\n                        , maxThumbnailFilesize : this.defaults.maxThumbnailFilesize\r\n                        // 包含预览dropzone上传的每个文件的模板字符串\r\n                        , previewTemplate: this.defaults.previewTemplate\r\n                        // {string} 设置传输文件名称参数\r\n                        , paramName: this.defaults.paramName\r\n                        // {Object} 传输其他参数\r\n                        , params: apiParams\r\n                        \r\n                        , filesizeBase: this.defaults.filesizeBase\r\n                        , headers: param.headers\r\n\r\n                        , dictDefaultMessage : this.defaults.dictDefaultMessage\r\n                        , dictFallbackMessage : this.defaults.dictFallbackMessage\r\n                        , dictFallbackText : this.defaults.dictFallbackText\r\n                        , dictFileTooBig : this.defaults.dictFileTooBig\r\n                        , dictInvalidFileType : this.defaults.dictInvalidFileType\r\n                        , dictResponseError : this.defaults.dictResponseError\r\n                        , dictCancelUpload : this.defaults.dictCancelUpload\r\n                        , dictUploadCanceled: this.defaults.dictUploadCanceled\r\n                        , dictCancelUploadConfirmation : this.defaults.dictCancelUploadConfirmation\r\n                        , dictRemoveFile : this.defaults.dictRemoveFile\r\n                        , dictUploadFile : this.defaults.dictUploadFile\r\n                        , dictMaxFilesExceeded : this.defaults.dictMaxFilesExceeded\r\n                    }\r\n                    // this._file = new Dropzone(this.$element[0], fileParam);\r\n                    this._file = new Dropzone(this.previewsContainer, fileParam);\r\n                    this._initDropzoneEvent();\r\n                }else{\r\n                    if(param.acceptedFiles == null){\r\n                        param.acceptedFiles = \"*.*\";\r\n                        param.file_types_description = \"All Files\";\r\n                    }else{\r\n                        param.acceptedFiles = param.acceptedFiles.replace(/\\./g, \"\\*.\").replace(/,/g, \";\");\r\n                        param.file_types_description = param.acceptedFiles;\r\n                    }\r\n\r\n                    if(param.method.toLowerCase() == \"post\"){\r\n                        param.use_query_string = false;\r\n                    }else{\r\n                        param.use_query_string = true;\r\n                    }\r\n\r\n                    if(parseInt(param.maxFilesize) == 0){\r\n                        param.file_size_limit = 0;\r\n                    }else{\r\n                        param.file_size_limit = parseInt(param.maxFilesize) + 'MB';\r\n                    }\r\n\r\n                    var buttonSetting = param.buttonSetting;\r\n                    var imageUrl = buttonSetting.imageUrl;\r\n                    var pointCharIndex = imageUrl.lastIndexOf(\".\");\r\n                    var falshImageUrl = imageUrl.insert(buttonSetting.falshImageSuffix, pointCharIndex);\r\n\r\n                    var falshBtnWidth = parseInt(buttonSetting.width) - 2,\r\n                        falshBtnHeight = parseInt(buttonSetting.height) - 2;\r\n\r\n                        // alert(url)\r\n                    var fileParam = {\r\n                        upload_url : url // 上传操作后台处理URL，相当于form的action属性\r\n                        , flash_url : param.flashUrl // swf文件的位置，指向JS目录下的swfupload.swf文件即可 \r\n                        , file_post_name : this.defaults.paramName // 提交到后台的文件的名字，相当于<input type='file' />域的name值，默认为“Filedata”  \r\n                        , use_query_string : param.use_query_string     // 该属性可选值为true和false，设置post_params是否以GET方式发送。如果为false，那么则以POST形式发送。\r\n                        // , post_params : {/* param2 : encodeURI('你好', \"utf-8\")*/}\r\n                        , post_params : apiParams\r\n                        , prevent_swf_caching: true\r\n                        // 可上传的文件类型,例如：\"\"*.jpg;*.gif\"\"\r\n                        , file_types : param.acceptedFiles \r\n                        // 可上传文件类型的描述信息  \r\n                        , file_types_description : param.file_types_description \r\n                        , file_size_limit : param.file_size_limit // 上传文件大小限制，接受值和单位，默认单位是KB，如'1024 MB'  \r\n                        , file_upload_limit : (param.maxNumber === false ? 100 : param.maxNumber)\r\n                        , file_queue_limit : 100\r\n                        \r\n                        // Button Setting\r\n                        , button_placeholder_id : tempId // 设置一个HTML元素，用以渲染Flash的Button  \r\n                        , button_text : ''\r\n                        , button_text_style : \"color: #000000; font-size: 16pt;\"\r\n                        , button_text_left_padding : 0\r\n                        , button_text_top_padding : 0\r\n                        // 按钮图片，Flash使用，可以有多种状态（mouseout、hover等）  \r\n                        , button_image_url: falshImageUrl   \r\n                        // 按钮的宽，必须要设置，不设置按钮无法显示  \r\n                        , button_width : falshBtnWidth \r\n                        // 按钮的高，必须要设置，不设置按钮无法显示\r\n                        , button_height : falshBtnHeight   \r\n                        , button_action : SWFUpload.BUTTON_ACTION.SELECT_FILES\r\n                        , button_disabled : false\r\n                        , button_cursor : SWFUpload.CURSOR.HAND // 鼠标移到按钮上的光标样式  \r\n                        , button_window_mode : SWFUpload.WINDOW_MODE.TRANSPARENT// Flash剪辑的WMODE属性  \r\n                        \r\n                        // Event\r\n                        // 当页面不能正常加载flash影片时触发。通常是因为没有安装Flash Player或者它的版本低于 9.0.28\r\n                        , swfupload_load_failed_handler: function(){}\r\n                        // 在flash加载并准备完毕后被触发\r\n                        , swfupload_loaded_handler: function(){}\r\n                        // 文件选择对话框打开时触发，传入SWFUpload定义的File参数  \r\n                        , file_dialog_start_handler: function(file){\r\n                            // console.info(file);\r\n                        }\r\n                        // 当选择好文件，文件选择对话框关闭消失时,文件被加入队列时触发\r\n                        , file_queued_handler: function(file){\r\n                            // console.info(file)\r\n                            // var _file = self._initFileInfo(file);\r\n\r\n                            // console.error(_file)\r\n                            // console.error(file)\r\n                            self._addedFileEvent(file);\r\n                        }\r\n                        // 当选择文件对话框关闭时，如果选择的文件加入到上传队列中失败时触发\r\n                        // 文件入队出错的原因可能有：1.超过了上传大小限制，2.文件为零字节，3.超过文件队列数量限制，4.允许外的无效文件类型。\r\n                        // -100:QUEUE_LIMIT_EXCEEDED - 指出用户入队过多，超过队列最大长度。不过一旦在队列中的文件被上传或者删除，用户仍然可以添加文件到文件上传等待队列中。\r\n                        // -110:FILE_EXCEEDS_SIZE_LIMIT -指出超过了所限制的文件大小(file_size_limit).\r\n                        // -120:ZERO_BYTE_FILE - 指出选择的文件时0字节的。Flash Player不能处理空文件。上传Windows快捷方式图标也会触发这个错误。\r\n                        // -130:INVALID_FILETYPE - 指出选择的文件扩展名与允许不符。用户手工输入扩展名不符的文件名，而不是用鼠标点击选择文件的时候就有可能触发这个错误。\r\n                        // 参数：file object, error code, message\r\n                        , file_queue_error_handler: function(file, code, message){\r\n                            // console.info(code);\r\n                            // console.info(message);\r\n                            var queueErrorCode = {\r\n                                \"-100\": \"用户入队过多，超过队列最大长度\",\r\n                                \"-110\": \"超过了所限制的文件大小\",\r\n                                \"-120\": \"选择的文件是0字节的\",\r\n                                \"-130\": \"选择的文件扩展名与允许不符\"\r\n                            }\r\n                            wui.errorNotice(queueErrorCode[code.toString()]);\r\n                        }\r\n                        // 当选择文件对话框关闭，并且所有选择文件已经处理完成（加入上传队列成功或者失败）时触发\r\n                        // 参数：number of files selected, number of files queued, total number of files in the queued\r\n                        , file_dialog_complete_handler: function(selectedFilesNumber, queuedFilesNumber, allQueuedFilesNumber){\r\n                            // console.info(queuedFilesNumber);\r\n                        }\r\n                        // 在文件开始向服务端上传之前触发uploadStart事件，这个事件处理函数可以完成上传前的最后验证以及其他你需要的操作，例如添加、修改、删除post数据等。\r\n                        , upload_start_handler : function(file){} \r\n                        // 上传过程中定时触发，此方法在更新进度条时比较重要 \r\n                        // 参数：上传文件对象file object, 已上传的字节数bytes complete, 总共的字节数total bytes\r\n                        , upload_progress_handler : function(file, completeBytes, totalBytes){\r\n                            self._progress(file, completeBytes, totalBytes);\r\n                        }\r\n                        // 只要上传被终止或者没有成功完成，那么uploadError事件都将被触发\r\n                        // 注意：此时文件上传的周期还没有结束，不能在这里开始下一个文件的上传\r\n                        // 参数：file object, error code(见SWFUpload.UPLOAD_ERROR), message\r\n                        , upload_error_handler: function(file, code, message){\r\n                            self._error(file, message, code);\r\n                        }\r\n                        // 当文件上传的处理已经完成（这里的完成只是指向目标处理程序发送完了Files信息，只管发，不管是否成功接收），并且服务端返回了200的HTTP状态时触发\r\n                        // 注意：此时文件上传的周期还没有结束，不能在这里开始下一个文件的上传\r\n                        // 参数：file object, server data(服务器返回数据), received response(服务器自己发出的HTTP状态码)\r\n                        , upload_success_handler : function(file, data, response){\r\n                            // console.error(file);\r\n                            // console.error(data);\r\n                            self._success(file, data, response);\r\n                        }\r\n                        // 当上传队列中的一个文件完成了一个上传周期，无论是成功(uoloadSuccess触发)还是失败(uploadError触发)\r\n                        // 如果要下个文件自动上传，那么在这个时候调用this.startUpload()来启动下一个文件的上传\r\n                        , upload_complete_handler : function(file){\r\n                            self._complete(file);\r\n                        }\r\n                        , debug_handler: function(){}\r\n\r\n                        // 如果debug设置为true，那么页面底部会自动添加一个textArea， 如果此debug事件没有被重写，那么SWFUpload库和Flash都会调用此事件来在页面底部的输出框中添加debug信息供调试使用。\r\n                        , debug : true\r\n\r\n                        , custom_settings : {}\r\n                    }\r\n                    // console.info(fileParam);\r\n                    this._file = new SWFUpload(fileParam);\r\n                }\r\n            },\r\n            _addedFileEvent: function(file){\r\n                var self = this, param = this._opt;\r\n                // console.info(file);\r\n                if(self.isSupport){\r\n                    var myDropzone = this._file, thumbnailElement, _i, _len, _ref, _ref1;\r\n                    // console.info(myDropzone.files);\r\n                    // myDropzone.emit('maxfilesreached', self.files);\r\n                    //     return false;\r\n                    // console.info(myDropzone.options.maxFiles);\r\n                    // if(param.maxNumber !== false && self.files.length >= param.maxNumber){\r\n                    //     myDropzone.emit('maxfilesreached', self.files);\r\n                    //     return false;\r\n                    // }\r\n                    if(!file.id){\r\n                        file.id = ui.guid();\r\n                    }\r\n                    if(file.previewElement){\r\n                        $(file.previewElement).attr(\"fileId\", file.id);\r\n                        // 自定义根据后缀名添加预览缩略图\r\n                        if(!(file.type.match(/image.*/))){\r\n                            var fileIcon = _getPrevIcon(file.name);\r\n                            _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n                            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                                thumbnailElement = _ref[_i];\r\n                                var iElement = $('<i class=\"fa fa-' + fileIcon + ' prev-icon\"></i>');\r\n                                iElement.css(\"font-size\", (param.thumbnailHeight - 30) + \"px\");\r\n                                $(thumbnailElement).after(iElement);\r\n                                // thumbnailElement.alt = file.name;\r\n                                // thumbnailElement.src = _getPrevImage(file.name);\r\n                            }\r\n                        }else{\r\n                            if(!param.isCreateImageThumbnails){\r\n                                var fileIcon = _getPrevIcon(file.name);\r\n                                _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n                                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                                    thumbnailElement = _ref[_i];\r\n                                    var iElement = $('<i class=\"fa fa-' + fileIcon + ' prev-icon\"></i>');\r\n                                    iElement.css(\"font-size\", (param.thumbnailHeight - 30) + \"px\");\r\n                                    $(thumbnailElement).after(iElement);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // 添加单个文件上传按钮\r\n                        if(param.isAddUploadLinks){\r\n                            file._uploadLink = Dropzone.createElement(\"<a class=\\\"dz-upload-link\\\" href=\\\"javascript:void(0);\\\" data-dz-upload>\" + self.defaults.dictUploadFile + \"</a>\");\r\n                            \r\n                            file.previewElement.appendChild(file._uploadLink);\r\n\r\n                            // file._uploadLink.addEventListener(\"click\", function(){\r\n                            //     myDropzone.processFile(file);\r\n                            // })\r\n                            $(file._uploadLink).on(\"click\", function(){\r\n                                myDropzone.processFile(file);\r\n                            })\r\n                        }\r\n\r\n                        \r\n                        // 添加单个文件下载按钮\r\n                        if(param.isEnableDownload){\r\n\r\n                            file._downloadLink = Dropzone.createElement(\"<a class=\\\"dz-download-link\\\" href=\\\"javascript:void(0);\\\" data-dz-download>\" + self.defaults.dictDownloadFile + \"</a>\");\r\n                            \r\n                            file.previewElement.appendChild(file._downloadLink);\r\n\r\n                            // file._uploadLink.addEventListener(\"click\", function(){\r\n                            //     myDropzone.processFile(file);\r\n                            // })\r\n                            $(file._downloadLink).on(\"click\", function(){\r\n                                // console.error(file)\r\n                                if(param.onDownloadFile && typeof(param.onDownloadFile) === \"function\"){\r\n                                    param.onDownloadFile(file, \"downloadFile\");\r\n                                }\r\n\r\n                                // var _href = $(this).attr(\"_href\");\r\n                                // self._createIframe(_href);\r\n                                self._downloadFile(file);\r\n\r\n                                // if(jsonFileUrl && file[jsonFileUrl]){\r\n                                //     if(param.downloadHostAddress){\r\n                                //         window.location = param.downloadHostAddress + file[jsonFileUrl];\r\n                                //     }else{\r\n                                //         window.location = file[jsonFileUrl];\r\n                                //     }\r\n                                // }\r\n                            })\r\n                            \r\n                        }\r\n\r\n                        // 单个删除按钮\r\n                        // if (param.isAddRemoveLinks) {\r\n                        //     file._removeLink = self._createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + self.defaults.dictCancelUpload + \"</a>\");\r\n                        //     file.previewElement.appendChild(file._removeLink);\r\n                        //     ui.addEventListener(file._removeLink, \"click\", function(e){\r\n                        //         myDropzone.removeFile(file);\r\n                        //     });\r\n                        // }\r\n\r\n                        // console.info(file);\r\n                        _ref1 = file.previewElement.querySelectorAll(\".dz-image\");\r\n                        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n                            dzImageElement = _ref1[_i];\r\n                            dzImageElement.style.width = param.thumbnailWidth - 2 + \"px\";\r\n                            dzImageElement.style.height = param.thumbnailHeight - 2 + \"px\";\r\n                        }\r\n                    }\r\n                }else{\r\n                    // console.info(file.name);\r\n                    if(param.maxNumber !== false){\r\n                        if(self.files.length >= param.maxNumber){\r\n                            // self.$viewBox.addClass(\"dz-max-files-reached\");\r\n                            self._maxFilesReached(file);\r\n                            return false;\r\n                        }else if((self.files.length + 1) == param.maxNumber){\r\n                            self.$viewBox.addClass(\"dz-max-files-reached\");\r\n                        }\r\n                    }\r\n                        \r\n                    var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\r\n                    if(!(self.$viewBox.hasClass('dz-started'))){\r\n                        self.$viewBox.addClass('dz-started');\r\n                    }\r\n\r\n                    // console.error(self.previewsContainer)\r\n                    if(self.previewsContainer){\r\n                        file.previewElement = self._createElement(self.defaults.previewTemplate);\r\n                        file.previewTemplate = file.previewElement;\r\n                        $(file.previewElement).attr(\"fileId\", file.id);\r\n\r\n                        var _len0 = self.previewsContainer.children.length;\r\n                        self.previewsContainer.insertBefore(file.previewElement, self.previewsContainer.children[_len0-1]);\r\n\r\n                        // _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\r\n                        // for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        //     node = _ref[_i];\r\n                        //     node.textContent = self._renameFilename(file.name);\r\n                        // }\r\n                        $(file.previewElement).find(\"[data-dz-name]\").each(function(index, elem){\r\n                            $(elem).html(self._renameFilename(file.name))\r\n                        })\r\n\r\n                        // _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\r\n                        // for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\r\n                        //     node = _ref1[_j];\r\n                        //     node.innerHTML = self._filesize(file.size);\r\n                        // }\r\n                        $(file.previewElement).find(\"[data-dz-size]\").each(function(index, elem){\r\n                            $(elem).html(self._filesize(file.size))\r\n                        })\r\n\r\n                        // _ref2 = file.previewElement.querySelectorAll(\".dz-image\");\r\n                        // for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\r\n                        //     dzImageElement = _ref2[_i];\r\n                        //     dzImageElement.style.width = param.thumbnailWidth - 2 + \"px\";\r\n                        //     dzImageElement.style.height = param.thumbnailHeight - 2 + \"px\";\r\n                        // }\r\n                        $(file.previewElement).find(\".dz-image\").each(function(index, elem){\r\n                            $(elem).css({\r\n                                width: (param.thumbnailWidth - 2) + \"px\",\r\n                                height: (param.thumbnailHeight - 2) + \"px\"\r\n                            })\r\n                        })\r\n\r\n                        self._addFileAction(file);\r\n\r\n                        var fileIcon = _getPrevIcon(file.name);\r\n                        // _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n                        // for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        //     thumbnailElement = _ref[_i];\r\n                        //     var iElement = $('<i class=\"fa fa-' + fileIcon + ' prev-icon\"></i>');\r\n                        //     iElement.css(\"font-size\", (param.thumbnailHeight - 30) + \"px\");\r\n                        //     $(thumbnailElement).after(iElement);\r\n                        // }\r\n\r\n                        $(file.previewElement).find(\"[data-dz-thumbnail]\").each(function(index, elem){\r\n                            var $iElement = $('<i class=\"fa fa-' + fileIcon + ' prev-icon\"></i>');\r\n                            $iElement.css(\"font-size\", (param.thumbnailHeight - 30) + \"px\");\r\n                            $(elem).after($iElement);\r\n                        })\r\n                    }\r\n                    // self.queuedFiles.push(file);\r\n\r\n                    if(param.isAutoProcessQueue){\r\n                        self._file.startUpload(file.id);\r\n                    }\r\n\r\n                    // if(typeof(param.maxNumber) == \"number\" && (self.files.length + 1) == param.maxNumber){\r\n                    //     // self.$viewBox.addClass(\"dz-max-files-reached\");\r\n                    //     self._file.setButtonDimensions(0, 0);\r\n                    // }\r\n                }\r\n\r\n                self.files.push(file);\r\n                this._resize();\r\n\r\n                // onAddedFile参数\r\n                if(param.onAddedFile && typeof(param.onAddedFile) === \"function\"){\r\n                    param.onAddedFile(file, \"addedFile\");\r\n                }\r\n\r\n                if(self.listeners.indexOf('addedfile') > -1) {\r\n                    if(!self.emit({type:'addedfile',target: self.$element, file: file})) return ;\r\n                }\r\n            },\r\n            _maxFilesReached: function(file){\r\n                var self = this, param = this._opt;\r\n                // self.$viewBox.addClass(\"dz-max-files-reached\");\r\n                self.$viewBox.addClass(\"dz-max-files-reached\");\r\n                if(param.onMaxFilesReached && typeof(param.onMaxFilesReached) === \"function\"){\r\n                    param.onMaxFilesReached(file, \"maxFilesReached\");\r\n                }\r\n\r\n                if(self.listeners.indexOf('maxfilesreached') > -1) {\r\n                    if(!self.emit({type:'maxfilesreached',target: self.dom, file: file})) return ;\r\n                }\r\n            },\r\n            _error: function(file, message, code) {\r\n                var self = this, param = this._opt, _file = null;\r\n\r\n                if(self.isSupport){\r\n                    var node, _i, _len, _ref, _results;\r\n                    // 添加错误信息\r\n                    if (file.previewElement) {\r\n                        file.previewElement.classList.add(\"dz-error\");\r\n                        if (typeof message !== \"String\" && message.error) {\r\n                            message = message.error;\r\n                        }\r\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\r\n                        _results = [];\r\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                            node = _ref[_i];\r\n                            _results.push(node.textContent = message);\r\n                        }\r\n                        // return _results;\r\n                    }\r\n                    _file = file;\r\n                }else{\r\n                    if(code == -240){\r\n                        self._maxFilesReached(file);\r\n                        return false;\r\n                    }\r\n                    \r\n                    var file_id = file.id, _files = self.files, index = -1;\r\n                    for(var i = 0, _len = _files.length; i < _len; i++){\r\n                        var __file = _files[i];\r\n                        if(file_id == __file.id){\r\n                            __file.filestatus = file.filestatus;\r\n                            _file = __file;\r\n                            index = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(_file != null){\r\n                        // self.errorFiles.push(_file);\r\n                        var node, _i, _len, _ref, _results;\r\n                        if (_file.previewElement) {\r\n                            $(_file.previewElement).addClass(\"dz-error\");\r\n                            if (typeof message !== \"String\" && message.error) {\r\n                                message = message.error;\r\n                            }\r\n                            _ref = _file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\r\n                            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                                node = _ref[_i];\r\n                                node.innerHTML = message;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                param.onFail && typeof(param.onFail) === \"function\" && param.onFail(_file, message);\r\n                if(self.listeners.indexOf('error') > -1) {\r\n                    if(!self.emit({type:'error',target: self.$element, file: _file, code: code, message: message})) return ;\r\n                }\r\n            },\r\n            _success: function(file, data, response){\r\n                var self = this, param = this._opt, _file = null;\r\n                var jsonReader = $.extend(true, {}, param.jsonReader),\r\n                    jsonRoot = jsonReader.root,\r\n                    jsonMessage = jsonReader.message,\r\n                    jsonStatus = jsonReader.isSuccess;\r\n\r\n                delete jsonReader[\"root\"];\r\n                delete jsonReader[\"message\"];\r\n                delete jsonReader[\"isSuccess\"];\r\n\r\n                if(ui.isEmptyType(data)){\r\n\r\n                    return false;\r\n                }\r\n\r\n                // console.info(data);\r\n                var returnValue = ui.parseToObj(data), results;\r\n                if(!returnValue){\r\n                    returnValue = data;\r\n                }\r\n                // var _res;\r\n                if(ui.isEmptyType(jsonRoot)){\r\n                    results = returnValue;\r\n                }else{\r\n                    results = returnValue[jsonRoot];\r\n\r\n                    if(!ui.isEmptyType(jsonStatus)){\r\n                        if(!returnValue[jsonStatus]){\r\n                            this._error(file, returnValue[jsonMessage], -1);\r\n                            // console.error(file, returnValue[jsonMessage])\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                // console.error(results);\r\n\r\n                if(ui.isEmptyType(results)){\r\n                    return false;\r\n                }\r\n\r\n\r\n                // console.info(results);\r\n                if(self.isSupport){\r\n                    if (file.previewElement) {\r\n                        file.previewElement.classList.add(\"dz-success\");\r\n                    }\r\n                    _file = file;\r\n\r\n                    if(ui.isArray(results)){\r\n                        for(var i = 0; i < results.length; i++){\r\n                            var theData = results[i];\r\n                            _file.data = theData;\r\n                            for(var key in jsonReader){\r\n                                _file[jsonReader[key]] = theData[jsonReader[key]];\r\n                            }\r\n                        }\r\n                    }else if(ui.isJson(results)){\r\n                        _file.data = results;\r\n                        for(var key in jsonReader){\r\n                            _file[jsonReader[key]] = results[jsonReader[key]];\r\n                        }\r\n                    }\r\n\r\n                    if(file._downloadLink){\r\n                        var jsonFileUrl = param.jsonReader.fileUrl, \r\n                            jsonFileName = param.jsonReader.fileName, \r\n                            fileUrl = \"javascript:void(0);\";\r\n                        if(jsonFileUrl && file[jsonFileUrl]){\r\n                            if(param.downloadHostAddress){\r\n                                fileUrl = param.downloadHostAddress + file[jsonFileUrl];\r\n                            }else{\r\n                                fileUrl = file[jsonFileUrl];\r\n                            }\r\n                            \r\n                            // file._downloadLink.setAttribute(\"href\", fileUrl);\r\n                            file._downloadLink.setAttribute(\"_href\", fileUrl);\r\n                        }\r\n\r\n                        // if(jsonFileName && file[jsonFileName]){\r\n                        //     file._downloadLink.setAttribute(\"download\", file[jsonFileName]);\r\n                        // }\r\n                    }\r\n                }else{\r\n                    var file_id = file.id, _files = self.files, index = -1;\r\n                    for(var i = 0, _len = _files.length; i < _len; i++){\r\n                        var __file = _files[i];\r\n                        if(file_id == __file.id){\r\n                            __file.filestatus = file.filestatus;\r\n                            _file = __file;\r\n                            index = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(_file != null){\r\n                        if (_file.previewElement) {\r\n                            $(_file.previewElement).addClass('dz-success');\r\n                        }\r\n                        \r\n                        if(ui.isArray(results)){\r\n                            for(var i = 0; i < results.length; i++){\r\n                                var theData = results[i];\r\n                                _file.data = theData;\r\n                                for(var key in jsonReader){\r\n                                    _file[jsonReader[key]] = theData[jsonReader[key]];\r\n                                }\r\n                            }\r\n                        }else if(ui.isJson(results)){\r\n                            _file.data = results;\r\n                            for(var key in jsonReader){\r\n                                _file[jsonReader[key]] = results[jsonReader[key]];\r\n                            }\r\n                        }\r\n\r\n                        if(file._downloadLink){\r\n                            var jsonFileUrl = param.jsonReader.fileUrl, fileUrl = \"javascript:void(0);\";\r\n                            if(jsonFileUrl && file[jsonFileUrl]){\r\n                                if(param.downloadHostAddress){\r\n                                    fileUrl = param.downloadHostAddress + file[jsonFileUrl];\r\n                                }else{\r\n                                    fileUrl = file[jsonFileUrl];\r\n                                }\r\n                            }\r\n                            // file._downloadLink.setAttribute(\"href\", fileUrl);\r\n                            file._downloadLink.setAttribute(\"_href\", fileUrl);\r\n                        }\r\n                    }\r\n\r\n                    // 模拟成功的动画展示\r\n                    $(_file.previewElement).addClass(\"dz-processing-success-show\");\r\n                    // 定时移除\r\n                    ui.setTimeout(function(){\r\n                        $(_file.previewElement).removeClass(\"dz-processing-success-show\");\r\n                    }, 800)\r\n                }\r\n                param.onSuccess && typeof(param.onSuccess) === \"function\" && param.onSuccess(_file, returnValue, results);\r\n                if(self.listeners.indexOf('success') > -1) {\r\n                    if(!self.emit({type:'success',target: self.$element, file: _file, data: returnValue, response: response, results: results})) return ;\r\n                }\r\n            },\r\n            //创建iframe并赋值的函数,传入参数为图片的src属性值.\r\n            // _createIframe: function(imgSrc) {\r\n            //     var self = this;\r\n            //     //如果隐藏的iframe不存在则创建\r\n            //     if ($(\"#IframeReportImg\").length === 0){\r\n            //         $('<iframe style=\"display:none;\" id=\"IframeReportImg\" name=\"IframeReportImg\" width=\"100\" height=\"100\" src=\"about:blank\"></iframe>').appendTo(\"body\");\r\n\r\n            //         $('#IframeReportImg').on(\"load\", function(){\r\n            //             self._download();\r\n            //         })\r\n            //     }\r\n            //     //iframe的src属性如不指向图片地址,则手动修改,加载图片\r\n            //     if ($('#IframeReportImg').attr(\"src\") != imgSrc) {\r\n            //         $('#IframeReportImg').attr(\"src\", imgSrc);\r\n            //     } else {\r\n            //         //如指向图片地址,直接调用下载方法\r\n            //         self._download();\r\n            //     }\r\n            // },\r\n            // //下载图片的函数\r\n            // _download: function() {\r\n            //     //iframe的src属性不为空,调用execCommand(),保存图片\r\n            //     if ($('#IframeReportImg').src != \"about:blank\") {\r\n            //         window.frames[\"IframeReportImg\"].document.execCommand(\"SaveAs\");\r\n            //     }\r\n            // },\r\n            _downloadFile: function(file){\r\n                var self = this, param = this._opt;\r\n                // console.error(file)\r\n                var serviceParams = {\r\n                    filePath: file.filePath,\r\n                    fileName: file.fileName\r\n                }\r\n                ui.getAjax({\r\n                    url: ui.buildUrl(param.downloadUrl, serviceParams),\r\n                    data: param.downloadServiceParams,\r\n                    onSuccess: function(response){\r\n\r\n                    },\r\n                    onError: function(error){\r\n\r\n                    }\r\n                })\r\n            },\r\n            _removeFile: function(file){\r\n                var self = this, param = this._opt;\r\n\r\n                this.files = self._without(self.files, file);   // 更新已有文件列表\r\n                this.filesFormMethod = self._without(self.filesFormMethod, file);   // 更新已有文件列表\r\n                if(file.isAddFormMethod){\r\n                    // this.files = self._without(self.files, file);   // 更新已有文件列表\r\n                    $(file.previewElement).remove();\r\n                    // self.previewsContainer.removeChild(file.previewElement);    // 移除预览图\r\n\r\n                    if(param.maxNumber !== false && self.files.length <= param.maxNumber){\r\n                        self.$viewBox.removeClass(\"dz-max-files-reached\");\r\n                    }\r\n                }else{\r\n                    if(self.isSupport){\r\n                        if(param.maxNumber !== false && self.files.length <= param.maxNumber){\r\n                            self.$viewBox.removeClass(\"dz-max-files-reached\");\r\n                        }\r\n                    }else{\r\n                        if(file.filestatus == ui.CONSTANTS.FILE_STATUS.QUEUED){\r\n                            self._file.cancelUpload(file.id, false);\r\n                        }else if(file.filestatus == ui.CONSTANTS.FILE_STATUS.PROCESSING){\r\n                            self._file.stopUpload(file.id, false);\r\n                            self._file.cancelUpload(file.id, false);\r\n                        }else if(file.filestatus == ui.CONSTANTS.FILE_STATUS.SUCCESS){\r\n                            var successfulUploadsNumber = self._file.getStats().successful_uploads;\r\n                            self._file.setStats({\r\n                                successful_uploads: successfulUploadsNumber - 1\r\n                            });\r\n                        }else if(file.filestatus == ui.CONSTANTS.FILE_STATUS.ERROR){\r\n                            var uploadErrorsNumber = self._file.getStats().upload_errors;\r\n                            self._file.setStats({\r\n                                upload_errors: uploadErrorsNumber - 1\r\n                            });\r\n                            self._file.cancelUpload(file.id, false);\r\n                        }else{\r\n                            self._file.cancelUpload(file.id, false);\r\n                        }\r\n\r\n                        // 上传队列的状态信息，访问实例的getStats方法可获取此对象\r\n                        // var Stats = {\r\n                        //     // 值为1或0，1表示当前有文件正在上传，0表示当前没有文件正在上传\r\n                        //     in_progress : number,\r\n                        //     // 当前上传队列中存在的文件数量\r\n                        //     files_queued : number,\r\n                        //     // 已经上传成功（uploadSuccess触发）的文件数量\r\n                        //     successful_uploads : number,\r\n                        //     // 已经上传失败的文件数量 (不包括退出上传的文件)\r\n                        //     upload_errors : number,\r\n                        //     // 退出上传的文件数量\r\n                        //     upload_cancelled : number,\r\n                        //     // 入队失败（fileQueueError触发）的文件数量\r\n                        //     queue_errors : number\r\n                        // }\r\n                        // 所有这些属性的值都可以使用setStats方法来修改，除了in_progress 和 files_queued\r\n                        \r\n                        // alert(1);\r\n                        // console.info(file);\r\n                        \r\n                        $(file.previewElement).remove();\r\n                        \r\n                        if(typeof(param.maxNumber) == \"number\"){\r\n                            if(self.files.length <= param.maxNumber){\r\n                                self.$viewBox.removeClass(\"dz-max-files-reached\");\r\n                            }\r\n\r\n                            // if((self.files.length + 1) == param.maxNumber){\r\n                            //     self._file.setButtonDimensions(param.buttonSetting.width, param.buttonSetting.height);\r\n                            // }\r\n                        } \r\n                    }\r\n                }\r\n                    \r\n\r\n                self._resize();\r\n                // console.info(param.onRemovedFile);\r\n                if(param.onRemovedFile && typeof(param.onRemovedFile) === \"function\"){\r\n                    // console.info(\"onRemovedFile File\");\r\n                    param.onRemovedFile(file, \"remove\");\r\n                }\r\n                \r\n                if(self.listeners.indexOf('removedfile') > -1) {\r\n                    if(!self.emit({type:'removedfile',target: self.dom, file: file})) return ;\r\n                }\r\n                if (self.files.length === 0) {\r\n                    return self.reset();\r\n                }\r\n            },\r\n\t        // 初始化容器尺寸:一开始没有图片，根据按钮宽高适应容器\r\n\t        _initSize: function(){\r\n                var self = this, params = this._opt;\r\n                var buttonSetting = params.buttonSetting;\r\n                if(params.conMinWidth != \"auto\"){\r\n                    this.$viewBox.width(params.conMinWidth);\r\n                    // thumbnailWidth\r\n                    this.$viewBox.addClass(\"wui-dz-init\");\r\n                }\r\n\r\n                if(params.conMinHeight != \"auto\"){\r\n                    this.$viewBox.height(params.conMinHeight);\r\n                    this.$viewBox.css({\r\n                        // \"height\": parseInt(params.conMinHeight) + \"px\",\r\n                        \"min-height\": parseInt(params.conMinHeight) + \"px\"\r\n                    })\r\n                    this.$viewBox.addClass(\"wui-dz-init\");\r\n                }\r\n\r\n                // console.info(buttonSetting);\r\n                this.$viewBox.find(\".file-add-icon\").each(function(i, theClickElem){\r\n                    $(theClickElem).width(buttonSetting.width);\r\n                    $(theClickElem).height(buttonSetting.height);\r\n                    // $(theClickElem).children(\"img\").attr(\"src\", buttonSetting.imageUrl);\r\n                    // $(theClickElem).css({\r\n                    //     \"background-image\": url(buttonSetting.imageUrl)\r\n                    // })\r\n                })\r\n\r\n                // this.$viewBox.addClass(\"wui-dz-init\");\r\n\t\t\t\treturn true;\r\n\t        \tvar self = this, param = this._opt, _ref0, _offsetHeight, _margin = 0, _btnWidth, _btnHeight;\r\n\t        \tvar buttonSetting = param.buttonSetting;\r\n\t        \tvar paddingLeft = (buttonSetting.width/10), \r\n\t            \tpaddingRight = paddingLeft, \r\n\t            \tpaddingTop = (buttonSetting.height/10), \r\n\t            \tpaddingBottom = paddingTop,\r\n\t            \tminHeight = (buttonSetting.height + paddingTop + paddingBottom + 4);\r\n\r\n\t            if(minHeight < 45){\r\n\t            \tminHeight = 44;\r\n\t            \tpaddingTop = (minHeight - param.thumbnailHeight) / 2; \r\n\t            \tpaddingBottom = paddingTop;\r\n\t            }\r\n\r\n\t            self.previewsContainer.style.paddingLeft = paddingLeft + \"px\";\r\n\t            self.previewsContainer.style.paddingRight = paddingRight + \"px\";\r\n\t            self.previewsContainer.style.paddingTop = paddingTop + \"px\";\r\n\t            self.previewsContainer.style.paddingBottom = paddingBottom + \"px\";\r\n\t            self.previewsContainer.style.minHeight = minHeight + \"px\";\r\n\r\n\t            // 初始化按钮高度\r\n\t            if(self.isSupport){\r\n\t            \t_ref0 = this.previewsContainer.querySelector(\".dz-message\");\r\n\t            \tvar\tfontSize = (buttonSetting.height > buttonSetting.width) ? ((buttonSetting.height * 2) / 3) : ((buttonSetting.width * 2) / 3),\r\n\t            \t\t_ref1 = _ref0.querySelector(\".file-add-icon\");\r\n\r\n\t            \t_ref1.style.width = buttonSetting.width + \"px\";\r\n            \t\t_ref1.style.height = buttonSetting.height + \"px\";\r\n            \t\t_ref1.style.fontSize = fontSize + \"px\";\r\n\r\n            \t\t_ref0.style.marginTop = paddingTop + \"px\";\r\n            \t\t_ref0.style.height = \"auto\";\r\n\t            }else{\r\n\t        \t\t_ref0 = this.previewsContainer.querySelector(\"object\");\r\n\r\n\t            \tif(_ref0){\r\n\t        \t\t\t_ref0.style.width = buttonSetting.width + \"px\";\r\n            \t\t\t_ref0.style.height = buttonSetting.height + \"px\";\r\n\t            \t\t_ref0.style.marginTop = paddingTop + \"px\";\r\n\t            \t}\r\n\t        \t} \r\n\t        },\r\n\t        _resize: function(){\r\n\t\t\t\treturn false;\r\n\t\t\t\tvar self = this, param = this._opt, _ref0, _offsetHeight, _marginTop = 0, _btnWidth, _btnHeight;\r\n\r\n\t        \tvar buttonSetting = param.buttonSetting;\r\n\t        \tvar minHeight = buttonSetting.height;\r\n\t            if(param.thumbnailHeight > buttonSetting.height){\r\n\t            \tminHeight = param.thumbnailHeight;\r\n\t            }\r\n\r\n\t        \tvar paddingTop = (buttonSetting.height/10), \r\n\t            \tpaddingBottom = paddingTop;\r\n\r\n\t            _minHeight = (minHeight + paddingTop + paddingBottom + 4);\r\n\r\n\t            self.previewsContainer.style.minHeight = _minHeight + \"px\";\r\n\r\n\t\t        // _minHeight = parseInt(this.previewsContainer.style.minHeight);\r\n\t\t\t\tif(this.previewsContainer.children.length > 1){\r\n        \t\t\t_btnWidth = param.thumbnailWidth;\r\n        \t\t\t_btnHeight = param.thumbnailHeight;\r\n        \t\t}else{\r\n        \t\t\t_btnWidth = buttonSetting.width;\r\n        \t\t\t_btnHeight = buttonSetting.height;\r\n\r\n        \t\t\t_marginTop = ((_minHeight - parseInt(buttonSetting.height) - 4)/2);\r\n        \t\t}\r\n\r\n\t        \tif(this.isSupport){\r\n\t        \t\t_ref0 = this.previewsContainer.querySelector(\".dz-message\");\r\n\r\n\t        \t\tvar _ref1 = _ref0.querySelector(\".file-add-icon\"),\r\n        \t\t\t\tfontSize = (_btnWidth > _btnHeight) ? ((_btnHeight * 2) / 3) : ((_btnWidth * 2) / 3);\r\n\r\n        \t\t\t_ref1.style.width = _btnWidth + \"px\";\r\n            \t\t_ref1.style.height = _btnHeight + \"px\";\r\n            \t\t_ref1.style.fontSize = fontSize + \"px\";\r\n\r\n            \t\t_ref0.style.marginTop = _marginTop + \"px\";\r\n            \t\t_ref0.style.height = \"auto\";\r\n\t        \t}else{\r\n\t        \t\t_ref0 = this.previewsContainer.querySelector(\"object\");\r\n\r\n\t            \tif(_ref0){\r\n\t        \t\t\t_ref0.style.width = _btnWidth + \"px\";\r\n            \t\t\t_ref0.style.height = _btnHeight + \"px\";\r\n\t            \t\t_ref0.style.marginTop = _marginTop + \"px\";\r\n\t            \t}\r\n\t        \t} \r\n\t        },\r\n\t        // 上传进度\r\n\t        // @param file {object} 上传文件对象\r\n\t        // @param completeBytes {number} 已上传的字节数\r\n\t        // @param totalBytes {number} 总共的字节数\r\n\t        _progress: function(file, completeBytes, totalBytes){\r\n\t\t\t\tvar self = this, param = this._opt, _file = null;\r\n\t        \tif(self.isSupport){\r\n\t        \t\t_file = file;\r\n\t        \t}else{\r\n\t        \t\tvar file_id = file.id, _files = self.files, index = -1;\r\n                \tfor(var i = 0, _len = _files.length; i < _len; i++){\r\n                \t\tvar __file = _files[i];\r\n                \t\tif(file_id == __file.id){\r\n                \t\t\t__file.filestatus = file.filestatus;\r\n                \t\t\t_file = __file;\r\n                \t\t\tindex = i;\r\n                \t\t\tbreak;\r\n                \t\t}\r\n                \t}\r\n                \tif(_file != null){\r\n                \t\t// self.errorFiles.push(_file);\r\n                \t\tvar node, _i, _len, _ref, _results;\r\n\t\t\t\t\t\tif (_file.previewElement) {\r\n\t\t\t\t\t\t\tif(!$(_file.previewElement).hasClass('dz-processing')){\r\n\t\t\t\t\t\t\t\t$(_file.previewElement).addClass('dz-processing');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (file._removeLink) {\r\n\t\t\t\t\t\t\t\treturn _file._removeLink.htmlContent = self.defaults.dictCancelUpload;\r\n\t\t\t\t\t\t\t}\r\n                            var progressWidth = (completeBytes * 100)/totalBytes;\r\n                            // console.info(progressWidth);\r\n                            $(_file.previewElement).find('[data-dz-uploadprogress]').eq(0).css(\"width\", progressWidth+\"%\");\r\n\t\t\t\t\t\t}\r\n                \t}\r\n\t        \t}\r\n            \tif(self.listeners.indexOf('uploading') > -1) {\r\n\t                if(!self.emit({type:'uploading',target: self.$element, file: _file, completeBytes: completeBytes, totalBytes:totalBytes})) return ;\r\n\t            }\r\n\t        },\r\n\t\t\t_complete: function(file){\r\n\t\t\t\tvar self = this, param = this._opt, _file = null;\r\n\t\t\t\tif(self.isSupport){\r\n\t\t\t\t\tif (file._removeLink) {\r\n\t\t\t\t\t\t// file._removeLink.textContent = this.options.dictRemoveFile;\r\n\t\t\t\t\t\t// Update By Chenzx 追加内容为html\r\n\t\t\t\t\t\tfile._removeLink.htmlContent = self.defaults.dictRemoveFile;\r\n\t\t\t        }\r\n\t\t\t        if (file.previewElement) {\r\n\t\t\t          \tfile.previewElement.classList.add(\"dz-complete\");\r\n\t\t\t        }\r\n\t\t\t        _file = file;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar file_id = file.id, _files = self.files, index = -1;\r\n                \tfor(var i = 0, _len = _files.length; i < _len; i++){\r\n                \t\tvar __file = _files[i];\r\n                \t\tif(file_id == __file.id){\r\n                \t\t\t__file.filestatus = file.filestatus;\r\n                \t\t\t_file = __file;\r\n                \t\t\tindex = i;\r\n                \t\t\tbreak;\r\n                \t\t}\r\n                \t}\r\n                \tif(_file != null){\r\n                \t\tif (_file._removeLink) {\r\n\t\t\t\t          \t_file._removeLink.htmlContent = self.defaults.dictRemoveFile;\r\n\t\t\t\t        }\r\n\t                \tif (_file.previewElement) {\r\n\t                \t\t$(_file.previewElement).addClass('dz-complete');\r\n\t                \t}\r\n                \t}\r\n\r\n                \tvar _queuedFiles = self._getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.QUEUED);\r\n                \tif(_queuedFiles.length == 0){\r\n                \t\tself.uploadNext = false;\r\n                \t}\r\n\r\n                \tif(param.isAutoProcessQueue || self.uploadNext){\r\n\t\t        \t\tself._file.startUpload();\r\n\t\t            }\r\n\t\t\t\t}\r\n                // console.info(_file);\r\n                $(_file._removeLink).on(\"click\", function(){\r\n                    self._removeFile(_file);\r\n                })\r\n\r\n                var elem = $(\"#\" + self.inputSelectorId).get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType($(\"#\" + self.inputSelectorId).rules())){\r\n                    ui.validElement($(\"#\" + self.inputSelectorId));\r\n                }\r\n                  \r\n                // var validateRules = $(\"#\" + self.inputSelectorId).rules();\r\n                // alert(JSON.stringify(validateRules));\r\n                // if(!ui.isEmptyType(validateRules)){\r\n                //     ui.validElement($(\"#\" + self.inputSelectorId));\r\n                // }\r\n                // ui.validElement($(\"#\" + self.inputSelectorId));\r\n\r\n            \tif(self.listeners.indexOf('complete') > -1) {\r\n\t                if(!self.emit({type:'complete',target: self.$element, file: _file})) return ;\r\n\t            }\r\n\t\t\t},\r\n\t        _initDropzoneEvent: function(){\r\n\t        \tvar myDropzone = this._file, param = this._opt, self = this;\r\n\r\n\t        \t// 初始化事件\r\n\t            myDropzone.on(\"init\", function(file) {\r\n\t                if(self.listeners.indexOf('init') > -1) {\r\n\t\t                if(!self.emit({type:'init',target: self.dom, file: file})) return ;\r\n\t\t            }\r\n\t            });\r\n\r\n\t        \t// 在每个文件被发送前调用:sending/sendingmultiple\r\n\t            myDropzone.on(\"sending\", function(file, xhr, formData) {\r\n\t                // console.info(file);\r\n\t                // console.info(xhr);\r\n\t                // console.info(formData);\r\n                    if(self.listeners.indexOf('sending') > -1) {\r\n                        if(!self.emit({type:'sending',target: self.dom, file: file})) return ;\r\n                    }\r\n\t            });\r\n\r\n\t            // 添加文件后的事件\r\n\t            myDropzone.on(\"addedfile\", function(file) {\r\n                    // console.info(file);\r\n\t            \tself._addedFileEvent(file);\r\n\t            });\r\n\r\n\t            // 删除文件的事件，\r\n\t            myDropzone.on(\"removedfile\", function(file) {\r\n\t                // ui.logError(\"文件删除\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t                self._removeFile(file);\r\n\t                // self._removedfile(file);\r\n\t                \r\n\t                return this._updateMaxFilesReachedClass();\r\n\t            });\r\n\t            \r\n\t            // 当文件的数量达到maxFiles限制时调用\r\n\t            myDropzone.on(\"maxfilesreached\", function(file) {\r\n\t                // ui.logMessage(file);\r\n\t                // ui.errorNotice(\"每次选择文件不能超过 \" + param.maxNumber + \" 个\");\r\n\t                self._maxFilesReached(file);\r\n\t            });\r\n\t            \r\n\t            // 当文件数量达到 maxFiles 限制数量被拒绝时调用.\r\n\t            myDropzone.on(\"maxfilesexceeded\", function(file) {\r\n\t                // ui.logMessage(file);\r\n\t                // ui.errorNotice(\"选择文件超过 \" + param.maxNumber + \" 个,已被拒绝\");\r\n\t                if(self.listeners.indexOf('maxfilesexceeded') > -1) {\r\n\t\t                if(!self.emit({type:'maxfilesexceeded',target: self.dom, file: file})) return ;\r\n\t\t            }\r\n\t            });\r\n\t            \r\n\t            // 当文件正在上传时触发\r\n\t            myDropzone.on(\"uploadprogress\", function(file, progress, bytesSent) {\r\n\t            \tself._progress(file, progress, bytesSent);\r\n\t            });\r\n\r\n\t            // 当文件被取消时触发\r\n\t            myDropzone.on(\"canceled\", function(file, data) {\r\n\t            \t// self._success(file, data);\r\n                    // console.info(\"canceled\");\r\n\r\n                    // console.info(param.onRemovedFile);\r\n                    if(param.onCancelFile && typeof(param.onCancelFile) === \"function\"){\r\n                        param.onCancelFile(file, data, \"cancelFile\");\r\n                    }\r\n                    \r\n\t            });\r\n\r\n\t            // 当上传成功后的事件，接收的数据为JSON格式\r\n\t            // myDropzone.on(\"successmultiple\", function(files, data, e) {\r\n\t            // \tself._successmultiple(files, data, e);\r\n\t            // });\r\n\r\n\t            // 当上传成功后的事件，接收的数据为JSON格式\r\n\t            myDropzone.on(\"success\", function(file, data, e) {\r\n\t            \tself._success(file, data, e);\r\n\t            });\r\n\r\n\t            // 当上传失败后的事件\r\n\t            myDropzone.on(\"error\", function(file, message) {\r\n\t            \tself._error(file, message);\r\n\t            });\r\n\r\n\t            // 当文件上传完成时触发\r\n\t            myDropzone.on(\"complete\", function(file) {\r\n\t            \tself._complete(file);\r\n\t            });\r\n\t        },\r\n\t        _createElement: function(string) {\r\n\t\t\t    var div;\r\n\t\t\t    div = document.createElement(\"div\");\r\n\t\t\t    div.innerHTML = string;\r\n\t\t\t    return div.childNodes[0];\r\n\t\t\t},\r\n\t        _without: function(list, rejectedItem) {\r\n\t\t\t\tvar item, _i, _len, _results;\r\n\t\t\t\t_results = [];\r\n\t\t\t\tfor (_i = 0, _len = list.length; _i < _len; _i++) {\r\n\t\t\t\t\titem = list[_i];\r\n\t\t\t\t\tif (item !== rejectedItem) {\r\n\t\t\t\t\t\t_results.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn _results;\r\n\t\t\t},\r\n\t        _renameFilename: function(name) {\r\n\t\t\t\tif (typeof this._opt.renameFilename !== \"function\") {\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}\r\n\t\t\t\treturn this._opt.renameFilename(name);\r\n\t    \t},\r\n\t    \t_filesize: function(size) {\r\n\t\t\t\tvar cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\r\n\t\t\t\tselectedSize = 0;\r\n\t\t\t\tselectedUnit = \"b\";\r\n                if(typeof(size) === \"string\"){\r\n                    size = size.split(\" \");\r\n                    if(size.length > 1 && size[1] != \"\"){\r\n                        selectedUnit = size[1];\r\n                    }\r\n                    return \"<strong>\" + size[0] + \"</strong> \" + selectedUnit;\r\n                }else if(typeof(size) === \"number\"){\r\n                    if (size > 0) {\r\n                        units = ['TB', 'GB', 'MB', 'KB', 'b'];\r\n                        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\r\n                            unit = units[i];\r\n                            cutoff = Math.pow(this.defaults.filesizeBase, 4 - i) / 10;\r\n                            if (size >= cutoff) {\r\n                                selectedSize = size / Math.pow(this.defaults.filesizeBase, 4 - i);\r\n                                selectedUnit = unit;\r\n                                break;\r\n                            }\r\n                        }\r\n                        selectedSize = Math.round(10 * selectedSize) / 10;\r\n                    }\r\n                    return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\r\n                }\r\n    \t\t\t\t\r\n\t\t\t},\r\n            // 添加操作文件按钮\r\n            _addFileAction: function(file){\r\n                var self = this, param = this._opt;\r\n\r\n                if(!param.isAutoProcessQueue){\r\n                    // 单个上传按钮\r\n                    if (param.isAddUploadLinks) {\r\n                        file._uploadLink = self._createElement(\"<a class=\\\"dz-upload-link\\\" href=\\\"javascript:void(0);\\\" data-dz-upload>\" + self.defaults.dictUploadFile + \"</a>\");\r\n                        file.previewElement.appendChild(file._uploadLink);\r\n                        // ui.addEventListener(file._uploadLink, \"click\", function(e){\r\n                        //     ui.stopPropagation(e);  // 兼容IE8\r\n                        //     self._file.startUpload(file.id);\r\n                        // });\r\n                        $(file._uploadLink).on(\"click\", function(e){\r\n                            ui.stopPropagation(e);  // 兼容IE8\r\n                            self._file.startUpload(file.id);\r\n                        })\r\n                    }\r\n                }\r\n                    \r\n                // 单个删除按钮\r\n                if (param.isAddRemoveLinks) {\r\n                    file._removeLink = self._createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + self.defaults.dictCancelUpload + \"</a>\");\r\n                    file.previewElement.appendChild(file._removeLink);\r\n                    // ui.addEventListener(file._removeLink, \"click\", function(e){\r\n                    //     ui.stopPropagation(e);  // 兼容IE8\r\n                    //     self._removeFile(file);\r\n                    // });\r\n                    $(file._removeLink).on(\"click\", function(e){\r\n                        ui.stopPropagation(e);  // 兼容IE8\r\n                        self._removeFile(file);\r\n                    })\r\n                }\r\n\r\n                \r\n                // 添加单个文件下载按钮\r\n                if(param.isEnableDownload){\r\n                    var jsonFileUrl = param.jsonReader.fileUrl;\r\n                    \r\n                    file._downloadLink = self._createElement(\"<a class=\\\"dz-download-link\\\" href=\\\"javascript:void(0)\\\" data-dz-download>\" + self.defaults.dictDownloadFile + \"</a>\");\r\n                \r\n                    file.previewElement.appendChild(file._downloadLink);\r\n\r\n                    // file._uploadLink.addEventListener(\"click\", function(){\r\n                    //     myDropzone.processFile(file);\r\n                    // })\r\n                    $(file._downloadLink).on(\"click\", function(){\r\n                        // console.error(file)\r\n                        // console.error(jsonFileUrl)\r\n                        // alert(file[jsonFileUrl])\r\n                        if(param.onDownloadFile && typeof(param.onDownloadFile) === \"function\"){\r\n                            param.onDownloadFile(file, \"downloadFile\");\r\n                        }\r\n\r\n                        self._downloadFile(file);\r\n\r\n                        // alert(param.downloadHostAddress)\r\n                        // if(jsonFileUrl && file[jsonFileUrl]){\r\n                        //     if(param.downloadHostAddress){\r\n                        //         window.location = param.downloadHostAddress + file[jsonFileUrl];\r\n                        //     }else{\r\n                        //         window.location = file[jsonFileUrl];\r\n                        //     }\r\n                        // }\r\n                         \r\n                    })\r\n                }\r\n\r\n            },\r\n            // files: 自定义的单个文件预览\r\n            addFilePreview: function(file, isComplete){\r\n                var self = this, param = this._opt;\r\n\r\n                if(param.maxNumber !== false && self.files.length >= param.maxNumber){\r\n                    self._maxFilesReached(self.files);\r\n                    return false;\r\n                }\r\n                isComplete = isComplete || false;\r\n\r\n                var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\r\n                if(!(self.$viewBox.hasClass('dz-started'))){\r\n                    self.$viewBox.addClass('dz-started');\r\n                }\r\n\r\n                // console.info(file);\r\n\r\n                if(self.$viewBox){\r\n                    // file.previewElement = self._createElement(self.defaults.previewTemplate);\r\n\r\n                    // if(param.isCreateImageThumbnails){\r\n                    //     $(file.previewElement).addClass(\"dz-image-preview\");\r\n                    // }\r\n\r\n                    if(isComplete){\r\n                        file = self._initFileInfo(file);\r\n\r\n                        $(file.previewElement).addClass(\"dz-processing dz-success dz-complete\");\r\n                        $(file.previewElement).attr(\"fileId\", file.id);\r\n                        // $(file.previewElement).addClass(\"dz-processing dz-success dz-complete\")\r\n                    }\r\n                    // $(file.previewElement).addClass(\"dz-processing dz-image-preview dz-success dz-complete\")\r\n                    // file.previewTemplate = file.previewElement;\r\n\r\n                    // console.info(file);\r\n                    self.$clickBoxView.before(file.previewElement);\r\n                    // var _len0 = self.previewsContainer.children.length;\r\n                    // self.previewsContainer.insertBefore(file.previewElement, self.previewsContainer.children[_len0-1]);\r\n\r\n                    _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\r\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        node = _ref[_i];\r\n                        node.textContent = self._renameFilename(file.name);\r\n                    }\r\n                    _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\r\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\r\n                        node = _ref1[_j];\r\n                        node.innerHTML = self._filesize(file.size);\r\n                    }\r\n\r\n                    _ref2 = file.previewElement.querySelectorAll(\".dz-image\");\r\n                    for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\r\n                        dzImageElement = _ref2[_i];\r\n                        dzImageElement.style.width = param.thumbnailWidth - 2 + \"px\";\r\n                        dzImageElement.style.height = param.thumbnailHeight - 2 + \"px\";\r\n                    }\r\n\r\n                    if(isComplete){\r\n                        if(!param.isAutoProcessQueue){\r\n                            // 单个上传按钮\r\n                            if (self._opt.isAddUploadLinks) {\r\n                                file._uploadLink = self._createElement(\"<a class=\\\"dz-upload\\\" href=\\\"javascript:void(0);\\\" data-dz-upload>\" + self.defaults.dictUploadFile + \"</a>\");\r\n                                file.previewElement.appendChild(file._uploadLink);\r\n                                // ui.addEventListener(file._uploadLink, \"click\", function(e){\r\n                                //     ui.stopPropagation(e);  // 兼容IE8\r\n                                //     self._file.startUpload(file.id);\r\n                                // });\r\n\r\n                                $(file._uploadLink).on(\"click\", function(e){\r\n                                    ui.stopPropagation(e);  // 兼容IE8\r\n                                    self._file.startUpload(file.id);\r\n                                })\r\n                            }\r\n                        }\r\n                    } \r\n                        \r\n                    // 单个删除按钮\r\n                    if (self._opt.isAddRemoveLinks) {\r\n                        file._removeLink = self._createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + self.defaults.dictRemoveFile + \"</a>\");\r\n                        file.previewElement.appendChild(file._removeLink);\r\n                        // ui.addEventListener(file._removeLink, \"click\", function(e){\r\n                        //     ui.stopPropagation(e);  // 兼容IE8\r\n                        //     self._removeFile(file);\r\n                        // });\r\n                        $(file._removeLink).on(\"click\", function(e){\r\n                            ui.stopPropagation(e);  // 兼容IE8\r\n                            self._removeFile(file);\r\n                        })\r\n                    }\r\n\r\n                    // console.info(parseInt(file.size) <= (param.maxFilesize * 1024 * 1024));\r\n                    if(param.isCreateImageThumbnails && file.type && file.type.match(/image.*/) && parseInt(file.size) <= (param.maxFilesize * 1024 * 1024)){\r\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                            thumbnailElement = _ref[_i];\r\n                            thumbnailElement.src = file.src;\r\n                            // var iElement = $('<i class=\"fa fa-' + fileIcon + ' prev-icon\"></i>');\r\n                            // iElement.css(\"font-size\", (param.thumbnailHeight - 30) + \"px\");\r\n                            // $(thumbnailElement).after(iElement);\r\n                        } \r\n                    }else{\r\n                        var fileIcon = _getPrevIcon(file.name);\r\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                            thumbnailElement = _ref[_i];\r\n                            var iElement = $('<i class=\"fa fa-' + fileIcon + ' prev-icon\"></i>');\r\n                            iElement.css(\"font-size\", (param.thumbnailHeight - 30) + \"px\");\r\n                            $(thumbnailElement).after(iElement);\r\n                        } \r\n                    }   \r\n                }\r\n\r\n                this.files.push(file);\r\n\r\n                // if(isComplete){\r\n                //     this.filesFormMethod.push(file);\r\n                // }\r\n\r\n                if(param.maxNumber !== false && self.files.length >= param.maxNumber){\r\n                    self.$viewBox.addClass(\"dz-max-files-reached\");\r\n                }\r\n\r\n                return file;\r\n            },\r\n            // files: 自定义的文件预览\r\n            addFilesPreview: function(files){\r\n                var self = this, param = this._opt;\r\n                var isComplete = true, addSuccessFiles = [];\r\n\r\n                var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\r\n                if(!(self.$viewBox.hasClass('dz-started'))){\r\n                    self.$viewBox.addClass('dz-started');\r\n                }\r\n\r\n                if(self.previewsContainer){\r\n                    if(ui.isArray(files)){\r\n                        for(var index = 0; index < files.length; index++){\r\n                            var file = files[index];\r\n                            var isSuccessFile = self.addFilePreview(file, isComplete);\r\n                            // console.info(isSuccessFile);\r\n                            if(isSuccessFile){\r\n                                this.filesFormMethod.push(isSuccessFile);\r\n                                addSuccessFiles.push(isSuccessFile);\r\n                            }\r\n                        }\r\n                    }else if(ui.isJson(files)){\r\n                        var isSuccessFile = self.addFilePreview(files, isComplete);\r\n                        if(isSuccessFile){\r\n                            this.filesFormMethod.push(isSuccessFile);\r\n                            addSuccessFiles.push(isSuccessFile);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return addSuccessFiles;\r\n            },\r\n\t        selectFile: function(){\r\n\t        \tif(this.isSupport){\r\n\t        \t\tthis._file.hiddenFileInput.click();\r\n\t        \t}else{\r\n\t        \t\t// this._file.selectFiles();\r\n\t        \t\tui.logMessage(\"SWF上传不兼容弹出选择框事件\", \"wui.file\", true)\r\n\t        \t}\r\n\t        },\r\n\t        upload: function(){\r\n\t        \tif(this.isSupport){\r\n\t        \t\tthis._file.processQueue();  // 上传事件\r\n\t        \t}else{\r\n\t        \t\tthis.uploadNext = true;\r\n\t        \t\tthis._file.startUpload();\r\n\t        \t}\r\n\t        },\r\n\t        // name:要删除的图片名字带后缀名，不传则默认取消全部队列文件\r\n\t\t\t// key:图片名字在哪个字段, 默认是 \"name\"\r\n\t        cancel: function(name, key){\r\n\t        \tvar files = [], _files = [], param = this._opt;\r\n\t        \tif(this.isSupport){\r\n\t        \t\tfiles = this._file.getAcceptedFiles();\r\n\t        \t}else{\r\n\t        \t\tfiles = this.files;\r\n\t        \t}\r\n\t        \t// console.info(files);\r\n\t        \tif(!name){\r\n\t        \t\tui.logMessage(\"传入的文件名为空\", \"wui.file\", true);\r\n\t        \t\t_files = files;\r\n\t        \t}else{\r\n\t        \t\tif(key == undefined)\r\n\t        \t\t\tkey = \"name\";\r\n\r\n\t        \t\tfor(var i = 0, len = files.length; i < len; i++){\r\n\t\t        \t\tvar file = files[i];\r\n\t\t        \t\t// console.info((name + \" 和 \" + file[key]));\r\n\t\t        \t\tif(name == file[key]){\r\n\t\t        \t\t\t_files.push(file);\r\n\t\t        \t\t\tbreak;\r\n\t\t        \t\t}\r\n\t\t        \t}\r\n\t        \t}\r\n\t        \t\r\n\t        \tif(_files.length == 0){\r\n\t        \t\tui.logMessage(\"无可取消的文件\", \"wui.file\", true);\r\n\t        \t\treturn false;\r\n\t        \t}\r\n\t        \t\r\n        \t\tif(this.isSupport){\r\n        \t\t\tfor(var i = 0, len = _files.length; i < len; i++){\r\n                        this._file.cancelUpload(_files[i]);\r\n                        // param.onRemovedFile && typeof(param.onRemovedFile) === \"function\" && param.onRemovedFile(_files[i], \"cancel\");\r\n                    }\r\n        \t\t}else{\r\n        \t\t\tfor(var i = 0, len = _files.length; i < len; i++){\r\n        \t\t\t\tvar _file = _files[i], _status = _file.filestatus;\r\n        \t\t\t\t// file_id，默认上传队列中的第一个文件将会被取消;\r\n\t        \t\t\t// 可选参数trigger_error_event如果被设置为false，uploadError事件将不会被触发.\r\n\t        \t\t\tif(_status == ui.CONSTANTS.FILE_STATUS.QUEUED){\r\n                            \r\n\t        \t\t\t\tthis._file.cancelUpload(_file.id, false);\r\n\r\n\t        \t\t\t}else if(_status == ui.CONSTANTS.FILE_STATUS.PROCESSING){\r\n                            this._file.stopUpload();\t// 停止当前正在上传的文件，并且把它还原到待上传队列中\r\n\t        \t\t\t\tthis._file.cancelUpload(_file.id, false);\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\tcontinue;\r\n\t        \t\t\t}\r\n\t        \t\t\t\r\n\t        \t\t\tif(_file != null){\r\n\t                \t\tif (_file._removeLink) {\r\n\t\t\t\t\t          \t_file._removeLink.htmlContent = this.defaults.dictRemoveFile;\r\n\t\t\t\t\t        }\r\n\t\t                \tif (_file.previewElement) {\r\n\t\t                \t\t$(_file.previewElement).addClass('dz-complete');\r\n\t\t                \t}\r\n                            // param.onRemovedFile && typeof(param.onRemovedFile) === \"function\" && param.onRemovedFile(_file, \"cancel\");\r\n\t                \t}\r\n        \t\t\t}\r\n        \t\t}\r\n\r\n                return files;\r\n\t        },\r\n            // name:要删除的图片名字带后缀名，不传则默认取消全部队列文件\r\n            // key:图片名字在哪个字段, 默认是 \"name\"\r\n            remove: function(name, key){\r\n                var files = [], _files = [], param = this._opt;\r\n                if(this.isSupport){\r\n                    files = this._file.getAcceptedFiles();\r\n                    for(var i = 0; i < this.filesFormMethod.length; i++){\r\n                        var theTempFile = this.filesFormMethod[i];\r\n                        // console.info(theTempFile);\r\n                        files.push(theTempFile);\r\n                    }\r\n                }else{\r\n                    files = this.files;\r\n                }\r\n\r\n                // console.info(name);\r\n                // console.info(key);\r\n                // console.info(files);\r\n                if(!name){\r\n                    ui.logMessage(\"传入的文件字段为空\", \"wui.file\", true);\r\n                    _files = files;\r\n                }else{\r\n                    if(key == undefined)\r\n                        key = \"name\";\r\n\r\n                    for(var i = 0, len = files.length; i < len; i++){\r\n                        var file = files[i];\r\n                        // console.info((name + \" 和 \" + file[key]));\r\n                        if(name == file[key]){\r\n                            _files.push(file);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if(_files.length == 0){\r\n                    ui.logMessage(\"remove:无可取消的文件\", \"wui.file\", true);\r\n                    return false;\r\n                }\r\n                \r\n                if(this.isSupport){\r\n                    for(var i = 0, len = _files.length; i < len; i++){\r\n                        this._file.removeFile(_files[i]);\r\n                        // param.onRemovedFile && typeof(param.onRemovedFile) === \"function\" && param.onRemovedFile(_files[i], \"cancel\");\r\n                    }\r\n                }else{\r\n                    for(var i = 0, len = _files.length; i < len; i++){\r\n                        var _file = _files[i];\r\n                        this._removeFile(_file);\r\n\r\n                        // var _file = _files[i], _status = _file.filestatus;\r\n                        // console.info(_file);\r\n                        // file_id，默认上传队列中的第一个文件将会被取消;\r\n                        // 可选参数trigger_error_event如果被设置为false，uploadError事件将不会被触发.\r\n                        // if(_status == ui.CONSTANTS.FILE_STATUS.QUEUED){\r\n                        //     this._file.cancelUpload(_file.id, false);\r\n                        // }else if(_status == ui.CONSTANTS.FILE_STATUS.PROCESSING){\r\n                        //     this._file.stopUpload();    // 停止当前正在上传的文件，并且把它还原到待上传队列中\r\n                        //     this._file.cancelUpload(_file.id, false);\r\n                        // }\r\n                        // // else{\r\n                        // //     continue;\r\n                        // // }\r\n                        \r\n                        // if(_file != null){\r\n                        //     // if (_file._removeLink) {\r\n                        //     //     _file._removeLink.htmlContent = this.defaults.dictRemoveFile;\r\n                        //     // }\r\n                        //     // if (_file.previewElement) {\r\n                        //     //     $(_file.previewElement).addClass('dz-complete');\r\n                        //     // }\r\n                        //     $(_file.previewElement).remove();\r\n                        //     _file.filestatus = ui.CONSTANTS.FILE_STATUS.CANCELED;\r\n                        //     // param.onRemovedFile && typeof(param.onRemovedFile) === \"function\" && param.onRemovedFile(_file, \"cancel\");\r\n                        // }\r\n                    }\r\n                }\r\n\r\n                return files;\r\n            },\r\n            disabled: function(){\r\n                // console.info(this.files);\r\n                for(var i = 0; i < this.files.length; i++){\r\n                    var file = this.files[i];\r\n                    if(file._removeLink){\r\n                        file._removeLink.disabled = true;\r\n                        // $(file._removeLink).attr(\"disabled\", true);\r\n                    }\r\n                    if(file._uploadLink){\r\n                        file._uploadLink.disabled = true;\r\n                        // $(file._uploadLink).attr(\"disabled\", true);\r\n                    }\r\n                    if(file._editLink){\r\n                        file._editLink.disabled = true;\r\n                        // $(file._editLink).attr(\"disabled\", true);\r\n                    }\r\n                }\r\n            \tif(this.isSupport){\r\n            \t\tthis._file.disable();\r\n            \t}else{\r\n            \t\tthis._file.setButtonDisabled(true);\r\n            \t\tthis._file.setButtonCursor(SWFUpload.CURSOR.ARROW);\r\n            \t}\r\n\r\n                this.$viewBox.find(\".file-add-icon\").each(function(){\r\n                    $(this).addClass(\"disabled\");\r\n                })\r\n            },\r\n            enabled: function(){\r\n                for(var i = 0; i < this.files.length; i++){\r\n                    var file = this.files[i];\r\n                    if(file._removeLink){\r\n                        file._removeLink.disabled = true;\r\n                        // $(file._removeLink).removeAttr(\"disabled\");\r\n                    }\r\n                    if(file._uploadLink){\r\n                        file._uploadLink.disabled = true;\r\n                        // $(file._uploadLink).removeAttr(\"disabled\");\r\n                    }\r\n                    if(file._editLink){\r\n                        file._editLink.disabled = true;\r\n                        // $(file._editLink).removeAttr(\"disabled\");\r\n                    }\r\n                }\r\n            \tif(this.isSupport){\r\n            \t\tthis._file.enable();\r\n            \t}else{\r\n            \t\tthis._file.setButtonDisabled(false);\r\n            \t\tthis._file.setButtonCursor(SWFUpload.CURSOR.HAND);\r\n            \t}\r\n\r\n                this.$viewBox.find(\".file-add-icon\").each(function(){\r\n                    $(this).removeClass(\"disabled\");\r\n                })\r\n            },\r\n            readonly: function(){\r\n                // console.info(this.files);\r\n                for(var i = 0; i < this.files.length; i++){\r\n                    var file = this.files[i];\r\n                    if(file._removeLink){\r\n                        file._removeLink.disabled = true;\r\n                        // $(file._removeLink).attr(\"disabled\", true);\r\n                    }\r\n                    if(file._uploadLink){\r\n                        file._uploadLink.disabled = true;\r\n                        // $(file._uploadLink).attr(\"disabled\", true);\r\n                    }\r\n                    if(file._editLink){\r\n                        file._editLink.disabled = true;\r\n                        // $(file._editLink).attr(\"disabled\", true);\r\n                    }\r\n                }\r\n                if(this.isSupport){\r\n                    this._file.disable();\r\n                }else{\r\n                    this._file.setButtonDisabled(true);\r\n                    this._file.setButtonCursor(SWFUpload.CURSOR.ARROW);\r\n                }\r\n\r\n                this.$viewBox.find(\".file-add-icon\").each(function(){\r\n                    $(this).addClass(\"disabled\");\r\n                })\r\n            },\r\n            readwrite: function(){\r\n                for(var i = 0; i < this.files.length; i++){\r\n                    var file = this.files[i];\r\n                    if(file._removeLink){\r\n                        file._removeLink.disabled = true;\r\n                        // $(file._removeLink).removeAttr(\"disabled\");\r\n                    }\r\n                    if(file._uploadLink){\r\n                        file._uploadLink.disabled = true;\r\n                        // $(file._uploadLink).removeAttr(\"disabled\");\r\n                    }\r\n                    if(file._editLink){\r\n                        file._editLink.disabled = true;\r\n                        // $(file._editLink).removeAttr(\"disabled\");\r\n                    }\r\n                }\r\n                if(this.isSupport){\r\n                    this._file.enable();\r\n                }else{\r\n                    this._file.setButtonDisabled(false);\r\n                    this._file.setButtonCursor(SWFUpload.CURSOR.HAND);\r\n                }\r\n\r\n                this.$viewBox.find(\".file-add-icon\").each(function(){\r\n                    $(this).removeClass(\"disabled\");\r\n                })\r\n            },\r\n            get: function(type){\r\n            \tvar self = this, param = this._opt;\r\n                var name = param.name;\r\n            \tvar jsonReader = ui.deepCopy(param.jsonReader);\r\n\t\t\t\tdelete jsonReader[\"root\"];\r\n\r\n            \ttype = type || \"\";\r\n            \tvar filesArray = self.getFilesWithStatus(\"success\");\r\n            \tvar files = [];\r\n                if(!name){\r\n                    type = \"json\";\r\n                }\r\n            \tfor(var i = 0; i < filesArray.length; i++){\r\n            \t\tvar _file = filesArray[i];\r\n                    if(type == \"\"){\r\n                        files.push(_file);\r\n                    }else if(type == \"json\"){\r\n                        var file = {};\r\n                        file.id = _file.id;\r\n                        for(var key in jsonReader){\r\n                            file[jsonReader[key]] = _file[jsonReader[key]];\r\n                        }\r\n                        files.push(file);\r\n                    }else if(type == \"value\"){\r\n                        if(_file[name]){\r\n                            files.push(_file[name]);\r\n                        }\r\n                        // files = files.join(\",\");\r\n                    }\r\n            \t}\r\n            \treturn files;\r\n            },\r\n\t        // type:queue(获取所有排队的文件)/uploading(正在上传文件)/success(所有上传成功文件)/error(所有上传失败的文件)/canceled(被取消上传的文件)/all(全部接受文件信息,默认)\r\n\t        getFilesWithStatus: function(type){\r\n\t        \ttype = type || \"all\";\t// 获取的文件所在区域：all(全部接受文件信息)、queue(队列排队中文件)、success(上传成功文件)、error(上传出错文件)、uploading(正在上传文件)、canceled(被取消上传的文件)\r\n\t        \tvar filesArray = [], itemsArray = [];\r\n\t        \tif(this.isSupport){\r\n\t        \t\tif(type.toLowerCase() == \"queue\"){\t// 所有排队的文件\r\n\t\t\t\t\t\t// filesArray = Dropzone.getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.QUEUED)\r\n\t\t\t\t\t\tfilesArray = this._file.getQueuedFiles();\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"success\"){\t// 所有上传成功文件\r\n\t\t\t\t\t\tfilesArray = this._file.getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.SUCCESS);\r\n\t\t\t\t\t\t// filesArray = this._file.getUploadingFiles();\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"error\"){\t// 所有上传失败的文件\r\n\t\t\t\t\t\t// filesArray = this._file.getRejectedFiles();\r\n\t\t\t\t\t\tfilesArray = this._file.getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.ERROR);\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"uploading\"){\t// 正在上传文件\t\r\n\t\t\t\t\t\tfilesArray = this._file.getUploadingFiles();\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"canceled\"){\t// 被取消上传的文件\r\n\t\t\t\t\t\tfilesArray = this._file.getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.CANCELED);\r\n\t\t\t\t\t}else{\t\t// 所有文件\r\n\t        \t\t\tfilesArray = this._file.getAcceptedFiles();\r\n\t        \t\t}\r\n\t        \t}else{\r\n\t        \t\tif(type.toLowerCase() == \"queue\"){\t// 所有排队的文件\r\n\t\t\t\t\t\t// filesArray = this.queuedFiles;\r\n\t\t\t\t\t\tfilesArray = this._getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.QUEUED);\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"success\"){\t// 所有上传成功文件\r\n\t\t\t\t\t\t// filesArray = this.successFiles;\r\n\t\t\t\t\t\tfilesArray = this._getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.SUCCESS);\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"error\"){\t// 所有上传失败的文件\r\n\t\t\t\t\t\t// filesArray = this.errorFiles;\r\n\t\t\t\t\t\tfilesArray = this._getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.ERROR);\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"uploading\"){\t// 正在上传文件\r\n\t\t\t\t\t\tfilesArray = this._getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.PROCESSING);\r\n\t\t\t\t\t}else if(type.toLowerCase() == \"canceled\"){\t// 被取消上传的文件（调用了cancelUpload函数）\r\n\t\t\t\t\t\tfilesArray = this.getFilesWithStatus(ui.CONSTANTS.FILE_STATUS.CANCELED);\r\n\t\t\t\t\t}else{\t// 所有文件\r\n\t        \t\t\tfilesArray = this.files;\r\n\t        \t\t}\r\n\t        \t}\r\n\t        \t// console.info(filesArray);\r\n\t        \treturn filesArray;\r\n\t        },\r\n\t        _getFilesWithStatus: function(status) {\r\n\t\t\t\tvar file, _i, _len, _ref, _results;\r\n\t\t\t\t_ref = this.files;\r\n\t\t\t\t_results = [];\r\n\t\t\t\tfor (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n\t\t\t\t\tfile = _ref[_i];\r\n\t\t\t\t\tif (file.filestatus === status) {\r\n\t\t\t\t\t\t_results.push(file);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn _results;\r\n\t\t\t},\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t\r\n\t        \tif(!!newOptions){\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t        \t\t\tthis._reoption(newOptions);\t// 重置配置\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t}else{\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n            /*\r\n             * 设置文件上传服务器地址\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @param    {[type]}   url [description]\r\n             */\r\n            setUploadUrl: function(url){\r\n                if(!url){\r\n                    url = this._opt.url;\r\n                }\r\n                if(!ui.isEmptyType(this._opt.otherParam)){\r\n                    url = ui.buildUrl(url, this._opt.otherParam);\r\n                }\r\n                \r\n                if(this.isSupport){\r\n                    this._file.options.url = url;\r\n                }else{\r\n                    this._file.setUploadURL(url);\r\n                }\r\n            },\r\n            /*\r\n             * 设置文件上传服务器附加数据\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @param    {[type]}   objectParams [description]\r\n             */\r\n            setPostParams: function(objectParams){\r\n                if(this.isSupport){\r\n                    this._file.options.params = objectParams;\r\n                }else{\r\n                    this._file.setPostParams(objectParams);\r\n                }\r\n            },\r\n            /*\r\n             * 设置文件上传类型\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @param    {[type]}   types       [description]\r\n             * @param    {[type]}   description [description]\r\n             */\r\n            setFileTypes: function(types, description){\r\n                \r\n                if(this.isSupport){\r\n                    this._file.options.acceptedFiles = types;\r\n                    this._file.options.file_types_description = description;\r\n\r\n                    if (types != null) {\r\n                        this._file.hiddenFileInput.setAttribute(\"accept\", types);\r\n                    }else{\r\n                        $(this._file.hiddenFileInput).removeAttr(\"accept\");\r\n                    }\r\n                }else{\r\n                    if(types == null){\r\n                        types = \"*.*\";\r\n                        description = description ? description : \"All Files\";\r\n                    }else{\r\n                        types = types.replace(/\\./g, \"\\*.\").replace(/,/g, \";\");\r\n                        description = description ? description : types;\r\n                    }\r\n                    this._file.setFileTypes(types, description);\r\n                }\r\n            },\r\n            /*\r\n             * 设置文件允许最大规格,单位MB\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-10-30\r\n             * @param    {[type]}   limitSize [description]\r\n             */\r\n            setFileSizeLimit: function(limitSize){\r\n                if(this.isSupport){\r\n                    if(!limitSize){\r\n                        limitSize = 0;\r\n                    }else if(typeof(limitSize) === \"string\"){\r\n                        if(limitSize.toLowerCase().endWith('mb')){\r\n                            limitSize = parseFloat(limitSize);\r\n                        }else if(limitSize.toLowerCase().endWith('kb')){\r\n                            limitSize = parseFloat(limitSize);\r\n                            limitSize = Math.ceil(limitSize * 10000 / 1024) / 10000;\r\n                        }else if(limitSize.toLowerCase().endWith('gb')){\r\n                            limitSize = parseFloat(limitSize);\r\n                            limitSize = limitSize * 1024;\r\n                        }else if(limitSize.toLowerCase().endWith('b')){\r\n                            limitSize = parseFloat(limitSize);\r\n                            limitSize = Math.ceil(limitSize * 10000 * 10000 / 1024 / 1024) / 10000 / 10000;\r\n                        }else{\r\n                            limitSize = parseFloat(limitSize);\r\n                        }\r\n                    }\r\n                    this._file.options.maxFilesize = limitSize;\r\n                }else{\r\n\r\n                    if(!limitSize){\r\n                        limitSize = 0;\r\n                    }else if(typeof(limitSize) === \"nummber\"){\r\n                        limitSize = limitSize + 'MB';\r\n                    }\r\n\r\n                    this._file.setFileSizeLimit(limitSize);\r\n                }\r\n            },\r\n            setFileUploadLimit: function(limitMaxFilesNumber){\r\n                if(this.isSupport){\r\n                    this._file.options.maxFiles = limitMaxFilesNumber;\r\n                }else{\r\n                    this._file.setFileUploadLimit(limitMaxFilesNumber);\r\n                }\r\n            },\r\n            _reoption: function(newOptions){\r\n                var params = this._opt,\r\n                    isResetUrl = false;\r\n\r\n                // url: {string} 文件上传服务器地址\r\n                if(newOptions.url != undefined && params.url != newOptions.url){\r\n                    this._opt.url = newOptions.url;\r\n                    isResetUrl = true;\r\n                }\r\n\r\n                // otherParam: {json} 文件上传服务器附加数据\r\n                if(newOptions.otherParam != undefined && params.otherParam != newOptions.otherParam){\r\n                    this._opt.otherParam = newOptions.otherParam;\r\n                    isResetUrl = true;\r\n                }\r\n\r\n                if(isResetUrl){\r\n                    this.setUploadUrl();\r\n                }\r\n\r\n                // data: {json} 文件上传服务器附加数据\r\n                if(newOptions.data != undefined && params.data != newOptions.data){\r\n                    this._opt.data = newOptions.data;\r\n                    this.setPostParams(newOptions.data);\r\n                }\r\n\r\n                // acceptedFiles: {string} 文件上传类型\r\n                if(newOptions.acceptedFiles != undefined && params.acceptedFiles != newOptions.acceptedFiles){\r\n                    this._opt.acceptedFiles = newOptions.acceptedFiles;\r\n                    this.setFileTypes(newOptions.acceptedFiles);\r\n                }\r\n                // maxFilesize: {string} 设置文件允许最大规格,单位MB\r\n                if(newOptions.maxFilesize != undefined && params.maxFilesize != newOptions.maxFilesize){\r\n                    this._opt.maxFilesize = newOptions.maxFilesize;\r\n                    this.setFileSizeLimit(newOptions.maxFilesize);\r\n                }\r\n                // maxNumber: {string} 设置文件允许最大上传个数\r\n                if(newOptions.maxNumber != undefined && params.maxNumber != newOptions.maxNumber){\r\n                    this._opt.maxNumber = newOptions.maxNumber;\r\n                    this.setFileUploadLimit(newOptions.maxNumber);\r\n                }\r\n\r\n                console.info(this)\r\n            },\r\n\t        reset: function(){\r\n\t        \t// return this.previewsContainer.classList.remove(\"dz-started\");\r\n\t        \treturn this.$viewBox.removeClass(\"dz-started\");\r\n\t        },\r\n\t        empty: function(){\r\n                var self = this;\r\n\t        \t// if(this.listeners.indexOf('empty') > -1) {\r\n\t         //        if(!this.emit({type:'empty',target: this.dom})) return ;\r\n\t         //    }\r\n\r\n\t            if(this.isSupport){\r\n\t            \tthis._file.removeAllFiles(true);\r\n\t            }else{\r\n\t            \tvar _len = this.files.length;\r\n\t            \twhile(_len > 0){\r\n\t            \t\tthis._removeFile(this.files[--_len]);\r\n\t            \t}\r\n\t            }\r\n                for(var i = 0; i < this.filesFormMethod.length; i++){\r\n                    var theFile = this.filesFormMethod[i];\r\n                    // console.info(theFile)\r\n                    $(theFile.previewElement).remove();\r\n                }\r\n                self.$viewBox.removeClass(\"dz-started dz-max-files-reached\");\r\n\r\n                self.filesFormMethod = [];\r\n                self.files = [];\r\n\t            return this;\r\n\t        },\r\n\t        destroy: function(){\r\n\t        \tif(this.listeners.indexOf('destroy') > -1) {\r\n\t                if(!this.emit({type:'destroy',target: this.dom})) return ;\r\n\t            }\r\n\r\n\t            this._file.destroy();\r\n                this.$element.removeAttr(\"ui-type\");\r\n\t            this.$element.removeData(_pluginDataName);\r\n                this.$viewBox.replaceWith(this.initDom);\r\n\t            // this.$element.prop(\"outerHTML\", this.initDom);\r\n\t            return this;\r\n\t        },\r\n            widget: function(){\r\n                return this._file;\r\n            },\r\n\t\t\ton: function(type, handler){\r\n\t\t\t\tif(_widgetEventType.indexOf(type) > -1){\t// WUI组件事件监听\r\n\t            \tif(typeof this.handlers[type] === 'undefined') {\r\n\t\t                this.handlers[type] = [];\r\n\t\t                this.listeners.push(type);\r\n\t\t            }\r\n\t\t            this.handlers[type].push(handler);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        off: function(type, handler){\r\n\t        \tvar _i, _j, _listeners, _handlers, _len;\r\n\t        \tif(_widgetEventType.indexOf(type) > -1){\t// 取消WUI组件事件监听\r\n\t        \t\tif(this.handlers[type] instanceof Array) {\r\n\t        \t\t\t_handlers = this.handlers[type];\r\n\t        \t\t\t_listeners = this.listeners;\r\n\r\n\t        \t\t\tfor(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n\t\t                    if(_listeners[_i] === type) {\r\n\t\t                        break;\r\n\t\t                    }\r\n\t\t                }\r\n\r\n\t\t                if(handler === undefined){\r\n\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t                \tdelete this.handlers[type];\r\n\t\t                }else{\r\n\t\t                \tfor(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n\t\t\t                    if(_handlers[_j] === handler) {\r\n\t\t\t                        break;\r\n\t\t\t                    }\r\n\t\t\t                }\r\n\t\t\t                if(_j < _len){\r\n\t\t\t                \tthis.handlers[type].splice(_j, 1);\r\n\t\t\t                \tif(this.handlers[type].length == 0){\r\n\t\t\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t\t\t                }\r\n\t\t\t                }\r\n\t\t                }\r\n\t\t            }\r\n\t        \t}\r\n\t\t        return this;\r\n\t        },\r\n\t        emit: function(event){\r\n\t            if(!event.target) {\r\n                    if(!this.$viewBox){\r\n                        event.target = this;\r\n                    }else{\r\n                        event.target = this.$viewBox;\r\n                    }\r\n                }\r\n\t            if(this.handlers[event.type] instanceof Array) {\r\n\t                var handlers = this.handlers[event.type];\r\n\t                for(var i = 0, len = handlers.length; i < len; i++) {\r\n\t                    handlers[i](event);\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        },\r\n            component: function(){\r\n                return this;\r\n            }\r\n\t\t}\r\n\r\n\t\t//fn就是prototype\r\n\t\t$.fn[_pluginName] = function(param1){\r\n\t\t\t// each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(document.getElementById(element), _pluginDataName, new uiFile(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"组件未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('组件中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 增加组件事件监听\r\n         * @event on\r\n\t\t * @param eventType {string} 可监听事件类型如下：<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> eventType </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"addedfile\"</td>\r\n\t\t\t\t\t\t<td>单个文件被添加到队列时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"uploading\"</td>\r\n\t\t\t\t\t\t<td>单个文件正在上传时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"success\"</td>\r\n\t\t\t\t\t\t<td>单个文件上传成功时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"error\"</td>\r\n\t\t\t\t\t\t<td>单个文件上传出错时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"complete\"</td>\r\n\t\t\t\t\t\t<td>单个文件上传完成时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"canceled\"</td>\r\n\t\t\t\t\t\t<td>单个文件从文件列表中移除时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n\t\t * @param func {function} 事件类型触发之后的执行方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 单个文件上传完成时触发\r\nuiFile.on(\"complete\", function(e){\r\n    wui.logMessage(\"complete\");\r\n});</code></pre>\r\n\t\t */\r\n\t\tfunction _on(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"on\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 取消组件事件监听\r\n         * @event off\r\n\t\t * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n\t\t * @param func {function} 选填,事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 取消组件事件监听\r\nuiFile.off(\"addedfile\");</code></pre>\r\n\t\t */\r\n\t\tfunction _off(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"off\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n\t\t* @param type {string} 获取上传成功文件的信息类型，可选:不填则返回整个文件信息/json(根据\"jsonReader\"参数过滤得到的文件信息)\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取上传成功的全部文件信息\r\nvar files = uiFile.get();   // []</code></pre>\r\n        */\r\n\t\tfunction _get(type){\r\n\t\t\treturn _executeMethod(\"get\", type);\r\n\t\t}\r\n\r\n        /**\r\n        * 根据文件状态获取文件信息\r\n        * @method getFilesWithStatus\r\n        * @since 0.0.1\r\n        * @param fielStatus {string} 获取的组件值的类型，可选:queue(获取所有排队的文件)/uploading(正在上传文件)/success(所有上传成功文件)/error(所有上传失败的文件)/canceled(被取消上传的文件)/all(全部接受文件信息,默认)\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取上传成功的全部文件信息\r\nvar successFiles = uiFile.getFilesWithStatus(\"success\");   // []</code></pre>\r\n        */\r\n        function _getFilesWithStatus(fielStatus){\r\n            return _executeMethod(\"getFilesWithStatus\", fielStatus);\r\n        }\r\n\r\n        /**\r\n        * 打开文件选择框(在IE8和IE9下无效)\r\n        * @method selectFile\r\n\t\t* @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiFile.selectFile();</code></pre>\r\n        */\r\n\t\tfunction _selectFile(){\r\n\t\t\treturn _executeMethod(\"selectFile\");\r\n\t\t}\r\n\r\n        /**\r\n        * 添加自定义的文件预览框\r\n        * @method addFilesPreview\r\n\t\t* @param file {Object} 要新增预览的文件对象信息,多个对象用数组表示\r\n        * @param file.name {String} 文件名\r\n        * @param file.src {String} 文件显示地址\r\n        * @param file.size {String} 文件大小\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiFile.addFilesPreview({\"name\": \"123.png\", \"src\":\"http://111.230.47.180:9393/326b6127-b62c-4825-8f6b-c3c51f3d39c7.jpg\"});</code></pre>    \r\n        */\r\n\t\tfunction _addFilesPreview(files){\r\n\t\t\treturn _executeMethod(\"addFilesPreview\", files);\r\n\t\t}\r\n\r\n        /**\r\n        * 上传全部队列中的文件\r\n        * @method upload\r\n\t\t* @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 当禁止自动上传时，可通过此方法上传文件\r\nuiFile.upload();</code></pre>\r\n        */\r\n\t\tfunction _upload(){\r\n\t\t\treturn _executeMethod(\"upload\");\r\n\t\t}\r\n\r\n        /**\r\n        * 取消组件选中的文件上传\r\n        * @method cancel\r\n\t\t* @param name {string} 要删除的图片名字带后缀名，不传则默认取消全部队列文件\r\n\t\t* @param [key] {string} [ 图片名字在哪个字段, 默认是 \"name\" ]\r\n\t\t* @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiFile.cancel(\"bb.jpg\");</code></pre>\r\n        */\r\n\t\tfunction _cancel(name, key){\r\n\t\t\treturn _executeMethod(\"cancel\", name, key);\r\n\t\t}\r\n\r\n        /**\r\n        * 移除文件\r\n        * @method removeFile\r\n        * @param name {string} 要删除的图片名字带后缀名，不传则默认取消全部队列文件\r\n        * @param [key] {string} [ 图片名字在哪个字段, 默认是 \"name\" ]\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiFile.removeFile(\"aa.jpg\");</code></pre>\r\n        */\r\n        function _remove(name, key){\r\n            return _executeMethod(\"remove\", name, key);\r\n        }\r\n\r\n        /**\r\n        * 阻止点击弹出文件选择框\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 阻止点击弹出文件选择框\r\nuiFile.disabled();</code></pre>\r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出文件选择框\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 允许点击弹出文件选择框\r\nuiFile.enabled();</code></pre>\r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件只读\r\nuiFile.readonly();</code></pre>\r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example\r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置组件可读可写\r\nuiFile.readwrite();</code></pre>\r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数(只允许修改少数参数)\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置，可修改配置参数: \"url\"/\"otherParam\"/\"acceptedFiles\"/\"maxNumber\" </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件参数\r\nuiFile.option();</code></pre>\r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 清空组件值\r\nuiFile.empty();</code></pre>\r\n        */\r\n        function _empty(){\r\n            return _executeMethod(\"empty\");\r\n        }\r\n\r\n        /*\r\n        * 获取第三方插件对象\r\n        * @method widget\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">var fileWidget =  uiFile.widget();</code></pre>\r\n        */\r\n        function _widget(){\r\n            return _executeMethod(\"widget\");\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 销毁组件：销毁之后可通过重新初始化组件启用组件\r\nuiFile.destroy();</code></pre>\r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">var component = uiFile.component();</code></pre>\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过，则返回该组件对象，否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example\r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 初始化组件\r\nuiFile.init();</code></pre>\r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t$('#' + element)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        }\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\t\treturn {\r\n            // 初始化组件\r\n\t\t\tinit: _init,\t\r\n            // 事件监听\r\n\t\t\ton: _on,\t\t\r\n            // 取消事件监听\r\n\t\t\toff: _off,\t\t\r\n            // 获取上传成功的文件信息\r\n\t\t\tget: _get,\t\t\r\n            // 根据文件状态获取对应的全部文件信息\r\n            getFilesWithStatus: _getFilesWithStatus,    \r\n            // 添加自定义的文件预览框\r\n\t\t\taddFilesPreview: _addFilesPreview,\t\r\n            // 打开选择文件框,IE10下无效\r\n\t\t\tselectFile: _selectFile,\t\r\n            // 文件上传\t\r\n            upload: _upload,\t\r\n            // 取消上传文件队列\r\n            cancel: _cancel,\t\r\n            // 移除上传文件\r\n            removeFile: _remove,    \r\n            // 允许点击弹出文件选择框\r\n            enabled: _enabled,      \r\n            // 阻止点击弹出文件选择框\r\n            disabled: _disabled,\r\n            // 可读可写\r\n            readwrite: _readwrite,\r\n            // 只读\r\n            readonly: _readonly,\r\n            // 获取组件配置\r\n\t\t\toption: _option,\t\r\n            // 获取第三方插件对象\r\n            widget: _widget,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            // 清空文件上传队列\r\n\t\t\tempty: _empty,\t\r\n            // 销毁组件\r\n\t\t\tdestroy: _destroy\t\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","// wui.img\r\n// 图片控件\r\n// Date : 2018-01-22\r\n// by chenzx\r\n\r\n// 思路：\r\n// 封装插件，将插件初始化赋给wui\r\n// 单张图片选择之后直接上传\r\n// 左上角编辑,右上角删除,点击图片弹出大图预览\r\n// 点击确定按钮提交编辑之后的图片到后台\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>图片编辑组件</h3>\r\n     * <ol>\r\n     * <li>支持动态加载后台服务地址; </li>\r\n     * <li>支持多图片选择; </li>\r\n     * <li>支持单张图片编辑和删除; </li>\r\n     * <li>支持图片大图预览; </li>\r\n     * <li>兼容IE8+等; </li>\r\n     * </ol>\r\n     * <h3>依赖插件</h3>\r\n     * <ul>\r\n     * <li><a href=\"http://wxb.github.io/dropzonejs.com.zh-CN/dropzonezh-CN/#configuration\" target=\"_blank\">dropzone</a> </li>\r\n     * <li><a href=\"http://www.cnblogs.com/youring2/archive/2012/07/13/2590010.html\" target=\"_blank\">swfupload</a> (文件上传-IE8/9)</li>\r\n     * <li><a href=\"https://github.com/blueimp/Gallery\" target=\"_blank\">gallery</a> (图片预览) </li>\r\n     * <li><a href=\"http://fengyuanchen.github.io/cropper/\" target=\"_blank\">cropper</a> (图片裁剪) </li>\r\n     * </ul>\r\n     * <h3>需引入插件</h3>\r\n     * <ul>\r\n     * <ol>主页面引入插件(需依赖file组件,所以需要引入<a href=\"wui.file.html\"> file </a>组件及其第三方插件)\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/dropzone/dropzone.css&quot;/&gt;<br/>\r\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/gallery/css/blueimp-gallery.min.css&quot;&nbsp;/&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/dropzone/dropzone.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/swfupload/js/swfupload.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/gallery/js/jquery.blueimp-gallery.min.js&quot;&gt;&lt;/script&gt;</code></pre>\r\n     * </ol>\r\n     * <ol>公共页面引入插件\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/cropper/css/cropper.css&quot;&nbsp;/&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/cropper/js/cropper.js&quot;&nbsp;&gt;&lt;/script&gt;</code></pre>\r\n     * </ol>\r\n     * </ul>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiImg\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.img/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.img/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.img/setEdit\"}}{{/crossLink}}: 设置图片是否可编辑 </li>\r\n     * <li>{{#crossLink \"wui.img/enabled\"}}{{/crossLink}}: 允许点击弹出文件选择框 </li>\r\n     * <li>{{#crossLink \"wui.img/disabled\"}}{{/crossLink}}: 阻止点击弹出文件选择框 </li>\r\n     * <li>{{#crossLink \"wui.img/addImagesPreview\"}}{{/crossLink}}: 添加自定义的图片 </li>\r\n     * <li>{{#crossLink \"wui.img/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.img/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.img/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class img\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string} option.url 文件提交后台服务地址,默认值为\"\"\r\n     *  @param {json} [option.data]   传递到后台的请求参数对象，默认为空\r\n     *  @param {json} [option.otherParam]   拼接到URL的请求参数对象,JSON 数据或者function\r\n     *  @param {string} [option.method] 提交方法,可选参数:post/get,默认是\"post\"  \r\n     *  @param {number} [option.maxNumber] 最多可选个数，默认为false，即不限制\r\n     *  @param {String} [option.key] 获取表单值时提交字段名,若为空,则传递整个json数据,默认是\"filePath\"\r\n     *  @param {string} [option.acceptedFiles]   允许上传的文件 mime 类型或拓展名,使用逗号分隔文件类型或者扩展名列表,例如:\".psd,.jpg\",默认为\".jpg,.gif,.bmp,.jpeg,.png,.ico\"\r\n     *  @param {Number} [option.maxFilesize] 最大文件大小(单位MB),默认是256 \r\n     *  @param {boolean} [option.isAddRemoveLinks] 是否在缩略图中显示删除预览图片按钮,默认是true \r\n     *  @param {boolean} [option.isAddEditLinks] 是否在缩略图中显示编辑按钮,默认是true\r\n     *  @param {boolean} [option.isEnablePreview] 是否点击缩略图显示大图预览,默认是true\r\n     *  @param {Number} [option.thumbnailWidth] 设置缩略图的宽度,最小值100\r\n     *  @param {Number} [option.thumbnailHeight] 设置缩略图的高度,最小值100\r\n     *  @param {String} [option.editPageUrl] 图片编辑的公共页面地址,默认是\"common_pages/wui.img.edit.html\" \r\n     *  @param {JSON} [option.jsonReader] 默认从服务器端返回数据参数名称设置集合,get()方法返回的参数名同此处设置,如下参数设置之后,服务器返回数据格式为<br/>\r\n     *  {\r\n     *  \trows: {fileName: \"new_file.png\", filePath: \"/upload/new_file.png\", fileUrl: \"http://hostname:port/../img.png\"}\r\n     *  }\r\n     *  @param {String} [option.jsonReader.root] json中代表实际模型数据的入口,内容以Object格式返回,若为null,则返回数据全部作为实际数据,内容以Object格式返回,默认是\"rows\"\r\n     *  @param {String} [option.jsonReader.fileUrl] 服务器返回图片展示地址参数名,默认是\"fileUrl\"\r\n     *  @param {String} [option.jsonReader.fileName] 文件提交之后的新名字键名,默认是\"fileName\"\r\n     *  @param {String} [option.jsonReader.filePath] 文件保存服务器虚拟路径键名,默认是\"filePath\"\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件样式 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/dropzone/dropzone.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/gallery/css/blueimp-gallery.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Img: &lt;div id=\"imgId\"&gt;&lt;/div&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件脚本 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/dropzone/dropzone.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/swfupload/js/swfupload.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/gallery/js/jquery.blueimp-gallery.min.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiImg = wui.img( \"imgId\",{\r\n                \"url\": \"http://xxx:7070/Upload.aspx\",\r\n                \"otherParam\": {\r\n                    \"rename\": true,\r\n                    \"subPath\": \"temp/\"\r\n                },\r\n                \"jsonReader\": {\r\n                    \"fileUrl\": \"fileUrl\",\r\n                    \"root\": \"rows\",\r\n                    \"fileName\": \"fileName\",\r\n                    \"filePath\": \"filePath\"\r\n                }\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.img = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiImage\",\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"img\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n\t\tif(!$(\"#\" + element).exist()){\r\n\t\t\tui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//需要设置为控件的名字\r\n\t\tvar _widgetEventType = [\"addedfile\",\"uploading\",\"success\",\"error\",\"complete\",\"canceled\"];\r\n\r\n\t\t// function _getPreviewTemplate(){\r\n\t\t// \tvar previewTemplate = '';\r\n\t\t// \tpreviewTemplate += '<div class=\"dz-preview dz-file-preview wui-img\">';\r\n  //           previewTemplate += '    <div class=\"img-btn-mask\"></div>';\r\n  //           previewTemplate += '    <span class=\"portrait\">';\r\n  //           previewTemplate += '        <a href=\"javascript:void(0);\" wui-img=\"prev\" class=\"perview-a\" title=\"图片\">';\r\n  //           previewTemplate += '            <img src=\"\" wui-img=\"img\"/>';\r\n  //           previewTemplate += '        </a>';\r\n  //           previewTemplate += '    </span>';\r\n  //           previewTemplate += '    <button wui-img=\"edit\" class=\"btn default toolbar-edit\" type=\"button\" title=\"编辑\">';\r\n  //           previewTemplate += '        <i class=\"fa fa-edit\"></i>';\r\n  //           previewTemplate += '    </button>';\r\n  //           previewTemplate += '    <button wui-img=\"remove\" class=\"btn default toolbar-reset\" type=\"button\" title=\"删除\">';\r\n  //           previewTemplate += '        <i class=\"fa fa-trash\"></i>';\r\n  //           previewTemplate += '    </button>';\r\n  //           previewTemplate += '</div>';\r\n\t\t// \treturn previewTemplate;\r\n\t\t// }\r\n\r\n\t\t//默认配置项\r\n\t\tvar config = {\r\n            // {string} 文件提交后台服务地址,默认值为\"\"，本地测试地址：http://localhost:7070/Upload.aspx\r\n\t\t\turl: \"\"\t\t\t\r\n            // {JSON} 传递到后台的请求参数对象，默认为空\r\n            , data: {} \r\n            // {JSON} 拼接到URL的请求参数对象,JSON 数据或者function\r\n            , otherParam: {}    \r\n            // {string} 提交方法,可选参数:post/get\r\n\t\t\t, method: \"post\"\t\r\n            // {int} 最大文件大小(单位MB)\r\n\t\t\t, maxFilesize : 256\t\r\n            // {int}  最多可以选择的数目，默认是false，即无限制\r\n            , maxNumber : false\t \t\r\n            // {String} 获取表单值时提交字段名,若为空,则传递整个json数据\r\n            , key: \"filePath\"  \r\n            // {boolean} 是否可单个删除    \r\n\t\t\t, isAddRemoveLinks: true\t\r\n            // {boolean} 是否可编辑\r\n\t\t\t, isAddEditLinks: true\t\r\n            // {boolean} 是否可预览\r\n\t\t\t, isEnablePreview: true\t\r\n            // 允许上传的文件拓展名\r\n            , acceptedFiles: \"*\"\t\r\n\t\t\t// , resolution: \"1x1\"\t// {boolean} \r\n\t\t\t// , aspectRatio: 0\t// {float} 截取的高宽比例， 默认'0'(自由比例),'1.777'(16:9),此属性跟resolution属性相关，设置的比例确保在resolution范围内，否则会出错\r\n            // {String} 外层容器最小宽度,默认是\"auto\"(根据内部自适应)\r\n\t\t\t, conMinWidth: \"auto\"          \r\n            // {String} 外层容器最小高度,默认是\"auto\"(根据内部自适应)\r\n            , conMinHeight: \"auto\"         \r\n            // {int} 设置缩略图的宽度,最小值100\r\n\t\t\t, thumbnailWidth: 100\t\t\r\n            // {int} 设置缩略图的高度,最小值100\r\n\t\t\t, thumbnailHeight: 100\r\n            // 按钮设置\t\r\n\t\t\t, buttonSetting: {\r\n                // 按钮图片路径，Flash使用，可以有多种状态（mouseout、hover等）  \r\n                imageUrl: ui.FRAME_PATH + '/themes/images/add_button.png'\r\n                // 按钮的宽，必须要设置，不设置按钮无法显示  \r\n                , width : 102 \r\n                // 按钮的高，必须要设置，不设置按钮无法显示\r\n                , height : 102 \r\n\t\t\t}\t\r\n            // 编辑页面地址\r\n\t\t\t, editPageUrl: ui.commonPageBasePath + \"wui.img.edit.html\"\r\n\t\t\t// , resHostName: \"\"\t// {string/function} 图片保存主机地址\r\n\t\t\t// , resDataKey: \"BusinessObject\"\t// {string} 文件上传成功返回值中存放文件信息的键名,默认是\"BusinessObject\",以数组格式返回\r\n\t\t\t// , resFileNameKey: \"name\"\t\t// {string} 文件提交之后的新名字键名\r\n\t\t\t// , resFilePathKey: \"filePath\"\t\t// {string} 文件保存虚拟路径键名\r\n\t\t\t, jsonReader: {\r\n                // 返回数据参数名\r\n                root:\"rows\", \r\n                // {String} 是否请求成功字段名\r\n                isSuccess: \"success\",\r\n                // {String} 请求成功或者失败信息字段名\r\n\t\t\t\tmessage: \"message\",\r\n\t\t\t\t// {string} 服务器返回图片展示地址参数名\r\n\t\t\t\tfileUrl: \"fileUrl\",\r\n\t\t\t\t// {string} 文件提交之后的新名字键名\r\n\t\t\t\tfileName:\"fileName\",\r\n\t\t\t\t// {string} 文件保存虚拟路径键名\r\n\t\t\t\tfilePath: \"filePath\"\r\n\t\t\t}\r\n            // 弹出层页面设置\r\n            , pageHeight: \"540px\"\r\n            , pageWidth: \"600px\"\r\n            , pageTitle: \"图片编辑\"\r\n            // 图片解析度,多个用\",\"分隔\r\n            , resolutions: \"1x1,16x9,25x25\"\r\n            // 上传子路径\r\n            , subPath: \"\"\r\n            // 上传文件是否重命名\r\n            , isRename: true\r\n\t\t};\r\n\r\n\t\t// 不改动的参数配置\r\n\t\tvar defaults = {\r\n            // containerTmp: '<div wui-widget=\"img\" class=\"wui-img-container\"></div>'\t// 容器模板\r\n            // , imgIconTmp: '<span wui-img=\"icon\" class=\"wui-img-icon\">\\n<a href=\"javascript:void(0);\" class=\"btn btn-default\" >\\n<i class=\"fa fa-picture-o\"></i>\\n</a>\\n</span>'\t// 添加图片按钮模板\r\n            // imgIconTmp: '<div class=\"dz-message\">\\n<div class=\"file-add-icon\"><i class=\"fa fa-plus\"></i></div>\\n</div>'\r\n\t        // , imgIconTmp: '<div wui-img=\"icon\" class=\"wui-icon-img\">\\n<span>\\n<a href=\"javascript:void(0);\" class=\"\" title=\"添加图片\">\\n<img src=\"../statics/images/img-icon.jpg\" />\\n</a>\\n</span>\\n</div>'\r\n            isCreateImageThumbnails : true\t// {boolean} 是否创建图片缩略图\r\n\t\t\t, isAddRemoveLinks : false\t\t// {boolean} 是否添加上传取消和删除预览图片的链接\r\n\t\t\t, isAddUploadLinks: false\t\t// {boolean} 是否预览图中显示上传按钮\r\n            // {Array} 全部允许上传的图片拓展名\r\n\t\t\t, allAcceptedFiles: [\".jpg\",\".gif\",\".bmp\",\".jpeg\",\".png\",\".ico\"]\r\n            , filesizeBase: 1000\r\n\t\t\t, isAutoProcessQueue: true\r\n            // 取消上传按钮文本\r\n            , dictCancelUpload : ui.language.img.dictCancelUpload\r\n            // 编辑按钮文本\r\n            , dictEditFile : ui.language.img.dictEditFile\r\n            // 删除按钮文本\r\n            , dictRemoveFile : ui.language.img.dictRemoveFile\r\n            // 默认传递到后台参数\r\n            , otherParam: {}\r\n\t\t}\r\n\r\n\t\tfunction uiImage(element, options){\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init();\t\r\n\t\t}\r\n\r\n\t\tuiImage.prototype = {\r\n\t\t\tconstructor: uiImage,\r\n\r\n\t\t\tinit: function(){\r\n                // 初始化对象静态属性\r\n\t\t\t\tthis.pluginName = _widgetName;      // 缓存插件名字\r\n\t\t\t\tthis.element = element;             // 保存初始化标签id\r\n\t\t\t\tthis.$element = $(\"#\" + element);\t// 保存初始化标签jQuery\r\n\t\t\t\tthis.defaults = defaults;           // 保存静态默认配置项\r\n\r\n                // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n\t\t\t\tthis.initDom = this.$element.prop(\"outerHTML\");\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n\t\t\t\t\r\n\t\t\t\t// var browser = ui.getBrowserVersion();\r\n    //             if(browser.browser == \"IE\" && browser.version < 10){\r\n    //                 this.isSupport = false;\r\n    //             }else{\r\n    //                 this.isSupport = true;\r\n    //             }\r\n                this.isSupport = ui.CONSTANTS.ISSUPPORTH5;\r\n\r\n\t\t\t\tthis.files = [];\t// 存放全部上传成功的文件对象\r\n\t\t\t\tthis._file = null;\t// 存放file组件对象\r\n\r\n\t\t\t\t// 初始化对象页面结构模板\r\n\r\n\t\t\t\t// 初始化对象页面结构\r\n\t\t\t\tthis.$Maxcontainer = this.$element; // 组件最外层容器(.wui-img-container): $imgPrev + $clickableBox\r\n\t\t\t\tthis.previewsContainer = document.getElementById(this.element);\r\n\r\n\r\n\t\t\t\t// this.pluginName = _pluginName;\t// 缓存插件名字\r\n\t            // this.hasDom = false; \t\t// 检查dom树中此节点是否存在\r\n\t\t\t\t// this.element = element;\t\t// 保存默认值\r\n\t\t\t\t// this.$element = $(\"#\" + element);\t\t// 保存默认值\r\n\t\t\t\t// this.previewsContainer = document.getElementById(this.element);\r\n\t\t\t\t// this.defaults = defaults;\t// 缓存配置项\r\n\t\t\t\t// this.initDom = this.$element.prop(\"outerHTML\");\r\n\t\t\t\t// this._opt = $.extend(true, {}, config, options);\t// 覆盖默认配置项\r\n                // 获取元素绑定的参数数据\r\n                // var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                // this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n\r\n\t\t\t\t// this.files = [];\t// 存放全部上传成功的文件对象\r\n\t\t\t\t// this._file = null;\t// 存放file组件对象\r\n\r\n\t\t\t\t\r\n                // 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n            \tthis.handlers = {};\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n\t\t\t\tthis.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t\t\t},\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n                // maxNumber: {number} 最多可选节点个数,0代表不限制\r\n                // var maxNumber = param.maxNumber;\r\n                // if(maxNumber == false){\r\n                //     maxNumber = 0;\r\n                // }else if(typeof(maxNumber) != \"number\"){\r\n                //     maxNumber = parseInt(maxNumber);\r\n                // }\r\n\r\n                // if(maxNumber < 0){\r\n                //     ui.logError(\"maxOptions参数必须为非负整数\");\r\n                //     maxNumber = 0;\r\n                // }\r\n                // this._opt.maxNumber = maxNumber;\r\n                if(!this.isSupport){\r\n                    this._opt.isAddEditLinks = false;\r\n                }\r\n                this._opt.maxNumber = ui.formatMaxNumber(param.maxNumber);\r\n            },\r\n            // 给图片添加按钮操作\r\n            _addImgAction: function(img){\r\n            \tvar self = this, param = this._opt, $selector = this.$element;\r\n\r\n            \tif(!img.previewElement){\r\n            \t\tui.logWarn(\"传入的img对象没有previewElement属性,所以无法添加操作按钮\", FRAME_NAME + \".\" + _widgetName, true);\r\n            \t\treturn false;\r\n            \t}\r\n\r\n            \t// 单个编辑按钮\r\n            \tif (param.isAddEditLinks) {\r\n\t\t\t\t\timg._editLink = self._createElement(\"<a class=\\\"dz-edit\\\" href=\\\"javascript:void(0);\\\" data-dz-edit>\" + self.defaults.dictEditFile + \"</a>\");\r\n\t\t\t\t\timg.previewElement.appendChild(img._editLink);\r\n\t\t\t\t\t// ui.addEventListener(img._editLink, \"click\", function(e){\r\n\t\t\t\t\t// \tui.stopPropagation(e);\t// 兼容IE8\r\n\t\t\t\t\t// \tself.editFile(img);\r\n                    // });\r\n                    $(img._editLink).on(\"click\", function(e){\r\n                        ui.stopPropagation(e);  // 兼容IE8\r\n                        self.editFile(img);\r\n                    })\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(!self.defaults.isAddRemoveLinks){\r\n\t\t\t\t\t// 单个删除按钮\r\n\t\t\t\t\tif (param.isAddRemoveLinks) {\r\n\t\t\t\t\t\timg._removeLink = self._createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + self.defaults.dictRemoveFile + \"</a>\");\r\n\t\t\t\t\t\timg.previewElement.appendChild(img._removeLink);\r\n\t\t\t\t\t\t// ui.addEventListener(img._removeLink, \"click\", function(e){\r\n\t\t\t\t\t\t// \tui.stopPropagation(e);\t// 兼容IE8\r\n\t\t\t\t\t\t// \t// console.log(\"remove\");\r\n                \t    // self.removeFile(img);\r\n                \t    // });\r\n                        $(img._removeLink).on(\"click\", function(e){\r\n                            ui.stopPropagation(e);  // 兼容IE8\r\n                            // console.log(\"remove\");\r\n                            self.removeFile(img);\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\tif(param.isEnablePreview){\r\n                    $(img.previewElement).on(\"click\", function(event){\r\n                        // console.info(\"view\");\r\n                        // self.viewFile(img);\r\n                        event = event || window.event;\r\n                        var target = event.target || event.srcElement,\r\n                            link = target.src ? target.parentNode : target,\r\n                            options = {index: link, event: event, container: '#blueimp-image-gallery'};\r\n\r\n                        var links = [\r\n                            {\r\n                                title: img.name,\r\n                                href: img.src,\r\n                                type: img.type\r\n                            }\r\n                        ];\r\n                        blueimp.Gallery(links, options);\r\n                    })\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_ref1 = img.previewElement.querySelectorAll(\"[data-dz-size]\");\r\n\t\t\t\tfor (var _j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\r\n\t\t\t\t\tvar node = _ref1[_j];\r\n\t\t\t\t\tnode.parentNode.removeChild(node);\r\n\t\t\t\t}\r\n\t\t\t\treturn img;\r\n            },\r\n\t\t\t_initDom: function() { // 生成DOM节点\r\n\t\t\t\tvar self = this, param = this._opt, $selector = this.$element;\r\n\r\n\t\t\t\t$selector.addClass(\"wui-img-container\");\r\n\r\n\t\t\t\t// var jsonReader = {\r\n\t\t\t\t// \t// 返回数据参数名\r\n\t\t\t\t// \troot:\"rows\", \r\n\t\t\t\t// \t// {String} 是否请求成功字段名\r\n\t\t\t\t// \tisSuccess: \"isSuccess\",\r\n\t\t\t\t// \t// {String} 请求成功或者失败信息字段名\r\n\t\t\t\t// \tmessage: \"message\",\r\n\t\t\t\t// \t// {string} 服务器返回图片展示地址参数名\r\n\t\t\t\t// \tfileUrl: \"fileUrl\",\r\n\t\t\t\t// \t// {string} 文件提交之后的新名字键名\r\n\t\t\t\t// \tfileName:\"fileName\",\r\n\t\t\t\t// \t// {string} 文件保存虚拟路径键名\r\n\t\t\t\t// \tfilePath: \"filePath\"\r\n\t\t\t\t// }\r\n\t\t\t\tvar jsonReader = $.extend(true, {}, param.jsonReader),\r\n\t\t\t\t\t// 返回数据参数名\r\n\t\t\t\t\t// jsonRoot = jsonReader.root,\r\n\t\t\t\t\t// {String} 请求成功或者失败信息字段名\r\n\t\t\t\t\t// jsonMessage = jsonReader.message,\r\n\t\t\t\t\t// // {String} 是否请求成功状态字段名\r\n\t\t\t\t\t// jsonStatus = jsonReader.isSuccess,\r\n\t\t\t\t\t// {string} 服务器返回图片展示地址参数名\r\n\t\t\t\t\tjsonFileUrl = jsonReader.fileUrl,\r\n\t\t\t\t\t// {string} 文件提交之后的新名字键名\r\n\t\t\t\t\tjsonFileName = jsonReader.fileName,\r\n\t\t\t\t\t// {string} 文件保存虚拟路径键名\r\n\t\t\t\t\tjsonFilePath = jsonReader.filePath;\r\n\t\t\t\t\t\r\n\t\t\t\t// var jsonReader = ui.deepCopy(param.jsonReader),\r\n\t\t\t\t// \t// hostName = jsonReader.hostName,\r\n\t\t\t\t// \timgServerPathFieldName = jsonReader.fileUrl,\r\n\t\t\t\t// \tresponseDataFieldName = jsonReader.root,\r\n\t\t\t\t// \tfileNameFieldName = jsonReader.fileName,\r\n\t\t\t\t// \tfilePathFieldName = jsonReader.filePath;\r\n\r\n\t\t\t\t// delete jsonReader[\"hostName\"];\r\n\t\t\t\tdelete jsonReader[\"fileUrl\"];\r\n\t\t\t\tdelete jsonReader[\"root\"];\r\n                delete jsonReader[\"message\"];\r\n                delete jsonReader[\"isSuccess\"];\r\n\t\t\t\tdelete jsonReader[\"fileName\"];\r\n\t\t\t\tdelete jsonReader[\"filePath\"];\r\n\r\n\t\t\t\t// 服务器返回数据\r\n\t\t\t\t// BusinessObject = data.[param.resDataKey] {Array} 上传成功文件信息\r\n\t\t\t\t// BusinessObject.fileServerPath\r\n\t\t\t\tvar _onSuccess = function(theFile, data, results){\r\n\t            \tself.files.push(theFile);\r\n\t\t\t\t\tvar thumbnailElement, _i, _len, _len1, _ref, _ref1, _filePath;\r\n\r\n\t                var _addImgPrev = function(file, fileServerData){\r\n\t                \tvar filePath = fileServerData[jsonFilePath];\t// File Path\r\n\t            \t\t// var fileShowPath = hostName + filePath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n\t            \t\tvar fileShowPath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n\t            \t\tif(ui.isEmptyType(jsonFileUrl)){\r\n\t            \t\t\tfileShowPath = ui.hostAddress + filePath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n\t            \t\t}else{\r\n\t            \t\t\tfileShowPath = fileServerData[jsonFileUrl];\r\n\t            \t\t}\r\n\r\n\t        \t\t\tfile._name = fileServerData[jsonFileName];\r\n\t        \t\t\tfile.path = filePath;\r\n\t        \t\t\tfile.src = fileShowPath;\r\n\r\n                \t\tfor(var key in jsonReader){\r\n\t                \t\tfile[jsonReader[key]] = fileServerData[jsonReader[key]];\r\n\t                \t}\r\n\r\n\t                \tif(file.previewElement){\r\n                            var $thumbnails = $(file.previewElement).find(\"[data-dz-thumbnail]\");\r\n                            $thumbnails.each(function(i, thumbnail){\r\n                                file.cropSrc = thumbnail.src;\r\n                                $(thumbnail).attr({\r\n                                    alt: file._name,\r\n                                    title: file._name\r\n                                })\r\n\r\n                                $(thumbnail).next(\"i\").hide();\r\n\r\n                                if(self.isSupport){\r\n                                    self._addImgAction(file);\r\n                                }else{\r\n                                    $(thumbnail).attr(\"src\", fileShowPath);\r\n                                    $(thumbnail).on(\"load\", function(){\r\n                                        alert(\"图片加载完成\");\r\n                                        self._addImgAction(file);\r\n                                    })\r\n                                }\r\n                            })\r\n\t\t            \t}\r\n\t                }\r\n\r\n\t                // Array\r\n\t                if(ui.isArray(results)){\r\n\t                \tfor(var i = 0; i < results.length; i++){\r\n\t                \t\tvar theData = results[i];\r\n\t                \t\t\r\n\t\t                \t_addImgPrev(theFile, theData);\r\n\t                \t}\r\n\t                }else if(ui.isJson(results)){\r\n\t                \t_addImgPrev(theFile, results);\r\n\t                }\r\n\r\n\r\n\t            \t// var response = ui.parseToObj(data);\r\n\t            \t// var _response = ui.parseToObj(data);\r\n\t\t\t\t\t// if(!_response){\r\n\t\t\t\t\t// \t_response = data;\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// var _res;\r\n\t                // if(!responseDataFieldName){\r\n\t                // \t_res = _response;\r\n\t                // }else{\r\n\t                // \t_res = _response[responseDataFieldName];\r\n\t                // }\r\n\r\n\t                // var _addImgPrev = function(file, fileServerData){\r\n\t                // \tvar filePath = fileServerData[jsonFilePath];\t// File Path\r\n\t            \t// \t// var fileShowPath = hostName + filePath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n\t            \t// \tvar fileShowPath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n\t            \t// \tif(imgServerPathFieldName){\r\n\t            \t// \t\tfileShowPath = fileServerData[imgServerPathFieldName]\r\n\t            \t// \t}else{\r\n\t            \t// \t\tfileShowPath = ui.hostAddress + filePath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n\t            \t// \t}\r\n\r\n\t        \t\t// \tfile._name = fileServerData[fileNameFieldName];\r\n\t        \t\t// \tfile.path = filePath;\r\n\t        \t\t// \tfile.src = fileShowPath\r\n\r\n                \t// \tfor(var key in jsonReader){\r\n\t                // \t\tfile[jsonReader[key]] = fileServerData[jsonReader[key]];\r\n\t                // \t}\r\n\r\n\t                // \tif(file.previewElement){\r\n                    //         var $thumbnails = $(file.previewElement).find(\"[data-dz-thumbnail]\");\r\n                    //         $thumbnails.each(function(i, thumbnail){\r\n                    //             file.cropSrc = thumbnail.src;\r\n                    //             $(thumbnail).attr({\r\n                    //                 alt: file._name,\r\n                    //                 title: file._name\r\n                    //             })\r\n\r\n                    //             $(thumbnail).next(\"i\").hide();\r\n\r\n                    //             if(self.isSupport){\r\n                    //                 self._addImgAction(file);\r\n                    //             }else{\r\n                    //                 $(thumbnail).attr(\"src\", fileShowPath);\r\n                    //                 $(thumbnail).on(\"load\", function(){\r\n                    //                     alert(\"图片加载完成\");\r\n                    //                     self._addImgAction(file);\r\n                    //                 })\r\n                    //             }\r\n                    //         })\r\n\t\t            // \t}\r\n\t                // }\r\n\r\n\t                // // Array\r\n\t                // if(ui.isArray(_res)){\r\n\t                // \tfor(var i = 0; i < _res.length; i++){\r\n\t                // \t\tvar theData = _res[i];\r\n\t                \t\t\r\n\t\t            //     \t_addImgPrev(theFile, theData);\r\n\t                // \t}\r\n\t                // }else if(ui.isJson(_res)){\r\n\t                // \t_addImgPrev(theFile, _res);\r\n\t                // }\r\n\t\t\t\t};\r\n\t\t\t\tvar _onFail = function(file, message){\r\n\t\t\t\t\t// ui.logMessage(file, \"wui.img\", true);\r\n\t            \t// ui.logMessage(message, \"wui.img\", true);\r\n\r\n\t            \tif(file.previewElement){\r\n\t            \t\tif(!self.defaults.isAddRemoveLinks){\r\n\t            \t\t\t// 单个删除按钮\r\n\t\t\t\t\t\t\tif (param.isAddRemoveLinks) {\r\n\t\t\t\t\t\t\t\tfile._removeLink = self._createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + self.defaults.dictCancelUpload + \"</a>\");\r\n\t\t\t\t\t\t\t\tfile.previewElement.appendChild(file._removeLink);\r\n\t\t\t\t\t\t\t\t// ui.addEventListener(file._removeLink, \"click\", function(e){\r\n\t\t\t\t\t\t\t\t// \tui.stopPropagation(e);\t// 兼容IE8\r\n\t\t\t\t\t\t\t\t// \t// console.log(\"remove\");\r\n\t\t\t     //                    self.previewsContainer.removeChild(file.previewElement);\t// 移除预览图\r\n\t\t\t     //                });\r\n\r\n                                $(file._removeLink).on(\"click\", function(e){\r\n                                    ui.stopPropagation(e);  // 兼容IE8\r\n                                    // console.log(\"remove\");\r\n                                    self.previewsContainer.removeChild(file.previewElement);    // 移除预览图\r\n                                })\r\n\t\t\t\t\t\t\t}\r\n\t            \t\t}\r\n\t            \t}\r\n\t            }\t// {function} 上传失败回调方法\r\n\r\n\t            // 添加文件监听事件\r\n\t            var _onAddedFile = function(file){\r\n\t            \t// console.info(\"onAddedFile\");\r\n\t            \t// console.info(file);\r\n\t            }\r\n\r\n\t            // 移除文件触发事件\r\n\t            var _onRemovedFile = function(file){\r\n\t            \t// console.info(\"onRemovedFile\");\r\n\t            \t// console.info(file);\r\n\t            }\r\n\r\n\t            // 取消上传触发事件\r\n\t            var _onCancelFile = function(file, data){\r\n\t            \t// console.info(\"onCancelFile\");\r\n\t            \t// console.info(file);\r\n\t            \t// console.info(data);\r\n\t            }\r\n\r\n\t\t\t\tif(param.isEnablePreview){\r\n\t\t\t\t\tif(typeof(window.blueimp) == \"undefined\"){\r\n\t\t\t\t\t\tui.logWarn(\"没有加载 img 预览所需第三方插件:Gallery\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t\t\t\tparam.isEnablePreview = false;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar container = $('<div id=\"blueimp-image-gallery\" class=\"blueimp-gallery\"></div>');\r\n\t\t\t            container.append('<div class=\"slides\"></div>');\r\n\t\t\t            container.append('<h3 class=\"title\"></h3>');\r\n\t\t\t            container.append('<a class=\"prev\">‹</a>');\r\n\t\t\t            container.append('<a class=\"next\">›</a>');\r\n\t\t\t            container.append('<a class=\"close\">×</a>');\r\n\t\t\t            container.append('<a class=\"play-pause\"></a>');\r\n\t\t\t            container.append('<ol class=\"indicator\"></ol>');\r\n\t\t\t            $('body').append(container);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                var otherParams = $.extend(true, {\r\n                    \"resolutions\": param.resolutions\r\n                }, self.defaults.otherParam, param.otherParam);\r\n\r\n\t\t\t\tvar fileParam = {\r\n\t\t\t\t\turl: param.url\r\n                    , data: param.data\r\n\t\t\t\t\t, otherParam: otherParams\r\n\t\t\t\t\t, method: param.method\r\n\t\t\t\t\t, maxNumber: param.maxNumber\r\n\t\t\t\t\t, acceptedFiles: self._getAcceptedFiles()\r\n\t\t\t\t\t, maxFilesize: param.maxFilesize\r\n\t\t\t\t\t, isCreateImageThumbnails: self.defaults.isCreateImageThumbnails\r\n\t\t\t\t\t, isAutoProcessQueue: self.defaults.isAutoProcessQueue\r\n\t\t\t\t\t, isAddRemoveLinks: self.defaults.isAddRemoveLinks\r\n\t\t\t\t\t, isAddUploadLinks: self.defaults.isAddUploadLinks\r\n                    // {String} 外层容器最小宽度,默认是\"auto\"(根据内部自适应)\r\n\t\t\t\t\t, conMinWidth: param.conMinWidth    \r\n                    // {String} 外层容器最小高度,默认是\"auto\"(根据内部自适应)     \r\n\t\t            , conMinHeight: param.conMinHeight         \r\n\t\t\t\t\t, thumbnailWidth: param.thumbnailWidth\r\n\t\t\t\t\t, thumbnailHeight: param.thumbnailHeight\r\n\t\t\t\t\t, buttonSetting: param.buttonSetting\r\n\t\t\t\t\t, jsonReader: param.jsonReader\r\n                    // 上传子路径\r\n                    , subPath: param.subPath\r\n                    // 上传文件是否重命名\r\n                    , isRename: param.isRename\r\n\t\t\t\t\t, onRemovedFile: _onRemovedFile\r\n\t\t\t\t\t, onCancelFile: _onCancelFile\r\n\t\t\t\t\t, onAddedFile: _onAddedFile\r\n\t\t\t\t\t, onSuccess: _onSuccess\r\n\t\t\t\t\t, onFail: _onFail\r\n\t\t\t\t}\r\n\t\t\t\tthis._file = ui.file(self.element, fileParam);\r\n\t\t\t\tthis.$element.attr(\"ui-type\", _widgetName);\r\n                this.hasDom = true;\r\n                return this.$element.prop(\"outerHTML\");\r\n\t        },\r\n            _getAcceptedFiles: function(){\r\n                var self = this, param = this._opt;\r\n\r\n                if(param.acceptedFiles == \"*\" || !param.acceptedFiles){\r\n                    return this.defaults.allAcceptedFiles.join(\",\");\r\n                }else{\r\n                    // var acceptedFilesList = param.acceptedFiles.split(\",\");\r\n\r\n                    // for(var i = 0; i < acceptedFilesList.length; i++){\r\n                    //     if(this.defaults.allAcceptedFiles.indexOf(acceptedFilesList[i]) > -1){\r\n\r\n                    //     }\r\n                    // }\r\n                    return param.acceptedFiles;\r\n                }\r\n            },\r\n\t        _updateImgPreview: function(file){\r\n\t        \tvar self = this, param = this._opt;\r\n\r\n    \t\t\tfile._name = file.name;\r\n    \t\t\tfile.path = file.src;\r\n\r\n            \tif(file.previewElement){\r\n            \t\t_ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\r\n        \t\t\tfor (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        thumbnailElement = _ref[_i];\r\n                        thumbnailElement.alt = file._name;\r\n                        thumbnailElement.src = file.src;\r\n                        thumbnailElement.onload = function(){\r\n                        \t// console.info(\"图片加载完成\");\r\n                        \t// 单个编辑按钮\r\n\t\t\t            \tif (param.isAddEditLinks) {\r\n\t\t\t\t\t\t\t\tfile._editLink = self._createElement(\"<a class=\\\"dz-edit\\\" href=\\\"javascript:void(0);\\\" data-dz-edit>\" + self.defaults.dictEditFile + \"</a>\");\r\n\t\t\t\t\t\t\t\tfile.previewElement.appendChild(file._editLink);\r\n\t\t\t\t\t\t\t\t// ui.addEventListener(file._editLink, \"click\", function(e){\r\n\t\t\t\t\t\t\t\t// \tui.stopPropagation(e);\t// 兼容IE8\r\n\t\t\t\t\t\t\t\t// \tself.editFile(file);\r\n\t\t\t     //                });\r\n                                $(file._editLink).on(\"click\", function(e){\r\n                                    ui.stopPropagation(e);  // 兼容IE8\r\n                                    self.editFile(file);\r\n                                })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(!self.defaults.isAddRemoveLinks){\r\n\t\t\t\t\t\t\t\t// 单个删除按钮\r\n\t\t\t\t\t\t\t\tif (param.isAddRemoveLinks) {\r\n\t\t\t\t\t\t\t\t\tfile._removeLink = self._createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + self.defaults.dictRemoveFile + \"</a>\");\r\n\t\t\t\t\t\t\t\t\tfile.previewElement.appendChild(file._removeLink);\r\n\t\t\t\t\t\t\t\t\t// ui.addEventListener(file._removeLink, \"click\", function(e){\r\n\t\t\t\t\t\t\t\t\t// \tui.stopPropagation(e);\t// 兼容IE8\r\n\t\t\t\t\t\t\t\t\t// \t// console.log(\"remove\");\r\n\t\t\t\t     //                    self.removeFile(file);\r\n\t\t\t\t     //                });\r\n                                    $(file._removeLink).on(\"click\", function(e){\r\n                                        ui.stopPropagation(e);  // 兼容IE8\r\n                                        // console.log(\"remove\");\r\n                                        self.removeFile(file);\r\n                                    })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\t\t\tif(param.isEnablePreview){\r\n\t\t\t\t\t\t\t\t// ui.addEventListener(file.previewElement, \"click\", function(event){\r\n\t\t      //                   \t// self.viewFile(file);\r\n\t\t      //                   \tevent = event || window.event;\r\n\t\t\t\t\t\t  //           var target = event.target || event.srcElement,\r\n\t\t\t\t\t\t  //               link = target.src ? target.parentNode : target,\r\n\t\t\t\t\t\t  //               options = {index: link, event: event, container: '#blueimp-image-gallery'};\r\n\r\n\t\t\t\t\t\t  //           var links = [\r\n\t\t\t\t\t\t  //           \t{\r\n\t\t\t\t\t\t\t\t// \t        title: file.name,\r\n\t\t\t\t\t\t\t\t// \t        href: file.src,\r\n\t\t\t\t\t\t\t\t// \t        type: file.type\r\n\t\t\t\t\t\t\t\t// \t    }\r\n\t\t\t\t\t\t  //           ];\r\n\t\t\t\t\t\t  //           blueimp.Gallery(links, options);\r\n\t\t      //                   })\r\n\r\n                                $(file.previewElement).on(\"click\", function(event){\r\n                                    // self.viewFile(file);\r\n                                    event = event || window.event;\r\n                                    var target = event.target || event.srcElement,\r\n                                        link = target.src ? target.parentNode : target,\r\n                                        options = {index: link, event: event, container: '#blueimp-image-gallery'};\r\n\r\n                                    var links = [\r\n                                        {\r\n                                            title: file.name,\r\n                                            href: file.src,\r\n                                            type: file.type\r\n                                        }\r\n                                    ];\r\n                                    blueimp.Gallery(links, options);\r\n                                })\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\r\n\t\t\t\t\t\t\tfor (var _j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\r\n\t\t\t\t\t\t\t\tvar node = _ref1[_j];\r\n\t\t\t\t\t\t\t\tnode.parentNode.removeChild(node);\r\n\t\t\t\t\t\t\t}\r\n                        };\r\n                    }\t\r\n            \t}\r\n\r\n            \tself.files.push(file);\r\n\t        },\r\n\t\t\t// files: 自定义的文件预览\r\n\t\t\taddImagesPreview: function(images){\r\n\t\t\t\tvar self = this, param = this._opt;\r\n\t\t\t\t\r\n\t\t\t\t// console.info(images);\r\n\t\t\t\t// console.info(self._file)\r\n\t\t\t\tvar theImages = self._file.addFilesPreview(images);\r\n\t\t\t\t\r\n\t\t\t\tif(ui.isJson(theImages)){\r\n\t\t\t\t\t\r\n\t\t\t\t\t// var imageTemp = theImages.src.split(\".\");\r\n\t\t\t\t\t// if(imageTemp)\r\n\t        \t\tself._updateImgPreview(theImages);\r\n\t        \t}else if(ui.isArray(theImages)){\r\n\t        \t\tfor(var index = 0; index < theImages.length; index++){\r\n\t\t        \t\tvar image = theImages[index];\r\n\r\n\t\t        \t\tself._updateImgPreview(image);\r\n\t\t        \t}\r\n\t        \t}\r\n\t        \treturn theImages;\r\n\t\t\t},\r\n\t        _createElement: function(string) {\r\n\t\t\t    var div;\r\n\t\t\t    div = document.createElement(\"div\");\r\n\t\t\t    div.innerHTML = string;\r\n\t\t\t    return div.childNodes[0];\r\n\t\t\t},\r\n\t        _renameFilename: function(name) {\r\n\t\t\t\tif (typeof this._opt.renameFilename !== \"function\") {\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}\r\n\t\t\t\treturn this._opt.renameFilename(name);\r\n\t    \t},\r\n\t    \t_filesize: function(size) {\r\n\t\t\t\tvar cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\r\n\t\t\t\tselectedSize = 0;\r\n\t\t\t\tselectedUnit = \"b\";\r\n\t\t\t\tif (size > 0) {\r\n\t\t\t\t\tunits = ['TB', 'GB', 'MB', 'KB', 'b'];\r\n\t\t\t\t\tfor (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\r\n\t\t\t\t\t\tunit = units[i];\r\n\t\t\t\t\t\tcutoff = Math.pow(this.defaults.filesizeBase, 4 - i) / 10;\r\n\t\t\t\t\t\tif (size >= cutoff) {\r\n\t\t\t\t\t\t\tselectedSize = size / Math.pow(this.defaults.filesizeBase, 4 - i);\r\n\t\t\t\t\t\t\tselectedUnit = unit;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselectedSize = Math.round(10 * selectedSize) / 10;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\r\n\t\t\t},\r\n\t\t\t// 启用/关闭编辑\r\n\t        setEdit: function(isEnable){\r\n\t        \t// file._editLink\r\n\t        \tvar self = this;\r\n\t        \tvar _files = this.files, _len = _files.length;\r\n\t        \tisEnable = isEnable || false;\r\n\t        \tif(isEnable){\r\n\t        \t\tfor(var _i = 0; _i < _len; _i++){\r\n\t        \t\t\tvar file = _files[_i];\r\n\t        \t\t\tif(!file._editLink){\r\n\t        \t\t\t\tfile._editLink = self._createElement(\"<a class=\\\"dz-edit\\\" href=\\\"javascript:void(0);\\\" data-dz-edit>\" + self.defaults.dictEditFile + \"</a>\");\r\n\t\t\t\t\t\t\tfile.previewElement.appendChild(file._editLink);\r\n\t\t\t\t\t\t\t// ui.addEventListener(file._editLink, \"click\", function(e){\r\n\t\t\t\t\t\t\t// \tui.stopPropagation(e);\t// 兼容IE8\r\n\t\t\t\t\t\t\t// \tself.editFile(file);\r\n\t\t     //                });\r\n                            $(file._editLink).on(\"click\", function(e){\r\n                                ui.stopPropagation(e);  // 兼容IE8\r\n                                self.editFile(file);\r\n                            })\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t\t\r\n\t        \t}else{\r\n\t        \t\tfor(var _i = 0; _i < _len; _i++){\r\n\t        \t\t\tvar file = _files[_i];\r\n                        if(file._editLink){\r\n                            file.previewElement.removeChild(file._editLink);\r\n                            file._editLink = null;\r\n                        }\r\n\t        \t\t}\r\n\t        \t}\r\n\t        },\r\n\t        // 移除文件\r\n\t        removeFile: function(file){\r\n\t        \tvar self = this, _len, _files = this.files, _file = null, index = -1, param = this._opt;\r\n\t        \tif(file.id){\r\n\t        \t\tvar file_id = file.id;\r\n\t\t\t\t\t\r\n\t        \t\tfor(var i = 0, _len = _files.length; i < _len; i++){\r\n                \t\tvar __file = _files[i];\r\n                \t\tif(file_id == __file.id){\r\n                \t\t\t_file = __file;\r\n                \t\t\tindex = i;\r\n                \t\t\tbreak;\r\n                \t\t}\r\n                \t}\r\n                \tif(index > -1){\r\n                \t\tself.files.splice(index, 1);\r\n                \t}\r\n\r\n\t\t\t\t\tself._file.removeFile(file.id, \"id\");\r\n\t        \t}\r\n\t\t\t},\r\n\t\t\t// resoluJSONReader: function(data, onError){\r\n\t\t\t// \tvar self = this, param = this._opt;\r\n            //     var jsonReader = $.extend(true, {}, param.jsonReader),\r\n            //         jsonRoot = jsonReader.root,\r\n            //         jsonMessage = jsonReader.message,\r\n            //         jsonStatus = jsonReader.isSuccess;\r\n\r\n            //     // delete jsonReader[\"root\"];\r\n            //     // delete jsonReader[\"message\"];\r\n            //     // delete jsonReader[\"isSuccess\"];\r\n\r\n            //     if(ui.isEmptyType(data)){\r\n\r\n            //         return false;\r\n            //     }\r\n\r\n            //     // console.info(data);\r\n            //     var returnValue = ui.parseToObj(data), results;\r\n            //     if(!returnValue){\r\n            //         returnValue = data;\r\n            //     }\r\n            //     // var _res;\r\n            //     if(ui.isEmptyType(jsonRoot)){\r\n            //         results = returnValue;\r\n            //     }else{\r\n            //         results = returnValue[jsonRoot];\r\n\r\n            //         if(!ui.isEmptyType(jsonStatus)){\r\n            //             if(!returnValue[jsonStatus]){\r\n            //                 onError(file, returnValue[jsonMessage], -1);\r\n            //                 // console.error(file, returnValue[jsonMessage])\r\n            //                 return false;\r\n            //             }\r\n            //         }\r\n            //     }\r\n            //     // console.error(results);\r\n\r\n            //     if(ui.isEmptyType(results)){\r\n            //         return false;\r\n\t\t\t// \t}\r\n\t\t\t\t\r\n\t\t\t// \treturn results;\r\n\t\t\t// },\r\n\t        // 编辑\r\n\t        editFile: function(file){\r\n\t\t\t\tvar self = this, param = this._opt, $selector = this.$element;\r\n\t\t\t\t// console.error(file);\r\n\t\t\t\t// var otherParam = ui.deepCopy(param.otherParam);\r\n                var serviceParam = $.extend(true, {}, self.defaults.otherParam, param.otherParam);\r\n\r\n\t            var pageParam = {\r\n                    // {String} 图片编辑提交接口\r\n\t            \thandleUrl: param.url,\r\n                    // {JSON} 传递给接口的其他参数\r\n\t            \totherParam: serviceParam,\r\n                    // {String} 显示图片地址\r\n\t            \tpicSrc: file.src,\r\n                    // {String} 文件名称\r\n                    imageName: file.name,\r\n                    // {String} 文件虚拟路径\r\n                    imagePath: file.filePath,\r\n                    // 图片解析度,多个用\",\"分隔\r\n                    resolutions: param.resolutions,\r\n                    // 上传子路径\r\n                    subPath: param.subPath,\r\n                    // 上传文件是否重命名\r\n\t\t\t\t\tisRename: param.isRename,\r\n\t\t\t\t\t// 指定服务器返回数据解析配置\r\n\t\t\t\t\tjsonReader: param.jsonReader\r\n\t            };\r\n\t\t\t\t\r\n\t\t\t\tvar url = wui.buildUrl(param.editPageUrl, pageParam, true, true);\r\n\r\n                var modalDialogParams = {\r\n                    url: url,\r\n                    width: param.pageWidth,\r\n                    height: param.pageHeight,\r\n                    title: param.pageTitle,\r\n                    successCallback: function(serviceResult){\r\n                        // console.info(serviceResult);\r\n                        ui.logParamValue({\r\n                            paramName: \"serviceResult\",\r\n                            paramValue: serviceResult, \r\n                            methodName: \"img.closeEdit\", \r\n                            className: FRAME_NAME, \r\n                            isDebug: true\r\n                        });\r\n                        // var jsonReader = ui.deepCopy(param.jsonReader);\r\n\t\t\t\t\t\t// var responseName = jsonReader.root;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar jsonReader = $.extend(true, {}, param.jsonReader),\r\n\t\t\t\t\t\t\t// 返回数据参数名\r\n\t\t\t\t\t\t\tjsonRoot = jsonReader.root,\r\n\t\t\t\t\t\t\t// {String} 请求成功或者失败信息字段名\r\n\t\t\t\t\t\t\tjsonMessage = jsonReader.message,\r\n\t\t\t\t\t\t\t// // {String} 是否请求成功状态字段名\r\n\t\t\t\t\t\t\tjsonStatus = jsonReader.isSuccess,\r\n\t\t\t\t\t\t\t// {string} 服务器返回图片展示地址参数名\r\n\t\t\t\t\t\t\tjsonFileUrl = jsonReader.fileUrl,\r\n\t\t\t\t\t\t\t// {string} 文件提交之后的新名字键名\r\n\t\t\t\t\t\t\tjsonFileName = jsonReader.fileName,\r\n\t\t\t\t\t\t\t// {string} 文件保存虚拟路径键名\r\n\t\t\t\t\t\t\tjsonFilePath = jsonReader.filePath;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var jsonReader = ui.deepCopy(param.jsonReader),\r\n\t\t\t\t\t\t// \t// hostName = jsonReader.hostName,\r\n\t\t\t\t\t\t// \timgServerPathFieldName = jsonReader.fileUrl,\r\n\t\t\t\t\t\t// \tresponseDataFieldName = jsonReader.root,\r\n\t\t\t\t\t\t// \tfileNameFieldName = jsonReader.fileName,\r\n\t\t\t\t\t\t// \tfilePathFieldName = jsonReader.filePath;\r\n\r\n\t\t\t\t\t\t// delete jsonReader[\"hostName\"];\r\n\t\t\t\t\t\t// delete jsonReader[\"fileUrl\"];\r\n\t\t\t\t\t\t// delete jsonReader[\"root\"];\r\n\t\t\t\t\t\t// delete jsonReader[\"message\"];\r\n\t\t\t\t\t\t// delete jsonReader[\"isSuccess\"];\r\n\t\t\t\t\t\t// delete jsonReader[\"fileName\"];\r\n\t\t\t\t\t\t// delete jsonReader[\"filePath\"];\r\n\r\n\t\t\t\t\t\tif(ui.isEmptyType(serviceResult)){\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t// console.info(data);\r\n\t\t\t\t\t\tvar returnValue = ui.parseToObj(serviceResult), results;\r\n\t\t\t\t\t\tif(!returnValue){\r\n\t\t\t\t\t\t\treturnValue = serviceResult;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// var _res;\r\n\t\t\t\t\t\tif(ui.isEmptyType(jsonRoot)){\r\n\t\t\t\t\t\t\tresults = returnValue;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tresults = returnValue[jsonRoot];\r\n\t\t\r\n\t\t\t\t\t\t\tif(!ui.isEmptyType(jsonStatus)){\r\n\t\t\t\t\t\t\t\tif(!returnValue[jsonStatus]){\r\n\t\t\t\t\t\t\t\t\twui.errorNotice(returnValue[jsonMessage])\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar imgInfo;    // 文件数据\r\n\t\t\t\t\t\tif(ui.isArray(results)){\r\n\t\t\t\t\t\t\timgInfo = results[0];\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\timgInfo = results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tself.refreshFile(imgInfo, file);\r\n\r\n                        // alert(responseName);\r\n                        // var imgRes;\r\n                        // if(!!responseName && typeof(serviceResult[responseName]) != \"undefined\"){\r\n                        //     imgRes = serviceResult[responseName];\r\n                        // }else{\r\n                        //     imgRes = serviceResult;\r\n                        // }\r\n\r\n                        // if(imgRes){\r\n                        //     var imgInfo;    // 文件数据\r\n                        //     if(ui.isArray(imgRes)){\r\n                        //         imgInfo = imgRes[0];\r\n                        //     }else if(ui.isJson(imgRes)){\r\n                        //         imgInfo = imgRes;\r\n                        //     }else{\r\n                        //         imgInfo = imgRes;\r\n                        //     }\r\n\r\n                        //     self.refreshFile(imgInfo, file);\r\n                        // }\r\n                    }\r\n                }\r\n\t\t\t\t\r\n\t\t\t\tui.openModalDialog(modalDialogParams);\r\n\t        },\r\n\t        refreshFile: function(data, file){\r\n                ui.logParamValue({\r\n                    paramName: \"data\",\r\n                    paramValue: data, \r\n                    methodName: \"img.refreshFile\", \r\n                    className: FRAME_NAME, \r\n                    isDebug: true\r\n                });\r\n\t\t\t\tvar self = this, param = this._opt;\r\n\t\t\t\tvar jsonReader = $.extend(true, {}, param.jsonReader),\r\n\t\t\t\t\t// 返回数据参数名\r\n\t\t\t\t\t// jsonRoot = jsonReader.root,\r\n\t\t\t\t\t// {String} 请求成功或者失败信息字段名\r\n\t\t\t\t\t// jsonMessage = jsonReader.message,\r\n\t\t\t\t\t// {String} 是否请求成功状态字段名\r\n\t\t\t\t\t// jsonStatus = jsonReader.isSuccess,\r\n\t\t\t\t\t// {string} 服务器返回图片展示地址参数名\r\n\t\t\t\t\tjsonFileUrl = jsonReader.fileUrl,\r\n\t\t\t\t\t// {string} 文件提交之后的新名字键名\r\n\t\t\t\t\tjsonFileName = jsonReader.fileName,\r\n\t\t\t\t\t// {string} 文件保存虚拟路径键名\r\n\t\t\t\t\tjsonFilePath = jsonReader.filePath;\r\n\r\n\t        \t// var jsonReader = ui.deepCopy(param.jsonReader);\r\n\t\t\t\t// var imgServerPathFieldName = jsonReader.fileUrl,\r\n\t\t\t\t// \t// hostName = jsonReader.hostName,\r\n\t\t\t\t// \tresponseDataFieldName = jsonReader.root,\r\n\t\t\t\t// \tfileNameFieldName = jsonReader.fileName,\r\n\t\t\t\t// \tfilePathFieldName = jsonReader.filePath;\r\n\r\n\t\t\t\t// delete jsonReader[\"hostName\"];\r\n\t\t\t\tdelete jsonReader[\"fileUrl\"];\r\n\t\t\t\tdelete jsonReader[\"root\"];\r\n                delete jsonReader[\"message\"];\r\n                delete jsonReader[\"isSuccess\"];\r\n\t\t\t\tdelete jsonReader[\"fileName\"];\r\n\t\t\t\tdelete jsonReader[\"filePath\"];\r\n\r\n\t\t\t\t// var res;\t// 文件数据\r\n\t\t\t\t// if(ui.isArray(data)){\r\n\t\t\t\t// \tres = data[0];\r\n\t\t\t\t// }else if(ui.isJson(data)){\r\n\t\t\t\t// \tres = data;\r\n\t\t\t\t// }else{\r\n\t\t\t\t// \tres = data;\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tvar filePath = data[jsonFilePath],\r\n\t\t\t\t\tfileName = data[jsonFileName];\r\n\r\n\t        \t// var picSrc = hostName + filePath;\r\n\t        \tvar picSrc;\t\t// Show File Path:可能需要做/和\\符号转化\r\n        \t\tif(jsonFileUrl){\r\n        \t\t\tpicSrc = data[jsonFileUrl]\r\n        \t\t}else{\r\n        \t\t\tpicSrc = ui.hostAddress + filePath;\t\t// Show File Path:可能需要做/和\\符号转化\r\n        \t\t}\r\n\r\n\t        \tfile.path = filePath;\r\n    \t\t\tfile._name = fileName;\r\n    \t\t\tfile.src = picSrc;\r\n\r\n\t        \tfile.size = \"\";\r\n\t        \tvar _ref, _len;\r\n\t        \t_ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\r\n\t\t\t\tfor (var _i = 0, _len = _ref.length; _i < _len; _i++) {\r\n\t\t\t\t\tvar node = _ref[_i];\r\n\t\t\t\t\tnode.textContent = self._renameFilename(file.name);\r\n\t\t\t\t}\r\n\r\n\t        \tvar thumbnailElement = file.previewElement.querySelector(\"[data-dz-thumbnail]\");\r\n\t\t        thumbnailElement.src = picSrc;\r\n\t        \tthumbnailElement.onload = function(e){\r\n\t\t        \tvar img = new Image(); //建立一个图像对象\r\n\t\t        \timg.src = picSrc;\r\n\t\t        \timg.onload = function(e){\r\n\t\t        \t\tvar imgWidth = img.width, imgHeight = img.height;\r\n\t\t        \t\tfile.width = imgWidth;\r\n\t\t        \t\tfile.height = imgHeight;\r\n\t\t        \t}\r\n\t        \t\t// 模态框被关闭,图片加载完成之后\r\n\t                if(self.listeners.indexOf('modalDialogClosed') > -1) {\r\n\t\t                if(!self.emit({type:'modalDialogClosed',target: self.$element, file: file})) return ;\r\n\t\t            }\r\n\t        \t}\r\n\t        },\r\n            disabled: function(){\r\n            \tthis._file.disabled();\r\n            },\r\n            enabled: function(){\r\n            \tthis._file.enabled();\r\n            },\r\n            readonly: function(){\r\n                this._file.readonly();\r\n            },\r\n            readwrite: function(){\r\n                this._file.readwrite();\r\n            },\r\n\t        get: function(type){\r\n\t        \tvar self = this, param = this._opt, _files = this.files;\r\n                var name = param.key, jsonReader = ui.deepCopy(param.jsonReader);\r\n\t\t\t\tdelete jsonReader[\"root\"];\r\n\t        \tvar _len = _files.length, _i, _file = null, files = [];\r\n\t        \tif(!name){\r\n                    type = \"json\";\r\n                }\r\n                type = type || \"\";\r\n\t        \t// type = type || \"json\";\r\n\t        \tfor(_i = 0; _i < _len; _i++){\r\n\t        \t\t_file = _files[_i];\r\n\t        \t\t// console.info(_file);\r\n\t        \t\t\r\n                    // var file = {};\r\n                    // file.id = _file.id;\r\n                    // file.sourceFileName = _file.name;\r\n                    // file.path = _file.path;\r\n                    // file.name = _file._name;\r\n                    // // file.src = _file.src;\r\n                    // files.push(file);\r\n\r\n\t        \t\tif(type == \"\"){\r\n                        files.push(_file);\r\n                    }else if(type == \"json\"){\r\n                        var file = {};\r\n                        file.id = _file.id;\r\n                        for(var key in jsonReader){\r\n                            file[jsonReader[key]] = _file[jsonReader[key]];\r\n                        }\r\n                        files.push(file);\r\n                    }else if(type == \"value\"){\r\n                        if(_file[name]){\r\n                            files.push(_file[name]);\r\n                        }\r\n                        files = files.join(\",\");\r\n                    }\r\n\t        \t}\r\n\r\n\t        \t// console.info(files);\r\n\t        \treturn files;\r\n\t        },\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t\r\n\t        \tif(!!newOptions){\r\n\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t        \t\t\tthis._file.option(newOptions);\t// 重置配置\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t}else{\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n\t        empty: function(){\r\n\t        \tif(this.listeners.indexOf('empty') > -1) {\r\n\t                if(!this.emit({type:'empty',target: this.dom})) return ;\r\n\t            }\r\n\t            // var self = this, _len, _files = this.files, _file = null, index = -1;\r\n\t            // for(var i = 0, _len = _files.length; i < _len; i++){\r\n\t            // \t_file = _files[i];\r\n\t            // \tself.previewsContainer.removeChild(_file.previewElement);\t// 移除预览图\r\n\t            // }\r\n\t            this._file.empty();\r\n\t        \t\r\n\t        \tthis.files = [];\r\n\t            return this;\r\n\t        },\r\n\t        destroy: function(){\r\n\t            this._file.destroy();\r\n                this.$element.removeAttr(\"ui-type\");\r\n\t            this.$element.removeData(_pluginDataName);\r\n\t            this.$element.prop(\"outerHTML\", this.initDom);\r\n\r\n\t            return this;\r\n\t        },\r\n\t\t\ton: function(type, handler){\r\n\t\t\t\tif(_widgetEventType.indexOf(type) > -1){\t// WUI组件事件监听\r\n\t            \tif(typeof this.handlers[type] === 'undefined') {\r\n\t\t                this.handlers[type] = [];\r\n\t\t                this.listeners.push(type);\r\n\t\t            }\r\n\t\t            this.handlers[type].push(handler);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        off: function(type, handler){\r\n\t        \tvar _i, _j, _listeners, _handlers, _len;\r\n\t        \tif(_widgetEventType.indexOf(type) > -1){\t// 取消WUI组件事件监听\r\n\t        \t\tif(this.handlers[type] instanceof Array) {\r\n\t        \t\t\t_handlers = this.handlers[type];\r\n\t        \t\t\t_listeners = this.listeners;\r\n\r\n\t        \t\t\tfor(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n\t\t                    if(_listeners[_i] === type) {\r\n\t\t                        break;\r\n\t\t                    }\r\n\t\t                }\r\n\r\n\t\t                if(handler === undefined){\r\n\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t                \tdelete this.handlers[type];\r\n\t\t                }else{\r\n\t\t                \tfor(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n\t\t\t                    if(_handlers[_j] === handler) {\r\n\t\t\t                        break;\r\n\t\t\t                    }\r\n\t\t\t                }\r\n\t\t\t                if(_j < _len){\r\n\t\t\t                \tthis.handlers[type].splice(_j, 1);\r\n\t\t\t                \tif(this.handlers[type].length == 0){\r\n\t\t\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t\t\t                }\r\n\t\t\t                }\r\n\t\t                }\r\n\t\t            }\r\n\t        \t}\r\n\t\t        return this;\r\n\t        },\r\n\t        emit: function(event){\r\n\t            if(!event.target) {\r\n\t            \tif(!this.$Maxcontainer){\r\n\t            \t\tevent.target = this;\r\n\t            \t}else{\r\n\t            \t\tevent.target = this.$Maxcontainer;\r\n\t            \t}\r\n\t            }\r\n\t            if(this.handlers[event.type] instanceof Array) {\r\n\t                var handlers = this.handlers[event.type];\r\n\t                for(var i = 0, len = handlers.length; i < len; i++) {\r\n\t                    handlers[i](event);\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        },\r\n            component: function(){\r\n                return this;\r\n            }\r\n\t\t}\r\n\r\n\t\t//fn就是prototype\r\n\t\t$.fn[_pluginName] = function(param1){\r\n\t\t\t// each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t// console.info(this);\r\n\t\t\t\tvar selectorAll = document.querySelectorAll(\"#\" + element);\r\n\t\t\t\t// console.info(selectorAll[0]);\r\n\t\t\t\t// console.info(selectorAll[0] == this);\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(selectorAll[0], _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(selectorAll[0], _pluginDataName, new uiImage(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"wui.img 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('wui.img 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 增加组件事件监听\r\n         * @event on\r\n\t\t * @param eventType {string} 可监听事件类型如下：<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> eventType </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"addedfile\"</td>\r\n\t\t\t\t\t\t<td>单个文件被添加到队列时触发</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n\t\t * @param func {function} 事件类型触发之后的执行方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n            \r\n            // 单个文件上传完成时触发\r\n            uiImg.on(\"complete\", function(e){\r\n                console.log(\"complete\");\r\n            });\r\n                \r\n\t\t */\r\n\t\tfunction _on(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"on\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 取消组件事件监听\r\n         * @event off\r\n\t\t * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n\t\t * @param func {function} 选填,事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiImg.off(\"itemSelectError\");\r\n                \r\n\t\t */\r\n\t\tfunction _off(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"off\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n\t\t* @param type {string} 获取上传成功文件的信息类型，可选:不填则返回整个文件信息/json(根据\"jsonReader\"参数过滤得到的文件信息)\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取上传成功的全部文件信息\r\n            var imgs = uiImg.get();   // []\r\n                \r\n        */\r\n\t\tfunction _get(type){\r\n\t\t\treturn _executeMethod(\"get\", type);\r\n\t\t}\r\n\r\n        /**\r\n        * 添加自定义的文件预览框\r\n        * @method addImagesPreview\r\n\t\t* @since 0.0.1\r\n\t\t* @param files {Object} 要添加的预览文件数据,单个数据是json，多个数据是Array,必须包含属性如下<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 属性名 </td>\r\n\t\t\t\t\t\t<td> 类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> name </td>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 文件名(包含文件后缀) </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> src </td>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 图片显示路径 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> size </td>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 图片尺寸 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> ... </td>\r\n\t\t\t\t\t\t<td> ... </td>\r\n\t\t\t\t\t\t<td> 其他自定义参数 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @example \r\n\r\n            uiImg.addImagesPreview();\r\n                \r\n        */\r\n\t\tfunction _addImagesPreview(images){\r\n\t\t\treturn _executeMethod(\"addImagesPreview\", images);\r\n\t\t}\r\n\r\n        /**\r\n        * 改变文件可编辑状态\r\n        * @method setEdit\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 改变文件可编辑状态\r\n            uiImg.setEdit();\r\n                \r\n        */\r\n\t\tfunction _setEdit(isEnable){\r\n\t\t\treturn _executeMethod(\"setEdit\", isEnable);\r\n\t\t}\r\n\r\n        /**\r\n        * 阻止点击弹出文件选择框\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 阻止点击弹出文件选择框\r\n            uiImg.disabled();\r\n                \r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出文件选择框\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 允许点击弹出文件选择框\r\n            uiImg.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件只读\r\n            uiImg.readonly();\r\n                \r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件可读可写\r\n            uiImg.readwrite();\r\n                \r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数(只允许修改少数参数)\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置，可修改配置参数: \"url\"/\"otherParam\"/\"acceptedFiles\"/\"maxNumber\" </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiImg.option();\t// 返回组件配置对象\r\n                \r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空组件值\r\n            uiImg.empty();\r\n                \r\n        */\r\n        function _empty(){\r\n            return _executeMethod(\"empty\");\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiImg.destroy();\r\n                \r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiImg.component();\r\n            console.info(component);\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过，则返回该组件对象，否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example\r\n\r\n            // 初始化组件\r\n            uiImg.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t$('#' + element)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        }\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\t\treturn {\r\n\t\t\tinit: _init,\t// 初始化组件\r\n\t\t\ton: _on,\r\n\t\t\toff: _off,\r\n\t\t\taddImagesPreview: _addImagesPreview,\t// 添加自定义的图片\r\n\t\t\tsetEdit: _setEdit,\t// 设置图片可编辑状态\r\n\t\t\tget: _get,\t\t// 获取全部图片上传信息\r\n            enabled: _enabled,      // 允许点击弹出文件选择框\r\n            disabled: _disabled,    // 阻止点击弹出文件选择框\r\n            readwrite: _readwrite,\r\n            readonly: _readonly,\r\n\t\t\toption: _option,// 设置或获取组件配置\r\n\t\t\tempty: _empty,\t// 清空全部图片信息\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n\t\t\tdestroy: _destroy\t// 销毁组件\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","// wui.tagBox\r\n// 输入建议选择\r\n// Date : 2018-02-01\r\n// by chenzx\r\n// 思路：\r\n// 封装插件，将插件初始化赋给wui\r\n\r\n;(function (ui,$, undefined) {\r\n    \r\n    /**\r\n     * <h3>输入建议选择组件</h3>\r\n     * <ol>\r\n     * <li>支持加载后台服务作为建议选择的数据源; </li>\r\n     * <li>支持输入框内容即时查找; </li>\r\n     * <li>支持多选个数限制; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiTagBox\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.tagBox/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/set\"}}{{/crossLink}}: 设置节点值 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/add\"}}{{/crossLink}}: 添加节点值 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/remove\"}}{{/crossLink}}: 移除节点值 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/enabled\"}}{{/crossLink}}: 允许点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/disabled\"}}{{/crossLink}}: 阻止点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagBox/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class tagBox\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string} option.loadUrl 后台服务地址 \r\n     *  @param {string} [option.value] 初始化完成时，选中值的value属性值,默认是\"\"\r\n     *  @param {string} option.name 选中值保存的name字段,默认值是\"id\"\r\n     *  @param {string} option.text 选中值保存的text字段,默认值是\"name\"\r\n     *  @param {string} [option.direction] 下拉数据框展开方向,\"dropup\":向上，\"dropdown\":向下,\"auto\":自动检测; 默认是\"dropdown\"\r\n     *  @param {number} [option.maxNumber] 最多可选个数，默认为false，即不限制\r\n     *  @param {string} [option.width]   组件宽度，默认是\"100%\"  \r\n     *  @param {boolean} [option.maxChars] 每个标签字符限制个数,0代表不限制，默认是0\r\n     *  @param {string} [option.ellipsis] 省略符号，当标签个数达到最大字符数时替换多余字符的字符串,默认是\"...\"\r\n     *  @param {string} [option.tagClass] 标签块样式类,默认是\"label wui-bg-primary\"\r\n     *  @param {JSON} [option.jsonReader] 默认从服务器端返回数据参数名称设置集合,如下参数设置之后,服务器返回数据格式为< br />\r\n     *  [ \r\n            { \"name\":\"工作求助\",   \"id\":\"workHelp\" },\r\n            { \"name\":\"部门活动\",   \"id\":\"departActivity\" },\r\n            ...\r\n        ]\r\n     *  @param {String} [option.jsonReader.root] 服务器返回的实际加载数据字段名,例如返回数据{\"BusinessObject\":[],则此值设置为\"BusinessObject\",若为null,则返回数据作为实际加载数据,内容以数组格式返回,默认是null ]\r\n     *  @param {Function} [option.onBeforeItemAdd] 添加单个节点之前触发方法,传递参数element:当前组件容器对象, item:添加的节点数据\r\n     *  @param {Function} [option.onItemAddError]  单个节点添加出错触发方法,传递参数element:当前组件容器对象, item:添加的节点数据, code: 错误代码, message: 错误信息\r\n     *  @param {Function} [option.onItemAdded] 单个节点添加成功触发方法,传递参数element:当前组件容器对象, item:添加的节点数据\r\n     *  @param {Function} [option.onBeforeItemRemove] 移除单个节点之前触发方法,传递参数element:当前组件容器对象, item:添加的节点数据\r\n     *  @param {Function} [option.onItemRemoveError] 单个节点移除出错触发方法,传递参数element:当前组件容器对象, item:添加的节点数据, code: 错误代码, message: 错误信息\r\n     *  @param {Function} [option.onItemRemoved] 单个节点移除成功触发方法,传递参数element:当前组件容器对象, item:添加的节点数据\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Tag Box: &lt;input type=\"text\" id=\"tagBoxId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiTagBox = wui.tagBox( \"tagBoxId\",{\r\n                // 组件下拉数据源,假如初始化标签是select,会追加到select的选项下\r\n                loadUrl :\"json/selectBoxJson.json\"\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n    ui.tagBox = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiTagBox\",\r\n            _pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"tagBox\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n        if(!$(\"#\" + element).exist()){\r\n            ui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n            return false;\r\n        }\r\n        \r\n            // \"beforeItemAdd\" : 添加单个节点之前触发\r\n            // \"itemAddError\" : 单个节点添加出错触发\r\n            // \"itemAdded\" : 单个节点添加成功触发\r\n            // \"beforeItemRemove\" : 移除单个节点之前触发\r\n            // \"itemRemoveError\" : 单个节点移除出错触发\r\n            // \"itemRemoved\" : 单个节点移除成功触发\r\n        var _widgetEventType = [\"beforeItemAdd\", \"itemAddError\", \"itemAdded\", \"beforeItemRemove\", \"itemRemoveError\", \"itemRemoved\"];    // wui组件监听事件类型\r\n\r\n        //默认配置项\r\n        var config = {\r\n            // {string} 后台服务地址\r\n            loadUrl: \"\"\r\n            // {Array}    选项的JSON数据，注意格式[{ \"fieldValue\":\"value1\",\"fieldText\":\"text1\" },{ \"fieldValue\":\"value2\",\"fieldText\":\"text2\" },...]\r\n            // , loadData: null     \r\n            // // {string}  初始化完成时，默认选中值的value属性值\r\n            , value: []             \r\n            // {string} 下拉数据框展开方向,dropup:向上，不填则默认向下\r\n            , direction: \"dropdown\" \r\n            // {number/false}  最多可以选择的数目，默认是0，即无限制\r\n            , maxNumber : false         \r\n            // {string}  选中值保存的text字段\r\n            , text: \"name\"          \r\n            // {string}  选中值保存的value字段         \r\n            , name: \"id\"               \r\n            // {String} 组件宽度,默认\"100%\"\r\n            , width: \"\"     \r\n            // {Boolean} 是否点击空白显示全部建议数据\r\n            , isShowDropdown: false\r\n\r\n            // {string} 标签块样式类\r\n            , tagClass: 'label wui-bg-primary' \r\n            // {number} 每个标签字符限制个数,0代表不限制\r\n            , maxChars: 0           \r\n            // {string} 省略符号，当标签个数达到最大字符数时替换多余字符的字符串\r\n            , ellipsis: \"...\"       \r\n            // {Boolean} 是否启用输入框\r\n            , isEnableInput: true   \r\n            // {Boolean} 是否允许自定义输入,若为false,只能从下拉中选择,默认是true\r\n            , isFreeInput: true     \r\n            // 后台服务返回参数\r\n            , jsonReader: {\r\n                // {String} 服务器返回的实际加载数据字段名,若为null,则返回数据作为实际加载数据\r\n                root: null    \r\n            }\r\n            // {JSON} 默认传递到服务器端参数名设置集合,当参数为null时不会被发到服务器端\r\n            , prmNames: {\r\n                // {String} 搜索字段名设置\r\n                searchField: \"searchKey\"\r\n            }\r\n            // {Function} 添加单个节点之前触发,传递参数element:当前组件容器对象, item:添加的节点数据\r\n            , onBeforeItemAdd: ui.CONSTANTS.EMPTYFUNC\r\n            // {Function} 单个节点添加出错触发,传递参数element:当前组件容器对象, item:添加的节点数据, code: 错误代码, message: 错误信息\r\n            , onItemAddError: ui.CONSTANTS.EMPTYFUNC\r\n            // {Function} 单个节点添加成功触发,传递参数element:当前组件容器对象, item:添加的节点数据\r\n            , onItemAdded: ui.CONSTANTS.EMPTYFUNC\r\n            // {Function} 移除单个节点之前触发,传递参数element:当前组件容器对象, item:添加的节点数据\r\n            , onBeforeItemRemove: ui.CONSTANTS.EMPTYFUNC\r\n            // {Function} 单个节点移除出错触发,传递参数element:当前组件容器对象, item:添加的节点数据, code: 错误代码, message: 错误信息\r\n            , onItemRemoveError: ui.CONSTANTS.EMPTYFUNC\r\n            // {Function} 单个节点移除成功触发,传递参数element:当前组件容器对象, item:添加的节点数据\r\n            , onItemRemoved: ui.CONSTANTS.EMPTYFUNC\r\n        };\r\n\r\n        // 不改动的参数配置\r\n        var defaults = {\r\n            // 是否可以自由输入\r\n            // isFreeInput: true  \r\n            // {boolean} 是否动态加载数据(当下拉建议数据从后台返回时，是一次性加载到页面，还是每次输入内容都请求后台服务)\r\n            dynamicLoading: true  \r\n            // 下拉最大高度\r\n            , dropdownMaxHeight: 400    \r\n            // 下拉最小高度\r\n            , dropdownMinHeight: -1    \r\n\r\n            // 提示语汉化\r\n            , noneResultsText : \"匹配不到'{0}'\"\r\n            , maxOptionsText : ['超出限制 (最多选择{n}项)', '组选择超出限制(最多选择{n}组)']\r\n            // 输入框提示文本\r\n            , placeholderText : ui.language.tagBox.placeholder\r\n            // {string} 没有选中节点时显示内容\r\n            , noneItemText : ui.language.tagBox.noneItem\r\n        }\r\n\r\n        function uiTagBox(element, options){\r\n            //调用初始函数\r\n            this.init();    \r\n        }\r\n\r\n        uiTagBox.prototype = {\r\n            constructor: uiTagBox,\r\n\r\n            init: function(){\r\n                // 初始化对象静态属性\r\n                this.pluginName = _widgetName;      // 缓存插件名字\r\n                this.element = element;             // 保存初始化标签id\r\n                this.$element = $(\"#\" + element);   // 保存初始化标签jQuery\r\n                this.defaults = defaults;           // 保存静态默认配置项\r\n                this._option = options;     // 缓存传递进来的配置\r\n\r\n                // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n                this.initDom = this.$element.prop(\"outerHTML\");\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n                this._data = [];\r\n                this.itemsArray = [];   // 存放选中节点JSON数据\r\n                this.itemsName = [];    // 存放选中节点的name参数字段值集合\r\n                this.itemsText = [];    // 存放选中节点的text参数字段值集合\r\n\r\n                // 初始化对象页面结构模板\r\n                this.placeholderText = this.$element.attr('placeholder') ? this.$element.attr('placeholder') : this.defaults.placeholderText;\r\n                this.optionTmp = '<li data-original-index=\"\"><a tabindex=\"\"><span class=\"text\"></span></a></li>'; // 节点模板\r\n                this.tagTmp = '<span class=\"tag\"><em></em><span data-role=\"remove\"></span></span>';\r\n                this.tipTmp = '<span class=\"no-item\">' + this.defaults.noneItemText + '</span>';    // 没有标签选中的提示内容\r\n                \r\n                // 初始化对象页面结构\r\n                this.$Maxcontainer = null; // 组件最外层容器(.wui-tagsbox): $element + $viewBox\r\n                this.$viewBox = null;   // 组件可视框([wui-combobox=\"dropdowm\"]):$buttonBox + $dropdownBox\r\n                this.$buttonBox = null; // 组件点击展开区域(.tag-container):$input\r\n                this.$input = null;     // 组件标签输入区域('[wui-widget-hidden=\"true\"]')\r\n                this.$dropdownBox = null;   // 组件下拉框容器(.dropdown-menu.open):$selectContentBox\r\n                this.$selectContentBox = null;    // 组件下拉视图选择内容框(ul[wui-data=\"menu\"].dropdown-menu):$option\r\n                // this.errorElement = null;    // 保存校验出错节点\r\n                this.$tip = null;\r\n                this.activeItem = null; // 当前活动节点\r\n                \r\n                \r\n                // this.$Maxcontainer = null; // 最外层大容器,包含.wui-tagsbox\r\n                // this.$viewBox = $('<div ui-combobox=\"dropdowm\" class=\"btn-group show-tick input-layout wui-select-box\" style=\"width: 100%;\"></div>');\r\n\r\n                // this.$buttonBox = $('<div class=\"tag-container wui-input\" data-toggle=\"dropdown\"></div>').appendTo(this.$viewBox);   // 标签块对象\r\n                // this.$input = $('<input type=\"text\" wui-widget-hidden=\"true\" placeholder=\"' + this.placeholderText + '\">').appendTo(this.$buttonBox);\r\n                // this.$tip = null;\r\n                // this.activeItem = null; // 当前活动节点\r\n\r\n                // this.$dropdownBox = $('<div class=\"dropdown-menu open\"></div>').appendTo(this.$viewBox);    // 下拉对象\r\n                // this.$selectContentBox = $('<ul wui-data=\"menu\" class=\"dropdown-menu inner\" role=\"menu\" style=\"overflow-y: auto;\"></ul>').appendTo(this.$dropdownBox);\r\n                \r\n                // 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n                this.handlers = {}; // 初始化对象监听事件容器\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n                // 构建组件页面容器结构\r\n                this.dom = this._buildContainer();  // 创建DOM节点,并返回$Maxcontainer的HTML字符串\r\n                // this.dom = this._initDom();  // 创建DOM节点,并返回DOM节点的HTML字符串\r\n            },\r\n            _buildContainer: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!($selector.attr('name'))){\r\n                    $selector.attr('name', self.element);\r\n                }\r\n                this.name = $selector.attr('name'); //  保存name属性值\r\n\r\n                if(!($selector.parent().hasClass('wui-tagsbox'))){\r\n                    var parentDiv = '<div class=\"wui-tagsbox\"></div>';\r\n                    $selector.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n                this.$Maxcontainer = $selector.parent(); // 组件最外层容器(.wui-tagsbox): $element + $viewBox\r\n                this.$viewBox = $('<div wui-combobox=\"dropdowm\" class=\"btn-group wui-select-box show-tick input-layout\" style=\"width: 100%;\"></div>');   // 组件可视框([wui-combobox=\"dropdowm\"]):$buttonBox + $dropdownBox\r\n                this.$buttonBox = $('<div class=\"tag-container wui-input\" data-toggle=\"dropdown\"></div>').appendTo(this.$viewBox); // 组件点击展开区域(.tag-container):$input\r\n                this.$input = $('<input type=\"text\" wui-widget-hidden=\"true\" placeholder=\"' + this.placeholderText + '\">').appendTo(this.$buttonBox);\r\n                // this.$caret = $('<span class=\"ws-caret\"> <span class=\"caret\"></span> <span class=\"sr-only\">Toggle Dropdown</span> </span>').appendTo(this.$buttonBox);\r\n                this.$dropdownBox = $('<div class=\"dropdown-menu open\"></div>').appendTo(this.$viewBox);   // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $selectContentBox + closeBox\r\n                this.$selectContentBox = $('<ul wui-data=\"menu\" class=\"dropdown-menu focus inner\" role=\"menu\" style=\"overflow-y: auto;\"></ul>');    // 组件下拉视图选择内容框\r\n\r\n                $selector.after(this.$viewBox);\r\n                $selector.hide();\r\n\r\n                this._setDirection();\r\n                this._initDropDownBox();\r\n                this._bindEvent();\r\n\r\n                if(param.width){\r\n                    this.$Maxcontainer.width(param.width);\r\n                }\r\n\r\n                // $selector.trigger('change');\r\n                var _value = $selector.val();\r\n                if(_value != \"\"){\r\n                    self.set(_value);\r\n                }\r\n                var value = param.value;\r\n                self.add(value);\r\n\r\n                this.hasDom = true;\r\n                return this.$Maxcontainer.prop(\"outerHTML\");\r\n            },\r\n            // 初始化下拉容器\r\n            _initDropDownBox: function(){\r\n                var self = this, param = this._opt;\r\n\r\n                // 添加下拉选项容器\r\n                if(this.$dropdownBox.children('[wui-data=\"menu\"]').length == 0){\r\n                    this.$dropdownBox.append(this.$selectContentBox);\r\n                }\r\n\r\n                // self._loadData();\r\n\r\n                return self.$viewBox;\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n                this._opt.maxNumber = ui.formatMaxNumber(param.maxNumber);\r\n\r\n                var value = param.value;\r\n                if(ui.parseToObj(value)){\r\n                    this._opt.value = ui.parseToObj(value);\r\n                }\r\n            },\r\n            // 绑定事件\r\n            _bindEvent: function(){\r\n                var self = this, params = this._opt;\r\n                $(document).on('click', '[ui-combobox=\"dropdowm\"] .tag-container', function (e) {\r\n                    ui.stopPropagation(e);\r\n                });\r\n\r\n                self.inputAddEvent();\r\n\r\n                if(params.isEnableInput){\r\n                    self.$input.focus(); // 使输入框聚焦\r\n                    self.$buttonBox.on(\"click\", function(){\r\n                        self.$input.focus(); // 使输入框聚焦\r\n                    })\r\n                }else{\r\n                    self.$input.addClass('noFreeInput');\r\n                    self.$tip = $(self.tipTmp).appendTo(self.$buttonBox);\r\n                }\r\n\r\n                this.$viewBox.on({\r\n                    'hide.bs.dropdown': function (e) {\r\n                        // console.info(\"hide.bs.dropdown\");\r\n                        // self.$buttonBox.attr('aria-expanded', false);\r\n                    },\r\n                    'hidden.bs.dropdown': function (e) {\r\n                        // console.info(\"hidden.bs.dropdown\");\r\n                        self.$selectContentBox.empty();  // 清空原有下拉数据\r\n                    },\r\n                    'show.bs.dropdown': function (e) {\r\n                        // console.info(\"show.bs.dropdown\");\r\n                        // self.$buttonBox.attr('aria-expanded', true);\r\n                        // console.info(1)\r\n                        // return false;\r\n                    },\r\n                    'shown.bs.dropdown': function (e) {\r\n                        // console.info(\"shown.bs.dropdown\");\r\n                        var searchKey = self.$input.val();\r\n                        if(searchKey != \"\" || params.isShowDropdown){\r\n                            self.render(searchKey); // 渲染下拉列表\r\n                        }else{\r\n                            $(this).dropdown('toggle');\r\n                        }\r\n                        // self._setHeight();  // 计算高度\r\n                    }\r\n                });\r\n                // $(\".tag-container\").dropdown(\"toggle\");\r\n                // this.$viewBox.trigger('shown.bs.dropdown');\r\n                self.$element.attr(\"ui-type\", self.pluginName);\r\n                // self.$element.on(\"change\", function(e){\r\n                //     var _value = $(this).val();\r\n                //     if(_value != \"\"){\r\n                //         self.set(_value);\r\n                //     }\r\n                // })\r\n\r\n                // this.hasDom = true;\r\n            },\r\n            // 设置下拉视图展开方向\r\n            _setDirection: function(){\r\n                var params = this._opt;\r\n                if(params.direction == \"auto\"){\r\n                    this._checkDropdownPosition();\r\n                }else if(params.direction != \"\"){\r\n                    this.$viewBox.addClass(params.direction);\r\n                }\r\n            },\r\n            _checkDropdownPosition: function(){\r\n                var self = this;\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = self.$Maxcontainer.offset();\r\n                // console.info(viewSize);\r\n                // console.info(offsetSize);\r\n                if((viewSize.height / 2) > offsetSize.top){\r\n                    self.$viewBox.removeClass(\"dropup\");\r\n                    self.$viewBox.addClass(\"dropdown\");\r\n                }else{\r\n                    self.$viewBox.addClass(\"dropup\");\r\n                    self.$viewBox.removeClass(\"dropdown\");\r\n                }\r\n            },\r\n            _setHeight: function(){\r\n                var self = this, _len = this._data.length;\r\n                var viewSize = null,\r\n                    offsetSize = null,\r\n                    wScrollTop = $(window).scrollTop();\r\n\r\n                // self.$optionBox.height(self.defaults.dropdownMaxHeight);\r\n                // console.error(_len);\r\n                // 有元素\r\n                if(_len > 0){\r\n                    var theHeight = 0;\r\n                    self.$optionBox.children(\"li:not(.hide)\").each(function(i, elem){\r\n                        // console.info(\"高度\" + $(elem).outerHeight(true));\r\n                        theHeight += $(elem).outerHeight(true);\r\n                    })\r\n                    \r\n                    viewSize = ui.getViewSize();\r\n                    var maxHeight = 0;\r\n                    if(self._opt.maxHeight == 0 || self._opt.maxHeight == \"0\"){\r\n                        if(self.$container.hasClass(\"dropup\")){\r\n                            offsetSize = self.$button.offset();\r\n                            // console.info(offsetSize);\r\n                            var otherHeight = 0;\r\n                            this.$dropdownBox.children().not('[wui-data=\"menu\"]').each(function(i, elem){\r\n                                otherHeight += elem.offsetHeight;\r\n                            });\r\n                            // console.info(otherHeight);\r\n                            // maxHeight = offsetSize.top - otherHeight - 10;\r\n                            maxHeight = offsetSize.top - wScrollTop - otherHeight - 10;\r\n                        }else{\r\n                            offsetSize = self.$optionBox.offset();\r\n                            // maxHeight = viewSize.height - offsetSize.top - 10;\r\n                            maxHeight = viewSize.height - (offsetSize.top - wScrollTop) - 10;\r\n                        }\r\n                    }else{\r\n                        maxHeight = parseInt(self._opt.maxHeight);\r\n                    }\r\n                          \r\n                        \r\n                    // console.info(\"最大高度:\" + maxHeight);\r\n                    var dropdownHeight = theHeight > maxHeight ? maxHeight: theHeight;\r\n                    self.$optionBox.height(dropdownHeight);\r\n                }else{\r\n                    self.$optionBox.height(0);\r\n                }\r\n                // console.error(self.$optionBox.height());\r\n\r\n                // self.$optionBox.height(self.defaults.dropdowmMaxHeight);\r\n            },\r\n            // toggle: function (e) {\r\n            //   e = e || window.event;\r\n\r\n            //   if (e) e.stopPropagation();\r\n\r\n            //   this.$viewBox.trigger('click');\r\n            // },\r\n            //获取文本宽度\r\n            _textWidth: function(text){ \r\n                var sensor = $('<pre>'+ text +'</pre>').css({display: 'none'}); \r\n                $('body').append(sensor); \r\n                var width = sensor.outerWidth();\r\n                sensor.remove(); \r\n                return width;\r\n            },\r\n            // 检测标签文本是否超过外层容器宽度，若是超过，则采用缩略符替换\r\n            _checkTextIsOverConWidth: function(theTag){\r\n                var self = this, conWidth = self.$container.width(), theInput = self.$input, tagsWidth = 0;\r\n\r\n                var btnRemoveWidth = theTag.children('[data-role=remove]').outerWidth(true);\r\n                // console.info(\"conWidth:\" + conWidth);\r\n                // console.info(btnRemoveWidth);\r\n                var tagMaxWidth = conWidth - (btnRemoveWidth * 2);\r\n                theTag.children('em').css(\"max-width\", tagMaxWidth + \"px\");\r\n            },\r\n            inputAddEvent: function(){\r\n                var self = this, params = this._opt;\r\n                self.$input.on(\"click\", function(event){\r\n                    ui.stopPropagation(event);  // 阻止事件冒泡\r\n                    if($(this).prev(\"span\") && $(this).prev(\"span\").hasClass('selected')){\r\n                        $(this).prev(\"span\").removeClass('selected');\r\n                    }\r\n                    var searchKey = $(this).val();\r\n                    if(searchKey != \"\" || params.isShowDropdown){\r\n                        self.render(searchKey); // 渲染下拉列表\r\n                    }\r\n                }).on(\"input propertychange\", function(event){\r\n                    ui.stopPropagation(event);  // 阻止事件冒泡\r\n                    var searchKey = $(this).val();\r\n                    if(searchKey != \"\"){\r\n                        if($(this).prev(\"span\") && $(this).prev(\"span\").hasClass('selected')){\r\n                            $(this).prev(\"span\").removeClass('selected');\r\n                        }\r\n                        self.render(searchKey); // 渲染下拉列表\r\n                    }else{\r\n                        self.blur();\r\n                    }\r\n                }).keydown(function(event){\r\n                    //input宽度自适应\r\n                    // $(this).width(self._textWidth($(this).val()));\r\n                }).keypress(function(event){\r\n                    var keynum = window.event ? event.keyCode : event.which;\r\n                    if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                        ui.stopPropagation(event);  // 阻止事件冒泡\r\n                        ui.preventDefault(event);\r\n                    }\r\n                }).keyup(function(event){\r\n                    // ui.stopPropagation(event);  // 阻止事件冒泡\r\n                    // ui.preventDefault(event);\r\n                    var keynum = window.event ? event.keyCode : event.which;\r\n\r\n                    if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){  \r\n                        // ui.logMessage(\"您按了enter键\", \"wui.tagBox\", true);\r\n                        var searchKey = $(this).val();\r\n                        if(searchKey != \"\"){\r\n                            if(self.activeItem){\r\n                                var index = self.activeItem.attr(\"data-original-index\");\r\n                                var item = self._data[index];\r\n                                self.addItem(item);\r\n                            }else{\r\n                                if(params.isFreeInput){\r\n                                    self.addItem(searchKey);\r\n                                }else{\r\n                                    var item = self._data[0];\r\n                                    if(!ui.isUndefined(item)){\r\n                                        self.addItem(item);\r\n                                    }\r\n                                }\r\n                            }\r\n                            \r\n                            self.blur();\r\n                            $(this).val(''); // 输入值清空\r\n                        }\r\n                        // return false;\r\n                    }else if(keynum == ui.CONSTANTS.KEYS.DOWN){\r\n                        self.KeyDown();\r\n                    }else if(keynum == ui.CONSTANTS.KEYS.UP){\r\n                        self.KeyUp();\r\n                    }else if(keynum == ui.CONSTANTS.KEYS.END){\r\n                        self.KeyEnd();\r\n                    }else if(keynum == ui.CONSTANTS.KEYS.DELETE || keynum == ui.CONSTANTS.KEYS.BACKSPACE || keynum == ui.CONSTANTS.KEYS.CLEAR){\r\n                        var searchKey = $(this).val();\r\n                        if(searchKey == \"\"){\r\n                            if($(this).prev() && $(this).prev().length){\r\n                                if($(this).prev().hasClass('selected')){\r\n                                    $(this).prev().children('[data-role=\"remove\"]').trigger('click');\r\n                                }else{\r\n                                    $(this).prev().addClass('selected');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            set: function(data, isTellMeWhyAreYouSoLong){\r\n                this.empty();\r\n                this.add(data, isTellMeWhyAreYouSoLong);\r\n            },\r\n            add: function(data){\r\n                if(data != undefined){\r\n                    if(typeof data === \"string\"){\r\n                        if(data != \"\"){\r\n                            var arr = data.split(\",\");\r\n                            for(var i = 0; i < arr.length; i++)\r\n                                this.addItem(arr[i]);\r\n                        }else{\r\n                            // ui.logMessage(\"添加的节点不能为空字符串\", \"wui.tagBox\", true);\r\n                            if(this.listeners.indexOf('itemAddError') > -1) {\r\n                                if(!this.emit({type:'itemAddError',target: this.$Maxcontainer, item: data, code: 6, message: \"添加的节点不能为空字符串\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(ui.isArray(data)){\r\n                        if(data.length > 0){\r\n                            for(var i = 0; i < data.length; i++)\r\n                                this.addItem(data[i]);\r\n                        }else{\r\n                            // ui.logMessage(\"添加的节点不能为空数组\", \"wui.tagBox\", true);\r\n                            if(this.listeners.indexOf('itemAddError') > -1) {\r\n                                if(!this.emit({type:'itemAddError',target: this.$Maxcontainer, item: data, code: 6, message: \"添加的节点不能为空数组\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(typeof data === \"object\" && data != null){\r\n                        if(data != null){\r\n                            this.addItem(data);\r\n                        }else{\r\n                            // ui.logMessage(\"添加的节点不能为空对象\", \"wui.tagBox\", true);\r\n                            if(this.listeners.indexOf('itemAddError') > -1) {\r\n                                if(!this.emit({type:'itemAddError',target: this.$Maxcontainer, item: data, code: 6, message: \"添加的节点不能为空对象\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                    }else{\r\n                        // ui.logMessage(\"传入的参数值不支持赋值\", \"wui.tagBox\", true);\r\n                        if(this.listeners.indexOf('itemAddError') > -1) {\r\n                            if(!this.emit({type:'itemAddError',target: this.$Maxcontainer, item: data, code: 6, message: \"传入的参数值不支持赋值\"})) return ;\r\n                        }\r\n                        return false;\r\n                    }\r\n\r\n                    return this;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            remove: function(data){\r\n                if(data != undefined){\r\n                    if(typeof data === \"string\"){\r\n                        if(data != \"\"){\r\n                            var arr = data.split(\",\");\r\n                            for(var i = 0; i < arr.length; i++)\r\n                                this.removeItem(arr[i]);\r\n                        }else{\r\n                            // ui.logMessage(\"移除的节点不能为空字符串\", \"wui.tagBox\", true);\r\n                            if(this.listeners.indexOf('itemRemoveError') > -1) {\r\n                                if(!this.emit({type:'itemRemoveError',target: this.$Maxcontainer, item: data, code: 6, message: \"移除的节点不能为空字符串\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(ui.isArray(data)){\r\n                        if(data.length > 0){\r\n                            for(var i = 0; i < data.length; i++)\r\n                                this.removeItem(data[i]);\r\n                        }else{\r\n                            // ui.logMessage(\"移除的节点不能为空数组\", \"wui.tagBox\", true);\r\n                            if(this.listeners.indexOf('itemRemoveError') > -1) {\r\n                                if(!this.emit({type:'itemRemoveError',target: this.$Maxcontainer, item: data, code: 6, message: \"移除的节点不能为空数组\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(typeof data === \"object\" && data != null){\r\n                        if(data != null){\r\n                            this.removeItem(data);\r\n                        }else{\r\n                            // ui.logMessage(\"移除的节点不能为空对象\", \"wui.tagBox\", true);\r\n                            if(this.listeners.indexOf('itemRemoveError') > -1) {\r\n                                if(!this.emit({type:'itemRemoveError',target: this.$Maxcontainer, item: data, code: 6, message: \"移除的节点不能为空对象\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                    }else{\r\n                        // ui.logMessage(\"传入的参数类型不支持移除\", \"wui.tagBox\", true);\r\n                        if(this.listeners.indexOf('itemRemoveError') > -1) {\r\n                            if(!this.emit({type:'itemRemoveError',target: this.$Maxcontainer, item: data, code: 6, message: \"传入的参数类型不支持移除\"})) return ;\r\n                        }\r\n                        return false;\r\n                    }\r\n\r\n                    return this;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            // return number/this \r\n            // -1:标签个数超过；\r\n            // 0: 标签数据没传入；\r\n            // 1:name参数没设置,无法添加object数据；\r\n            // 2:标签重复；\r\n            // 3:标签数据中不存在name参数对应的属性值；\r\n            // 4:标签数据中不存在text参数对应的属性值;\r\n            // 5:添加数据类型不是object或者string\r\n            // this:添加成功\r\n            addItem: function(item){\r\n                // console.info(item);\r\n                var self = this, param = this._opt, $selector = this.$element, _name = param.name, _text = param.text;\r\n                var errorCode, errorMessage = \"\";\r\n                if(param.onBeforeItemAdd && typeof(param.onBeforeItemAdd) === \"function\"){\r\n                    if(!param.onBeforeItemAdd(self.$Maxcontainer, item)){return false;}\r\n                }\r\n                if(self.listeners.indexOf('beforeItemAdd') > -1) {\r\n                    if(!self.emit({type:'beforeItemAdd',target: self.$Maxcontainer, item: itemJson})) return ;\r\n                }\r\n\r\n                // -1:超过可选个数(当parseInt(maxNumber)不等于0且不等于NaN时，已有节点个数>=maxNumber)\r\n                if (param.maxNumber  !== false && (self.itemsArray.length >= param.maxNumber)){\r\n                    errorCode = -1;\r\n                    errorMessage = \"最多可添加\" + param.maxNumber + \"个标签\";\r\n                    if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                        if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemAddError') > -1) {\r\n                        if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // 0:添加的数据不能为空\r\n                if (!item){\r\n                    errorCode = 0;\r\n                    errorMessage = \"添加的数据不能为空\";\r\n                    if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                        if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemAddError') > -1) {\r\n                        if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // 格式化字符串\r\n                if (typeof item === \"string\" && param.trimValue) {\r\n                    item = $.trim(item);\r\n                }\r\n\r\n                // 1:name属性值没设置，无法添加object类型数据\r\n                if (!_name){\r\n                    errorCode = 1;\r\n                    errorMessage = \"name属性值没设置，无法添加object类型数据\";\r\n                    if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                        if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemAddError') > -1) {\r\n                        if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n                var itemName, itemText, itemJson = {};\r\n                if(ui.isJson(item)){\r\n                    itemJson = item;\r\n                }else if(typeof(item) === \"string\"){\r\n                    itemJson[_name] = item;\r\n                    itemJson[_text] = item;\r\n                }else{\r\n                    // 5:只能添加类型为object、string的数据\r\n                    errorCode = 5;\r\n                    errorMessage = \"只能添加类型为object、string的数据\";\r\n                    if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                        if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemAddError') > -1) {\r\n                        if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // 3:标签数据中不存在name参数对应的属性值\r\n                if(itemJson[_name] == undefined){\r\n                    errorCode = 3;\r\n                    errorMessage = \"添加的节点没有对应的 \" + _name + \" 字段值\";\r\n                    if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                        if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemAddError') > -1) {\r\n                        if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n                // 4:标签数据中不存在text参数对应的属性值\r\n                if(itemJson[_text] == undefined){\r\n                    errorCode = 4;\r\n                    errorMessage =\"添加的节点没有对应的 \" + _text + \" 字段值\";\r\n                    if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                        if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemAddError') > -1) {\r\n                        if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                itemName = itemJson[_name];\r\n                itemText = itemJson[_text];\r\n\r\n                // 重复数据判断\r\n                if(!param.isAllowDuplicates){\r\n                    if(self.itemsName.indexOf(itemName) > -1){\r\n                        var index = self.itemsName.indexOf(itemName);\r\n                        this.$buttonBox.children('span').eq(index).hide().fadeIn(); // 标签块已有时的显示动画\r\n                        // 2:标签重复\r\n                        errorCode = 2;\r\n                        errorMessage =\"数据重复\";\r\n                        if(param.onItemAddError && typeof(param.onItemAddError) === \"function\"){\r\n                            if(!param.onItemAddError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                        }\r\n                        if(self.listeners.indexOf('itemAddError') > -1) {\r\n                            if(!self.emit({type:'itemAddError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                self.itemsName.push(itemName);\r\n                self.itemsText.push(itemText);\r\n                self.itemsArray.push(itemJson);\r\n\r\n                var $item = $(self.tagTmp);\r\n                if(param.tagClass != \"\"){\r\n                    $item.addClass(param.tagClass);\r\n                }\r\n\r\n                var showText = itemText;\r\n                // itemName, itemText, itemJson\r\n                $item.attr(\"title\", itemText);\r\n                if(param.maxChars > 0 && param.maxChars < itemText.length){\r\n                    showText = showText.substr(0, param.maxChars) + param.ellipsis;\r\n                }\r\n                $item.children('em').text(showText);\r\n                self.$input.before($item);\r\n                if(self.$tip && !self.$tip.hasClass('hide')){\r\n                    self.$tip.addClass('hide');\r\n                }\r\n\r\n                $selector.val(this.itemsName.join(\",\"));\r\n\r\n                $item.on(\"click\", function(event){\r\n                    ui.stopPropagation(event);  // 阻止事件冒泡\r\n                })\r\n                $item.children('[data-role=\"remove\"]').on(\"click\", function(event){\r\n                    ui.stopPropagation(event);  // 阻止事件冒泡\r\n                    var index = $(this).parent().index();\r\n                    self.removeItem(index, true);\r\n                })\r\n\r\n                var elem = self.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                    ui.validElement(self.$element);\r\n                }\r\n                  \r\n                if(param.onItemAdded && typeof(param.onItemAdded) === \"function\"){\r\n                    if(!param.onItemAdded(self.$Maxcontainer, itemJson)){return false;}\r\n                }\r\n                if(self.listeners.indexOf('itemAdded') > -1) {\r\n                    if(!self.emit({type:'itemAdded',target: self.$Maxcontainer, item: itemJson})) return ;\r\n                }\r\n\r\n                self.focus();\r\n\r\n                return this;\r\n            },\r\n            // code number/this \r\n            // 0: 标签数据没传入；\r\n            // 1: name参数没设置,无法删除object数据；\r\n            // 2：数据不存在\r\n            // 5: 添加数据类型不是object或者string\r\n            // this:添加成功\r\n            removeItem: function(item, isIndex){\r\n                var self = this, param = this._opt, $selector = this.$element, _name = param.name, _text = param.text;\r\n                var errorCode, errorMessage = \"\";\r\n\r\n                if(param.onBeforeItemRemove && typeof(param.onBeforeItemRemove) === \"function\"){\r\n                    if(!param.onBeforeItemRemove(self.$Maxcontainer, item)){return false;}\r\n                }\r\n                if(self.listeners.indexOf('beforeItemRemove') > -1) {\r\n                    if(!self.emit({type:'beforeItemRemove',target: self.$Maxcontainer, item: item})) return ;\r\n                }\r\n\r\n                // 0:没传入节点数据\r\n                if (item === undefined){\r\n                    errorCode = 0;\r\n                    errorMessage =\"移除的数据不能为空\";\r\n                    if(param.onItemRemoveError && typeof(param.onItemRemoveError) === \"function\"){\r\n                        if(!param.onItemRemoveError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemRemoveError') > -1) {\r\n                        if(!self.emit({type:'itemRemoveError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // 1:name属性值没设置，无法删除object类型数据\r\n                if (typeof item === \"object\" && !param.name){\r\n                    errorCode = 1;\r\n                    errorMessage =\"name属性值没设置，无法删除object类型数据\";\r\n                    if(param.onItemRemoveError && typeof(param.onItemRemoveError) === \"function\"){\r\n                        if(!param.onItemRemoveError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemRemoveError') > -1) {\r\n                        if(!self.emit({type:'itemRemoveError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                isIndex = isIndex || false;\r\n                var index = -1;\r\n                if(isIndex){    // 索引值，从0开始\r\n                    index = item;\r\n                }else{\r\n                    if(ui.isJson(item)){\r\n                        var itemName = item[_name];\r\n                        index = self.itemsName.indexOf(itemName);\r\n                    }else if(typeof item === \"string\"){\r\n                        index = self.itemsName.indexOf(item);\r\n                    }else{\r\n                        // 5:只能根据类型为object、string的数据来删除节点\r\n                        errorCode = 5;\r\n                        errorMessage =\"只能根据类型为object、string的数据来删除节点\";\r\n                        if(param.onItemRemoveError && typeof(param.onItemRemoveError) === \"function\"){\r\n                            if(!param.onItemRemoveError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                        }\r\n                        if(self.listeners.indexOf('itemRemoveError') > -1) {\r\n                            if(!self.emit({type:'itemRemoveError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if(index < 0){\r\n                    // 2:传入数据不存在\r\n                    errorCode = 2;\r\n                    errorMessage =\"传入数据不存在\";\r\n                    if(param.onItemRemoveError && typeof(param.onItemRemoveError) === \"function\"){\r\n                        if(!param.onItemRemoveError(self.$Maxcontainer, item, errorCode, errorMessage)){return false;}\r\n                    }\r\n                    if(self.listeners.indexOf('itemRemoveError') > -1) {\r\n                        if(!self.emit({type:'itemRemoveError',target: self.$Maxcontainer, item: item, code: errorCode, message: errorMessage})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                var itemJson = self.itemsArray[index];\r\n                self.itemsName.splice(index,1);\r\n                self.itemsArray.splice(index,1);\r\n                self.itemsText.splice(index,1);\r\n\r\n                if(self.itemsText.length == 0){\r\n                    if(self.$tip && self.$tip.hasClass('hide')){\r\n                        self.$tip.removeClass('hide');\r\n                    }\r\n                }\r\n\r\n                $selector.val(self.itemsName.join(\",\"));\r\n                self.$buttonBox.children('span').eq(index).remove();    // 移除标签\r\n\r\n                var elem = self.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                    ui.validElement(self.$element);\r\n                }\r\n                  \r\n                if(param.onItemRemoved && typeof(param.onItemRemoved) === \"function\"){\r\n                    if(!param.onItemRemoved(self.$Maxcontainer, itemJson)){return false;}\r\n                }\r\n                if(self.listeners.indexOf('itemRemoved') > -1) {\r\n                    if(!self.emit({type:'itemRemoved',target: self.$Maxcontainer, item: itemJson})) return ;\r\n                }\r\n\r\n                self.$input.focus();\r\n\r\n                return this;\r\n            },\r\n            loadData: function(data, searchKey){\r\n\r\n                var self = this, param = this._opt, _text = param.text, _name = param.name, _i, _len = data.length, _count = 0;\r\n                self._data = [];\r\n                self.$selectContentBox.empty();  // 清空原有下拉数据\r\n                for(_i = 0; _i < _len; _i++){\r\n                    var item = data[_i], \r\n                        // option = this._createElement(self.optionTmp),\r\n                        $option = $(self.optionTmp),\r\n                        text = item[_text];\r\n                    if(text.indexOf(searchKey) == -1){\r\n                        continue;\r\n                    }\r\n\r\n                    self._data.push(item);\r\n                    $option.attr(\"data-original-index\", _count++)\r\n                            .children('a').attr(\"tabindex\", _count)\r\n                            .children(\".text\").text(text);\r\n\r\n                    self.$selectContentBox.append($option);\r\n\r\n                    $option.on(\"click\", \"a, span\" , function(e){\r\n                        ui.stopPropagation(e);\r\n                        self.click(this);\r\n                    }).mouseenter(function(){\r\n                        $(this).siblings('li.active').each(function(){\r\n                            $(this).removeClass('active');\r\n                        })\r\n                        $(this).addClass('active');\r\n                        self.activeItem = $(this);\r\n                        // self.$input.focus();\r\n                    }).mouseleave(function(){\r\n                        // $(this).siblings('li.active').each(function(){\r\n                        //     $(this).removeClass('active');\r\n                        // })\r\n                        $(this).removeClass('active');\r\n                        self.activeItem = null;\r\n                        // self.$input.focus();\r\n                    });\r\n                    // .hover(function(){\r\n                    //     $(this).siblings('li.active').each(function(){\r\n                    //         $(this).removeClass('active');\r\n                    //     })\r\n                    //     $(this).addClass('active');\r\n                    //     self.activeItem = $(this);\r\n                    //     // self.$input.focus();\r\n                    // });\r\n\r\n                    //监听Enter键选中事件\r\n                    $option.keyup(function(event){\r\n                        ui.stopPropagation(event);\r\n                        var keynum = window.event ? event.keyCode : event.which;\r\n                        // ui.logError(keynum);\r\n                        if(keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER){\r\n                            self.enter(this);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // this.$optionBox.addClass('focus');\r\n                if(_len > 0){\r\n                    self.focus();\r\n                }\r\n                \r\n\r\n                // self.setHeight();\r\n            },\r\n            // 渲染下拉UI\r\n            render: function(searchKey){\r\n                var self = this, param = this._opt, $selector = this.$element, serverDataKey = param.jsonReader.root;\r\n                var searchField = param.prmNames.searchField;\r\n                self.activeItem = null;\r\n\r\n                if(self.defaults.dynamicLoading){\r\n                    // var searchData = {\r\n                    //     \"searchKey\": searchKey\r\n                    // };\r\n                    var searchData = {};\r\n                    searchData[searchField] = searchKey;\r\n\r\n                    var _success = function(res){\r\n                        // console.info(res);\r\n                        if(!!serverDataKey){\r\n                            var data = res[serverDataKey];\r\n                            // console.info(data);\r\n                            if(ui.isArray(data) && data.length > 0){\r\n                                self.loadData(data, searchKey);\r\n                            }else{\r\n                                self.$viewBox.removeClass(\"open\");\r\n                            }\r\n                        }else{\r\n                            var data = res;\r\n                            // console.info(data);\r\n                            if(ui.isArray(data) && data.length > 0){\r\n                                self.loadData(data, searchKey);\r\n                            }else{\r\n                                self.$viewBox.removeClass(\"open\");\r\n                            }\r\n                        }\r\n                    };\r\n                    var _fail = function(res){};\r\n                    var searchUrl = ui.buildUrl(param.loadUrl, searchData);\r\n                    ui.getAjax({\r\n                        url: searchUrl,\r\n                        onSuccess: _success, \r\n                        onError: _fail, \r\n                        async: false, \r\n                        dataType: \"json\"\r\n                    })\r\n                    // ui.ajax(param.loadUrl, searchData, _success, _fail, false, \"json\", \"get\");\r\n                }else{\r\n                    var isInit = self.$element.attr(\"isInit\");\r\n                    if(isInit){\r\n                        self.focus();\r\n                    }else{\r\n                        // var searchData = {\r\n                        //     \"searchKey\": searchKey\r\n                        // };\r\n                        var searchData = {};\r\n                        searchData[searchField] = searchKey;\r\n\r\n                        var _success = function(res){\r\n                            if(serverDataKey != \"\"){\r\n                                var data = res[serverDataKey];\r\n                                if(ui.isArray(data) && data.length > 0){\r\n                                    self.loadData(data, searchKey);\r\n                                }\r\n                            }else{\r\n                                var data = res;\r\n                                if(ui.isArray(data) && data.length > 0){\r\n                                    self.loadData(data, searchKey);\r\n                                }\r\n                            }\r\n                        };\r\n                        var _fail = function(res){};\r\n\r\n                        var searchUrl = ui.buildUrl(param.loadUrl, searchData);\r\n                        ui.getAjax({\r\n                            url: searchUrl,\r\n                            onSuccess: _success, \r\n                            onError: _fail, \r\n                            async: false, \r\n                            dataType: \"json\"\r\n                        })\r\n                        // ui.ajax(param.loadUrl, searchData, _success, _fail, false, \"json\", \"get\");\r\n                    }\r\n                }\r\n            },\r\n            KeyDown: function(){\r\n                var self = this, nextItem = null;\r\n\r\n                if(self.activeItem){\r\n                    nextItem = (self.activeItem && self.activeItem.nextAll().not(\".hidden\").length) ? self.activeItem.nextAll().not(\".hidden\").eq(0): self.activeItem;\r\n                    self.activeItem.removeClass('active'); \r\n                }else{\r\n                    nextItem = self.$selectContentBox.children('li').not(\".hidden\").first();\r\n                }\r\n                             \r\n                nextItem.addClass('active');\r\n                self.activeItem = nextItem;\r\n                self.activeItem.focus();\r\n                // self.$input.focus();\r\n            },\r\n            KeyUp: function(){\r\n                var self = this, prevItem = null;\r\n\r\n                if(self.activeItem) {\r\n                    prevItem = (self.activeItem && self.activeItem.prevAll().not(\".hidden\").length) ? self.activeItem.prevAll().not(\".hidden\").eq(0): self.activeItem;\r\n                    self.activeItem.removeClass('active');              \r\n                    prevItem.addClass('active');\r\n                    self.activeItem = prevItem;\r\n                    self.activeItem.focus();\r\n                }else{\r\n                    ui.logMessage(\"当前没有选中项\", \"wui.tagBox\", true);\r\n                }\r\n                // self.$input.focus();\r\n            },\r\n            KeyEnd: function(){\r\n                var self = this, lastItem = null;\r\n\r\n                if(self.activeItem){\r\n                    lastItem = (self.activeItem && self.activeItem.nextAll().not(\".hidden\").length) ? self.activeItem.nextAll().not(\".hidden\").last(): self.activeItem;\r\n                    self.activeItem.removeClass('active');\r\n                }else{\r\n                    lastItem = self.$selectContentBox.children('li').not(\".hidden\").last();\r\n                }\r\n                              \r\n                lastItem.addClass('active');\r\n                self.activeItem = lastItem;\r\n                self.activeItem.focus();\r\n            },\r\n            // 输入框聚焦,设置首项为响应项\r\n            focus: function(){\r\n                var self = this, params = this._opt;\r\n                // self.activeItem = self.$selectContentBox.children('li').not(\".hidden\").first();\r\n                // self.activeItem.addClass('active');\r\n                self.$input.focus();\r\n                self.$selectContentBox.addClass('focus');\r\n                // self.$viewBox.dropdown('toggle');\r\n                var searchKey = self.$input.val();\r\n                if(searchKey != \"\" || params.isShowDropdown){\r\n                    if(self._data.length > 0){\r\n                        self.$viewBox.addClass('open');\r\n                    }\r\n                }\r\n                \r\n                self.setHeight();\r\n            },\r\n            // 取消响应项\r\n            blur: function(){\r\n                var self = this, dropdownMinHeight = self.defaults.dropdownMinHeight;\r\n                // self.$selectContentBox.empty();\r\n                self.$selectContentBox.removeClass('focus');\r\n                self.$viewBox.removeClass('open');\r\n                if(self.activeItem){\r\n                    self.activeItem.removeClass('active');\r\n                    self.activeItem.addClass('hidden');\r\n                }\r\n                self.activeItem = null;\r\n\r\n                if(self.defaults.dynamicLoading){\r\n                    self.$selectContentBox.empty();\r\n                    self._data = [];\r\n                }\r\n                self.setHeight();\r\n                // self.$selectContentBox.height(dropdownMinHeight);\r\n            },\r\n            click: function(item){\r\n                var self = this, $li = null;\r\n                if(item.tagName == \"LI\"){\r\n                    $li = $(item);\r\n                }else if(item.tagName == \"A\"){\r\n                    $li = $(item).parent();\r\n                }else if(item.tagName == \"SPAN\"){\r\n                    $li = $(item).parent().parent();\r\n                }\r\n                var index = parseInt($li.attr(\"data-original-index\"));\r\n                var temp = self._data[index];\r\n                self.addItem(temp);\r\n\r\n                self.blur();\r\n                self.$input.val(\"\");\r\n            },\r\n            enter: function(item){\r\n\r\n                var self = this, $li = null;\r\n                if(item.tagName == \"LI\"){\r\n                    $li = $(item);\r\n                }else if(item.tagName == \"A\"){\r\n                    $li = $(item).parent();\r\n                }else if(item.tagName == \"SPAN\"){\r\n                    $li = $(item).parent().parent();\r\n                }\r\n                var index = parseInt($li.attr(\"data-original-index\"));\r\n                var temp = self._data[index];\r\n                self.addItem(temp);\r\n\r\n                self.blur();\r\n                self.$input.val(\"\");\r\n            },\r\n            get: function(type){\r\n                type = type || \"json\";\r\n                if(type == \"value\"){\r\n                    return this.itemsName;\r\n                }else if(type == \"json\"){\r\n                    return this.itemsArray;\r\n                }else if(type == \"text\"){\r\n                    return this.itemsText;\r\n                }else{\r\n                    return this.itemsArray;\r\n                }\r\n            },\r\n            setHeight: function(){\r\n                // this.$optionBox.height(400);\r\n                var self = this, _len = this._data.length, dropdownMinHeight = self.defaults.dropdownMinHeight;\r\n                if(_len > 0){\r\n                    var liHeight = self.$selectContentBox.children('li').not(\".hidden\").first().height();\r\n                    var dropdownHeight = (liHeight * _len) > self.defaults.dropdownMaxHeight ? self.defaults.dropdownMaxHeight: (liHeight * _len);\r\n                    self.$selectContentBox.height(dropdownHeight);\r\n                }else{\r\n                    self.$selectContentBox.height(dropdownMinHeight);\r\n                }\r\n            },\r\n            option: function(newOptions){\r\n                var params = this._opt;\r\n                \r\n                if(!!newOptions){\r\n\r\n                    if(typeof newOptions === \"object\"){\r\n                        this._resetOption(newOptions);  // 重置配置\r\n                    }else if(typeof newOptions === \"string\"){\r\n                        if(newOptions === \"getDefOpt\"){\r\n                            return config;\r\n                        }else{\r\n                            return params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n                        }\r\n                    }\r\n                }else{\r\n                    return params;\r\n                }\r\n            },\r\n            _resetOption: function(newOptions){\r\n\r\n                var self = this,\r\n                    params = this._opt,\r\n                    isClear = false;\r\n\r\n                // direction: {string} 下拉框展开方向,默认是为空,即向下,若是dropup,即向上\r\n                if(newOptions.direction != undefined && params.direction != newOptions.direction){\r\n                    if(params.direction != \"\"){\r\n                        self.$viewBox.removeClass(params.direction);\r\n                    }\r\n                    if(newOptions.direction != \"\"){\r\n                        self.$viewBox.addClass(newOptions.direction);\r\n                    }\r\n\r\n                    self._opt.direction = newOptions.direction;\r\n                }\r\n\r\n                // text: {string}  选中值保存的text字段\r\n                if(newOptions.text != undefined && params.text != newOptions.text){\r\n                    // this.empty();\r\n                    isClear = true;\r\n                    self._opt.text = newOptions.text;\r\n                }\r\n                // name: {string}  选中值保存的name字段\r\n                if(newOptions.name != undefined && params.name != newOptions.name){\r\n                    // this.empty();\r\n                    isClear = true;\r\n                    self._opt.name = newOptions.name;\r\n                }\r\n\r\n                // var isLoadData = false;\r\n                // loadUrl: {string} 数据服务地址\r\n                if(newOptions.loadUrl != undefined && params.loadUrl != newOptions.loadUrl){\r\n                    // this.empty();\r\n                    // 重新加载下拉数据\r\n                    self._opt.loadUrl = newOptions.loadUrl;\r\n                    isClear = true;\r\n                }\r\n\r\n                // loadData: {Array} 下拉数据数据\r\n                if(newOptions.loadData && params.loadData != newOptions.loadData){\r\n                    // this.empty();\r\n                    // 重新加载下拉数据\r\n                    self._opt.loadData = newOptions.loadData;\r\n                    isClear = true;\r\n                }\r\n\r\n                if(isClear){\r\n                    self.empty();\r\n                }\r\n\r\n                // maxNumber: {number} 最多可选节点个数，0代表不限制\r\n                if(newOptions.maxNumber != undefined && params.maxNumber != parseInt(newOptions.maxNumber)){\r\n                    var maxNumber = ui.formatMaxNumber(newOptions.maxNumber);\r\n                    this._opt.maxNumber = maxNumber;\r\n                    if(maxNumber !== false){\r\n                        var len = self.itemsName.length;\r\n                        while(len > maxNumber){\r\n                            self.removeItem(--len, true);\r\n                        }\r\n                    }\r\n                    // self._opt.maxNumber = maxNumber;\r\n                }\r\n\r\n                var isResetText = false;\r\n                // ellipsis: {string} 是省略符号，当标签个数达到最大字符数时替换多余字符的字符串\r\n                if(newOptions.ellipsis != undefined && params.ellipsis != newOptions.ellipsis){\r\n                    self._opt.ellipsis = newOptions.ellipsis;\r\n                    isResetText = true;\r\n                }\r\n\r\n                // maxChars: {number} 每个标签字符限制个数,0代表不限制\r\n                if(newOptions.maxChars != undefined && params.maxChars != parseInt(newOptions.maxChars)){\r\n                    var maxChars = parseInt(newOptions.maxChars);\r\n                    self._opt.maxChars = maxChars;\r\n                    isResetText = true;\r\n                }\r\n\r\n                if(isResetText){    // 更新文本值\r\n                    var itemsText = self.itemsText;\r\n                    var $items = self.$buttonBox.children('.tag');\r\n                    $items.each(function(i, item){\r\n                        var $item = $(item);\r\n                        var showText = $item.attr(\"title\");\r\n                        if(maxChars > 0 && showText.length > maxChars){\r\n                            showText = showText.substr(0, maxChars) + self._opt.ellipsis;\r\n                        }\r\n                        $item.children('em').text(showText);\r\n                    })\r\n                }\r\n            },\r\n            disabled: function(){\r\n                this.blur();\r\n                this.$input.attr(\"readonly\", true).attr(\"disabled\", \"disabled\");\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\").removeAttr(\"data-toggle\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').hide();\r\n                this.$buttonBox.addClass(\"disabled\");\r\n            },\r\n            enabled: function(){\r\n                var self = this;\r\n                this.$input.removeAttr(\"readonly\").removeAttr(\"disabled\");\r\n                this.$buttonBox.removeAttr(\"disabled\").attr(\"data-toggle\", \"dropdown\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').show();\r\n                this.$buttonBox.removeClass(\"disabled\");\r\n            },\r\n            readonly: function(){\r\n                this.blur();\r\n                this.$input.attr(\"readonly\", true).attr(\"disabled\", \"disabled\").addClass(\"wui-readonly\");\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\").removeAttr(\"data-toggle\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').hide();\r\n            },\r\n            readwrite: function(){\r\n                var self = this;\r\n                this.$input.removeAttr(\"readonly\").removeAttr(\"disabled\").removeClass(\"wui-readonly\");\r\n                this.$buttonBox.removeAttr(\"disabled\").attr(\"data-toggle\", \"dropdown\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').show();\r\n            },\r\n            empty: function(isTriggerUnselectEvent){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                if(isTriggerUnselectEvent === undefined){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n\r\n                // 是否触发节点删除事件\r\n                if(isTriggerUnselectEvent){\r\n                    var len = self.itemsName.length;\r\n                    while(len > 0){\r\n                        self.removeItem(--len, true);\r\n                    }\r\n                }else{\r\n                    this.itemsName = [];\r\n                    this.itemsArray = [];\r\n                    this.itemsText = [];\r\n\r\n                    if(self.$tip && self.$tip.hasClass('hide')){\r\n                        self.$tip.removeClass('hide');\r\n                    }\r\n\r\n                    $selector.val(\"\");\r\n                    self.$buttonBox.children('span').each(function(){\r\n                        $(this).remove();    // 移除标签\r\n                    })\r\n                }\r\n\r\n                if(params.onEmpty && typeof(params.onEmpty) === \"function\"){\r\n                    params.onEmpty();\r\n                } \r\n                return this;\r\n            },\r\n            destroy: function(){\r\n                var self = this;\r\n                if(self.listeners.indexOf('destroy') > -1) {\r\n                    if(!self.emit({type:'destroy',target: self.dom})) return ;\r\n                }\r\n\r\n                // self.$viewBox.remove();\r\n                // self.$element.show();\r\n                self.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.$Maxcontainer.replaceWith(this.initDom);\r\n\r\n                return this;\r\n            },\r\n            on: function(type, handler){\r\n                if(_widgetEventType.indexOf(type) > -1){    // WUI组件事件监听\r\n                    if(typeof this.handlers[type] === 'undefined') {\r\n                        this.handlers[type] = [];\r\n                        this.listeners.push(type);\r\n                    }\r\n                    this.handlers[type].push(handler);\r\n                }\r\n                return this;\r\n            },\r\n            off: function(type, handler){\r\n                var _i, _j, _listeners, _handlers, _len;\r\n                if(_widgetEventType.indexOf(type) > -1){    // 取消WUI组件事件监听\r\n                    if(this.handlers[type] instanceof Array) {\r\n                        _handlers = this.handlers[type];\r\n                        _listeners = this.listeners;\r\n\r\n                        for(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n                            if(_listeners[_i] === type) {\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if(handler === undefined){\r\n                            this.listeners.splice(_i, 1);\r\n                            delete this.handlers[type];\r\n                        }else{\r\n                            for(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n                                if(_handlers[_j] === handler) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if(_j < _len){\r\n                                this.handlers[type].splice(_j, 1);\r\n                                if(this.handlers[type].length == 0){\r\n                                    this.listeners.splice(_i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            emit: function(event){\r\n                if(!event.target) {\r\n                    if(!this.$Maxcontainer){\r\n                        event.target = this;\r\n                    }else{\r\n                        event.target = this.$Maxcontainer;\r\n                    }\r\n                }\r\n                if(this.handlers[event.type] instanceof Array) {\r\n                    var handlers = this.handlers[event.type];\r\n                    for(var i = 0, len = handlers.length; i < len; i++) {\r\n                        handlers[i](event);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            component: function(){\r\n                return this;\r\n            }\r\n        }\r\n\r\n        //fn就是prototype\r\n        $.fn[_pluginName] = function(param1){\r\n            // each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n            return this.each(function(){\r\n                //判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n                if(!$.data(document.getElementById(element), _pluginDataName)){\r\n                    //生成插件类实例。\r\n                    $.data(document.getElementById(element), _pluginDataName, new uiTagBox(this, param1));\r\n                }\r\n            });\r\n        }\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            if(!data){\r\n                ui.logError(\"wui.tagBox 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n\r\n            if(typeof (data[funcName]) === \"function\"){\r\n                return data[funcName].apply(data, args);\r\n            }else{\r\n                ui.logWarn('wui.tagBox 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         * @event on\r\n         * @param eventType {string} 可监听事件类型如下：<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> eventType </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\"beforeItemAdd\"</td>\r\n                        <td>添加单个节点之前触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemAddError\"</td>\r\n                        <td>单个节点添加出错触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemAdded\"</td>\r\n                        <td>单个节点添加成功触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeItemRemove\"</td>\r\n                        <td>移除单个节点之前触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemRemoveError\"</td>\r\n                        <td>单个节点移除出错触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemRemoved\"</td>\r\n                        <td>单个节点移除成功触发</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         * @param func {function} 事件类型触发之后的执行方法\r\n         * @return 组件对象\r\n         * @example \r\n            \r\n            // 组件添加节点出错时被触发\r\n            uiTagBox.on(\"itemSelectError\", function(e){\r\n                console.log(\"itemSelectError\");\r\n            });\r\n                \r\n         */\r\n        function _on(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n         * @param func {function} 选填,事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n         * @return 组件对象\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiTagBox.off(\"itemSelectError\");\r\n                \r\n         */\r\n        function _off(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n        * @param type {string} 获取的组件值的类型，可选:value/text/json，默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取组件值\r\n            var value = uiTagBox.get(\"value\");   // \"beijing\"\r\n                \r\n        */\r\n        function _get(type){\r\n            return _executeMethod(\"get\", type);\r\n        }\r\n\r\n        /**\r\n        * 设置组件值\r\n        * @method set\r\n        * @param data {Object/String} 设置的组件数据,可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> value值和text值默认一致(多个可以用数组表示或者用\",\"分隔开) </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> Object </td>\r\n                        <td> 必须存在配置参数name和配置参数text的参数值对应的键值对,且此值作为保存的JSON对象,比如：配置参数中{\"name\":\"id\",\"text\":\"title\"},那传入键值对必须包含\"id\"、\"title\"的键值对 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            // 设置组件值\r\n            uiTagBox.set({\"name\" :\"北京市\",\"id\" :\"beijing\"});\r\n                \r\n        */\r\n        function _set(data){\r\n            return _executeMethod(\"set\", data);\r\n        }\r\n\r\n        /**\r\n        * 添加组件值\r\n        * @method add\r\n        * @param data {Object/String} 添加的组件数据,可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> value值和text值默认一致(多个可以用数组表示或者用\",\"分隔开) </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> Object </td>\r\n                        <td> 必须存在配置参数name和配置参数text的参数值对应的键值对,且此值作为保存的JSON对象,比如：配置参数中{\"name\":\"id\",\"text\":\"title\"},那传入键值对必须包含\"id\"、\"title\"的键值对 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            // 添加组件值\r\n            uiTagBox.add({\"id\" :\"guangzhou\",\"name\" :\"广州市\"});\r\n                \r\n        */\r\n        function _add(data){\r\n            return _executeMethod(\"add\", data);\r\n        }\r\n\r\n        /**\r\n        * 移除组件值\r\n        * @method remove\r\n        * @param data {Object/String} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 移除组件值的name参数对应的值集合(多个值用数组表示或者用\",\"分隔开) </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> Object </td>\r\n                        <td> 移除组件值,必须存在name参数和text参数对应的键值对(不建议使用，但是存在多个重复name值时,可采用此参数),(多个值用数组表示) </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            // 移除组件值\r\n            uiTagBox.remove(\"beijing\");\r\n                \r\n        */\r\n        function _remove(data){\r\n            return _executeMethod(\"remove\", data);\r\n        }\r\n\r\n        /**\r\n        * 阻止点击弹出层和删除标签\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 阻止点击弹出层和删除标签\r\n            uiTagBox.disabled();\r\n                \r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出层和删除标签\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 允许点击弹出层和删除标签\r\n            uiTagBox.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件只读\r\n            uiTagBox.readonly();\r\n                \r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件可读可写\r\n            uiTagBox.readwrite();\r\n                \r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiTagBox.option();\r\n                \r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空组件值：设置不可自由输入时，可通过此方法清除选中值\r\n            uiTagBox.empty();\r\n                \r\n        */\r\n        function _empty(isTriggerUnselectEvent){\r\n            return _executeMethod(\"empty\", isTriggerUnselectEvent);\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiTagBox.destroy();\r\n                \r\n        */\r\n        function _destroy(){\r\n            return _executeMethod(\"destroy\");\r\n        }\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiTagBox.component();\r\n            console.info(component);\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n            // 重新初始化组件,若是传递参数，则\r\n            var myTagBox = uiTagBox.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n            if(!$.data(document.getElementById(element), _pluginDataName)){\r\n                $('#' + element)[_pluginName](opt);\r\n            }else{\r\n                if(opt && ui.isJson(opt)){\r\n                    return _executeMethod(\"option\", opt);\r\n                }else{\r\n                    return;\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n        return {\r\n            init: _init,            // 初始化\r\n            on: _on,\r\n            off: _off,\r\n            get: _get,\r\n            set: _set,\r\n            add: _add,\r\n            remove: _remove,\r\n            enabled: _enabled,\r\n            disabled: _disabled,\r\n            readwrite: _readwrite,\r\n            readonly: _readonly,\r\n            option: _option,\r\n            empty: _empty,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            destroy: _destroy\r\n        }\r\n    }\r\n\r\n    return ui;\r\n})( wui || {}, libs );","// wui.tagComboBox\r\n// tagComboBox\r\n// Date : 2018-01-08\r\n// by chenzx\r\n// 思路：\r\n// 封装插件，将插件初始化赋给wui\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>下拉标签选择组合框</h3>\r\n     * <ol>\r\n     * <li>支持自定义下拉数据源:树形结构、列表结构、树+列表结构; </li>\r\n     * <li>支持自定义下拉框弹出页面内容; </li>\r\n     * <li>支持多选个数限制; </li>\r\n     * </ol>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiTagComboBox\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.tagComboBox/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/select\"}}{{/crossLink}}: 选中选项 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/unselect\"}}{{/crossLink}}: 取消选项选中 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/enabled\"}}{{/crossLink}}: 允许点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/disabled\"}}{{/crossLink}}: 阻止点击弹出下拉框 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/refresh\"}}{{/crossLink}}: 刷新组件下拉框 </li>\r\n     * <li>{{#crossLink \"wui.tagComboBox/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class tagComboBox\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string} option.pageUrl #@default:\"common_pages/wui.tagComboBox.dropdown.html\"# 下拉公共页面地址\r\n     *  @param {JSON} [option.otherParam] #@default:{}# 传递到弹出页面的各个子页面的自定义json数据\r\n     *  @param {number} [option.maxNumber] #@default:false# 最多可选个数,false代表无限制  \r\n     *  @param {string} [option.width]   #@default:\"100%\"# 组件宽度\r\n     *  @param {string} [option.value] #@default:\"\"# 初始化完成时，选中值的value属性值   \r\n     *  @param {string} [option.text] #@default:\"name\"# 选中值保存的text字段\r\n     *  @param {string} [option.name] #@default:\"id\"# 选中值保存的name字段\r\n     *  @param {string} [option.direction] #@default:\"auto\"# 下拉数据框展开方向,\"dropup\":向上，\"dropdown\"/不填:向下; \r\n     *  @param {number} [option.maxChars] #@default:0# 每个标签字符限制个数,0代表不限制,默认是0\r\n     *  @param {string} [option.ellipsis] #@default:\"...\"# 省略符号，当标签个数达到最大字符数时替换多余字符的字符串\r\n     *  @param {string} [option.tagClass] #@default:\"label wui-bg-primary\"# 标签块样式类\r\n     *  @param {Function} [option.beforeIframeLoad] 在Iframe加载之前调用,传递参数iframe(下拉框iframe对象),urlParams(传入下拉框链接参数),默认是空值\r\n     *  @param {String} option.treeTitle #@default:\"\"# 树结构标题   \r\n     *  @param {String} option.treeUrl  #@default:\"\"# 树结构加载服务地址    \r\n     *  @param {String} [option.lazyField]  树结构懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"parentDeptId\" \r\n     *  @param {boolean} [option.isEnabledSearch]  树结构是否启用搜索栏,默认是true  \r\n     *  @param {String} [option.tabTitle] Tab选项卡标题(多个数据用\",\"分隔开),默认是\"\" \r\n     *  @param {String} [option.tabUrl] Tab选项卡对应列表页面URL(多个数据用\",\"分隔开),默认是\"\" \r\n     *  @param {string} [option.treeExtSetting]  #@default:null# 树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n     *  @param {string} [option.tabsExtSetting]  #@default:null# 选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值 \r\n     *  @param {Function} [option.updateSubpageItem] 父页面增删节点失败时,更新子页面节点数据,传递参数args  <br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 参数 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> args.item </td>\r\n\t\t\t\t\t\t<td> 要切换的节点数据 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> args.isChecked </td>\r\n\t\t\t\t\t\t<td> 要切换的选中状态 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> args.iframe </td>\r\n\t\t\t\t\t\t<td> 下拉页面的iframe对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Choose Box: &lt;input type=\"text\" id=\"tagComboBoxId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiChooseBox = uiTagComboBox = wui.tagComboBox( \"tagComboBoxId\",{\r\n                // 下拉树导航标题\r\n                \"treeTitle\": \"测试树\",     \r\n                // 下拉树导航数据地址\r\n                \"treeUrl\": \"json/tree.json\",    \r\n                // 下拉列表页面选项卡标题\r\n                \"tabTitle\": \"列表1,列表2,列表3\",  \r\n                // 下拉列表页面选项卡页面地址\r\n                \"tabUrl\": \"wui.popup.list.html,wui.popup.list.html,wui.popup.list1.html\"    \r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.tagComboBox = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiTagComboBox\",\r\n            _pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"tagComboBox\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n        if(!$(\"#\" + element).exist()){\r\n            ui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n            return false;\r\n        }\r\n        \r\n            // \"iframeLoaded\"：下拉页面加载完成\r\n            // \"beforeItemSelect\"：选中的单个节点之前触发\r\n            // \"itemSelectError\"：单个节点选中出错触发\r\n            // \"itemSelected\"：单个节点选中成功触发\r\n            // \"beforeItemUnselect\"：取消选中单个节点之前触发\r\n            // \"itemUnselectError\"：单个节点取消选中出错触发\r\n            // \"itemUnselected\"：单个节点取消选中成功触发\r\n        var _widgetEventType = [\"iframeLoaded\", \"beforeItemSelect\", \"itemSelectError\", \"itemSelected\", \"beforeItemUnselect\", \"itemUnselectError\", \"itemUnselected\"];    // wui组件监听事件类型\r\n\r\n        //默认配置项\r\n        var config = {\r\n            // {string} 下拉数据框展开方向,dropup:向上，不填则默认向下\r\n            direction: \"auto\"   \r\n            // {number} 最多可选个数，0代表无限制\r\n            , maxNumber: false          \r\n            // {string}  初始化完成时，默认选中值的value属性值\r\n            , value: \"\"         \r\n            // {string}  选中值保存的text字段\r\n            , text: \"name\"          \r\n            // {string}  选中值保存的value字段\r\n            , name: \"id\"          \r\n            // {number} 每个标签字符限制个数,0代表不限制\r\n            , maxChars: 0               \r\n            // {string} 省略符号，当标签个数达到最大字符数时替换多余字符的字符串 \r\n            , ellipsis: \"...\"                      \r\n            // {String} 组件宽度,默认\"100%\"\r\n            , width: \"\"\r\n            // {string} 标签块样式类\r\n            , tagClass: 'label wui-bg-primary'  \r\n\r\n            // 下拉页面设置\r\n            // // {string} 下拉页面地址;默认公共页面：wui.selectComboBox.dropdown.html\r\n            , pageUrl: ui.commonPageBasePath + \"wui.comboBox.dropdown.html\"      \r\n            // {json} 传递到弹出页面的各个子页面的自定义json数据\r\n            , otherParam: {}        \r\n            // {number} 下拉视图最大高度,单位\"px\",默认为0，表示自适应到页面底部高度\r\n            , maxHeight: 0             \r\n            // {Boolean} 是否每次打开下拉视图都重新加载内容,默认是false\r\n            , isReload: false       \r\n            // {function} 在Iframe加载之前调用\r\n            , beforeIframeLoad: ui.CONSTANTS.EMPTYFUNC    \r\n            /* 树配置 */\r\n            // {string} 树列表标题\r\n            , treeTitle: ''  \r\n            // {string} 树形数据URL\r\n            , treeUrl: ''   \r\n            // {string} 懒加载请求的字段名\r\n            , lazyField: 'parentDeptId'\r\n            // {Boolean} 是否启用树搜索过滤\r\n            , isEnabledSearch: true\r\n            /* 选项卡/列表配置 */\r\n            // {string} Tab选项卡标题(多个数据用\",\"分隔开)\r\n            , tabTitle:''       \r\n            // {string} 列表页面URL(多个数据用\",\"分隔开)\r\n            , tabUrl: '' \r\n            // 拓展参数:树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n            , treeExtSetting: null\r\n            // 拓展参数:选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n            , tabsExtSetting: null\r\n            // {function} 改变标签之后，pageUrl页面中设置子页面选中事件\r\n            // , pageCallback: ui.CONSTANTS.EMPTYFUNC \r\n            // {function} 父页面增删节点失败时,更新子页面节点数据,传递参数: args\r\n            , updateSubpageItem: ui.CONSTANTS.EMPTYFUNC   \r\n                // args.item: 增删失败的节点\r\n                // args.isChecked: 要切换的选中状态\r\n                // args.iframe: 下拉页面的iframe对象\r\n        };\r\n\r\n        // 不改动的参数配置\r\n        var defaults = {\r\n            isFreeInput: false      // 是否可以自由选\r\n            , dynamicLoading: true  // {boolean} 是否动态加载数据(当下拉建议数据从后台返回时，是一次性加载到页面，还是每次输入内容都请求后台服务)\r\n            , dropdownMaxHeight: 400    // 下拉最大高度\r\n\r\n            // 提示语汉化\r\n            , noneSelectedText : \"没有选中任何项\"\r\n            , maxOptionsText : ['超出限制 (最多选择{n}项)', '组选择超出限制(最多选择{n}组)']\r\n            // {string} 没有选中节点时显示内容\r\n            , noneItemText : ui.language.tagComboBox.noneItem \r\n        }\r\n\r\n        function uiTagComboBox(element, options){\r\n            //调用初始函数\r\n            this.init();    \r\n        }\r\n\r\n        uiTagComboBox.prototype = {\r\n            constructor: uiTagComboBox,\r\n\r\n            init: function(){\r\n                // 初始化对象静态属性\r\n                this.pluginName = _widgetName;      // 缓存插件名字\r\n                this.element = element;             // 保存初始化标签id\r\n                this.$element = $(\"#\" + element);   // 保存初始化标签jQuery\r\n                this.defaults = defaults;           // 保存静态默认配置项\r\n\r\n                // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n                this.initDom = this.$element.prop(\"outerHTML\");\r\n                // var _opt = $.extend(false, {}, config, options);\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams);   // 覆盖默认配置项\r\n                this.itemsArray = [];   // 存放选中节点JSON数据\r\n                this.itemsName = [];    // 存放选中节点的name参数字段值集合\r\n                this.itemsText = [];    // 存放选中节点的text参数字段值集合\r\n                // this._opt = _opt;   // 覆盖默认配置项\r\n\r\n                // 初始化对象页面结构模板\r\n                // if(this.$element.attr(\"placeholder\")){\r\n                //     this.placeholderText = this.$element.attr(\"placeholder\");\r\n                // }else{\r\n                //     this.placeholderText = this.defaults.noneItemText;\r\n                // }\r\n                this.placeholderText = this.$element.attr('placeholder') ? this.$element.attr('placeholder') : this.defaults.noneItemText;\r\n                this.tagTmp = '<span class=\"tag\"><em></em><span data-role=\"remove\"></span></span>';\r\n                this.tipTmp = '<span class=\"no-item\">' + this.placeholderText + '</span>';    // 没有标签选中的提示内容\r\n                this.iframeTmpl = '<iframe id=\"\" name=\"\" allowtransparency=\"true\" width=\"100%\" height=\"98%\" src=\"\" scrolling=\"yes\" frameborder=\"0\"></iframe>';\r\n                \r\n                // 初始化对象页面结构\r\n                this.$Maxcontainer = null; // 组件最外层容器(.wui-tagcomboBox): $element + $viewBox\r\n                this.$viewBox = null;   // 组件可视框([wui-combobox=\"dropdowm\"]):$buttonBox + $dropdownBox\r\n                this.$buttonBox = null; // 组件点击展开区域(.dropdown-toggle):$input\r\n                // this.$resultBox = null; // 组件结果显示框(.filter-option.pull-left)\r\n                this.$input = null;     // 组件标签输入区域('[wui-widget-hidden=\"true\"]')\r\n                this.$dropdownBox = null;   // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $contentBox + closeBox\r\n                this.$selectContentBox = null;    // 组件下拉视图选择内容框([wui-data=\"menu\"].dropdown-menu):$iframe\r\n                this.errorElement = null;    // 保存校验出错节点\r\n                this.iframe = null;     // 下拉iframe\r\n                this.$tip = null;\r\n\r\n                // 模板构造\r\n                // this.$Maxcontainer = null; // 最外层大容器,包含.wui-tagcomboBox\r\n                // this.$viewBox = $('<div ui-combobox=\"dropdowm\" class=\"btn-group show-tick input-layout wui-select-box\" style=\"width: 100%;\"></div>');\r\n\r\n                // this.$buttonBox = $('<div class=\"tag-container wui-input\" data-toggle=\"dropdown\"></div>').appendTo(this.$viewBox);   // 标签块对象\r\n                // this.$input = $('<input type=\"text\" wui-widget-hidden=\"true\" placeholder=\"' + this.placeholderText + '\">').appendTo(this.$buttonBox);\r\n                \r\n                \r\n\r\n                // this.$caret = $('<span class=\"ws-caret\" style=\"float:right\"> <span class=\"caret\"></span> <span class=\"sr-only\">Toggle Dropdown</span> </span>').appendTo(this.$buttonBox);\r\n                // this.$dropdownBox = $('<div class=\"dropdown-menu open\"></div>').appendTo(this.$viewBox);    // 下拉对象\r\n                // this.$selectContentBox = $('<div wui-data=\"menu\" class=\"dropdown-menu inner\" role=\"menu\" style=\"overflow-y: auto; height: 100%;\"></div>').appendTo(this.$dropdownBox);\r\n                \r\n                // this.iframe = null; // 下拉Iframe\r\n                \r\n                // this.dropdownType = \"tabs\";  // 下拉数据来源类型：tabs/tree/pageUrl\r\n                \r\n                // 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n                this.handlers = {};\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n                // 构建组件页面容器结构\r\n                this.dom = this._buildContainer();  // 创建DOM节点,并返回$Maxcontainer的HTML字符串\r\n                // this.dom = this._initDom();  // 创建DOM节点,并返回DOM节点的HTML字符串\r\n            },\r\n            _buildContainer: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!($selector.attr('name'))){\r\n                    $selector.attr('name', self.element);\r\n                }\r\n                this.name = $selector.attr('name'); //  保存name属性值\r\n\r\n                if(!($selector.parent().hasClass('wui-tagcomboBox'))){\r\n                    var parentDiv = '<div class=\"wui-tagcomboBox\"></div>';\r\n                    $selector.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n                this.$Maxcontainer = $selector.parent(); // 组件最外层容器(.wui-tagcomboBox): $element + $viewBox\r\n                this.$viewBox = $('<div wui-combobox=\"dropdowm\" class=\"btn-group wui-select-box show-tick input-layout\" style=\"width: 100%;\"></div>');   // 组件可视框([wui-combobox=\"dropdowm\"]):$buttonBox + $dropdownBox\r\n                this.$buttonBox = $('<div class=\"tag-container dropdown-toggle\" data-toggle=\"dropdown\"></div>').appendTo(this.$viewBox); // 组件点击展开区域:$input\r\n                // this.$resultBox = $('<span class=\"filter-option pull-left\">' + this.defaults.noneSelectedText + '</span>').appendTo(this.$buttonBox); // 组件结果显示框\r\n                this.$input = $('<input type=\"text\" wui-widget-hidden=\"true\" placeholder=\"' + this.placeholderText + '\">').appendTo(this.$buttonBox);\r\n                this.$caret = $('<span class=\"ws-caret\" style=\"float:right\"> <span class=\"caret\"></span> <span class=\"sr-only\">Toggle Dropdown</span> </span>').appendTo(this.$buttonBox);\r\n                this.$dropdownBox = $('<div class=\"dropdown-menu open\"></div>').appendTo(this.$viewBox);   // 组件下拉框容器(.dropdown-menu.open):searchBox + actionBox + $selectContentBox + closeBox\r\n                this.$selectContentBox = $('<div wui-data=\"menu\" class=\"dropdown-menu inner\" role=\"menu\" style=\"overflow-y: auto; height: 100%;\"></div>').appendTo(this.$dropdownBox);    // 组件下拉视图选择内容框([wui-data=\"menu\"].dropdown-menu):$iframe\r\n\r\n                $selector.after(this.$viewBox);\r\n                $selector.hide();\r\n\r\n                this._setDirection();\r\n                this._setIsFreeInput();\r\n                // this._initDropDownBox();\r\n                this._bindEvent();\r\n\r\n                if(param.width){\r\n                    this.$Maxcontainer.width(param.width);\r\n                }\r\n\r\n                this.select(param.value);   // 选中默认值\r\n\r\n                this.hasDom = true;\r\n\r\n                return this.$Maxcontainer.prop(\"outerHTML\");\r\n            },\r\n            _initDropDownBox: function(){\r\n                var iframe = this._initSelectContentBox();\r\n                if(!iframe){\r\n                    this.$selectContentBox.height(40);\r\n                    ui.logError(\"没有传入可初始化下拉框的数据\", FRAME_NAME + \".\" + _widgetName, true);\r\n                    return false;\r\n                }\r\n\r\n                this._loadIframe(iframe);\r\n            },\r\n            // 设置是否自由输入\r\n            _setIsFreeInput: function(){\r\n                if(this.defaults.isFreeInput){\r\n                    this.$input.focus(); // 使输入框聚焦\r\n                }else{\r\n                    this.$input.addClass('noFreeInput');\r\n                    this.$tip = $(this.tipTmp).appendTo(this.$buttonBox);\r\n                }\r\n            },\r\n            // 初始化选择内容框\r\n            _initSelectContentBox: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n                // 给下拉视图绑定ID并获取\r\n                var comboBoxId;\r\n                if(!(self.$selectContentBox.attr(\"id\"))){\r\n                    comboBoxId = ui.guid();\r\n                    self.$selectContentBox.attr(\"id\", comboBoxId);\r\n                }else{\r\n                    comboBoxId = self.$selectContentBox.attr(\"id\");\r\n                }\r\n\r\n                // var isHasData = false;\r\n                // console.info(param.pageUrl);\r\n                if(param.pageUrl && param.pageUrl != \"\"){\r\n                    if(!(param.treeUrl == \"\" && param.tabUrl.length == 0)){\r\n                    //  isHasData = false;\r\n                    // }else{\r\n                        var $iframe = $(self.iframeTmpl);\r\n                        this.iframe = $iframe[0];\r\n                        // console.info(this.iframe);\r\n                        var iframeId = comboBoxId + \"_iframe\";\r\n                        $iframe.attr({\r\n                            \"id\": iframeId,\r\n                            \"name\": iframeId\r\n                        });\r\n\r\n                        self.$selectContentBox.html($iframe);\r\n\r\n                        // self._loadDropdown();\r\n\r\n                        // isHasData = true;\r\n                    }\r\n                }\r\n\r\n                return this.iframe;\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n                this._opt.maxNumber = ui.formatMaxNumber(param.maxNumber);\r\n\r\n                var value = param.value;\r\n                if(ui.parseToObj(value)){\r\n                    this._opt.value = ui.parseToObj(value);\r\n                }\r\n            },\r\n            // 绑定事件\r\n            _bindEvent: function(){\r\n                var self = this, param = this._opt;\r\n                // $(document).on('click', '[wui-combobox=\"dropdowm\"]', function (e) {\r\n                //     wui.stopPropagation(e);\r\n                // });\r\n                $(document).on('click', '[wui-data=\"menu\"]', function (e) {\r\n                    ui.stopPropagation(e);\r\n                    // console.error(e.target);\r\n                });\r\n\r\n                this.$viewBox.on({\r\n                    'hide.bs.dropdown': function (e) {\r\n                        // console.info(\"hide.bs.dropdown\");\r\n                        self.$selectContentBox.attr('aria-expanded', false);\r\n                        // that.$element.trigger('hide.bs.select', e);\r\n                    },\r\n                    'hidden.bs.dropdown': function (e) {\r\n                        // console.info(\"hidden.bs.dropdown\");\r\n                    },\r\n                    'show.bs.dropdown': function (e) {\r\n                        // console.info(\"show.bs.dropdown\");\r\n                        if(param.direction == \"auto\"){\r\n                            self._checkDropdownPosition();\r\n                        }\r\n                        self.$selectContentBox.attr('aria-expanded', true);\r\n                    },\r\n                    'shown.bs.dropdown': function (e) {\r\n                        // console.info(\"shown.bs.dropdown\");\r\n                        // console.info(param.isReload);\r\n                        self._setHeight();  // 设置高度\r\n                        if(param.isReload){\r\n                            \r\n                            self._initDropDownBox();    // 首次创建下拉视图\r\n                        }else{\r\n                            if(!self.iframe){\r\n                                // console.info(\"first load\");\r\n                                // self._setHeight();  // 设置高度\r\n                                self._initDropDownBox();    // 首次创建下拉视图\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                // this.$viewBox.dropdown('show');\r\n                self.$element.attr(\"ui-type\", self.pluginName);\r\n                this.$element.on(\"change\", function(e){\r\n                    var _value = $(this).val();\r\n                    if(_value != \"\"){\r\n                        var _data = ui.parseToObj(_value);\r\n                        if(_data){\r\n                            self.select(_data);\r\n                        }else{\r\n                            self.select(_value);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // this.hasDom = true;\r\n            },\r\n            // 设置下拉视图展开方向\r\n            _setDirection: function(){\r\n                var param = this._opt;\r\n                if(param.direction == \"auto\"){\r\n                    this._checkDropdownPosition();\r\n                }else if(param.direction != \"\"){\r\n                    this.$viewBox.addClass(param.direction);\r\n                }\r\n            },\r\n            _checkDropdownPosition: function(){\r\n                var self = this;\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = self.$Maxcontainer.offset();\r\n                // console.info(viewSize);\r\n                // console.info(offsetSize);\r\n                if((viewSize.height / 2) > offsetSize.top){\r\n                    self.$viewBox.removeClass(\"dropup\");\r\n                    self.$viewBox.addClass(\"dropdown\");\r\n                }else{\r\n                    self.$viewBox.addClass(\"dropup\");\r\n                    self.$viewBox.removeClass(\"dropdown\");\r\n                }\r\n            },\r\n            // 加载Iframe\r\n            _loadIframe: function(iframe){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                iframe = iframe || this.iframe;\r\n                $(iframe).on(\"load\", function(e){\r\n                    // console.info(e);\r\n                    if(self.listeners.indexOf('iframeLoaded') > -1) {\r\n                        if(!self.emit({type:'iframeLoaded',target: e.target})) return ;\r\n                    }\r\n                    // console.log(iframeId + \"加载完成\");\r\n                })\r\n                // self._loadDropdown();\r\n                // var self = this, param = this._opt, $selector = this.$element;\r\n                // var urlParams ={\r\n                //     selectorId: self.element\r\n                //     // 组件名  \r\n                //     , widgetName: self.pluginName   \r\n                //     // 树列表标题\r\n                //     , treeTitle: param.treeTitle    \r\n                //     // 树形数据URL\r\n                //     , treeUrl: param.treeUrl        \r\n                //     // 树形结构懒加载字段\r\n                //     , lazyField: param.lazyField \r\n                //     // 树形结构是否可搜索   \r\n                //     , isEnabledSearch: param.isEnabledSearch\r\n                //     , tabUrl: (ui.isArray(param.tabUrl)) ? param.tabUrl.join(\",\") : param.tabUrl  // 列表页面URL\r\n                //     , tabTitle: param.tabTitle      // 选项卡标题\r\n                //     , text: param.text              // text字段\r\n                //     , name: param.name              // name字段\r\n                //     , maxNumber: param.maxNumber    // 最多可选个数\r\n                //     , pageHeight: self.$selectContentBox.height()\r\n                //     , otherParam: JSON.stringify(param.otherParam)      // string json 可传入任意的json参数，特殊情况下，场景需要额外的参数\r\n                //     , data: self.get(\"value\")\r\n                // }\r\n                // console.info(urlParams)\r\n                \r\n                var urlParams ={\r\n                    selectorId: this.element\r\n                    // 组件名\r\n                    , widgetName: self.pluginName\r\n                    // 树列表标题\r\n                    , treeTitle: param.treeTitle    \r\n                    // 树形数据URL\r\n                    , treeUrl: param.treeUrl        \r\n                    // 树形结构懒加载字段\r\n                    , lazyField: param.lazyField \r\n                    // 树形结构是否可搜索   \r\n                    , isEnabledSearch: param.isEnabledSearch\r\n                    // 列表页面URL\r\n                    , tabUrl: param.tabUrl        \r\n                    // 选项卡标题\r\n                    , tabTitle: param.tabTitle \r\n                    // 列表页面URL\r\n                    // , gridUrl: opt.gridUrl        \r\n                    // // 列表标题\r\n                    // , gridTitle: opt.gridTitle \r\n\r\n                    // text字段     \r\n                    , text: param.text        \r\n                    // name字段\r\n                    , name: param.name       \r\n                    // 最多可选个数\r\n                    , maxNumber: param.maxNumber\r\n                    // 下拉页面高度\r\n                    // , pageHeight: this.$selectContentBox.height()\r\n                    // // 是否允许重复填充数据\r\n                    // , isAllowDuplicates: opt.isAllowDuplicates  \r\n                    // // 是否重写数据,即清空原有数据\r\n                    // , isRewrite: opt.isRewrite\r\n                    // // {Boolean} 是否在弹出层里面禁用删除传递的值\r\n                    // , isDisableRemove: opt.isDisableRemove\r\n                    // {JSON} 可传入任意的json参数,特殊情况下,场景需要额外的参数\r\n                    , otherParam: param.otherParam\r\n                    // 已选数据key字段\r\n                    , data: self.get(\"value\")\r\n\r\n                    // 拓展参数:树组件拓展配置,具体参数详见\"wui.tree\",不支持传递方法属性值\r\n                    , treeExtSetting: param.treeExtSetting\r\n                    // 拓展参数:选项卡组件拓展配置,具体参数详见\"wui.tabs\",不支持传递方法属性值\r\n                    , tabsExtSetting: param.tabsExtSetting\r\n                    // 拓展参数:列表组件拓展配置,具体参数详见\"wui.grid\",不支持传递方法属性值\r\n                    // , gridExtSetting: param.gridExtSetting\r\n                    // 拓展参数:标签组件拓展配置,具体参数详见\"wui.tagsinput\",不支持传递方法属性值\r\n                    // , tagsExtSetting: opt.tagsExtSetting\r\n                }\r\n                \r\n                if(param.beforeIframeLoad && typeof(param.beforeIframeLoad) === \"function\"){\r\n                    var _iframe = param.beforeIframeLoad(self.iframe, urlParams);\r\n                    // console.info(_iframe);\r\n                    if(!_iframe){\r\n                        return ;\r\n                    }else{\r\n                        if(_iframe.urlParams && typeof(_iframe.urlParams) === \"object\"){\r\n                            urlParams = _iframe.urlParams;\r\n                        }\r\n                    }\r\n                }\r\n                // console.info(urlParams);\r\n\r\n                var _src = ui.buildUrl(param.pageUrl, urlParams, true, true);\r\n                $(iframe).attr(\"src\", _src);       // 拼接其他参数到链接\r\n            },\r\n            _setHeight: function(){\r\n                // this.$selectContentBox.height(this.defaults.dropdownMaxHeight);\r\n                var self = this;\r\n                var viewSize = ui.getViewSize(),\r\n                    offsetSize = null,\r\n                    wScrollTop = $(window).scrollTop();\r\n\r\n                var maxHeight = 0;\r\n                if(self._opt.maxHeight == 0 || self._opt.maxHeight == \"0\"){\r\n                    if(self.$viewBox.hasClass(\"dropup\")){\r\n                        offsetSize = self.$buttonBox.offset();\r\n                        // console.info(offsetSize);\r\n                        var otherHeight = 0;\r\n                        this.$dropdownBox.children().not('[wui-data=\"menu\"]').each(function(i, elem){\r\n                            otherHeight += elem.offsetHeight;\r\n                        });\r\n                        // console.info(otherHeight);\r\n                        // maxHeight = offsetSize.top - otherHeight - 10;\r\n                        maxHeight = offsetSize.top - wScrollTop - otherHeight - 10;\r\n                    }else{\r\n                        offsetSize = self.$selectContentBox.offset();\r\n                        // maxHeight = viewSize.height - offsetSize.top - 30;\r\n                        maxHeight = viewSize.height - (offsetSize.top - wScrollTop) - 10;\r\n                    }\r\n                }else{\r\n                    maxHeight = parseInt(self._opt.maxHeight);\r\n                }\r\n\r\n                this.$selectContentBox.height(maxHeight);\r\n            },\r\n            _getTextJson: function(item){\r\n                var text = this._opt.text, textJson = {};\r\n                if(!text){  // 若text字段为空，则默认保存全部\r\n                    return null;\r\n                }else{\r\n                    var reg = /\\{\\{(.+?)\\}\\}/g;\r\n                    var result = text.match(reg);\r\n                    if(result){\r\n                        var _len = result.length;\r\n                        for(var _i = 0; _i < _len; _i++){\r\n                            var field = /^\\{\\{(.+?)\\}\\}$/.exec(result[_i]);\r\n                            if(field.length > 1){\r\n                                textJson[field[1]] = item;\r\n                                // showText = showText.replace(field[0], json[field[1]]);\r\n                            }\r\n                        }\r\n                    }else{\r\n                        var textFiled = text.split(\",\"), _len = textFiled.length;\r\n                        for(var _i = 0; _i < _len; _i++){\r\n                            textJson[textFiled[_i]] = item;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return textJson;\r\n            },\r\n            _parseText: function(json){\r\n                var text = this._opt.text;\r\n                var showText = text;\r\n\r\n                if(!text){  // 若text字段为空，则默认保存全部\r\n                    showText = JSON.stringify(json);\r\n                }else{\r\n                    var reg = /\\{\\{(.+?)\\}\\}/g;\r\n                    var result = text.match(reg);\r\n                    if(result){\r\n                        var _len = result.length;\r\n                        for(var _i = 0; _i < _len; _i++){\r\n                            var field = /^\\{\\{(.+?)\\}\\}$/.exec(result[_i]);\r\n                            if(field.length > 1){\r\n                                showText = showText.replace(field[0], json[field[1]]);\r\n                            }\r\n                        }\r\n                    }else{\r\n                        var textFiled = text.split(\",\");\r\n                        var _len = textFiled.length;\r\n                        if(_len < 2){\r\n                            showText = json[text]\r\n                        }else{\r\n                            var textJson = {};\r\n                            for(var _i = 0; _i < _len; _i++){\r\n                                var textTemp = textFiled[_i];\r\n                                textJson[textTemp] = json[textTemp];\r\n                            }\r\n                            showText = JSON.stringify(textJson);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return showText;\r\n            },\r\n            // return number/this \r\n            // -1:标签个数超过\r\n            // 0: 标签数据没传入\r\n            // 1: 添加数据类型不是string\r\n            // 2: 标签不存在选项中\r\n            // 3: 标签已经被选中\r\n            // 4: 对象中不存在value属性值\r\n            // this:添加成功\r\n            _addItem: function(item, isTriggerSelectEvent, isUpdateNode){\r\n                var self = this, param = this._opt, $selector = this.$element, _name = param.name, _text = param.text, _target = this.$buttonBox, _iframe = self.iframe;\r\n\r\n                if(this.listeners.indexOf('beforeItemSelect') > -1) {\r\n                    if(!this.emit({type:'beforeItemSelect',target: _target, iframe: _iframe})) return ;\r\n                }\r\n\r\n                // -1：超过可选个数(当parseInt(maxNumber)不等于0且不等于NaN时，已有节点个数>=maxNumber)\r\n                if (param.maxNumber !== false && (self.itemsArray.length >= param.maxNumber)){\r\n                    if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!this.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: -1, message: \"最多可添加\" + param.maxNumber + \"个标签\"})) return ;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // 0:标签数据没传入\r\n                if (item == undefined){\r\n                    if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!this.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: 0, message: \"添加的数据不能为空\"})) return ;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // 格式化字符串\r\n                if (typeof item === \"string\" && param.trimValue) {\r\n                    item = $.trim(item);\r\n                }\r\n\r\n                // 1:name属性值没设置，无法添加object类型数据\r\n                if (!_name){\r\n                    if(self.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!self.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: 1, message: \"name属性值没设置，无法添加object类型数据\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                var itemName, itemText, itemJson = {};\r\n                if(ui.isJson(item)){\r\n                    itemJson = item;\r\n                }else if(typeof(item) === \"string\"){\r\n                    itemJson[_name] = item;\r\n                    itemJson = $.extend(false, {}, itemJson, self._getTextJson(item));\r\n                }else{\r\n                    // 5:只能添加类型为object、string的数据\r\n                    if(self.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!self.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: 5, message: \"只能添加类型为object、string的数据\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n                itemName = itemJson[_name];\r\n\r\n                // 3:标签数据中不存在name参数对应的属性值\r\n                if(ui.isUndefined(itemName)){\r\n                    if(self.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!self.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: 3, message: \"添加的节点没有对应的 \" + _name + \" 字段值\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n                // 4:标签数据中不存在text参数对应的属性值\r\n                // if(itemJson[_text] == undefined){\r\n                //     if(self.listeners.indexOf('itemSelectError') > -1) {\r\n                //         if(!self.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: 4, message: \"添加的节点没有对应的 \" + _text + \" 字段值\"})) return ;\r\n                //     }\r\n                //     return false;\r\n                // }\r\n\r\n                if(this.itemsName.indexOf(itemName) > -1){\r\n                    // 3: 标签已经被选中\r\n                    if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!this.emit({type:'itemSelectError',target: _target, iframe: _iframe, item: item, code: 3, message: item + \" 已经被选中\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // itemName = itemJson[_name];\r\n                // itemText = itemJson[_text];\r\n\r\n                itemText = self._parseText(itemJson);\r\n                // console.error(itemText)\r\n                self.itemsName.push(itemName);\r\n                self.itemsText.push(itemText);\r\n                self.itemsArray.push(itemJson);\r\n\r\n                var $item = $(self.tagTmp);\r\n                if(param.tagClass != \"\"){\r\n                    $item.addClass(param.tagClass);\r\n                }\r\n\r\n                var showText = itemText;\r\n                // itemName, itemText, itemJson\r\n                $item.attr(\"title\", itemText);\r\n                if(param.maxChars > 0 && param.maxChars < itemText.length){\r\n                    showText = showText.substr(0, param.maxChars) + param.ellipsis;\r\n                }\r\n                $item.children('em').text(showText);\r\n                self.$input.before($item);\r\n                if(self.$tip && !self.$tip.hasClass('hide')){\r\n                    self.$tip.addClass('hide');\r\n                }\r\n\r\n                $selector.val(this.itemsName.join(\",\"));\r\n\r\n                $item.on(\"click\", function(event){\r\n                    ui.stopPropagation(event);  // 阻止事件冒泡\r\n                })\r\n                $item.children('[data-role=\"remove\"]').on(\"click\", function(event){\r\n                    ui.stopPropagation(event);  // 阻止事件冒泡\r\n                    var index = $(this).parent().index();\r\n                    self._removeItem(index, true);\r\n                })\r\n\r\n                var elem = self.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                    ui.validElement(self.$element);\r\n                }\r\n                \r\n                if(ui.isUndefined(isUpdateNode)){\r\n                    isUpdateNode = true;\r\n                }\r\n                if(isUpdateNode){\r\n                    var args = {\r\n                        item: itemJson,\r\n                        iframe: _iframe,   // iframe页面\r\n                        isChecked: true\r\n                    }\r\n                    if(param.updateSubpageItem && typeof(param.updateSubpageItem) === \"function\"){\r\n                        param.updateSubpageItem(args);\r\n                    }else{\r\n                        if(_iframe && _iframe.contentWindow){\r\n                            if(_iframe.contentWindow.gridPopupCommonService \r\n                                && typeof(_iframe.contentWindow.gridPopupCommonService) === \"object\"\r\n                                    && typeof(_iframe.contentWindow.gridPopupCommonService.updateResultNode) === \"function\"){\r\n                                // 调用公共页面方法更新节点\r\n                                _iframe.contentWindow.gridPopupCommonService.updateResultNode(itemJson, true, true);\r\n                            }else if(_iframe.contentWindow.updateSelectedNode\r\n                                    && typeof (_iframe.contentWindow.updateSelectedNode) === \"function\"){\r\n                                _iframe.contentWindow.updateSelectedNode(itemJson, true);\r\n                            }else{\r\n                                ui.logMessage(\"没有传入updateSubpageItem参数且下拉页面没有 updateSelectedNode() 方法\", \"wui.tagComboBox\", true)\r\n                            }\r\n                        }else{\r\n                            ui.logMessage(\"没有iframe\", \"wui.tagComboBox\", true)\r\n                        }\r\n                    }\r\n                }\r\n                  \r\n                if(ui.isUndefined(isTriggerSelectEvent)){\r\n                    isTriggerSelectEvent = true;\r\n                }\r\n                if(isTriggerSelectEvent){\r\n                    \r\n                    if(self.listeners.indexOf('itemSelected') > -1) {\r\n                        if(!self.emit({type:'itemSelected', target: _target, iframe: _iframe, item: itemJson})) return ;\r\n                    }\r\n                }\r\n\r\n                // self.on(\"itemUnselected\", function(e){\r\n                //     var args = {\r\n                //         item: e.item,\r\n                //         iframe: e.iframe,   // iframe页面\r\n                //         isChecked: false\r\n                //     }\r\n                //     if(param.updateSubpageItem && typeof(param.updateSubpageItem) === \"function\"){\r\n                //         param.updateSubpageItem(args);\r\n                //     }else{\r\n                //         if (args.iframe.contentWindow\r\n                //             && args.iframe.contentWindow.updateSelectedNode\r\n                //             && typeof (args.iframe.contentWindow.updateSelectedNode) === \"function\") {\r\n                //             args.iframe.contentWindow.updateSelectedNode(args.item, args.isChecked);\r\n                //         }else{\r\n                //             ui.logMessage(\"没有传入updateSubpageItem参数且下拉页面没有 updateSelectedNode() 方法\", \"wui.tagComboBox\", true)\r\n                //         }\r\n                //     }\r\n                // }).on(\"itemSelected\", function(e){\r\n                //     var args = {\r\n                //         item: e.item,\r\n                //         iframe: e.iframe,   // iframe页面\r\n                //         isChecked: true\r\n                //     }\r\n                //     if(param.updateSubpageItem && typeof(param.updateSubpageItem) === \"function\"){\r\n                //         param.updateSubpageItem(args);\r\n                //     }else{\r\n                //         if (args.iframe.contentWindow\r\n                //             && args.iframe.contentWindow.updateSelectedNode\r\n                //             && typeof (args.iframe.contentWindow.updateSelectedNode) === \"function\") {\r\n                //             args.iframe.contentWindow.updateSelectedNode(args.item, args.isChecked);\r\n                //         }else{\r\n                //             ui.logMessage(\"没有传入updateSubpageItem参数且下拉页面没有 updateSelectedNode() 方法\", \"wui.tagComboBox\", true)\r\n                //         }\r\n                //     }\r\n                // })\r\n                    \r\n                return this;\r\n            },\r\n            // code number/this \r\n            // 0: 标签数据没传入；\r\n            // 1: name参数没设置,无法删除object数据；\r\n            // 2：数据不存在\r\n            // 5: 添加数据类型不是object或者string\r\n            // this:添加成功\r\n            _removeItem: function(item, isIndex, isTriggerUnselectEvent, isUpdateNode){\r\n                // console.error(\"removeItem\");\r\n                // console.error(isTriggerSelectEvent);\r\n\r\n                var self = this, param = this._opt, $selector = this.$element, _name = param.name, _text = param.text, _target = this.$buttonBox, _iframe = this.iframe;\r\n                if(self.listeners.indexOf('beforeItemUnselect') > -1) {\r\n                    if(!self.emit({type:'beforeItemUnselect', target: _target, iframe: _iframe})) return ;\r\n                }\r\n\r\n                // 0:没传入节点数据\r\n                if (item === undefined){\r\n                    if(self.listeners.indexOf('itemUnselectError') > -1) {\r\n                        if(!self.emit({type:'itemUnselectError',target: _target, iframe: _iframe, item: item, code: 0, message: \"添加的数据不能为空\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // 1:name属性值没设置，无法删除object类型数据\r\n                if (typeof item === \"object\" && !param.name){\r\n                    if(self.listeners.indexOf('itemUnselectError') > -1) {\r\n                        if(!self.emit({type:'itemUnselectError',target: _target, iframe: _iframe, item: item, code: 1, message: \"name属性值没设置，无法删除object类型数据\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // console.info(item);\r\n                // console.info(self.itemsName)\r\n\r\n                isIndex = isIndex || false;\r\n                var index = -1;\r\n                if(isIndex){    // 索引值，从0开始\r\n                    index = item;\r\n                }else{\r\n                    if(ui.isJson(item)){\r\n                        var itemName = item[_name];\r\n                        index = self.itemsName.indexOf(itemName);\r\n                    }else if(typeof item === \"string\"){\r\n                        index = self.itemsName.indexOf(item);\r\n                    }else{\r\n                        // 5:只能根据类型为object、string的数据来删除节点\r\n                        if(self.listeners.indexOf('itemUnselectError') > -1) {\r\n                            if(!self.emit({type:'itemUnselectError',target: _target, iframe: _iframe, item: item, code: 5, message: \"只能根据类型为object、string的数据来删除节点\"})) return ;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                \r\n                if(index < 0){\r\n                    // 2:传入数据不存在\r\n                    if(self.listeners.indexOf('itemUnselectError') > -1) {\r\n                        if(!self.emit({type:'itemUnselectError',target: _target, iframe: _iframe, item: item, code: 2, message: \"传入数据不存在\"})) return ;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                var itemJson = self.itemsArray[index];\r\n                self.itemsName.splice(index,1);\r\n                self.itemsArray.splice(index,1);\r\n                self.itemsText.splice(index,1);\r\n                // console.info(itemJson);\r\n                if(self.itemsText.length == 0){\r\n                    if(self.$tip && self.$tip.hasClass('hide')){\r\n                        self.$tip.removeClass('hide');\r\n                    }\r\n                }\r\n\r\n                $selector.val(self.itemsName.join(\",\"));\r\n                self.$buttonBox.children('span').eq(index).remove();    // 移除标签\r\n\r\n                var elem = self.$element.get(0);\r\n                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n                    ui.validElement(self.$element);\r\n                }\r\n\r\n\r\n                if(ui.isUndefined(isUpdateNode)){\r\n                    isUpdateNode = true;\r\n                }\r\n                if(isUpdateNode){\r\n                    var args = {\r\n                        item: itemJson,\r\n                        iframe: _iframe,   // iframe页面\r\n                        isChecked: false\r\n                    }\r\n                    if(param.updateSubpageItem && typeof(param.updateSubpageItem) === \"function\"){\r\n                        param.updateSubpageItem(args);\r\n                    }else{\r\n                        if(_iframe && _iframe.contentWindow){\r\n                            if(_iframe.contentWindow.gridPopupCommonService \r\n                                && typeof(_iframe.contentWindow.gridPopupCommonService) === \"object\"\r\n                                    && typeof(_iframe.contentWindow.gridPopupCommonService.updateResultNode) === \"function\"){\r\n                                // 调用公共页面方法更新节点\r\n                                _iframe.contentWindow.gridPopupCommonService.updateResultNode(itemJson, false, true);\r\n                            }else if(_iframe.contentWindow.updateSelectedNode\r\n                                    && typeof (_iframe.contentWindow.updateSelectedNode) === \"function\"){\r\n                                _iframe.contentWindow.updateSelectedNode(itemJson, false);\r\n                            }else{\r\n                                ui.logMessage(\"没有传入updateSubpageItem参数且下拉页面没有 updateSelectedNode() 方法\", \"wui.tagComboBox\", true)\r\n                            }\r\n                        }else{\r\n                            ui.logMessage(\"没有iframe\", \"wui.tagComboBox\", true)\r\n                        }\r\n                    }\r\n                }\r\n                  \r\n                if(ui.isUndefined(isTriggerUnselectEvent)){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n                if(isTriggerUnselectEvent){\r\n                    if(self.listeners.indexOf('itemUnselected') > -1) {\r\n                        if(!self.emit({type:'itemUnselected',target: _target, iframe: _iframe, item: itemJson})) return ;\r\n                    }\r\n                }  \r\n\r\n                return this;\r\n            },\r\n            get: function(type){\r\n                type = type || \"json\";\r\n                var $selector = this.$element;\r\n                if(type == \"value\"){\r\n                    return this.itemsName;\r\n                }else if(type == \"json\"){\r\n                    return this.itemsArray;\r\n                }else if(type == \"text\"){\r\n                    return this.itemsText;\r\n                }else{\r\n                    return this.itemsArray;\r\n                }\r\n            },\r\n            select: function(data, isTriggerSelectEvent, isUpdateNode){\r\n                // console.info(\"select: \" + isTriggerSelectEvent);\r\n                if(data != undefined){\r\n                    if(typeof data === \"string\"){\r\n                        if(data != \"\"){\r\n                            var arr = data.split(\",\");\r\n                            for(var i = 0; i < arr.length; i++)\r\n                                this._addItem(arr[i], isTriggerSelectEvent, isUpdateNode);\r\n                        }else{\r\n                            // ui.logMessage(\"添加的节点不能为空字符串\", \"wui.tagComboBox\", true);\r\n                            if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if(!this.emit({type:'itemSelectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"添加的节点不能为空字符串\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(ui.isArray(data)){\r\n                        if(data.length > 0){\r\n                            for(var i = 0; i < data.length; i++)\r\n                                this._addItem(data[i], isTriggerSelectEvent, isUpdateNode);\r\n                        }else{\r\n                            // ui.logMessage(\"添加的节点不能为空数组\", \"wui.tagComboBox\", true);\r\n                            if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if(!this.emit({type:'itemSelectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"添加的节点不能为空数组\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(typeof(data) === \"object\"){\r\n                        if(data != null){\r\n                            this._addItem(data, isTriggerSelectEvent, isUpdateNode);    // 组合框\r\n                        }else{\r\n                            if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if(!this.emit({type:'itemSelectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"添加的节点不能为空对象\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else{\r\n                        // ui.logMessage(\"传入的参数值不支持赋值\", \"wui.tagComboBox\", true);\r\n                        if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                            if(!this.emit({type:'itemSelectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"传入的参数值不支持赋值\"})) return ;\r\n                        }\r\n                        return false;\r\n                    }\r\n\r\n                    return this;\r\n                }else{\r\n                    if(this.listeners.indexOf('itemSelectError') > -1) {\r\n                        if(!this.emit({type:'itemSelectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"必须传入添加的节点\"})) return ;\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            unselect: function(data, isTriggerSelectEvent, isUpdateNode){\r\n                // console.error(\"unselect\");\r\n                // console.error(isTriggerSelectEvent);\r\n                // console.info(\"unselect: \" + isTriggerSelectEvent);\r\n                var isIndex = false;\r\n                if(data != undefined){\r\n                    if(typeof data === \"string\"){\r\n                        if(data != \"\"){\r\n                            var arr = data.split(\",\");\r\n                            for(var i = 0; i < arr.length; i++)\r\n                                this._removeItem(arr[i], isIndex, isTriggerSelectEvent, isUpdateNode);\r\n                        }else{\r\n                            // ui.logMessage(\"移除的节点不能为空字符串\", \"wui.tagComboBox\", true);\r\n                            if(this.listeners.indexOf('itemUnselectError') > -1) {\r\n                                if(!this.emit({type:'itemUnselectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"移除的节点不能为空字符串\"})) return ;\r\n                            }\r\n                            return false;\r\n                        }\r\n                            \r\n                    }else if(ui.isArray(data)){\r\n                        if(data.length > 0){\r\n                            for(var i = 0; i < data.length; i++)\r\n                                this._removeItem(data[i], isIndex, isTriggerSelectEvent, isUpdateNode);\r\n                        }else{\r\n                            // ui.logMessage(\"移除的节点不能为空数组\", \"wui.tagComboBox\", true);\r\n                            if(this.listeners.indexOf('itemUnselectError') > -1) {\r\n                                if(!this.emit({type:'itemUnselectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"移除的节点不能为空数组\"})) return ;\r\n                            }\r\n                        }\r\n                            \r\n                    }else if(typeof data === \"object\" && data != null){\r\n                        if(data != null){\r\n                            this._removeItem(data, isIndex, isTriggerSelectEvent, isUpdateNode);\r\n                        }else{\r\n                            // ui.logMessage(\"移除的节点不能为空对象\", \"wui.tagComboBox\", true);\r\n                            if(this.listeners.indexOf('itemUnselectError') > -1) {\r\n                                if(!this.emit({type:'itemUnselectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"移除的节点不能为空对象\"})) return ;\r\n                            }\r\n                        }\r\n                    }else{\r\n                        // ui.logMessage(\"传入的参数类型不支持移除\", \"wui.tagComboBox\", true);\r\n                        if(this.listeners.indexOf('itemUnselectError') > -1) {\r\n                            if(!this.emit({type:'itemUnselectError',target: this.$container, iframe: this.iframe, item: data, code: 6, message: \"传入的参数类型不支持移除\"})) return ;\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                }\r\n            },\r\n            option: function(newOptions){\r\n                var params = this._opt;\r\n                if(!!newOptions){\r\n                    if(typeof newOptions === \"object\"){\r\n                        this._resetOption(newOptions);\r\n                    }else if(typeof newOptions === \"string\"){\r\n                        if(newOptions === \"getDefOpt\"){\r\n                            return config;\r\n                        }else{\r\n                            return params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n                        }\r\n                    }\r\n                        \r\n                }else{\r\n                    return params;\r\n                }\r\n            },\r\n            _resetOption: function(newOptions){\r\n                var params = this._opt,\r\n                    self = this,\r\n                    isClear = false,\r\n                    isRefreshDowndropPage = false;\r\n                    // newTagsParams = {}\r\n\r\n                if(newOptions.treeUrl == \"\" && newOptions.tabUrl.length == 0){\r\n                     ui.logError(\"下拉页面的数据源不能为空\", FRAME_NAME + \".\" + _widgetName, true);\r\n                     return false;\r\n                }\r\n\r\n                if(newOptions.direction != undefined && params.direction != newOptions.direction){\r\n                    this._opt.direction = newOptions.direction;\r\n                    this._setDirection();\r\n                }\r\n\r\n                if(newOptions.name && params.name != newOptions.name){\r\n                    isClear = true;\r\n                    this._opt.name = newOptions.name;\r\n                    // newTagsParams.name = newOptions.name;\r\n                }\r\n\r\n                if(newOptions.text && params.text != newOptions.text){\r\n                    isClear = true;\r\n                    this._opt.text = newOptions.text;\r\n                    // newTagsParams.text = newOptions.text;\r\n                }\r\n\r\n                if(isClear){\r\n                    this.empty();\r\n                }\r\n\r\n                // maxNumber: {number} 最多可选节点个数，0代表不限制\r\n                if(newOptions.maxNumber  && params.maxNumber  != newOptions.maxNumber ){\r\n                    var maxNumber = ui.formatMaxNumber(newOptions.maxNumber);\r\n                    this._opt.maxNumber = maxNumber;\r\n                    if(maxNumber !== false){\r\n                        var len = this.itemsName.length;\r\n                        while(len > maxNumber){\r\n                            this._removeItem(--len, true);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // {string} 树形懒加载字段\r\n                if(newOptions.lazyField != undefined && newOptions.lazyField != params.lazyField){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.lazyField = newOptions.lazyField;\r\n                }\r\n\r\n                // {string} 树形是否可搜索\r\n                if(newOptions.isEnabledSearch != undefined && newOptions.isEnabledSearch != params.isEnabledSearch){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.isEnabledSearch = newOptions.isEnabledSearch;\r\n                }\r\n\r\n                // {string} 传递到弹出页面的各个子页面的自定义json字符串数据\r\n                if(newOptions.otherParam != undefined && newOptions.otherParam != params.otherParam){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.otherParam = newOptions.otherParam;\r\n                }\r\n\r\n                // {string} 树列表标题\r\n                if(newOptions.treeTitle != undefined && newOptions.treeTitle != params.treeTitle){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.treeTitle = newOptions.treeTitle;\r\n                }\r\n\r\n                // {string} 树形数据URL\r\n                if(newOptions.treeUrl != undefined && newOptions.treeUrl != params.treeUrl){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.treeUrl = newOptions.treeUrl;\r\n                }\r\n\r\n                 // {string} Tab选项卡标题(多个数据用\",\"分隔开)\r\n                if(newOptions.tabTitle != undefined && newOptions.tabTitle != params.tabTitle){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.tabTitle = newOptions.tabTitle;\r\n                }\r\n\r\n                // {string} 列表页面URL(多个数据用\",\"分隔开)\r\n                if(newOptions.tabUrl != undefined && newOptions.tabUrl != params.tabUrl){\r\n                    isRefreshDowndropPage = true;\r\n                    this._opt.tabUrl = newOptions.tabUrl;\r\n                }\r\n\r\n                if(newOptions.pageUrl && params.pageUrl  != newOptions.pageUrl){\r\n                    if(newOptions.pageUrl != \"\"){\r\n                        isRefreshDowndropPage = true;\r\n                        this._opt.pageUrl = newOptions.pageUrl;\r\n                    }else{\r\n                        ui.logError(\"必须传入下拉页面地址\", FRAME_NAME + \".\" + _widgetName, true);\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                var self = this;\r\n\r\n                // isReload\r\n                if(newOptions.isReload != undefined && params.isReload != newOptions.isReload){\r\n                    this._opt.isReload = (newOptions.isReload || newOptions.isReload == \"true\")? true : false;\r\n                }\r\n\r\n                if(isRefreshDowndropPage){\r\n                    if(!this._opt.isReload){\r\n                        this._loadIframe();\r\n                    }\r\n                }\r\n\r\n            },\r\n            disabled: function(){\r\n                this.$input.attr(\"readonly\", true).attr(\"disabled\", \"disabled\");\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\").removeAttr(\"data-toggle\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').attr(\"disabled\", \"disabled\");\r\n                this.$buttonBox.addClass(\"disabled\");\r\n            },\r\n            enabled: function(){\r\n                this.$input.removeAttr(\"readonly\").removeAttr(\"disabled\");\r\n                this.$buttonBox.removeAttr(\"disabled\").attr(\"data-toggle\", \"dropdown\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').removeAttr(\"disabled\");\r\n                this.$buttonBox.removeClass(\"disabled\");\r\n            },\r\n            readonly: function(){\r\n                this.$input.attr(\"readonly\", true).attr(\"disabled\", \"disabled\").addClass(\"wui-readonly\");\r\n                this.$buttonBox.attr(\"disabled\", \"disabled\").removeAttr(\"data-toggle\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').attr(\"disabled\", \"disabled\");\r\n            },\r\n            readwrite: function(){\r\n                this.$input.removeAttr(\"readonly\").removeAttr(\"disabled\").removeClass(\"wui-readonly\");\r\n                this.$buttonBox.removeAttr(\"disabled\").attr(\"data-toggle\", \"dropdown\");\r\n                this.$buttonBox.find('[data-role=\"remove\"]').removeAttr(\"disabled\");\r\n            },\r\n            empty: function(isTriggerUnselectEvent){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                if(isTriggerUnselectEvent === undefined){\r\n                    isTriggerUnselectEvent = true;\r\n                }\r\n\r\n                // 是否触发节点删除事件\r\n                if(isTriggerUnselectEvent){\r\n                    var len = this.itemsName.length;\r\n                    while(len > 0){\r\n                        this._removeItem(--len, true);\r\n                    }\r\n                }else{\r\n                    this.itemsName = [];\r\n                    this.itemsArray = [];\r\n                    this.itemsText = [];\r\n\r\n                    if(self.$tip && self.$tip.hasClass('hide')){\r\n                        self.$tip.removeClass('hide');\r\n                    }\r\n\r\n                    $selector.val(\"\");\r\n                    self.$buttonBox.children('span').each(function(){\r\n                        $(this).remove();    // 移除标签\r\n                    })\r\n                }\r\n\r\n                if(params.onEmpty && typeof(params.onEmpty) === \"function\"){\r\n                    params.onEmpty();\r\n                } \r\n\r\n                    \r\n\r\n                // callback && typeof(callback) === \"function\" && callback();\r\n                return this;\r\n            },\r\n            refresh: function(){\r\n                this._loadIframe();\r\n                // this._loadDropdown();\r\n            },\r\n            destroy: function(){\r\n                if(this.listeners.indexOf('destroy') > -1) {\r\n                    if(!this.emit({type:'destroy',target: this.dom})) return ;\r\n                }\r\n\r\n                // this.$viewBox.remove();\r\n                // this.$element.show();\r\n                this.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.$Maxcontainer.replaceWith(this.initDom);\r\n\r\n                // callback && typeof(callback) === \"function\" && callback();\r\n                return this;\r\n            },\r\n            on: function(type, handler){\r\n                if(_widgetEventType.indexOf(type) > -1){    // WUI组件事件监听\r\n                    if(typeof this.handlers[type] === 'undefined') {\r\n                        this.handlers[type] = [];\r\n                        this.listeners.push(type);\r\n                    }\r\n                    this.handlers[type].push(handler);\r\n                }\r\n                return this;\r\n            },\r\n            off: function(type, handler){\r\n                var _i, _j, _listeners, _handlers, _len;\r\n                if(_widgetEventType.indexOf(type) > -1){    // 取消WUI组件事件监听\r\n                    if(this.handlers[type] instanceof Array) {\r\n                        _handlers = this.handlers[type];\r\n                        _listeners = this.listeners;\r\n\r\n                        for(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n                            if(_listeners[_i] === type) {\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if(handler === undefined){\r\n                            this.listeners.splice(_i, 1);\r\n                            delete this.handlers[type];\r\n                        }else{\r\n                            for(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n                                if(_handlers[_j] === handler) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if(_j < _len){\r\n                                this.handlers[type].splice(_j, 1);\r\n                                if(this.handlers[type].length == 0){\r\n                                    this.listeners.splice(_i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            emit: function(event){\r\n                // console.info(event);\r\n                if(!event.target) {\r\n                    if(!this.$Maxcontainer){\r\n                        event.target = this;\r\n                    }else{\r\n                        event.target = this.$Maxcontainer;\r\n                    }\r\n                }\r\n                if(this.handlers[event.type] instanceof Array) {\r\n                    var handlers = this.handlers[event.type];\r\n                    for(var i = 0, len = handlers.length; i < len; i++) {\r\n                        handlers[i](event);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            component: function(){\r\n                return this;\r\n            }\r\n        }\r\n\r\n        //fn就是prototype\r\n        $.fn[_pluginName] = function(param1){\r\n            // each表示对多个元素调用，用return 是为了返回this，进行链式调用\r\n            return this.each(function(){\r\n                //判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n                if(!$.data(document.getElementById(element), _pluginDataName)){\r\n                    //生成插件类实例。\r\n                    $.data(document.getElementById(element), _pluginDataName, new uiTagComboBox(this, param1));\r\n                }\r\n            });\r\n        }\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            if(!data){\r\n                ui.logError(\"wui.tagComboBox 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments,1);\r\n\r\n            if(typeof (data[funcName]) === \"function\"){\r\n                return data[funcName].apply(data, args);\r\n            }else{\r\n                ui.logWarn('wui.tagComboBox 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         * @event on\r\n         * @param eventType {string} 可监听事件类型如下：<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> eventType </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\"beforeItemSelect\"</td>\r\n                        <td>添加单个节点之前触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemSelectError\"</td>\r\n                        <td>单个节点添加出错触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemSelected\"</td>\r\n                        <td>单个节点添加成功触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeItemUnselect\"</td>\r\n                        <td>移除单个节点之前触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemUnselectError\"</td>\r\n                        <td>单个节点移除出错触发</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"itemUnselected\"</td>\r\n                        <td>单个节点移除成功触发</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         * @param func {function} 事件类型触发之后的执行方法\r\n         * @return 组件对象\r\n         * @example \r\n            \r\n            // 组件添加节点出错时被触发\r\n            uiTagComboBox.on(\"itemSelectError\", function(e){\r\n                console.log(\"itemSelectError\");\r\n            });\r\n                \r\n         */\r\n        function _on(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n         * @param func {function} 选填,事件类型触发之后的执行方法，不传则默认取消该类型绑定的全部事件方法\r\n         * @return 组件对象\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiTagComboBox.off(\"itemSelectError\");\r\n                \r\n         */\r\n        function _off(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n        * @param type {string} 获取的组件值的类型，可选:value/text/json，默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取组件值\r\n            var value = uiTagComboBox.get(\"value\");   // \"dsadasdaa01\"\r\n                \r\n        */\r\n        function _get(type){\r\n            return _executeMethod(\"get\", type);\r\n        }\r\n\r\n        /**\r\n        * 选中选项\r\n        * @method select\r\n        * @param data {object} 选中选项数据，多个数据用\",\"分隔或者数组封装传递\r\n        * @param isTriggerSelectedEvent {Boolean} 是否触发itemSelected监听事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值:此方法只设置组件值,需手动选中下拉框值,下拉页面提供 updateSelectedNode(item, isChecked)方法设置值\r\n            uiTagComboBox.select({\"id\" :\"dsadasdaa01\",\"name\":\"李文\",\"sex\":\"男\",\"age\":\"25\",\"email\":\"15875354693@163.com\"});\r\n                \r\n        */\r\n        function _select(data, isTriggerSelectedEvent, isUpdateNode){\r\n            return _executeMethod(\"select\", data, isTriggerSelectedEvent, isUpdateNode);\r\n        }\r\n\r\n        /**\r\n        * 取消选项选中\r\n        * @method unselect\r\n        * @param data {object} 取消选中选项数据，多个数据用\",\"分隔或者数组封装传递\r\n        * @param isTriggerUnselectedEvent {Boolean} 是否触发itemUnselected监听事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            // 取消选中组件值:此方法只更新组件值,需手动取消下拉框值,下拉页面提供 updateSelectedNode(item, isChecked)方法设置值\r\n            uiTagComboBox.unselect(\"dsadasdaa01\");\r\n                \r\n        */\r\n        function _unselect(data, isTriggerUnselectedEvent, isUpdateNode){\r\n            return _executeMethod(\"unselect\", data, isTriggerUnselectedEvent, isUpdateNode);\r\n        }\r\n\r\n        /**\r\n        * 阻止点击弹出层和删除标签\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 阻止点击弹出层和删除标签\r\n            uiTagComboBox.disabled();\r\n                \r\n        */\r\n        function _disabled(){\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 允许点击弹出层和删除标签\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 允许点击弹出层和删除标签\r\n            uiTagComboBox.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件只读\r\n            uiTagComboBox.readonly();\r\n                \r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件可读可写\r\n            uiTagComboBox.readwrite();\r\n                \r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiTagComboBox.option();\r\n                \r\n        */\r\n        function _option(params){\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @param {Boolean} [isTriggerUnselectEvent] 是否触发单个节点删除事件,默认是true\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空组件值：设置不可自由输入时，可通过此方法清除选中值\r\n            uiTagComboBox.empty();\r\n                \r\n        */\r\n        function _empty(isTriggerUnselectEvent){\r\n            return _executeMethod(\"empty\", isTriggerUnselectEvent);\r\n        }\r\n\r\n        /**\r\n        * 刷新组件下拉框\r\n        * @method refresh\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 刷新组件下拉框\r\n            uiTagComboBox.refresh();\r\n                \r\n        */\r\n        function _refresh(){\r\n            return _executeMethod(\"refresh\");\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiTagComboBox.destroy();\r\n                \r\n        */\r\n        function _destroy(){\r\n            return _executeMethod(\"destroy\");\r\n        }\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiTagComboBox.component();\r\n            console.info(component);\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n            // 重新初始化组件,若是传递参数，则\r\n            var myTagComboBox = uiTagComboBox.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n            if(!$.data(document.getElementById(element), _pluginDataName)){\r\n                $('#' + element)[_pluginName](opt);\r\n            }else{\r\n                if(opt && ui.isJson(opt)){\r\n                    return _executeMethod(\"option\", opt);\r\n                }else{\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n        return {\r\n            init: _init,\r\n            on: _on,\r\n            off: _off,\r\n            get: _get,\r\n            // set: _set,\r\n            select: _select,\r\n            unselect: _unselect,\r\n            enabled: _enabled,      // 允许点击弹出下拉框\r\n            disabled: _disabled,    // 阻止点击弹出下拉框\r\n            readwrite: _readwrite,\r\n            readonly: _readonly,\r\n            option: _option,\r\n            refresh: _refresh,\r\n            empty: _empty,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            destroy: _destroy\r\n        }\r\n    }\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","/*\r\n * wui.tree\r\n * 树控件\r\n * Date : 2018-01-04\r\n * by chenzx\r\n * 思路：\r\n * 封装插件,将插件初始化赋给wui\r\n * 场景：\r\n * 1、组合框的下拉树结构选择(Get)\r\n * 2、页面导航树,点击之后跳转到对应的链接(Get)\r\n * 3、树懒加载,初始化有值时,怎样设置懒加载时能加载到值(Get)\r\n * 4、右键菜单(Get)\r\n */\r\n\r\n;(function(ui, $, undefined) {\r\n\r\n    /**\r\n     * <h3>树组件</h3>\r\n     * <ol>\r\n     * <li>支持加载后台服务作为下拉数据源; </li>\r\n     * <li>支持树增加复选框; </li>\r\n     * <li>支持多选个数限制; </li>\r\n     * <li>多个事件触发; </li>\r\n     * <li>支持开启右键菜单功能</li>\r\n     * <li>支持右键菜单根据节点不同显示不同选项</li>\r\n     * </ol>\r\n     * <h3>依赖插件</h3>\r\n     * <ul>\r\n     * <li><a href=\"https://www.cnblogs.com/zhengshuangliang/p/4642987.html\" target=\"_blank\" title=\"参考网址\">fancytree</a> </li>\r\n     * </ul>\r\n     * <h3>需引入插件</h3>\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/fancytree/themes/skin-xp/ui.fancytree.css\"&nbsp;/&gt;\r\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/jquery-contextMenu/jquery.contextMenu.css&quot;&nbsp;/&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/jquery-ui/jquery-ui-latest.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/fancytree/jquery.fancytree.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/fancytree/jquery.fancytree.contextMenu.js&quot;&gt;&lt;/script&gt;</code></pre>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiTree\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.tree/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.tree/set\"}}{{/crossLink}}: 设置组件值 </li>\r\n     * <li>{{#crossLink \"wui.tree/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.tree/select\"}}{{/crossLink}}: 开启复选框时,选中选项 </li>\r\n     * <li>{{#crossLink \"wui.tree/unselect\"}}{{/crossLink}}: 开启复选框时,取消选项选中 </li>\r\n     * <li>{{#crossLink \"wui.tree/selectAll\"}}{{/crossLink}}: 开启复选框时,选中全部选项 </li>\r\n     * <li>{{#crossLink \"wui.tree/unselectAll\"}}{{/crossLink}}: 开启复选框时,取消选中全部选项 </li>\r\n     * <li>{{#crossLink \"wui.tree/enabled\"}}{{/crossLink}}: 启用全部树节点 </li>\r\n     * <li>{{#crossLink \"wui.tree/disabled\"}}{{/crossLink}}: 禁用全部树节点 </li>\r\n     * <li>{{#crossLink \"wui.tree/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.tree/refresh\"}}{{/crossLink}}: 刷新树 </li>\r\n     * <li>{{#crossLink \"wui.tree/empty\"}}{{/crossLink}}: 清空组件值 </li>\r\n     * <li>{{#crossLink \"wui.tree/method\"}}{{/crossLink}}: 调用第三方树插件方法 </li>\r\n     * <li>{{#crossLink \"wui.tree/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * <li>{{#crossLink \"wui.tree/filter\"}}{{/crossLink}}: 过滤树节点 </li>\r\n     * <li>{{#crossLink \"wui.tree/visitTree\"}}{{/crossLink}}: 遍历整棵fancytree树对象 </li>\r\n     * <li>{{#crossLink \"wui.tree/getTree\"}}{{/crossLink}}: 获取整棵fancytree树对象 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class tree\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {string/Object} option.loadDataUrl 树的数据源,默认是空,当传入String会被认为是服务地址,当传入Object会被作为数据直接按照jsonReader解析,且自定义搜索只会搜索本地数据 \r\n     *  @param {Number} [option.maxNumber] 最多可选个数,默认为false,即不限制\r\n     *  @param {Number} [option.minExpandLevel]  顶级节点是否可折叠,1: 可折叠; 2不可折叠,默认是1\r\n     *  @param {string} [option.value]  初始化完成时,选中值的value属性值,默认是\"\"\r\n     *  @param {string} option.name 获取组件关键字段名,get(\"value\")时获取选中节点的此字段值集合,默认是\"id\"\r\n     *  @param {string} option.text 获取组件文本字段名,get(\"text\")时获取选中节点的此字段值集合,默认是\"name\"   \r\n     *  @param {Boolean} [option.isFullScreen]  是否撑满一屏,默认是true\r\n     *  @param {JSON} [option.offset]   当设置isFullScreen为true时，计算列表全屏尺寸时距离父节点的偏移量   \r\n     *  @param {Number} [option.offset.top]   距离父节点的顶部偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.offset.bottom]   距离父节点的底部偏移量,单位是\"px\",默认是0  \r\n     *  @param {Number} [option.offset.left]   距离父节点的左边偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.offset.right]   距离父节点的右边偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.height]  树高度,若设置了\"isFullScreen:true\"则此参数无效,若要生效,先设置\"isFullScreen:false\",默认是\"auto\" \r\n     *  @param {Number} [option.width]  树宽度,若设置了\"isFullScreen:true\"则此参数无效,若要生效,先设置\"isFullScreen:false\",默认是\"100%\",即占满父容器宽度\r\n     *  @param {boolean} [option.isEnabledSearch]  是否启用搜索栏,默认是false  \r\n     *  @param {JSON} [option.searchBarSetting]  当开启搜索时,搜索栏配置   \r\n     *  @param {String} [option.searchBarSetting.searchText]  搜索按钮显示文本,可通过onEnter参数配置是否触发Enter搜索,默认是\"&lt;i class=\"fa fa-search\"&gt;&lt;/i&gt;\"\r\n     *  @param {String} [option.searchBarSetting.searchField]  后台服务搜索字段名,默认是\"key\" \r\n     *  @param {String} [option.searchBarSetting.width]  搜索栏宽度,默认是\"auto\"\r\n     *  @param {Boolean} [option.searchBarSetting.isLocalData]  是否搜索本地数据,默认是true,不会再发送接口请求,若为false,会向后台发起搜索请求\r\n     *  @param {String} [option.searchBarSetting.searchUrl]  自定义搜索服务地址,默认是空,则采用初始化传递的\"loadDataUrl\"参数\r\n     *  @param {String} [option.searchBarSetting.searchBtnClass]  搜索按钮样式,默认是\"wui-btn-primary\"\r\n     *  @param {String} [option.lazyField]  懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"parentId\" \r\n     *  @param {boolean} [option.isClickFirstNode]  是否树加载完成点击第一个节点切触发点击事件,默认是true \r\n     *  @param {boolean} [option.isAddRoot] 是否添加虚拟根节点,默认是false\r\n     *  @param {boolean} [option.rootSetting]  虚拟根节点设置\r\n     *  @param {boolean} [option.rootSetting.key]  虚拟根节点key字段值,默认是\"\"\r\n     *  @param {boolean} [option.rootSetting.title]  虚拟根节点标题,可通过wui.language.js文件里面的tree.virtualRootTitle参数配置\r\n     *  @param {boolean} [option.rootSetting.folder]  虚拟根节点是否父节点标识字段名,默认是true\r\n     *  @param {boolean} [option.rootSetting.lazy]  虚拟根节点是否懒加载标志,默认是false\r\n     *  @param {boolean} [option.rootSetting.expand]  虚拟根节点是否默认展开,默认是true\r\n     *  @param {boolean} [option.isShowCheckBox]  是否开启复选框,默认是false\r\n     *  @param {boolean} [option.isChangeAllChildren]  开启复选框时,当选中父节点时，是否选中该节点下的全部子节点,单选时都为false,默认是false\r\n     *  @param {boolean} [option.expandLevel]  初始化完成默认展开第几层,若此参数大于该分支层级,则默认展开到该分支最底层,0或者false表示不展开,若为true,表示全展开,数字1表示展开第一级,即根节点,默认为1\r\n     *  @param {JSON} [option.contextMenu]  右键菜单配置。示例如下,参数含义详见子表。\r\n<pre class=\"language-js\"><code class=\"language-js\">// 设置右键菜单\r\n{\r\n    contextMenu:{\r\n        // 配置节点右键点击选项\r\n        menu: function(node){\r\n            // 根据节点是否为根节点设置菜单项\r\n            var parent = node.parent.parent;\r\n            var items = {};\r\n            if(!parent){\r\n                // 根节点\r\n                items.add = { \"name\": \"新增\", \"icon\": \"add\" };\r\n                items.view = { \"name\": \"查看\", \"icon\": \"fa-search\" };\r\n                items.edit = { \"name\": \"编辑\", \"icon\": \"edit\" };\r\n            }else{\r\n                items.view = { \"name\": \"查看\", \"icon\": \"fa-search\" };\r\n                items.edit = { \"name\": \"编辑\", \"icon\": \"edit\" };\r\n                items.delete = { \"name\": \"删除\", \"icon\": \"delete\" };\r\n            }\r\n            \r\n            // 加入分割线\r\n            items.sep1 = \"---------\";\r\n            \r\n            // 懒加载操作\r\n            if(node.isLazy()){\r\n                items.unlazy = {name: \"取消懒加载\", icon: \"fa-spinner\"};\r\n            }else{\r\n                items.lazy = {name: \"懒加载\", icon: \"fa-spinner\"};\r\n            }\r\n\r\n            return items;\r\n        },\r\n        // 节点右键选项触发方法\r\n        actions: function(node, action, options){\r\n            if(action === \"disable\"){\r\n                // 设置节点是否启用状态:参数1:设置启用状态true/false,参数2:是否关联子节点\r\n                node.setEnable(false, true);\r\n            }else if(action === \"enable\"){\r\n                node.setEnable(true, true);\r\n            }else if(action === \"del\"){\r\n                var _deleteCallback = function(key){\r\n                    // 前端节点删除\r\n                    node.remove();\r\n                    wui.successNotice(\"节点\" + key + \"已被删除\");\r\n                }\r\n                wui.deleteDataByIds(node.key, _deleteCallback, \"确定删除此节点?\");\r\n                    \r\n            }else if(action === \"lazy\"){\r\n                // 设置文件夹标志\r\n                node.folder = true;\r\n                // 设置懒加载\r\n                node.resetLazy();\r\n            }else if(action === \"unlazy\"){\r\n                // 取消懒加载\r\n                node.removeChildren();\r\n                node.expanded = false;\r\n                node.lazy = false;\r\n                node.children = undefined;\r\n                node.folder = false;\r\n                node.renderStatus();\r\n            }else{\r\n                // 其他操作\r\n            }\r\n        },\r\n        ...\r\n    },\r\n    ...\r\n}</code></pre>\r\n     *  @param {JSON/Function} [option.contextMenu.menu]  右键菜单选项内容,返回格式为{\"edit\": { \"name\": \"Edit\", \"icon\": \"edit\" },...}, 若传递参数为Function,则可传递参数node:当前点击树节点对象\r\n     *  @param {Function} [option.contextMenu.actions]  右键菜单选项点击触发事件,传递参数:参数node:点击树节点对象,参数action:点击菜单选项操作名(返回对应的menu的name属性值),参数options:右键菜单设置的参数集\r\n     *  @param {JSON} [option.filter]  树节点过滤配置参数\r\n     *  @param {Boolean} [option.filter.autoApply]  如果加载懒惰数据，则重新应用最后一个筛选器,默认为true\r\n     *  @param {Boolean} [option.filter.autoExpand]  在筛选时展开包含匹配的所有分支,默认是 true\r\n     *  @param {Boolean} [option.filter.counter]  显示在父图标附近有匹配的子节点数目的徽章,默认为 false\r\n     *  @param {Boolean} [option.filter.fuzzy]  按顺序匹配单个字符, 例如:'fb' 会匹配到 'FooBar',默认为 false\r\n     *  @param {Boolean} [option.filter.hideExpandedCounter]  如果所有子节点都被过滤器隐藏，则隐藏展开图标,默认为true\r\n     *  @param {Boolean} [option.filter.hideExpanders]  树节点过滤配置参数,默认为空即不启用,默认为false\r\n     *  @param {Boolean} [option.filter.highlight]  使用&lt;mark&gt;标签高亮突出匹配字符,默认为true\r\n     *  @param {Boolean} [option.filter.leavesOnly]  仅匹配结束节点,默认为false\r\n     *  @param {Boolean/String} [option.filter.nodata]  如果结果为空，则显示“无数据”状态节点,默认为true\r\n     *  @param {Boolean} [option.filter.mode]  不匹配节点展示模式:\"dimm\"(灰色展示)/\"hide\"(删除不匹配的节点),默认为\"hide\"\r\n     *  @param {JSON} [option.jsonReader]  服务器返回数据解析配置\r\n     *  @param {String} [option.jsonReader.root]  json中代表实际模型数据的入口,默认是\"\"\r\n     *  @param {String} [option.jsonReader.branchId]  父节点关键字段名,默认是\"key\"\r\n     *  @param {String} [option.jsonReader.branchName]  父节点文本字段名,默认是\"title\"\r\n     *  @param {String} [option.jsonReader.leaveId]  叶子节点关键字段名,默认是\"key\"\r\n     *  @param {String} [option.jsonReader.leaveName]  叶子节点文本字段名,默认是\"title\"\r\n     *  @param {String} [option.jsonReader.children]  子节点字段名,默认是\"children\"\r\n     *  @param {String} [option.jsonReader.folder]  是否父节点标识字段名,默认是\"folder\"\r\n     *  @param {String} [option.jsonReader.enable]  是否启用节点标识字段名,默认是\"enable\"\r\n     *  @param {JSON/Function} [option.formatParams]  (此参数属性设置按照第三方插件配置参数命名)为了弥补组件对第三方插件的拓展的不足,此参数若为JSON对象,则将会直接拓展到组件初始化参数配置中,直接对第三方插件进行初始化设置,设置之前,请必须了解清楚是否会覆盖默认参数,默认是null,也可传递一个方法，传递的参数为第三方插件初始化参数,动态修改并返回一个参数对象作为最终初始化配置\r\n     *  @param {Function} [option.icon]  自定义节点图标,传递参数event(节点事件对象), data(节点数据),例如：<pre class=\"language-js\"><code class=\"language-js\">// 自定义图标\r\n{\r\n    ...\r\n    icon: function(event, data){\r\n        // 增加判断返回特定的图标类\r\n        if( data.node.isFolder() ) {\r\n            return \"fa fa-caret-down\";\r\n        }\r\n    }\r\n}</code></pre>\r\n     *  @param {Function} [option.onActivate]  不开启复选框时,点击节点触发事件,传递参数event(点击节点事件), data(点击节点数据),旧参数名：activate\r\n     *  @param {Function} [option.onLazyLoad]  自定义懒加载方法,返回\"lazy\"字段表示该树节点是懒加载,传递参数event(节点事件), data(懒加载节点数据),示例如下\r\n<pre class=\"language-js\"><code class=\"language-js\">// 自定义懒加载方法\r\n{\r\n    onLazyLoad: function(event, data){\r\n        var node = data.node;\r\n        var lazyData = {};\r\n        lazyData[\"parentId\"] = node.key;\r\n        data.result = {\r\n            url : \"xxx.json\", // 自定义懒加载服务地址\r\n            data : lazyData,  // 自定义懒加载参数\r\n            debugDelay : 200\r\n        };\r\n    },\r\n  ...\r\n}</code></pre>\r\n     *  @param {Function} [option.onAfterLoad]  每次加载后,执行的函数,传递参数event(节点事件), data(节点数据),旧参数名:afterLoad\r\n     *  @param {Function} [option.onSelectedNode]  开启复选框时,改变checkbox的回调函数,参数item:当前改变节点数据,参数node:树节点对象,旧参数名：selectFun\r\n     *  @param {Function} [option.onBeforeSelect]  开启复选框时,在改变复选框之前的回调函数,参数event:触发事件, data:要改变的节点数据,旧参数名：beforeSelect\r\n     *  @param {Function} [option.onCreated]  树组件被创建完成时执行方法(只在组件被创建时执行一次),传递参数 element:树节点dom对象, event:事件对象\r\n     *  @param {Function} [option.onCreateNode]  树节点首次被创建时触发的回调函数,传递参数 event:事件对象,data:树组件数据\r\n     *  @param {Function} [option.onRenderNode]  每次重新渲染节点时触发的回调函数,传递参数 event:事件对象,data:树组件数据\r\n     *  @param {Function} [option.onRenderTitle]  每次重新渲染节点标题时触发的回调函数,传递参数 event:事件对象,data:树组件数据\r\n     *  @param {Function} [option.onBeforeExpand]  节点展开之前执行的函数,传递参数event(节点事件), data(节点数据)\r\n     *  @param {Function} [option.onExpand]  节点展开之后执行的函数,传递参数event(节点事件), data(节点数据)\r\n     *  @param {Function} [option.onCollapse]  节点收缩之后执行的函数,传递参数event(节点事件), data(节点数据)\r\n     *  @param {Function} [option.onInit]  树组件数据初始化完成执行方法(每一次懒加载也会执行此方法),传递参数 event:事件对象,data:树组件数据\r\n     *  @param {Function} [option.onLoadError]  树组件数据请求出错执行方法,传递参数 event:事件对象,data:树组件数据\r\n     *  @param {Function} [option.onInput]  当启用搜索栏时,搜索栏输入框输入时触发搜索事件,默认是false,表示禁用,若为true则开启,可自定义方法,传递参数element:输入框节点对象;event:事件对象\r\n     *  @param {Function} [option.onEnter]  当启用搜索栏时,搜索栏Enter回车时触发搜索事件,默认是true,设置为false时禁用,可自定义方法,传递参数element:输入框节点对象;event:事件对象\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件样式 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/fancytree/themes/skin-xp/ui.fancytree.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery-contextMenu/jquery.contextMenu.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Tree: &lt;div id=\"treeId\"&gt;&lt;/div&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件脚本 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery-ui/jquery-ui-latest.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/fancytree/jquery.fancytree.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/fancytree/jquery.fancytree.contextMenu.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiTree = wui.tree( \"treeId\", {\r\n                \"loadDataUrl\": \"json/tree.json\",\r\n                \"isShowCheckBox\": true,    // 开启复选框,默认是false\r\n                // 右键功能\r\n                \"contextMenu\": {\r\n                    // 配置节点右键点击选项\r\n                    \"menu\": function(node){\r\n                        // 根据节点是否为根节点设置菜单项\r\n                        var parent = node.parent.parent;\r\n                        var items = {};\r\n                        if(!parent){\r\n                            // 根节点\r\n                            items.add = { \"name\": \"新增\", \"icon\": \"fa-plus\" };\r\n                            items.view = { \"name\": \"查看\", \"icon\": \"fa-eye\" };\r\n                            items.edit = { \"name\": \"编辑\", \"icon\": \"fa-edit\" };\r\n                        }else{\r\n                            items.view = { \"name\": \"查看\", \"icon\": \"fa-eye\" };\r\n                            items.edit = { \"name\": \"编辑\", \"icon\": \"fa-edit\" };\r\n                            items.delete = { \"name\": \"删除\", \"icon\": \"fa-trash\" };\r\n                        }\r\n                        return items;\r\n                    },\r\n                    // 节点右键选项触发方法\r\n                    \"actions\": function (node, action, options) {\r\n                        wui.notice(\"您点击了 \" + action + \" 菜单项\");\r\n                    }\r\n                }\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n    ui.tree = function(element, options) {\r\n        // 控件常规配置\r\n        var _pluginName = \"uiTree\",\r\n            _pluginDataName = 'plugin_' + _pluginName,\r\n            _widgetName = \"tree\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if (!ui.checkIsLoadPlugins(_widgetName)) {\r\n            return false;\r\n        }\r\n\r\n        if (!$(\"#\" + element).exist()) {\r\n            ui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n            return false;\r\n        }\r\n\r\n        var _widgetEventType = [\"beforeItemSelect\", \"itemSelectError\", \"itemSelected\", \"beforeItemUnselect\", \"itemUnselectError\", \"itemUnselected\"]; // wui组件监听事件类型\r\n\r\n        var config = {\r\n            // {String/Object} 树的数据源,默认是空,当传入String会被认为是服务地址,当传入Object会被作为数据直接按照jsonReader解析,且自定义搜索只会搜索本地数据\r\n            loadDataUrl: \"\",\r\n\r\n            // {String} 服务地址返回数据类型\r\n            dataType: \"json\",\r\n\r\n            // {string} 默认选中的节点的name属性字段值,多个数据用\",\"分隔\r\n            value: \"\",\r\n\r\n            // {Number} 顶级节点是否可折叠,1: 可折叠; 2不可折叠\r\n            minExpandLevel: 1,\r\n\r\n            // {number} 最多可选个数,默认为0,即不限制\r\n            maxNumber: false,       \r\n\r\n            // {string} 获取组件关键字段名,get(\"value\")时获取选中节点的此字段值集合,默认是\"id\" \r\n            name: \"id\",   \r\n\r\n            // {string} 获取组件文本字段名,get(\"text\")时获取选中节点的此字段值集合,默认是\"name\"\r\n            text: \"name\",\r\n\r\n            // {string} 高度,默认是\"100%\"\r\n            height: \"auto\",\r\n\r\n            // {string} 宽度,默认是\"100%\",即占满父容器宽度\r\n            width: \"100%\",\r\n\r\n            // {Boolean} 是否计算高度(撑满一屏)\r\n            isFullScreen: true,\r\n\r\n            // {JSON} 列表计算全屏尺寸的偏移量\r\n            offset: {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            },\r\n            /* 自定义图标 Start */\r\n            // , icon: function(event, data){\r\n            //     if( data.node.isFolder() ) {\r\n            //         return \"fa fa-caret-down\";\r\n            //     }\r\n            // }\r\n\r\n            // {Function} 自定义节点图标,传递参数event:节点事件对象,data:节点数据\r\n            icon: ui.CONSTANTS.EMPTYFUNC,\r\n            glyph: {\r\n                // The preset defines defaults for all supported icon types.\r\n                // It also defines a common class name that is prepended (in this case 'fa ')\r\n                preset: \"awesome4\",\r\n                map: {\r\n                    // 覆盖默认的图标库\r\n                    _addClass: \"fa \",\r\n                    checkbox: \"fa-square-o\",\r\n                    checkboxSelected: \"fa-check-square-o\",\r\n                    checkboxUnknown: \"fa-square\",\r\n                    dragHelper: \"fa-arrow-right\",\r\n                    dropMarker: \"fa-long-arrow-right\",\r\n                    error: \"fa-warning\",\r\n                    expanderClosed: \"fa-caret-right\",\r\n                    expanderLazy: \"fa-angle-right\",\r\n                    expanderOpen: \"fa-caret-down\",\r\n                    loading: \"fa-spinner fa-pulse\",\r\n                    nodata: \"fa-meh-o\",\r\n                    noExpander: \"\",\r\n                    radio: \"fa-circle-thin\", // \"fa-circle-o\"\r\n                    radioSelected: \"fa-circle\",\r\n                    // Default node icons.\r\n                    // (Use tree.options.icon callback to define custom icons based on node data)\r\n                    doc: \"fa-file-o\",\r\n                    docOpen: \"fa-file-o\",\r\n                    folder: \"fa-folder-o\",\r\n                    folderOpen: \"fa-folder-open-o\"\r\n                }\r\n            },\r\n            /* 自定义图标 End */\r\n\r\n            // {Boolean} 是否添加虚拟根节点,默认是false\r\n            isAddRoot: false,\r\n\r\n            // {json} 虚拟根节点设置\r\n            rootSetting: {\r\n                key: \"\",\r\n                title: ui.language.tree.virtualRootTitle,\r\n                folder: true,\r\n                lazy: false,\r\n                expand: true\r\n            },\r\n\r\n            // {boolean} 是否开启复选框\r\n            isShowCheckBox: false,\r\n\r\n            // {Boolean} 开启复选框时,当选中父节点时，是否选中该节点下的全部子节点,默认是false\r\n            isChangeAllChildren: false,\r\n\r\n            // {boolean} 是否启用搜索(默认按Enter即为查找)\r\n            isEnabledSearch: false,\r\n\r\n            // {Boolean} 是否严格过滤,若为true,过滤的数据不会触发onSelectedNode/onActivate等事件,若为false,则会触发,默认是true \r\n            isStrictFilter: true,\r\n\r\n            // {Boolean} 是否树加载完成点击第一个节点切触发点击事件,默认是true\r\n            isClickFirstNode: true,\r\n\r\n            activeNode: \"\",\r\n\r\n            // 当开启搜索时,搜索栏设置 \r\n            searchBarSetting: {\r\n                // {string} 搜索按钮显示文本,可通过onEnter参数配置是否触发Enter搜索,默认是\"&lt;i class=\"fa fa-search\"&gt;&lt;/i&gt;\"\r\n                searchText: '<i class=\"fa fa-search\"></i>',\r\n\r\n                // {string} 重置按钮显示文本,默认是false,表示不显示'<i class=\"fa fa-refresh\"></i>'\r\n                clearText: false,\r\n\r\n                // {string} 向后台服务发起搜索请求时传递的字段名,默认是\"key\" \r\n                searchField: \"key\",\r\n\r\n                // {String} 搜索栏宽度,默认是\"auto\"\r\n                width: \"auto\",\r\n\r\n                // {Boolean} 是否搜索本地数据,默认是true,不会再发送接口请求,若为false,会向后台发起搜索请求\r\n                isLocalData: true,\r\n\r\n                // {String} 自定义搜索服务地址,默认是空,则采用初始化传递的\"loadDataUrl\"参数\r\n                searchUrl: null,\r\n\r\n                // 搜索结果如果有节点，是否新增虚拟根节点\r\n                // isAddRoot: true,\r\n\r\n                // {String} 搜索按钮样式,默认是\"wui-btn-info\"\r\n                searchBtnClass: \"wui-btn-info\",\r\n\r\n                // {String} 搜索按钮样式,默认是\"wui-btn-primary\"\r\n                clearBtnClass: \"wui-btn-info\"\r\n            },\r\n\r\n            // {Function} 懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"parentId\"\r\n            lazyField: \"parentId\",\r\n\r\n            // {number} 初始化完成默认展开第几层,若此参数大于该分支层级,则默认展开到该分支最底层,0或者false表示不展开,若为true,表示全展开,数字1表示展开第一级,即根节点,默认为1\r\n            expandLevel: 1,          \r\n\r\n            // {JSON} 右键菜单,默认为空,设置格式为{menu:{\"edit\": { \"name\": \"Edit\", \"icon\": \"edit\" },...},actions:function(node, action, options){}}  \r\n            contextMenu: null,\r\n\r\n            // {JSON} 树节点过滤配置,默认为空\r\n            filter: {\r\n                // 如果加载懒惰数据，则重新应用最后一个筛选器\r\n                autoApply: true,\r\n\r\n                // 在筛选时展开包含匹配的所有分支\r\n                autoExpand: true,\r\n\r\n                // 显示在父图标附近有匹配的子节点数目的徽章\r\n                counter: false,\r\n\r\n                // 按顺序匹配单个字符, 例如:'fb' 会匹配到 'FooBar'\r\n                fuzzy: false,\r\n\r\n                // 如果父节点展开，则隐藏计数器徽章\r\n                hideExpandedCounter: true,\r\n\r\n                // 如果所有子节点都被过滤器隐藏，则隐藏展开图标\r\n                hideExpanders: false,\r\n\r\n                // 使用<mark>标签高亮突出匹配字符\r\n                highlight: true,\r\n\r\n                // 仅匹配结束节点\r\n                leavesOnly: false,\r\n\r\n                // {boolean|string|object|function} 当mode为\"hide\"时,如果结果为空，则显示“无数据”状态节点\r\n                nodata: \"过滤不到数据\",\r\n\r\n                // 不匹配节点展示模式:\"dimm\"(灰色展示)/\"hide\"(删除不匹配的节点)\r\n                mode: \"hide\"\r\n            },\r\n\r\n            // 服务器返回数据解析配置\r\n            jsonReader: {\r\n                // json中代表实际模型数据的入口,默认是\"\"\r\n                root: \"\",\r\n\r\n                // 父节点关键字段名,默认是\"key\"\r\n                branchId: \"key\",\r\n\r\n                // 行文本字段名,默认是\"title\"\r\n                branchName: \"title\",\r\n\r\n                // 叶子节点关键字段名,默认是\"key\"\r\n                leaveId: \"key\",\r\n\r\n                // 叶子节点文本字段名,默认是\"title\"\r\n                leaveName: \"title\",\r\n\r\n                // 子节点字段名,默认是\"children\"\r\n                children: \"children\",\r\n\r\n                // 是否父节点标识字段名,默认是\"folder\"\r\n                folder: \"folder\",\r\n\r\n                // 是否启用节点标识字段名,默认是\"enable\"\r\n                enable: \"enable\",\r\n\r\n                // 是否同步子节点的启用状态字段名,默认是\"synch\"\r\n                synch: \"synch\"\r\n            },\r\n\r\n            // 不开启复选框时,点击节点触发事件\r\n            onActivate: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 懒加载方法\r\n            onLazyLoad: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 每次加载后,执行的函数\r\n            onAfterLoad: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 开启复选框时,改变checkbox,回调函数\r\n            onSelectedNode: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 开启复选框时,在改变复选框之前的回调函数\r\n            onBeforeSelect: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 树节点首次被创建时触发的回调函数\r\n            onCreateNode: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 每次重新渲染节点时触发的回调函数\r\n            onRenderNode: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 每次重新渲染节点标题时触发的回调函数\r\n            onRenderTitle: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // 树节点点击触发事件(无论是否开启选择框)\r\n            onClick: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // {function/Boolean} 当启用搜索栏时,搜索栏输入框输入时触发搜索事件,默认是false,表示禁用,若为true则开启,可自定义方法,传递参数element:输入框节点对象;event:事件对象\r\n            onInput: false,\r\n\r\n            // {function/Boolean} 当启用搜索栏时,搜索栏Enter回车时触发搜索事件,默认是true,设置为false时禁用,可自定义方法,传递参数element:输入框节点对象;event:事件对象\r\n            onEnter: true,\r\n\r\n            // {function} 树组件被创建完成时执行方法(只在组件被创建时执行一次),传递参数 element:树节点dom对象, event:事件对象\r\n            onCreated: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // {function} 树组件数据初始化完成执行方法(每一次懒加载也会执行此方法),传递参数 event:事件对象,data:树组件数据\r\n            onInit: ui.CONSTANTS.EMPTYFUNC,\r\n\r\n            // {function} 发生加载错误。返回“false”以阻止默认处理,传递参数 event:事件对象,data:树组件数据\r\n            onLoadError: ui.CONSTANTS.EMPTYFUNC,\r\n            \r\n            // {json/Function} 为了弥补组件对第三方插件的拓展的不足,此参数的包含的属性将会直接替换组件拓展内容,直接对第三方插件进行初始化设置,设置之前,请必须了解清楚是否会覆盖默认参数,默认是null,也可传递一个方法，传递的参数为第三方插件初始化参数,动态修改并返回一个参数对象作为最终初始化配置\r\n            formatParams: null\r\n        };\r\n\r\n        //默认配置项\r\n        var defaults = {\r\n            extensions: [\"filter\"],\r\n            name: \"key\",\r\n            text: \"title\",\r\n            folder: \"folder\",\r\n            children: \"children\",\r\n            selectMode: 2\r\n        };\r\n\r\n        function uiTree(element, options) {\r\n            //调用初始函数\r\n            this.init();\r\n        }\r\n\r\n        uiTree.prototype = {\r\n            constructor: uiTree,\r\n\r\n            init: function() {\r\n                this.pluginName = _widgetName; //缓存插件名字\r\n                this.hasDom = false; //检查dom树中此节点是否存在\r\n                this.element = element;\r\n                this.$element = $(\"#\" + element);\r\n                this.defaults = defaults; // 缓存配置项\r\n                this._option = options; // 缓存传递进来的配置\r\n                this.initDom = $(\"#\" + element).prop(\"outerHTML\");\r\n                // this._opt = $.extend(false, {}, config, options);    //覆盖默认配置项\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, options, AttributeParams); // 覆盖默认配置项\r\n                this._tree = null;\r\n                this.container = null;\r\n                this.searchInput = null;\r\n                this.searchBtn = null;\r\n\r\n                this.itemsName = [];\r\n                this.itemsText = [];\r\n                this.itemsArray = [];\r\n\r\n                // 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n                this.handlers = {};\r\n\r\n                this.status = \"init\";\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n                this.dom = this._initDom(); // 创建DOM节点,并返回DOM节点的HTML字符串\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function() {\r\n                var param = this._opt;\r\n                this._opt.maxNumber = ui.formatMaxNumber(param.maxNumber);\r\n\r\n                // var selectMode = 2;\r\n                if (this._opt.maxNumber == 1) {\r\n                    this.defaults.selectMode = 1;\r\n                    this.$element.addClass(\"fancytree-radio\");\r\n                    this._opt.isChangeAllChildren = false;\r\n                } else {\r\n                    this.defaults.selectMode = 2;\r\n                    this.$element.removeClass(\"fancytree-radio\");\r\n                }\r\n                return this._opt;\r\n            },\r\n            _prependSearchGroup: function() {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $element = this.$element;\r\n\r\n                var str = '';\r\n\r\n                str += '<div class=\"input-group\" data-tree-searchbar>';\r\n                str += '    <input type=\"text\" wui-widget-hidden=\"true\" class=\"wui-input\" />';\r\n                str += '    <span class=\"input-group-btn\">';\r\n                str += '        <button class=\"wui-btn ' + param.searchBarSetting.searchBtnClass + '\" data-tree-search type=\"button\">' + param.searchBarSetting.searchText + '</button>';\r\n                if(param.searchBarSetting.clearText){\r\n                    str += '        <button class=\"wui-btn ' + param.searchBarSetting.clearBtnClass + '\" data-tree-clear type=\"button\">' + param.searchBarSetting.clearText + '</button>';\r\n                }\r\n                \r\n                str += '    </span>';\r\n                str += '</div>';\r\n\r\n                self.container.prepend(str);\r\n\r\n                self.container.children(\"[data-tree-searchbar]\").css({\r\n                    \"width\": param.searchBarSetting.width\r\n                });\r\n\r\n                self.searchBtn = self.container.find('[data-tree-search]');\r\n                self.clearBtn = self.container.find('[data-tree-clear]');\r\n\r\n                // if (param.searchBarSetting.searchText) {\r\n                //     str += '<div class=\"input-group\" data-tree-search>';\r\n                //     str += '    <input type=\"text\" wui-widget-hidden=\"true\" class=\"wui-input\" />';\r\n                //     str += '    <span class=\"input-group-btn\">';\r\n                //     str += '        <button class=\"wui-btn wui-btn-primary\" type=\"button\">' + param.searchBarSetting.searchText + '</button>';\r\n                //     str += '    </span>';\r\n                //     str += '</div>';\r\n\r\n                //     self.container.prepend(str);\r\n\r\n                //     self.container.children(\"[data-tree-search]\").css({\r\n                //         \"width\": param.searchBarSetting.width,\r\n                //         \"margin\": \"10px\"\r\n                //     });\r\n\r\n                //     self.searchBtn = self.container.find(\"button\").eq(0);\r\n                // } else{\r\n                //     str += '<div class=\"has-feedback wui-has-feedback\">';\r\n                //     str += '    <input type=\"text\" class=\"wui-input\" id=\"' + this.element + '_input\" aria-describedby=\"inputSuccess2Status\">';\r\n                //     str += '    <span class=\"fa fa-search form-control-feedback\" aria-hidden=\"true\"></span>';\r\n                //     str += '    <span id=\"' + this.element + '_inputStatus\" class=\"sr-only\">(search)</span>';\r\n                //     str += '</div>';\r\n\r\n                //     self.container.prepend(str);\r\n\r\n                //     self.container.children(\".has-feedback\").css({\r\n                //         \"width\": param.searchBarSetting.width\r\n                //     });\r\n\r\n                //     self.searchBtn = null;\r\n                // }\r\n                self.searchInput = self.container.find(\"input\").eq(0);\r\n\r\n            },\r\n            _bindSearchEvent: function() {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    searchBarSetting = this._opt.searchBarSetting;\r\n                var searchValue = self.searchInput.val();\r\n                if (searchBarSetting.isLocalData) {\r\n                    self.filter({\r\n                        filter: function(node) {\r\n                            if (node.title.indexOf(searchValue) > -1) {\r\n                                return true;\r\n                            } else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    })\r\n                }else{\r\n                    var data = {},\r\n                        loadDataUrl;\r\n                    data[param.searchBarSetting.searchField] = searchValue;\r\n                    if (searchBarSetting.searchUrl) {\r\n                        loadDataUrl = ui.buildUrl(searchBarSetting.searchUrl, data);\r\n                    } else {\r\n                        loadDataUrl = ui.buildUrl(param.loadDataUrl, data);\r\n                    }\r\n                    // loadDataUrl = ui.buildUrl(loadDataUrl, data);\r\n                    self._initTree(loadDataUrl);\r\n                }\r\n            },\r\n            _bindResetEvent: function() {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    searchBarSetting = this._opt.searchBarSetting;\r\n                var searchValue = \"\";\r\n                self.searchInput.val(\"\");\r\n                if (searchBarSetting.isLocalData) {\r\n                    self.filter({\r\n                        filter: function(node) {\r\n                            return true;\r\n                        }\r\n                    })\r\n                }else{\r\n                    var data = {},\r\n                        loadDataUrl;\r\n                    data[param.searchBarSetting.searchField] = searchValue;\r\n                    data[\"isReset\"] = true;\r\n                    loadDataUrl = ui.buildUrl(param.loadDataUrl, data);\r\n                    self._initTree(loadDataUrl);\r\n                }\r\n            },\r\n            _setTreeSize: function() {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $selector = this.$element;\r\n\r\n                var conHeight = self.container.parent().height();\r\n\r\n                var treeHeight = 0,\r\n                    siblingsHeight1 = 0,\r\n                    siblingsHeight2 = 0;\r\n                if (param.height == \"auto\") {\r\n                    // self.container.siblings().each(function(i, elem) {\r\n                    //     siblingsHeight1 += $(elem).outerHeight(true);\r\n                    // });\r\n                    // treeHeight = conHeight - siblingsHeight1;\r\n                    // self.container.css({\r\n                    //   \"height\": treeHeight + \"px\"\r\n                    // });\r\n                    \r\n                    self.container.css({\r\n                      \"height\": \"auto\"\r\n                    });\r\n\r\n                    // $selector.css({\r\n                    //   \"height\": treeHeight - siblingsHeight2 + \"px\"\r\n                    // });\r\n                } else {\r\n                    self.container.height(param.height);\r\n                    treeHeight = self.container.height();\r\n\r\n                    $selector.siblings().each(function(i, elem) {\r\n                        siblingsHeight2 += $(elem).outerHeight(true);\r\n                    })\r\n                    $selector.height(treeHeight - siblingsHeight2);\r\n                }\r\n\r\n                // $selector.siblings().each(function(i, elem) {\r\n                //     siblingsHeight2 += $(elem).outerHeight(true);\r\n                // })\r\n                // $selector.height(treeHeight - siblingsHeight2);\r\n                // $selector.children().height(\"100%\");\r\n                ui.scroll($selector.children());\r\n\r\n                // self.container.width(param.width);\r\n                // self.container.height(param.height);\r\n            },\r\n            _setTreeFullScreen: function() {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $selector = this.$element,\r\n                    offset = this._opt.offset;\r\n                    // alert(1)\r\n                var fullScreenSize = ui.getFullScreenSize(self.container);\r\n                var treeHeight = fullScreenSize.height > 10 ? fullScreenSize.height : self.container.parent().height();\r\n                \r\n                if (fullScreenSize) {\r\n                    \r\n                    var containerHeight = treeHeight - parseFloat(offset.top) - parseFloat(offset.bottom);\r\n                    self.container.height(containerHeight);\r\n                    var siblingsHeight = 0;\r\n                    $selector.siblings().each(function(i, elem) {\r\n                        var theHeight = $(elem).outerHeight(true);\r\n                        siblingsHeight += theHeight;\r\n                    })\r\n                    var treeElementHeight = containerHeight - siblingsHeight;\r\n                    $selector.height(treeElementHeight);\r\n                    ui.scroll($selector.children());\r\n                }\r\n            },\r\n            _initDom: function() { // 生成DOM节点\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $selector = this.$element;\r\n\r\n                if (!($selector.parent().hasClass('wui-tree'))) {\r\n                    var parentDiv = '<div class=\"wui-tree\"></div>';\r\n                    $selector.wrap(parentDiv); // 增加父容器\r\n                }\r\n                self.container = self.$element.parent();\r\n\r\n\r\n                if (param.isEnabledSearch) {\r\n                    if (self.container.children('.input-group').length == 0) {\r\n                        self._prependSearchGroup();\r\n                    } else {\r\n                        self.searchInput = self.container.find(\"input\").eq(0);\r\n                        self.searchBtn = self.container.find('[data-tree-search]');\r\n                        self.clearBtn = self.container.find('[data-tree-clear]');\r\n                    }\r\n                } else {\r\n                    self.searchInput = null;\r\n                    self.searchBtn = null;\r\n                    self.clearBtn = null;\r\n                    if (self.container.children('.input-group').length > 0) {\r\n                        self.container.children('.input-group').remove();\r\n                    }\r\n                }\r\n\r\n                if (typeof(param.value) == \"string\") {\r\n                    param.value = param.value.split(\",\");\r\n                }else if(ui.isArray(param.value)){\r\n                    var keyArr = [];\r\n                    $.each(param.value, function(i, val){\r\n                        if(ui.isJson(val)){\r\n                            keyArr.push(val[param.name]);\r\n                        }else{\r\n                            keyArr.push(val);\r\n                        }\r\n                    })\r\n                    param.value = keyArr;\r\n                }\r\n\r\n                if (param.contextMenu) {\r\n                    // 校验是否引入右键插件\r\n                    try {\r\n                        if ($.ui.fancytree._extensions[\"contextMenu\"]) {\r\n                            self.defaults.extensions.push(\"contextMenu\");\r\n                        } else {\r\n                            ui.logWarn(\"没有加载 tree右键功能 所需第三方插件:contextMenu\", FRAME_NAME + \".\" + _widgetName, true);\r\n                        }\r\n                    } catch (err) {\r\n                        ui.logWarn(\"没有加载 tree右键功能 所需第三方插件:contextMenu\", FRAME_NAME + \".\" + _widgetName, true);\r\n                    }\r\n                }\r\n\r\n                // 拓展节点方法:设置节点是否启用状态:参数1:设置启用状态true/false,参数2:是否关联子节点\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.setEnable = function(isEnable, isChangeAllChildren) {\r\n                    // ui.logParamValue(\"isEnable\", isEnable, \"node.setEnable\", \"wui.tree\", true);\r\n                    // ui.logParamValue(\"isChangeAllChildren\", isChangeAllChildren, \"node.setEnable\", \"wui.tree\", true);\r\n\r\n                    if (isEnable === false) {\r\n                        isEnable = false;\r\n                    } else {\r\n                        isEnable = true;\r\n                    }\r\n                    this.enable = isEnable;\r\n                    if (this.enable) {\r\n                        this.removeClass(\"fancytree-disabled\");\r\n                    } else {\r\n                        this.addClass(\"fancytree-disabled\");\r\n                    }\r\n\r\n                    if(ui.isUndefined(isChangeAllChildren)){\r\n                        isChangeAllChildren = this.isSynchChildrensEnable();\r\n                    }else{\r\n                        this.setSynchChildrensEnable(isChangeAllChildren, false);\r\n                    }\r\n\r\n                    if (isChangeAllChildren && this.hasChildren()) {\r\n                        // console.error(this);\r\n                        $.each(this.getChildren(), function(i, subNode) {\r\n                            if (subNode.isEnable() !== isEnable) {\r\n                                subNode.setEnable(isEnable, true);\r\n                            }\r\n                        })\r\n                    }\r\n                    \r\n                };\r\n\r\n                // 拓展节点方法:设置子节点是否同步启用状态:参数1:是否同步启用状态true/false, 参数2:是否即刻执行同步\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.setSynchChildrensEnable = function(isSynch, isExecution) {\r\n                    isSynch = isSynch || false;\r\n                    if(isExecution !== false){\r\n                        isExecution = true\r\n                    }\r\n                    this.synchChildrensEnable = isSynch;\r\n                    \r\n                    if (isSynch && isExecution && this.hasChildren()) {\r\n                        var isEnable = this.isEnable();\r\n                        $.each(this.getChildren(), function(i, subNode) {\r\n                            if (subNode.isEnable() !== isEnable) {\r\n                                subNode.setEnable(isEnable, isSynch);\r\n                            }\r\n                        })\r\n                    }\r\n                };\r\n\r\n                // 拓展节点方法:判断节点是否启用状态\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.isEnable = function() {\r\n                    return this.enable;\r\n                };\r\n\r\n                // 拓展节点方法:是否同步子节点启用状态\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.isSynchChildrensEnable = function() {\r\n                    return this.synchChildrensEnable;\r\n                };\r\n\r\n                // 拓展节点方法:获取该节点下一级已选中的子节点:参数1:是否包含禁用的节点,若为true,如果禁用且选中的话也会返回,默认是true\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.getSelectedChildrenNodes = function(isIncludeDisabledNode) {\r\n                    if (isIncludeDisabledNode === undefined) {\r\n                        isIncludeDisabledNode = true;\r\n                    }\r\n                    if (this.isFolder) {\r\n                        var childrenNode = this.getChildren();\r\n                        if (childrenNode) {\r\n                            var selectedChildrenNodes = [];\r\n                            $.each(childrenNode, function(i, theNode) {\r\n                                if (theNode.isSelected()) {\r\n                                    if (theNode.isEnable()) {\r\n                                        selectedChildrenNodes.push(theNode);\r\n                                    } else if (isIncludeDisabledNode) {\r\n                                        selectedChildrenNodes.push(theNode);\r\n                                    }\r\n                                }\r\n                            })\r\n                            return selectedChildrenNodes.length > 0 ? selectedChildrenNodes : null;\r\n                        } else {\r\n                            ui.logMessage(\"该节点没有加载下一级子节点\", \"wui.tree\", true);\r\n                        }\r\n                    } else {\r\n                        ui.logMessage(\"该节点没有下一级子节点\", \"wui.tree\", true);\r\n                    }\r\n                    return null;\r\n                };\r\n\r\n                // 拓展节点方法:获取该节点下一级未选中的子节点:参数1:是否包含禁用的节点,若为true,如果禁用且未选中的话也会返回,默认是true\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.getUnselectedChildrenNodes = function(isIncludeDisabledNode) {\r\n                    if (isIncludeDisabledNode === undefined) {\r\n                        isIncludeDisabledNode = true;\r\n                    }\r\n                    if (this.isFolder) {\r\n                        var childrenNode = this.getChildren();\r\n                        if (childrenNode) {\r\n                            var unselectedChildrenNodes = [];\r\n                            $.each(childrenNode, function(i, theNode) {\r\n                                if (!(theNode.isSelected())) {\r\n                                    if (theNode.isEnable()) {\r\n                                        unselectedChildrenNodes.push(theNode);\r\n                                    } else if (isIncludeDisabledNode) {\r\n                                        unselectedChildrenNodes.push(theNode);\r\n                                    }\r\n                                }\r\n                            })\r\n                            return unselectedChildrenNodes.length > 0 ? unselectedChildrenNodes : null;\r\n                        } else {\r\n                            ui.logMessage(\"该节点没有加载下一级子节点\", \"wui.tree\", true);\r\n                        }\r\n                    } else {\r\n                        ui.logMessage(\"该节点没有下一级子节点\", \"wui.tree\", true);\r\n                    }\r\n                    return null;\r\n                };\r\n\r\n                // 拓展节点方法:获取该节点下一级子节点:参数1:是否包含禁用的节点,若为true,如果禁用且未选中的话也会返回,默认是true\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.getChildrenNodes = function(isIncludeDisabledNode) {\r\n                    if (isIncludeDisabledNode === undefined) {\r\n                        isIncludeDisabledNode = true;\r\n                    }\r\n                    if (this.isFolder) {\r\n                        var childrenNode = this.getChildren();\r\n                        if (childrenNode) {\r\n                            if (isIncludeDisabledNode) {\r\n                                return childrenNode;\r\n                            } else {\r\n                                var childrenNodes = [];\r\n                                $.each(childrenNode, function(i, theNode) {\r\n                                    if (theNode.isEnable()) {\r\n                                        childrenNodes.push(theNode);\r\n                                    }\r\n                                })\r\n                                return childrenNodes;\r\n                            }\r\n\r\n                        } else {\r\n                            ui.logMessage(\"该节点没有加载下一级子节点\", \"wui.tree\", true);\r\n                        }\r\n                    } else {\r\n                        ui.logMessage(\"该节点没有下一级子节点\", \"wui.tree\", true);\r\n                    }\r\n                    return null;\r\n                };\r\n\r\n                // 拓展节点方法:设置节点半选中状态,参数1:是否关联改变父节点,默认是true\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.setPartSelect = function(isChangeParents) {\r\n                    if (isChangeParents === undefined) {\r\n                        isChangeParents = true;\r\n                    }\r\n                    if (this.isRoot()) {\r\n                        return;\r\n                    }\r\n\r\n                    if (this.getSelectedChildrenNodes(false) && this.getUnselectedChildrenNodes(false)) {\r\n                        if (this.isSelected()) {\r\n                            this.setSelected(false);\r\n                        }\r\n                        this.addClass(\"fancytree-partsel\");\r\n                        this.partSelect = true;\r\n                    } else { // 不考虑懒加载未加载子节点的情况时的情况\r\n                        // 没有选中的子节点\r\n                        this.removeClass(\"fancytree-partsel\");\r\n                        this.partSelect = false;\r\n                        if (this.getSelectedChildrenNodes(false)) {\r\n                            this.setSelected(true);\r\n                        } else {\r\n                            this.setSelected(false);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // 拓展节点方法:判断节点是否半选中状态\r\n                $.ui.fancytree._FancytreeNodeClass.prototype.isPartSelect = function() {\r\n                    var partSelect = false;\r\n                    if (this.getSelectedChildrenNodes(false) && this.getUnselectedChildrenNodes(false)) {\r\n                        partSelect = true;\r\n                    }\r\n                    return partSelect;\r\n                };\r\n\r\n                self._initTree(param.loadDataUrl);\r\n\r\n                this.hasDom = true;\r\n\r\n                return $selector.prop(\"outerHTML\");\r\n            },\r\n            // 后期处理数据\r\n            _postProcessSource: function(data, isAddRoot) {\r\n                // console.error(\"_postProcessSource\");\r\n                if(this.status == \"loading\"){\r\n                    isAddRoot = false;\r\n                }\r\n\r\n                if(this.status = \"init\"){\r\n                    this.status = \"loading\";\r\n                }\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $element = this.$element;\r\n                var jsonReader = param.jsonReader;\r\n                var branchId = jsonReader.branchId,\r\n                    branchName = jsonReader.branchName,\r\n                    leaveId = jsonReader.leaveId,\r\n                    leaveName = jsonReader.leaveName,\r\n                    children = jsonReader.children,\r\n                    folder = jsonReader.folder;\r\n                var name = param.name,\r\n                    text = param.text;\r\n                var defaults = this.defaults;\r\n                var source = [];\r\n\r\n                $.each(data, function(i, node) {\r\n                    // 分支节点\r\n                    if (node[children] && node[children].length > 0) {\r\n                        // 分支节点ID\r\n                        if (node[branchId] && !(node[defaults.name])) {\r\n                            node[defaults.name] = node[branchId];\r\n                        }\r\n                        // 分支节点文本\r\n                        if (node[branchName] && !(node[defaults.text])) {\r\n                            node[defaults.text] = node[branchName];\r\n                        }\r\n                        // 文件夹图标\r\n                        if (node[folder] && !(node[defaults.folder])) {\r\n                            node[defaults.folder] = node[folder];\r\n                        } else {\r\n                            node[defaults.folder] = true;\r\n                        }\r\n                        // console.info(node[children]);\r\n                        node[defaults.children] = self._postProcessSource(node[children], false);\r\n                    } else { // 叶子节点\r\n                        if (node[leaveId] && !(node[defaults.name])) {\r\n                            node[defaults.name] = node[leaveId];\r\n                        }\r\n\r\n                        if (node[leaveName] && !(node[defaults.text])) {\r\n                            node[defaults.text] = node[leaveName];\r\n                        }\r\n                    }\r\n\r\n                    if (ui.isUndefined(node[name])) {\r\n                        node[name] = node[defaults.name];\r\n                    }\r\n\r\n                    if (ui.isUndefined(node[text])) {\r\n                        node[text] = node[defaults.text];\r\n                    }\r\n\r\n                    source.push(node);\r\n                })\r\n\r\n                // console.error(this.status);\r\n                // console.error(isAddRoot);\r\n                // if (isAddRoot && this.isFirstLoad) {\r\n                if (isAddRoot && !ui.isEmptyType(data)) {\r\n                    \r\n                    var rootNode = ui.deepCopy(param.rootSetting);\r\n                    rootNode.children = source;\r\n                    var rootTreeNode = [rootNode]\r\n                    // console.info(rootTreeNode);\r\n                    return rootTreeNode;\r\n                }\r\n\r\n                return source;\r\n            },\r\n            _formatSource: function(loadDataUrl) {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $element = this.$element;\r\n                var jsonReader = param.jsonReader;\r\n                var branchId = jsonReader.branchId,\r\n                    branchName = jsonReader.branchName,\r\n                    leaveId = jsonReader.leaveId,\r\n                    leaveName = jsonReader.leaveName,\r\n                    children = jsonReader.children,\r\n                    folder = jsonReader.folder;\r\n                var defaults = this.defaults;\r\n                // console.info(loadDataUrl);\r\n                var source = [];\r\n                if (ui.isArray(loadDataUrl)) {\r\n                    param.searchBarSetting.isLocalData = true;\r\n                    source = self._postProcessSource(loadDataUrl, param.isAddRoot);\r\n                } else if (typeof(loadDataUrl) === \"string\") {\r\n                    source = {\r\n                        url: loadDataUrl, //接口\r\n                        dataType: param.dataType //数据类型\r\n                        // success: function(res){\r\n                        //     console.info(res);\r\n                        //     return res;\r\n                        // }\r\n                    }\r\n                }\r\n\r\n                return source;\r\n            },\r\n            _getOptions: function(loadDataUrl) {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $element = this.$element;\r\n                this.isFirstLoad = true;\r\n\r\n                this.itemsName = [];\r\n                this.itemsText = [];\r\n                this.itemsArray = [];\r\n                this.nodesArray = [];\r\n                // console.info(loadDataUrl);\r\n                var source = self._formatSource(loadDataUrl);\r\n\r\n                var options = {\r\n                    source: source,\r\n                    minExpandLevel: param.minExpandLevel,\r\n                    checkbox: param.isShowCheckBox,\r\n                    selectMode: self.defaults.selectMode,\r\n                    extensions: self.defaults.extensions,\r\n                    contextMenu: param.contextMenu,\r\n                    filter: param.filter,\r\n                    icon: param.icon,\r\n                    glyph: param.glyph,\r\n                    // clickFolderMode: 4,\r\n                    // 树事件\r\n                    create: function(element, event) {\r\n                        if (param.onCreated && typeof(param.onCreated) === \"function\") {\r\n                            param.onCreated(this, element, event);\r\n                        }\r\n                    },\r\n                    postProcess: function(event, data) {\r\n                        var theRoot = param.jsonReader.root,\r\n                            jsonData, response = data.response;\r\n                        if (!!theRoot) {\r\n                            jsonData = response[theRoot];\r\n\r\n                        } else {\r\n                            jsonData = response;\r\n                        }\r\n                        data.result = self._postProcessSource(jsonData, param.isAddRoot);\r\n\r\n                        return data;\r\n                    },\r\n                    // 成功初始化后执行方法\r\n                    init: function(ev, data, flag) { \r\n                        // console.error(\"init\");\r\n                        // console.info(event, data);\r\n                        var tree = self.$element.fancytree(\"getTree\"),\r\n                            activeNode = tree.getActiveNode();\r\n                        this.status = \"loaded\"\r\n                        // enable = param.jsonReader.enable;\r\n                        // console.info(tree);\r\n                        var _expandNode = function(parentNode, expandLevel) {\r\n                            // console.info(expandLevel);\r\n                            parentNode.setExpanded(true);\r\n                            if (expandLevel > 0) {\r\n                                var childrenNode = parentNode.getChildren();\r\n                                if (childrenNode) {\r\n                                    $.each(childrenNode, function(i, theNode) {\r\n                                        _expandNode(theNode, expandLevel - 1);\r\n                                    })\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        // 设置树节点展开\r\n                        // console.info(param.expandLevel);\r\n                        if (typeof(param.expandLevel) === \"boolean\" && param.expandLevel == true) {\r\n                            // 全展开\r\n                            tree.visit(function(node) {\r\n                                // console.info(node);\r\n                                node.setExpanded(true);\r\n                                // if(node.data[enable] !== undefined && node.data[enable] === false){\r\n                                //     node.setEnable(false);\r\n                                // }\r\n                            });\r\n                        } else if (param.expandLevel && parseInt(param.expandLevel) > 0) {\r\n                            _expandNode(tree.getRootNode(), param.expandLevel);\r\n                        }\r\n\r\n                        if(!!param.activeNode){\r\n\r\n                            if(typeof(param.activeNode) === \"string\"){\r\n                                tree.visit(function(node) {\r\n                                    // console.error(node);\r\n                                    if(node.key === param.activeNode){\r\n                                        node.setActive(true);\r\n                                        return false;\r\n                                    }\r\n                                    // node.setExpanded(true);\r\n                                    // if(node.data[enable] !== undefined && node.data[enable] === false){\r\n                                    //     node.setEnable(false);\r\n                                    // }\r\n                                });\r\n                            }else{\r\n                                // console.error(param.activeNode.span)\r\n                                param.activeNode.setActive(true);\r\n                                // $(param.activeNode.span).click();\r\n                            }\r\n                        }else if(param.isClickFirstNode) {\r\n                            self.$element.find(\"span\").eq(0).click();\r\n                        }\r\n                        // self.$element.find(\"span\").eq(0).click();\r\n\r\n\r\n                        if (param.isEnabledSearch) {\r\n                            if (param.onInput) {\r\n                                self.searchInput.off(\"input propertychange\").on(\"input propertychange\", function(event) {\r\n                                    ui.stopPropagation(event); // 阻止事件冒泡\r\n                                    var searchKey = $(this).val();\r\n\r\n                                    if (param.onInput === true) {\r\n                                        self._bindSearchEvent();\r\n                                    } else if (typeof(param.onInput) === \"function\") {\r\n                                        param.onInput(this, event);\r\n                                    }\r\n                                    $(this).focus();\r\n                                })\r\n                            }\r\n\r\n                            if (param.onEnter) {\r\n                                self.searchInput.off(\"keyup\").on(\"keyup\", function(event) {\r\n                                    var keynum = window.event ? event.keyCode : event.which;\r\n                                    if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                        // console.error(\"keyup\");\r\n                                        // console.error(keynum == ui.CONSTANTS.KEYS.ENTER);\r\n                                        // console.error(keynum == ui.CONSTANTS.KEYS.OTHER);\r\n                                        if (param.onEnter === true) {\r\n                                            // ui.logMessage(\"您按了enter键\", \"wui.tree\", true);\r\n                                            self._bindSearchEvent();\r\n                                        } else if (param.onEnter && typeof(param.onEnter) === \"function\") {\r\n                                            param.onEnter(this, event);\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            if (self.searchBtn) {\r\n                                self.searchBtn.off(\"click\").on(\"click\", function(e) {\r\n                                    // console.error(\"click\");\r\n                                    self._bindSearchEvent();\r\n                                })\r\n                            }\r\n\r\n                            if(self.clearBtn){\r\n                                self.clearBtn.off(\"click\").on(\"click\", function(e) {\r\n                                    self._bindResetEvent();\r\n                                })\r\n                            }\r\n                        }\r\n\r\n                        if (param.isFullScreen) {\r\n                            ui.onresize(function(w, h) {\r\n                                self._setTreeFullScreen();\r\n                            });\r\n                            self._setTreeFullScreen();\r\n                        } else {\r\n                            ui.onresize(function(w, h) {\r\n                                self._setTreeSize();\r\n                            });\r\n                            self._setTreeSize();\r\n                        }\r\n                        self.isFirstLoad = false;\r\n                        if (param.onInit && typeof(param.onInit) === \"function\") {\r\n                            param.onInit.call(this, ev, data, flag);\r\n                        }\r\n                        // self.select(param.value);\r\n                    },\r\n                    // 节点事件\r\n                    activate: function(event, data) {\r\n                        var node = data.node;\r\n                        // console.info(node.isMatched());\r\n                        if (param.isStrictFilter && !(node.isMatched())) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (node.enable === false) {\r\n                            return false;\r\n                        }\r\n\r\n                        param.activeNode = node.key;\r\n\r\n                        if (param.onActivate && typeof(param.onActivate) === \"function\") {\r\n                            param.onActivate(event, data);\r\n                        } else if (param.activate && typeof(param.activate) === \"function\") { // 兼容旧写法\r\n                            param.activate(event, data);\r\n                        }\r\n                    }, // {function} 点击事件\r\n                    // 选中节点之前\r\n                    beforeSelect: function(event, data) {\r\n                        var node = data.node,\r\n                            selected = node.isSelected();\r\n                        ui.logParamValue({\r\n                            paramName: \"node\",\r\n                            paramValue: node,\r\n                            methodName: \"beforeSelect\",\r\n                            className: \"wui.tree\",\r\n                            isDebug: true\r\n                        });\r\n                        if (node.enable === false) {\r\n                            return false;\r\n                        }\r\n\r\n                        // console.info(node.selected);\r\n                        // node.selected = !(node.selected);\r\n                        var result = true;\r\n                        if (param.onBeforeSelect && typeof(param.onBeforeSelect) === \"function\") {\r\n                            result = param.onBeforeSelect(event, data);\r\n                        } else if (param.beforeSelect && typeof(param.beforeSelect) === \"function\") { // 兼容旧写法\r\n                            result = param.beforeSelect(event, data);\r\n                        }\r\n\r\n                        if (!selected) {\r\n                            if (self.listeners.indexOf('beforeItemSelect') > -1) {\r\n                                if (!self.emit({ type: 'beforeItemSelect', target: event.target, node: node })) return;\r\n                            }\r\n                            var maxNumber = param.maxNumber;\r\n                            if (typeof(maxNumber) === \"number\" && maxNumber > 1 && self.itemsName.length >= maxNumber) {\r\n                                if (self.listeners.indexOf('itemSelectError') > -1) {\r\n                                    if (!self.emit({ type: 'itemSelectError', target: event.target, node: node, code: -1, message: \"最多可添加\" + maxNumber + \"个标签\" })) return;\r\n                                }\r\n                                return false;\r\n                            }\r\n                        } else {\r\n                            if (self.listeners.indexOf('beforeItemUnselect') > -1) {\r\n                                if (!self.emit({ type: 'beforeItemUnselect', target: event.target, node: node })) return;\r\n                            }\r\n                        }\r\n\r\n                        return result;\r\n                        // console.error(node.match);\r\n                        // if(!node.match){\r\n                        //     return false;\r\n                        // }\r\n                    },\r\n                    // 每次加载数据后,执行的方法\r\n                    loadChildren: function(event, data) {\r\n                        // console.error(\"loadChildren\");\r\n                        // console.info(event, data);\r\n                        // console.log(data);\r\n                        if (param.onAfterLoad && typeof(param.onAfterLoad) === \"function\") {\r\n                            param.onAfterLoad(event, data);\r\n                        } else if (param.afterLoad && typeof(param.afterLoad) === \"function\") {\r\n                            param.afterLoad(event, data);\r\n                        }\r\n                    },\r\n                    // 发生加载错误。返回“false”以阻止默认处理\r\n                    loadError: function(event, data){\r\n                        if (param.onLoadError && typeof(param.onLoadError) === \"function\") {\r\n                            return param.onLoadError(event, data);\r\n                        }\r\n                    },\r\n                    //点击获取id\r\n                    select: function(event, data) {\r\n                        // console.log(\"select\");\r\n                        // Display list of selected nodes\r\n                        // console.info(data);\r\n                        var node = data.node,\r\n                            _target = event.target;\r\n                        var itemName = node[self.defaults.name];\r\n                        var itemText = node[self.defaults.text];\r\n                        var item = {\r\n                            selected: node.isSelected()\r\n                        }\r\n                        if (node.isRoot()) {\r\n                            return;\r\n                        }\r\n                        // console.info(node);\r\n                        item[param.name] = itemName;\r\n                        item[param.text] = itemText;\r\n\r\n                        if (node.isSelected()) {\r\n                            self.itemsName.push(itemName);\r\n                            self.itemsText.push(itemText);\r\n                            self.itemsArray.push(item);\r\n                            self.nodesArray.push(node);\r\n                            // self.itemsArray.push(node);\r\n                        } else {\r\n                            var index = self.itemsName.indexOf(itemName);\r\n                            if (index > -1) {\r\n                                self.itemsName.splice(index, 1);\r\n                                self.itemsText.splice(index, 1);\r\n                                self.itemsArray.splice(index, 1);\r\n                                self.nodesArray.splice(index, 1);\r\n                            }\r\n                        }\r\n                        // 关联上下级节点:当且仅当节点为叶子节点才会触发 onSelectedNode 事件\r\n                        if (param.isChangeAllChildren) {\r\n                            // 给父节点绑定新属性childrenSelectedCount:子节点选中个数\r\n                            var parentNode = node.getParent();\r\n\r\n                            if (parentNode && !(parentNode.isRoot())) {\r\n                                // 父节点选中状态和子节点不一致时，设置父节点状态\r\n                                if ((parentNode.isSelected() != node.isSelected()) || (!node.isSelected() && !parentNode.isPartSelect())) {\r\n                                    parentNode.setPartSelect(true);\r\n                                }\r\n                            }\r\n\r\n                            // var childrenNode = node.getChildren();\r\n                            // 追加子节点情况:\r\n                            // 1、存在子节点\r\n                            // 2、设置该节点的子节点为选中状态,当且仅当该节点为未选中状态且子节点选中个数 < 子节点个数\r\n                            // 3、设置该节点的子节点为未选中状态,当且仅当该节点为已选中状态且子节点选中个数 == 子节点个数\r\n                            if (node.isFolder()) {\r\n                                var unselectedChildrenNodes = node.getUnselectedChildrenNodes(false),\r\n                                    selectedChildrenNodes = node.getSelectedChildrenNodes(false),\r\n                                    childrenNodes = node.getChildrenNodes(false);\r\n                                if (childrenNodes) {\r\n                                    // 改变子节点的情况\r\n                                    // 情况1：当前节点为选中,但是子节点选中节点为空,或者个数 < 子节点个数\r\n                                    // 情况2：当前子节点取消选中，但是子节点选中个数 == 子节点个数\r\n                                    if (node.isSelected()) {\r\n                                        if (!selectedChildrenNodes || selectedChildrenNodes.length < childrenNodes.length) {\r\n                                            $.each(unselectedChildrenNodes, function(i, theNode) {\r\n                                                // ui.logMessage(theNode, \"wui.tree\", true);\r\n                                                theNode.setSelected(node.isSelected());\r\n                                            })\r\n                                        }\r\n\r\n                                    } else {\r\n                                        if (selectedChildrenNodes && selectedChildrenNodes.length == childrenNodes.length) {\r\n                                            $.each(selectedChildrenNodes, function(i, theNode) {\r\n                                                // ui.logMessage(theNode, \"wui.tree\", true);\r\n                                                theNode.setSelected(node.isSelected());\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (param.onSelectedNode && typeof(param.onSelectedNode) === \"function\") {\r\n                                    param.onSelectedNode(item, node);\r\n                                } else if (param.selectFun && typeof(param.selectFun) === \"function\") { // 兼容旧写法\r\n                                    param.selectFun(item, node);\r\n                                }\r\n                                if (node.isSelected()) {\r\n                                    if (self.listeners.indexOf('itemSelected') > -1) {\r\n                                        if (!self.emit({ type: 'itemSelected', target: _target, item: item, node: node })) return;\r\n                                    }\r\n                                } else {\r\n                                    if (self.listeners.indexOf('itemUnselected') > -1) {\r\n                                        if (!self.emit({ type: 'itemUnselected', target: _target, item: item, node: node })) return;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            if (param.onSelectedNode && typeof(param.onSelectedNode) === \"function\") {\r\n                                param.onSelectedNode(item, node);\r\n                            } else if (param.selectFun && typeof(param.selectFun) === \"function\") { // 兼容旧写法\r\n                                param.selectFun(item, node);\r\n                            }\r\n\r\n                            if (node.isSelected()) {\r\n                                if (self.listeners.indexOf('itemSelected') > -1) {\r\n                                    if (!self.emit({ type: 'itemSelected', target: _target, item: item, node: node })) return;\r\n                                }\r\n                            } else {\r\n                                if (self.listeners.indexOf('itemUnselected') > -1) {\r\n                                    if (!self.emit({ type: 'itemUnselected', target: _target, item: item, node: node })) return;\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    // 首次创建节点触发回调\r\n                    createNode: function(event, data){\r\n                        var logSetting = {\r\n                            methodName: \"createNode\", \r\n                            className: \"wui.tree\", \r\n                            id: self.element, \r\n                            isDebug: true  // {Boolean} 是否组件调试传入的,默认是false\r\n                        }\r\n                        ui.logMethodCalled(logSetting)\r\n                        var node = data.node,\r\n                            // _target = event.target,\r\n                            // jsonData = node.data,\r\n                            enable = param.jsonReader.enable,\r\n                            synch = param.jsonReader.synch;\r\n                        var nodeKey = node[self.defaults.name];\r\n\r\n                        if (node.data[synch] === true) {\r\n                            node.setSynchChildrensEnable(true, false);\r\n                        }else{\r\n                            \r\n                            if(node.parent && node.parent.isSynchChildrensEnable()){\r\n                                node.setSynchChildrensEnable(true, false);\r\n                            }else{\r\n                                node.setSynchChildrensEnable(false, false);\r\n                            }\r\n                        }\r\n\r\n                        if(node.data[enable] === false) {\r\n                            // node.enable = false;\r\n                            node.setEnable(false);\r\n                        }else {\r\n                            if(node.parent && node.parent.isSynchChildrensEnable()){\r\n                                node.setEnable(node.parent.isEnable());\r\n                            }else{\r\n                                node.setEnable(true);\r\n                            }\r\n                        }\r\n\r\n                        // 设置默认值\r\n                        if (!!nodeKey) {\r\n                            var _index = param.value.indexOf(nodeKey);\r\n                            var selectedItemIndex = self.itemsName.indexOf(nodeKey);\r\n                            if (_index > -1) {\r\n                                node.setSelected(true);\r\n                                param.value.splice(_index, 1);\r\n                            } else if (selectedItemIndex > -1) {\r\n                                node.setSelected(true);\r\n                            } else if (param.isChangeAllChildren && node.getParent().isSelected()) {\r\n                                node.setSelected(true);\r\n                            }\r\n                        }\r\n\r\n                        if (param.onCreateNode && typeof(param.onCreateNode) === \"function\") {\r\n                            return param.onCreateNode.call(this, event, data);\r\n                        }\r\n                    },\r\n                    renderNode: function(event, data) {\r\n                        if (param.onRenderNode && typeof(param.onRenderNode) === \"function\") {\r\n                            return param.onRenderNode.call(this, event, data);\r\n                        }\r\n                    },\r\n                    renderTitle: function(event, data) {\r\n                        if (param.onRenderTitle && typeof(param.onRenderTitle) === \"function\") {\r\n                            return param.onRenderTitle.call(this, event, data);\r\n                        }\r\n                    },\r\n                    beforeExpand: function(event, data) {\r\n                        if (param.onBeforeExpand && typeof(param.onBeforeExpand) === \"function\") {\r\n                            return param.onBeforeExpand.call(this, event, data);\r\n                        }\r\n                    },\r\n                    click: function(event, data) {\r\n                        // var node = data.node;\r\n                        // param.onClick && typeof(param.onClick) === \"function\" && param.onClick(node);\r\n                        if (param.onClick && typeof(param.onClick) === \"function\") {\r\n                            return param.onClick.call(this, event, data);\r\n                        }\r\n                    },\r\n                    collapse: function(event, data) {\r\n                        ui.scroll($element.children());\r\n                        if (param.onCollapse && typeof(param.onCollapse) === \"function\") {\r\n                            return param.onCollapse.call(this, event, data);\r\n                        }\r\n                    },\r\n                    expand: function(event, data) {\r\n                        var node = data.node,\r\n                            enable = param.jsonReader.enable;\r\n                        var childrens = node.getChildren();\r\n                        if (childrens) {\r\n                            $.each(childrens, function(i, subNode) {\r\n                                subNode.setEnable(subNode.enable);\r\n                            })\r\n\r\n                        }\r\n                        ui.scroll($element.children());\r\n\r\n                        if (param.onExpand && typeof(param.onExpand) === \"function\") {\r\n                            return param.onExpand.call(this, event, data);\r\n                        }\r\n                    },\r\n                    // 懒加载事件\r\n                    lazyLoad: function(event, data) {\r\n                        if (param.onLazyLoad && typeof(param.onLazyLoad) === \"function\") {\r\n                            param.onLazyLoad(event, data);\r\n                        } else if (param.lazyLoad && typeof(param.lazyLoad) === \"function\") {\r\n                            param.lazyLoad(event, data);\r\n                        } else {\r\n                            self._onLazyLoad(event, data);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return options;\r\n            },\r\n            _initTree: function(loadDataUrl) {\r\n                var self = this,\r\n                    param = this._opt,\r\n                    $element = this.$element;\r\n\r\n                if(this._tree){\r\n                    // 初始化之前先销毁已有的\r\n                    this.$element.fancytree(\"destroy\");\r\n                    this._tree = null;\r\n                }\r\n                \r\n                // if (this.$element.fancytree()) {\r\n                //     console.error(1)\r\n                //     this.$element.fancytree(\"destroy\"); \r\n                // }\r\n                // console.info(this.$element.fancytree())\r\n                this.status = \"init\";\r\n\r\n                var options = self._getOptions(loadDataUrl);\r\n\r\n                if (param.formatParams) {\r\n                    if (typeof(param.formatParams) === \"object\") {\r\n                        $.extend(true, options, param.formatParams);\r\n                    } else if (typeof(param.formatParams) === \"function\") {\r\n                        var returnParams = param.formatParams(options);\r\n                        if (typeof(returnParams) === \"object\") {\r\n                            $.extend(true, options, returnParams);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // $.extend(true, options, param.setting);\r\n                ui.logParamValue({\r\n                    paramName: \"options\",\r\n                    paramValue: options,\r\n                    methodName: \"_initTree\",\r\n                    className: \"wui.tree\",\r\n                    isDebug: true\r\n                });\r\n                $element.fancytree(options);\r\n\r\n                this._tree = this.$element.fancytree(\"getTree\");\r\n                // console.info(this._tree);\r\n            },\r\n            _onLazyLoad: function(event, data) {\r\n                var self = this,\r\n                    param = this._opt;\r\n                // alert(\"1\");\r\n                var node = data.node;\r\n                // console.info(data);\r\n                var lazyData = node.data;\r\n                if(lazyData){\r\n                \tlazyData.key = node.key;\r\n                \tlazyData.title = node.title;\r\n                }else{\r\n                \tlazyData = {\r\n                \t\tkey: node.key,\r\n                \t\ttitle: node.title\r\n                \t}\r\n                }\r\n                lazyData[param.lazyField] = node.key;\r\n\r\n                var url = ui.buildUrl(param.loadDataUrl, lazyData);\r\n\r\n                // var urlQueryString = ui.getQueryString(param.loadDataUrl);\r\n                // lazyData = $.extend(true, {}, urlQueryString, lazyData);\r\n\r\n                data.result = {\r\n                    url: url,\r\n                    // data: lazyData,\r\n                    debugDelay: 200\r\n                };\r\n            },\r\n            // setNodeHiden\r\n            option: function(newOptions) {\r\n                var params = this._opt;\r\n\r\n                if (!!newOptions) {\r\n\r\n                    if (typeof(newOptions) === \"object\") {\r\n                        this._resetOption(newOptions);\r\n                    } else if (typeof newOptions === \"string\") {\r\n                        if (newOptions === \"getDefOpt\") {\r\n                            return config;\r\n                        } else {\r\n                            return params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n                        }\r\n                    }\r\n                } else {\r\n                    return params;\r\n                }\r\n            },\r\n            _resetOption: function(newOptions) {\r\n                var self = this,\r\n                    params = ui.deepCopy(this._opt);\r\n                if (newOptions.loadDataUrl) {\r\n                    params.loadDataUrl = null;\r\n                }\r\n                this._option = newOptions;\r\n                this._opt = $.extend(true, {}, params, newOptions); //覆盖默认配置项\r\n                this._opt.value = \"\";\r\n                var newParams = this._formatParams();\r\n                ui.logParamValue({\r\n                    paramName: \"newParams\",\r\n                    paramValue: newParams,\r\n                    methodName: \"_resetOption\",\r\n                    className: \"wui.tree\",\r\n                    isDebug: true\r\n                });\r\n                if(self.searchInput){\r\n                    self.searchInput.val(\"\");\r\n                }\r\n                this.dom = this._initTree(newParams.loadDataUrl); // 创建DOM节点,并返回DOM节点的HTML字符串\r\n            },\r\n            refresh: function(loadDataUrl, isResetActiveNode) {\r\n                var self = this,\r\n                    params = this._opt;\r\n                var loadDataUrl = loadDataUrl || params.loadDataUrl;\r\n                // self._tree.reload(loadDataUrl);\r\n                // console.info(loadDataUrl);\r\n                if(isResetActiveNode){\r\n                    this._opt.activeNode = \"\";\r\n                }\r\n                // console.info(self._tree)\r\n                // this.$element.fancytree(\"load\")\r\n                self._initTree(loadDataUrl);\r\n                // this._tree.reload(loadDataUrl);\r\n                // self._tree.reload(loadDataUrl)\r\n            },\r\n            empty: function() {\r\n                var self = this;\r\n                self._tree.visit(function(node) {\r\n                    node.setSelected(false);\r\n                });\r\n            },\r\n            destroy: function() {\r\n                if (this.$element.fancytree()) {\r\n                    this.$element.fancytree(\"destroy\"); // 销毁树结构\r\n                    this._tree = null;\r\n                }\r\n                this.$element.removeData(_pluginDataName);\r\n                this.$element.removeAttr(\"ui-type\");\r\n                this.container.replaceWith(this.initDom);\r\n                return this;\r\n            },\r\n            on: function(type, handler) {\r\n                if (_widgetEventType.indexOf(type) > -1) { // WUI组件事件监听\r\n                    if (typeof this.handlers[type] === 'undefined') {\r\n                        this.handlers[type] = [];\r\n                        this.listeners.push(type);\r\n                    }\r\n                    this.handlers[type].push(handler);\r\n                }\r\n                return this;\r\n            },\r\n            off: function(type, handler) {\r\n                var _i, _j, _listeners, _handlers, _len;\r\n                if (_widgetEventType.indexOf(type) > -1) { // 取消WUI组件事件监听\r\n                    if (this.handlers[type] instanceof Array) {\r\n                        _handlers = this.handlers[type];\r\n                        _listeners = this.listeners;\r\n\r\n                        for (_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n                            if (_listeners[_i] === type) {\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (handler === undefined) {\r\n                            this.listeners.splice(_i, 1);\r\n                            delete this.handlers[type];\r\n                        } else {\r\n                            for (_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n                                if (_handlers[_j] === handler) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (_j < _len) {\r\n                                this.handlers[type].splice(_j, 1);\r\n                                if (this.handlers[type].length == 0) {\r\n                                    this.listeners.splice(_i, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            emit: function(event) {\r\n                // console.info(event);\r\n                if (!event.target) {\r\n                    if (!this.$Maxcontainer) {\r\n                        event.target = this;\r\n                    } else {\r\n                        event.target = this.$Maxcontainer;\r\n                    }\r\n                }\r\n                if (this.handlers[event.type] instanceof Array) {\r\n                    var handlers = this.handlers[event.type];\r\n                    for (var i = 0, len = handlers.length; i < len; i++) {\r\n                        handlers[i](event);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            component: function() {\r\n                return this;\r\n            },\r\n            getActiveNode: function(){\r\n                return this._tree.getActiveNode();\r\n            },\r\n            activateKey: function(key, isSelected){\r\n                \r\n                if(!key){\r\n                    return null;\r\n                }\r\n                var keyArr = key.split(\",\"),\r\n                    actionNode = null;\r\n\r\n                if(keyArr.length == 1){\r\n                    actionNode = this.$element.fancytree(\"getTree\").activateKey(key);\r\n                }else{\r\n                    // key1,key1-2,key1-2-3,...\r\n                    // 找到第一层树节点,依次数组顺序层级查找\r\n                    var rootNode = this._tree.rootNode;\r\n                    var lookup = function(theNode){\r\n                        var childNodes = theNode.children;\r\n                        if(childNodes){\r\n                            $.each(childNodes, function(){\r\n                                if(this.key == keyArr[0]){\r\n                                    if(!this.isExpanded()){\r\n                                        this.setExpanded(true);\r\n                                    }\r\n\r\n                                    keyArr.splice(0, 1);\r\n                                    if(keyArr.length == 0){\r\n                                        // 到达索引最后一个key时,返回当前节点\r\n                                        actionNode = this;\r\n                                    }else if(this.hasChildren()){\r\n                                        // 索引还没结束,且当前节点还有子节点时,继续往下查找\r\n                                        lookup(this);\r\n                                    }\r\n                                    // 跳出遍历\r\n                                    return false;\r\n                                }\r\n                            })\r\n                        }else{\r\n                            return false;\r\n                        }\r\n                    }\r\n                    lookup(rootNode);\r\n                }\r\n\r\n                if(isSelected && actionNode){\r\n                    actionNode.setSelected(true);\r\n                }\r\n\r\n                return actionNode;\r\n            },\r\n            method: function(methodName, params) {\r\n                var args = Array.prototype.slice.call(arguments, 1);\r\n                // return this._tree[methodName].apply(this._tree, args);\r\n                return this._tree[methodName].call(this._tree, args);\r\n            },\r\n            _setUnselected: function(data) {\r\n                var self = this,\r\n                    name = this._opt.name,\r\n                    defaultName = this.defaults.name,\r\n                    itemName = \"\",\r\n                    isExist = false,\r\n                    isChecked = false;\r\n                if (typeof data === \"string\") {\r\n                    itemName = data;\r\n                } else if (typeof data === \"object\") {\r\n                    itemName = data[name];\r\n                }\r\n                if (itemName == undefined) {\r\n                    if (self.listeners.indexOf('itemUnselectError') > -1) {\r\n                        if (!self.emit({ type: 'itemUnselectError', target: self.$element[0], item: data, code: 2, message: \"传入的对象中不存在\" + name + \"属性值\" })) return;\r\n                    }\r\n                    return false;\r\n                }\r\n                this._tree.visit(function(node) {\r\n                    var keyValue = node[defaultName];\r\n                    if (keyValue === itemName) {\r\n                        node.setSelected(isChecked);\r\n                        isExist = true;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (!isExist) {\r\n                    if (self.listeners.indexOf('itemUnselectError') > -1) {\r\n                        if (!self.emit({ type: 'itemUnselectError', target: self.$element[0], item: data, code: 0, message: \"查无此节点\" })) return;\r\n                    }\r\n                    return false;\r\n                }\r\n            },\r\n            _setSelected: function(data) {\r\n                var self = this,\r\n                    name = this._opt.name,\r\n                    defaultName = this.defaults.name,\r\n                    itemName = \"\",\r\n                    isExist = false,\r\n                    isChecked = true;\r\n                if (typeof data === \"string\") {\r\n                    itemName = data;\r\n                } else if (typeof data === \"object\") {\r\n                    itemName = data[name];\r\n                }\r\n                if (itemName == undefined) {\r\n                    if (self.listeners.indexOf('itemSelectError') > -1) {\r\n                        if (!self.emit({ type: 'itemSelectError', target: self.$element[0], item: data, code: 2, message: \"传入的对象中不存在\" + name + \"属性值\" })) return;\r\n                    }\r\n                    return false;\r\n                }\r\n                this._tree.visit(function(node) {\r\n                    var keyValue = node[defaultName];\r\n                    if (keyValue === itemName) {\r\n                        node.setSelected(isChecked);\r\n                        isExist = true;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (!isExist) {\r\n                    if (self.listeners.indexOf('itemSelectError') > -1) {\r\n                        if (!self.emit({ type: 'itemSelectError', target: self.$element[0], item: data, code: 0, message: \"查无此节点\" })) return;\r\n                    }\r\n                    return false;\r\n                }\r\n            },\r\n            set: function(data) {\r\n                var _target = this.$element[0];\r\n                if (data != undefined) {\r\n                    this.empty();\r\n                    if (typeof data === \"string\") {\r\n                        if (data != \"\") {\r\n                            var arr = data.split(\",\");\r\n                            for (var i = 0; i < arr.length; i++)\r\n                                this._setSelected(arr[i]);\r\n                        } else {\r\n                            // ui.logMessage(\"添加的节点不能为空字符串\", \"wui.tree\", true);\r\n                            if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"添加的节点不能为空字符串\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else if (ui.isArray(data)) {\r\n                        if (data.length > 0) {\r\n                            for (var i = 0; i < data.length; i++)\r\n                                this._setSelected(data[i]);\r\n                        } else {\r\n                            // ui.logMessage(\"添加的节点不能为空数组\", \"wui.tree\", true);\r\n                            if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"添加的节点不能为空数组\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else if (typeof(data) === \"object\") {\r\n                        if (data != null) {\r\n                            this.empty();\r\n                            this._setSelected(data);\r\n                        } else {\r\n                            if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"添加的节点不能为空对象\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else {\r\n                        if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                            if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"传入的参数值不支持赋值\" })) return;\r\n                        }\r\n                        return false;\r\n                    }\r\n\r\n                    return this;\r\n                } else {\r\n                    if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                        if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"必须传入添加的节点\" })) return;\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            get: function(type, isLeave) {\r\n                var self = this,\r\n                    name = this._opt.name,\r\n                    text = this._opt.text;\r\n                type = type || \"json\";\r\n                isLeave = isLeave || false;\r\n                // var $selector = this.$element;\r\n                if (isLeave) {\r\n                    var leaves = [],\r\n                        leaveNames = [],\r\n                        leaveTexts = [],\r\n                        leaveArray = [];\r\n                    $.each(this.nodesArray, function(i, node) {\r\n                        if (!node.isFolder()) {\r\n                            leaves.push(node);\r\n                            leaveNames.push(this.itemsName[i]);\r\n                            leaveTexts.push(this.itemsText[i]);\r\n                            leaveArray.push(this.itemsArray[i]);\r\n                        }\r\n                    })\r\n                    if (type == \"value\") {\r\n                        return leaveNames;\r\n                    } else if (type == \"json\") {\r\n                        return leaveArray;\r\n                    } else if (type == \"text\") {\r\n                        return leaveTexts;\r\n                    } else {\r\n                        return leaves;\r\n                    }\r\n                } else {\r\n                    if (type == \"value\") {\r\n                        return this.itemsName;\r\n                    } else if (type == \"json\") {\r\n                        return this.itemsArray;\r\n                    } else if (type == \"text\") {\r\n                        return this.itemsText;\r\n                    } else {\r\n                        return this.nodesArray;\r\n                    }\r\n                }\r\n            },\r\n            getNodeStatus: function(itemName, callback) {\r\n                var self = this,\r\n                    name = this._opt.name,\r\n                    defaultName = this.defaults.name,\r\n                    isSelected = false,\r\n                    theNode = null;\r\n                this._tree.visit(function(node) {\r\n                    var keyValue = node[defaultName];\r\n                    if (keyValue === itemName) {\r\n                        theNode = node;\r\n                        isSelected = node.selected;\r\n                        return false;\r\n                        // node.setSelected(isChecked);\r\n                        // isExist = true;\r\n                        // return false;\r\n                    }\r\n                });\r\n\r\n                if (callback && typeof(callback) === \"function\") {\r\n                    callback(isSelected, theNode);\r\n                }\r\n\r\n                return isSelected;\r\n            },\r\n            visitTree: function(visitFunc) {\r\n                var self = this,\r\n                    name = this._opt.name,\r\n                    defaultName = this.defaults.name,\r\n                    _tree = self._tree;\r\n\r\n                this._tree.visit(function(node) {\r\n                    var keyValue = node[defaultName];\r\n                    // console.info(keyValue);\r\n                    if (visitFunc && typeof(visitFunc) === \"function\") {\r\n                        var isContinue = visitFunc.call(_tree, node, defaultName, keyValue);\r\n                        if (isContinue === false) {\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    // if(keyValue === nodeKey){\r\n                    //     newRootNode = node;\r\n                    //     return false;\r\n                    // }\r\n                });\r\n            },\r\n            /*\r\n             * 过滤树节点\r\n             * @param  {JSON} filterParams\r\n             * @param  {String} filterParams.filterMode 过滤模式,可选值:\"nodes\"(匹配单个节点) | \"branches\"(匹配节点包括整个分支),默认是\"branches\"\r\n             * @param  {Function | String} filterParams.filter 匹配规则:传递方法或者匹配字符串\r\n             * @param  {JSON} filterParams.options 匹配参数配置,参见初始化参数filter,不传则采用初始化传递的filter参数\r\n             * @return {Number} 匹配节点数目\r\n             */\r\n            filter: function(filterParams) {\r\n                var self = this,\r\n                    params = this._opt;\r\n\r\n                filterParams = filterParams || {};\r\n                var filters = {\r\n                    filterMode: \"branches\",\r\n                    filter: \"\",\r\n                    options: {},\r\n                    isResetCheckbox: true\r\n                }\r\n\r\n                filterParams = $.extend(true, {}, filters, filterParams);\r\n                // console.info(filterParams);\r\n\r\n                // 校验是否引入过滤插件\r\n                try {\r\n                    if ($.ui.fancytree._extensions[\"filter\"]) {\r\n                        var filterNumber = 0;\r\n                        if (filterParams.filterMode == \"nodes\") {\r\n                            filterNumber = this._tree.filterNodes(filterParams.filter, filterParams.options);\r\n                        } else if (filterParams.filterMode == \"branches\") {\r\n                            filterNumber = this._tree.filterBranches(filterParams.filter, filterParams.options);\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                        this._tree.visit(function(node) {\r\n                            if (node.isSelected() && filterParams.isResetCheckbox) {\r\n                                node.setSelected(false);\r\n                            }\r\n\r\n                            if (params.isStrictFilter) {\r\n                                var isUnselectable = !(node.isMatched());\r\n                                node.unselectable = isUnselectable;\r\n                                if (isUnselectable) {\r\n                                    $(node.span).addClass(\"fancytree-unselectable\");\r\n                                } else {\r\n                                    $(node.span).removeClass(\"fancytree-unselectable\");\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                        return filterNumber;\r\n                    } else {\r\n                        ui.logWarn(\"没有加载 tree filter模块\", FRAME_NAME + \".\" + _widgetName, true);\r\n                    }\r\n                } catch (err) {\r\n                    ui.logWarn(err, FRAME_NAME + \".\" + _widgetName, true);\r\n                    // ui.logWarn(\"没有加载 tree过滤功能 所需第三方插件:jquery.fancytree.filter.js\");\r\n                }\r\n            },\r\n            select: function(data) {\r\n                var _target = this.$element[0];\r\n                if (data != undefined) {\r\n                    if (typeof data === \"string\") {\r\n                        if (data != \"\") {\r\n                            var arr = data.split(\",\");\r\n                            for (var i = 0; i < arr.length; i++)\r\n                                this._setSelected(arr[i]);\r\n                        } else {\r\n                            // ui.logMessage(\"添加的节点不能为空字符串\", \"wui.tree\", true);\r\n                            if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"添加的节点不能为空字符串\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else if (ui.isArray(data)) {\r\n                        if (data.length > 0) {\r\n                            for (var i = 0; i < data.length; i++)\r\n                                this._setSelected(data[i]);\r\n                        } else {\r\n                            // ui.logMessage(\"添加的节点不能为空数组\", \"wui.tree\", true);\r\n                            if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"添加的节点不能为空数组\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else if (typeof(data) === \"object\") {\r\n                        if (data != null) {\r\n                            this._setSelected(data);\r\n                        } else {\r\n                            if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                                if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"添加的节点不能为空对象\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else {\r\n                        if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                            if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"传入的参数值不支持赋值\" })) return;\r\n                        }\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (this.listeners.indexOf('itemSelectError') > -1) {\r\n                        if (!this.emit({ type: 'itemSelectError', target: _target, item: data, code: 6, message: \"必须传入添加的节点\" })) return;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            unselect: function(data) {\r\n                var _target = this.$element[0];\r\n                if (data != undefined) {\r\n                    if (typeof data === \"string\") {\r\n                        if (data != \"\") {\r\n                            var arr = data.split(\",\");\r\n                            for (var i = 0; i < arr.length; i++)\r\n                                this._setUnselected(arr[i]);\r\n                        } else {\r\n                            if (this.listeners.indexOf('itemUnselectError') > -1) {\r\n                                if (!this.emit({ type: 'itemUnselectError', target: _target, item: data, code: 6, message: \"移除的节点不能为空字符串\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else if (ui.isArray(data)) {\r\n                        if (data.length > 0) {\r\n                            for (var i = 0; i < data.length; i++)\r\n                                this._setUnselected(data[i]);\r\n                        } else {\r\n                            if (this.listeners.indexOf('itemUnselectError') > -1) {\r\n                                if (!this.emit({ type: 'itemUnselectError', target: _target, item: data, code: 6, message: \"移除的节点不能为空数组\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n\r\n                    } else if (typeof data === \"object\" && data != null) {\r\n                        if (data != null) {\r\n                            this._setUnselected(data);\r\n                        } else {\r\n                            if (this.listeners.indexOf('itemUnselectError') > -1) {\r\n                                if (!this.emit({ type: 'itemUnselectError', target: _target, item: data, code: 6, message: \"移除的节点不能为空对象\" })) return;\r\n                            }\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        if (this.listeners.indexOf('itemUnselectError') > -1) {\r\n                            if (!this.emit({ type: 'itemUnselectError', target: _target, item: data, code: 6, message: \"传入的参数类型不支持移除\" })) return;\r\n                        }\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            },\r\n            selectAll: function() {\r\n                var self = this;\r\n                self._tree.visit(function(node) {\r\n                    node.setSelected(true);\r\n                });\r\n            },\r\n            unselectAll: function() {\r\n                var self = this;\r\n                self._tree.visit(function(node) {\r\n                    node.setSelected(false);\r\n                });\r\n            },\r\n            getTree: function() {\r\n                return this._tree;\r\n            },\r\n            disabled: function() {\r\n                var self = this,\r\n                    tree = this._tree;\r\n                tree.visit(function(node) {\r\n                    node.setEnable(false, true);\r\n                });\r\n            },\r\n            enabled: function(isChangeAll) {\r\n                var self = this,\r\n                    tree = this._tree,\r\n                    enable = this._opt.jsonReader.enable;\r\n                tree.visit(function(node) {\r\n                    if (isChangeAll) {\r\n                        node.setEnable(true, true);\r\n                    } else if (node.data[enable] !== false) {\r\n                        node.setEnable(true, true);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        //fn就是prototype\r\n        $.fn[_pluginName] = function(param1) {\r\n            //each表示对多个元素调用,用return 是为了返回this,进行链式调用\r\n            // console.info(param1);\r\n            return this.each(function() {\r\n                //判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n                if (!$.data(document.getElementById(element), _pluginDataName)) {\r\n                    //生成插件类实例。\r\n                    $.data(document.getElementById(element), _pluginDataName, new uiTree(this, param1));\r\n                }\r\n            });\r\n        }\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n        function _executeMethod(funcName, params) {\r\n            var data = $.data(document.getElementById(element), \"plugin_uiTree\");\r\n            if (!data) {\r\n                ui.logError(\"wui.tree 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n                return;\r\n            }\r\n\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n            if (typeof(data[funcName]) === \"function\") {\r\n                return data[funcName].apply(data, args);\r\n            } else {\r\n                ui.logWarn('wui.tree 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         * @event on\r\n         * @param eventType {string} 可监听事件类型如下：<br/>\r\n              <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                  <tr>\r\n                    <td> eventType </td>\r\n                    <td> 含义 </td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\"\"</td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n         * @param func {function} 事件类型触发之后的执行方法\r\n         * @return 组件对象\r\n         * @example \r\n                \r\n                // 组件添加节点出错时被触发\r\n                uiTree.on(\"itemSelectError\", function(e){\r\n                    console.log(\"itemSelectError\");\r\n                });\r\n                    \r\n         */\r\n        function _on(eventType, func) {\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n         * @param func {function} 选填,事件类型触发之后的执行方法,不传则默认取消该类型绑定的全部事件方法\r\n         * @return 组件对象\r\n             * @example \r\n                \r\n                // 取消组件事件监听\r\n                uiTree.off(\"itemSelectError\");\r\n                    \r\n         */\r\n        function _off(eventType, func) {\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n        * 设置选中值\r\n        * @method set\r\n        * @param value {string/object} 选中选项的value属性值,多个数据用\",\"分隔或者数组封装传递\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值\r\n            uiTree.set(\"01,010101\");\r\n                \r\n        */\r\n        function _set(value) {\r\n            return _executeMethod(\"set\", value);\r\n        }\r\n\r\n        /**\r\n        * 获取组件值\r\n        * @method get\r\n        * @since 0.0.1\r\n        * @param type {string} 获取的组件值的类型,可选:value/text/json,默认是\"json\"\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取组件值\r\n            var value = uiTree.get(\"value\");   // \"tianjin\"\r\n                \r\n        */\r\n        function _get(type, isLeave) {\r\n            return _executeMethod(\"get\", type, isLeave);\r\n        }\r\n\r\n        /**\r\n        * 当开启复选框时,判断单个节点是否选中状态\r\n        * @method getNodeStatus\r\n        * @param value {string} 要判断的节点的value属性值\r\n        * @param callback {Function} 判断之后的回调方法,参数isSelected:当前节点是否选中状态, theNode:当前节点数据\r\n        * @return {Boolean} 是否选中状态\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值\r\n            uiTree.getNodeStatus(\"01\"); // false\r\n                \r\n        */\r\n        function _getNodeStatus(value, callback) {\r\n            return _executeMethod(\"getNodeStatus\", value, callback);\r\n        }\r\n\r\n        /**\r\n        * 开启复选框时,选中选项\r\n        * @method select\r\n        * @param value {string/object} 选中选项的value属性值,多个数据用\",\"分隔或者数组封装传递\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中组件值\r\n            uiTree.select(\"01\");\r\n                \r\n        */\r\n        function _select(value) {\r\n            return _executeMethod(\"select\", value);\r\n        }\r\n\r\n        /**\r\n        * 开启复选框时,取消选项选中\r\n        * @method unselect\r\n        * @since 0.0.1\r\n        * @example \r\n            // 取消选中组件值\r\n            uiTree.unselect(\"01\");\r\n                \r\n        */\r\n        function _unselect(value) {\r\n            return _executeMethod(\"unselect\", value);\r\n        }\r\n\r\n        /**\r\n        * 开启复选框时,选中全部选项\r\n        * @method selectAll\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中全部选项\r\n            uiTree.selectAll();\r\n                \r\n        */\r\n        function _selectAll() {\r\n            return _executeMethod(\"selectAll\");\r\n        }\r\n\r\n        /**\r\n        * 开启复选框时,取消选中全部选项\r\n        * @method unselectAll\r\n        * @since 0.0.1\r\n        * @example \r\n            // 选中全部选项\r\n            uiTree.unselectAll();\r\n                \r\n        */\r\n        function _unselectAll() {\r\n            return _executeMethod(\"unselectAll\");\r\n        }\r\n\r\n        /**\r\n         * 遍历树节点\r\n         * @method visitTree\r\n         * @since 0.0.1\r\n         * @param  {JSON} callback 遍历过程执行方法,传递三个参数：node:表示当前遍历节点对象,key:节点关键字段名,默认是\"key\",value:节点关键字段值,默认是node[\"key\"]\r\n         * @return \r\n         * @example \r\n            \r\n            uiTree.visitTree(function(node){\r\n                console.info(node.key)\r\n            });\r\n                \r\n         */\r\n        function _visitTree(callback) {\r\n            return _executeMethod(\"visitTree\", callback);\r\n        }\r\n\r\n        /**\r\n         * 过滤树节点\r\n         * @method filter\r\n         * @since 0.0.1\r\n         * @param  {JSON} filterParams\r\n         * @param  {String} filterParams.filterMode 过滤模式,可选值:\"nodes\"(匹配单个节点) | \"branches\"(匹配节点包括整个分支),默认是\"branches\"\r\n         * @param  {Function | String} filterParams.filter 匹配规则:传递方法或者匹配字符串，若传递function,传递参数为node,表示当前遍历节点对象\r\n         * @param  {JSON} filterParams.options 匹配参数配置,参见初始化参数filter,不传则采用初始化传递的filter参数\r\n         * @return {Number} 匹配节点数目\r\n         * @example \r\n            // 过滤key为\"01\"的根节点\r\n            uiTree.filter({\r\n                filterMode: \"nodes\",\r\n                filter: function(node){\r\n                    // console.info(node);\r\n                    node.setSelected(false);\r\n                    // node.hideCheckbox = true;\r\n                    return (node.key === stepName);\r\n                },\r\n                options: {\r\n                    mode: \"dimm\"\r\n                }\r\n            });\r\n                \r\n         */\r\n        function _filter(filterParams) {\r\n            return _executeMethod(\"filter\", filterParams);\r\n        }\r\n\r\n        /**\r\n        * 获取整棵fancyTree树对象\r\n        * @method getTree\r\n        * @since 0.0.1\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n            \r\n            // 获取组件值\r\n            var tree = uiTree.getTree();   // [fancytree]\r\n                \r\n        */\r\n        function _getTree(type) {\r\n            return _executeMethod(\"getTree\", type);\r\n        }\r\n\r\n        /**\r\n        * 获取树被点击的节点对象\r\n        * @method getActiveNode\r\n        * @since 0.0.1\r\n        * @return 树被点击的节点对象\r\n        * @example \r\n            \r\n            // 获取树被点击的节点对象\r\n            uiTree.getActiveNode();\r\n                \r\n        */\r\n        function _getActiveNode() {\r\n            return _executeMethod(\"getActiveNode\");\r\n        }\r\n\r\n        /**\r\n         * 点击树节点\r\n         * @method activateKey\r\n         * @since 0.0.1\r\n         * @param  {String} key 要点击的节点key值\r\n         * @param  {Boolean} isSelected 是否设置为选中,默认不作处理\r\n         * @example \r\n            // 点击key为\"010302\"的节点\r\n            uiTree.activateKey(\"010302\");\r\n                \r\n         */\r\n        function _activateKey(key, isSelected) {\r\n            return _executeMethod(\"activateKey\", key, isSelected);\r\n        }\r\n\r\n        /**\r\n        * 禁用全部树节点\r\n        * @method disabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 禁用全部树节点\r\n            uiTree.disabled();\r\n                \r\n        */\r\n        function _disabled() {\r\n            return _executeMethod(\"disabled\");\r\n        }\r\n\r\n        /**\r\n        * 启用全部树节点\r\n        * @method enabled\r\n        * @param isEnabledAll {Boolean} 是否启用全部,包括服务器返回默认禁用的节点,默认是false\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 启用全部树节点\r\n            uiTree.enabled();\r\n                \r\n        */\r\n        function _enabled(isEnabledAll) {\r\n            return _executeMethod(\"enabled\", isEnabledAll);\r\n        }\r\n\r\n        /**\r\n        * 调用第三方树插件方法\r\n        * @method method\r\n        * @param methodName {string} 第三方树插件的方法名\r\n        * @param params {Array} 第三方树插件的方法参数\r\n        * @since 0.0.1\r\n        * @example \r\n            // 销毁树插件\r\n            uiTree.method(\"destroy\");\r\n                \r\n        */\r\n        function _method(params) {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            return _executeMethod(\"method\", args);\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n          <table class=\"table table-bordered table-condensed\">\r\n            <thead>\r\n              <tr>\r\n                <td> 传递参数类型 </td>\r\n                <td> 含义 </td>\r\n                <td> 返回值 </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td> undefined </td>\r\n                <td> 获取组件的配置参数 </td>\r\n                <td> JSON 组件的配置参数 </td>\r\n              </tr>\r\n              <tr>\r\n                <td> String </td>\r\n                <td> 获取传入字符串对应的参数值 </td>\r\n                <td> 传递的字符串对应的组件配置值 </td>\r\n              </tr>\r\n              <tr>\r\n                <td> JSON </td>\r\n                <td> 重置组件参数配置 </td>\r\n                <td> 组件对象 </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiTree.option();\r\n                \r\n        */\r\n        function _option(params) {\r\n            return _executeMethod(\"option\", params);\r\n        }\r\n\r\n        /**\r\n        * 刷新树结构\r\n        * @method refresh\r\n        * @param [loadDataUrl] {String} 若为空,则采用初始化配置数据源,若传递参数,则采用传递参数作为数据源刷新树结构\r\n        * @param [isResetActiveNode] {Boolean} 是否重置被点击节点,若为true，则会还原原先被点击树节点为初始状态\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 刷新树节点: 第一个参数，如果要重置刷新接口，则传递，否则为null,第二个参数，是否重置点击节点，默认是false\r\n            uiTree.refresh();\r\n                \r\n        */\r\n        function _refresh(loadDataUrl, isResetActiveNode) {\r\n            return _executeMethod(\"refresh\", loadDataUrl, isResetActiveNode);\r\n        }\r\n\r\n        /**\r\n        * 清空组件值\r\n        * @method empty\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空组件值：设置不可自由输入时,可通过此方法清除选中值\r\n            uiTree.empty();\r\n                \r\n        */\r\n        function _empty() {\r\n            return _executeMethod(\"empty\");\r\n        }\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiTree.destroy();\r\n                \r\n        */\r\n        function _destroy() {\r\n            return _executeMethod(\"destroy\");\r\n        }\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiTree.component();\r\n            console.info(component);\r\n        */\r\n        function _component() {\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n            // 重新初始化组件,若是传递参数,则\r\n            var myTree = uiTree.init();\r\n                \r\n         */\r\n        function _init(opt) {\r\n            if (!$.data(document.getElementById(element), _pluginDataName)) {\r\n                $('#' + element)[_pluginName](opt);\r\n            } else {\r\n                if (opt && ui.isJson(opt)) {\r\n                    return _executeMethod(\"option\", opt);\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n        return {\r\n            // 初始化\r\n            init: _init,\r\n            // 增加监听事件\r\n            on: _on,\r\n            // 删除监听事件\r\n            off: _off,\r\n            // 获取组件值\r\n            get: _get,\r\n            // 设置组件值\r\n            set: _set,\r\n            // 获取单个节点的状态(selected/unselected)\r\n            getNodeStatus: _getNodeStatus,\r\n            getActiveNode: _getActiveNode,\r\n            select: _select,\r\n            unselect: _unselect,\r\n            selectAll: _selectAll,\r\n            unselectAll: _unselectAll,\r\n            // 树节点过滤\r\n            filter: _filter,\r\n            // 点击树节点\r\n            activateKey: _activateKey,\r\n            // 遍历树节点\r\n            visitTree: _visitTree,\r\n            // 设置或获取组件配置\r\n            option: _option,\r\n            // 刷新树\r\n            refresh: _refresh,\r\n            // 清空组件值\r\n            empty: _empty,\r\n            // 销毁组件\r\n            destroy: _destroy,\r\n            method: _method,\r\n            disabled: _disabled,\r\n            enabled: _enabled,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            // 获取整棵fancytree树对象\r\n            getTree: _getTree\r\n        }\r\n    }\r\n\r\n    return ui;\r\n})(wui || {}, libs);","// wui.grid\r\n// 列表控件\r\n// Date : 2018-03-13\r\n// by chenzx\r\n\r\n;(function (ui,$, undefined) {\r\n\t\r\n    /**\r\n     * <h3>列表组件</h3>\r\n     * <ol>\r\n     * <li>支持加载后台服务作为下拉数据源; </li>\r\n     * <li>支持多条件查询; </li>\r\n     * <li>支持自定义分页; </li>\r\n     * </ol>\r\n     * <h3>依赖插件</h3>\r\n     * <ul>\r\n     * <li><a href=\"http://www.cnblogs.com/younggun/archive/2012/08/27/2657922.html\" target=\"_blank\" title=\"参考网址\">jqGrid</a> </li>\r\n     * </ul>\r\n     * <h3>需引入插件</h3>\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/dist/plugins/jqGrid_JS_5.1.1/css/ui.jqgrid-bootstrap.css&quot; /&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/jqGrid_JS_5.1.1/js/i18n/grid.locale-cn.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/jqGrid_JS_5.1.1/js/jquery.jqGrid.js&quot;&gt;&lt;/script&gt;</code></pre>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiGrid\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.grid/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.grid/selectRows\"}}{{/crossLink}}: 选择或反选指定行(单选时,只操作第一个匹配到值的数据) </li>\r\n     * <li>{{#crossLink \"wui.grid/select\"}}{{/crossLink}}: 选择指定行(单选时,只操作第一个匹配到值的数据) </li>\r\n     * <li>{{#crossLink \"wui.grid/unselect\"}}{{/crossLink}}: 取消选择指定行(单选时,只操作第一个匹配到值的数据) </li>\r\n     * <li>{{#crossLink \"wui.grid/getSelectedRows\"}}{{/crossLink}}: 获取选中行数据 </li>\r\n     * <li>{{#crossLink \"wui.grid/getRowsDataById\"}}{{/crossLink}}: 根据行数据key值获取行数据 </li>\r\n     * <li>{{#crossLink \"wui.grid/deleteSelectedRows\"}}{{/crossLink}}: 删除选中行数据 </li>\r\n     * <li>{{#crossLink \"wui.grid/searchGridFromSearchBar\"}}{{/crossLink}}: 获取搜索栏数据搜索表格 </li>\r\n     * <li>{{#crossLink \"wui.grid/searchGrid\"}}{{/crossLink}}: 搜索列表 </li>\r\n     * <li>{{#crossLink \"wui.grid/customSearchBar\"}}{{/crossLink}}: 自定义搜索栏 </li>\r\n     * <li>{{#crossLink \"wui.grid/resetGrid\"}}{{/crossLink}}: 重置Grid,刷新整个列表的数据(不保留查询条件,且页码归1) </li>\r\n     * <li>{{#crossLink \"wui.grid/refreshData\"}}{{/crossLink}}: 刷新当前列表页的数据(保留查询条件,且只刷新当前页) </li>\r\n     * <li>{{#crossLink \"wui.grid/hideSearchBarRow\"}}{{/crossLink}}: 隐藏搜索栏除了第一行之外的搜索行 </li>\r\n     * <li>{{#crossLink \"wui.grid/showSearchBarRow\"}}{{/crossLink}}: 显示搜索栏全部搜索行 </li>\r\n     * <li>{{#crossLink \"wui.grid/exportGrid\"}}{{/crossLink}}: 导出列表数据 </li>\r\n     * <li>{{#crossLink \"wui.grid/showSearchGrid\"}}{{/crossLink}}: 显示高级搜索栏 </li>\r\n     * <li>{{#crossLink \"wui.grid/showFilterSearch\"}}{{/crossLink}}: 显示过滤工具栏 </li>\r\n     * <li>{{#crossLink \"wui.grid/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.grid/addRowsData\"}}{{/crossLink}}: 添加行数据 </li>\r\n     * <li>{{#crossLink \"wui.grid/component\"}}{{/crossLink}}: 获取wui组件的内部定义组件 </li>\r\n     * <li>{{#crossLink \"wui.grid/scroll\"}}{{/crossLink}}: 当列表宽高发生改变时，手动刷新滚动条 </li>\r\n     * <li>{{#crossLink \"wui.grid/mergerRows\"}}{{/crossLink}}: 合并行 </li>\r\n     * <li>{{#crossLink \"wui.grid/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class grid\r\n     *  @constructor \r\n     *  @param {string} id  组件id@@@###初始化组件元素ID名  \r\n     *  @param {object} option  组件配置@@@###组件配置参数\r\n     *  @param {string} option.url 数据服务地址,默认是\"\"\r\n     *  @param {Array} option.localData 加载的本地数据,默认是[]\r\n     *  @param {JSON} [option.otherParam]   第一次请求后台服务时传递的自定义参数,默认是{}\r\n     *  @param {string} [option.mtype]   获取数据类型,默认是\"GET\"\r\n     *  @param {string} [option.dataType]  返回数据格式,默认是\"json\"\r\n     *  @param {string} [option.gridPageId]   分页容器ID,若isShowPageBar为true,但不传递此参数,则默认构建一个导航栏,默认为空 \r\n     *  @param {string} [option.gridToolbar]   工具栏容器DOM对象,若不传递此参数,则根据传递的btn_参数是否为true来增加工具栏,默认为空\r\n     *  @param {string} [option.caption]   表格标题,默认是\"\" \r\n     *  @param {String} [option.mergerRowsField]   合并行字段,默认是\"\",表示不合并\r\n     *  @param {Boolean} [option.isShowPageBar]   是否显示页码导航栏,若为false,需要自己写分页导航,默认是true,要是不想分页显示,设置{isShowPageBar: false, rowNum: \"all\"}就会显示接口返回的全部数据且不显示分页导航\r\n     *  @param {Boolean} [option.isShowCheckBox]   是否显示复选框,默认是true \r\n     *  @param {Boolean} [option.isEnableSelectAll]   当限制个数时是否启用全选,若为true,则选择前maxNumber条数据,若为false,则禁用全选按钮,默认是false\r\n     *  @param {Boolean} [option.isShowRowNumbers]   是否显示行号,默认是false \r\n     *  @param {String} [option.rowNumbersTitle]   序号列标题,默认是\"序号\"\r\n     *  @param {Boolean} [option.multiSort]   是否支持多列排序,默认是false\r\n     *  @param {Boolean} [option.isSortable]   是否可排序; 此参数为true时,固定列的功能无法使用,默认是false   \r\n     *  @param {Boolean} [option.isShowSearchBar]   是否显示搜索栏(展示的搜索列根据colModel的search参数设置),默认是true    \r\n     *  @param {Boolean} [option.isHideSearchRows]   当开启搜索栏时，是否隐藏超过一行的搜索行,默认是true,若为false,则不隐藏也不添加隐藏按钮     \r\n     *  @param {Boolean} [option.isShowRecords]   是否要显示总记录数,默认是true     \r\n     *  @param {Boolean} [option.isLoadonce]   只加载一次数据。加载后,datatype就被指定为local,之后的操作都是基于客户端的操作。分页功能会禁止,默认是false     \r\n     *  @param {Boolean} [option.isEnableCellEdit]   启用或者禁用单元格编辑功能,默认是false\r\n     *  @param {Boolean} [option.isClickRow]   是否启用点击行选中复选框,默认是true\r\n     *  @param {Boolean} [option.isFullScreen]   是否撑满一屏,默认是true\r\n     *  @param {JSON} [option.offset]   当设置isFullScreen为true时，计算列表全屏尺寸时距离父节点的偏移量   \r\n     *  @param {Number} [option.offset.top]   距离父节点的顶部偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.offset.bottom]   距离父节点的底部偏移量,单位是\"px\",默认是20  \r\n     *  @param {Number} [option.offset.left]   距离父节点的左边偏移量,单位是\"px\",默认是0\r\n     *  @param {Number} [option.offset.right]   距离父节点的右边偏移量,单位是\"px\",默认是0\r\n     *  @param {Boolean} [option.shrinkToFit]   是否自动撑满,此属性用来说明当初始化列宽度时候的计算类型,如果为ture,则按比例初始化列宽度。如果为false,则列宽度使用colModel指定的宽度       \r\n     *  @param {Number} [option.height]   表格高度,若设置了\"isFullScreen:true\"则此参数无效,若要生效,先设置\"isFullScreen:false\",默认是\"auto\"    \r\n     *  @param {Number} [option.width]   表格宽度,若设置了\"isFullScreen:true\"则此参数无效,若要生效,先设置\"isFullScreen:false\",默认是\"100%\"   \r\n     *  @param {Boolean} [option.autowidth]   是否自动宽度,如果为ture时，则当表格在首次被创建时会根据父元素比例重新调整表格宽度。如果父元素宽度改变，为了使表格宽度能够自动调整则需要实现函数：setGridWidth,默认是false   \r\n     *  @param {number} [option.maxNumber] 当启用复选框时,最多可选个数，默认为false，即不限制,当设置为1时,是单选状态\r\n     *  @param {Number} [option.searchColNum]   自定义搜索栏中,一行显示查询项个数,默认是3\r\n     *  @param {JSON} [option.searchBarSetting]   搜索栏参数配置  \r\n     *  @param {String} [option.searchBarSetting.searchText]   查询按钮文本,默认是\"<i class=\\\"fa fa-search\\\"></i>\"\r\n     *  @param {String} [option.searchBarSetting.resetText]   重置按钮文本,默认是\"<i class=\\\"fa fa-refresh\\\"></i>\"\r\n     *  @param {String} [option.searchBarSetting.showMoreText]   展开更多搜索条件文本,默认是\"<i class=\\\"fa fa-chevron-down\\\"></i>\"\r\n     *  @param {String} [option.searchBarSetting.hideMoreText]   隐藏更多搜索条件文本,默认是\"<i class=\\\"fa fa-chevron-up\\\"></i>\"\r\n     *  @param {String} [option.searchBarSetting.fieldIdPrefix]   搜索栏输入框和选择框id和name的前缀,假如该字段名为\"id\",则生成字段ID属性值为\"wui_grid_searchbar_id\",默认是\"wui_grid_searchbar_\"\r\n     *  @param {Boolean} [option.searchBarSetting.labelClass]   搜索条件标题自定义样式类,默认是\"\"\r\n     *  @param {Boolean} [option.searchBarSetting.contentClass]   搜索条件内容自定义样式类,默认是\"\"\r\n     *  @param {Boolean} [option.searchBarSetting.btnCellClass]   搜索条件按钮格自定义样式类,默认是\"\"\r\n     *  @param {Boolean} [option.searchBarSetting.isSetWidth]   是否设置宽度,默认是true\r\n     *  @param {Number} [option.searchBarSetting.titleColWidthRec]   搜索条件格中内容格宽度比例,默认是1\r\n     *  @param {Number} [option.searchBarSetting.contentColWidthRec]   搜索条件格中内容格宽度比例,默认是2\r\n     *  @param {String} [option.searchBarSetting.btnColWidth]   搜索条件格中按钮格占整行比例,默认是\"15%\"\r\n     *  @param {Array} [option.actions]   自定义搜索栏按钮: [\"search\",\"reset\",\"refresh\",\"showHide\"],默认是[\"search\",\"reset\",\"showHide\"]\r\n     *  @param {Array} option.colModel 设置表格列的属性,默认是[],每条数据可配置项如下表:\r\n     *  @param {Boolean} option.colModel.key 当从服务器端返回的数据中没有id时,将此作为唯一rowid使用,只有一个列可以做这项设置。如果设置多于一个,那么只选取第一个,其他被忽略,默认值false\r\n     *  @param {String} option.colModel.name 表格列的名称,所有关键字,保留字都不能作为名称使用包括subgrid, cb and rn,默认值\"\"\r\n     *  @param {String} option.colModel.label 设置该列表头名称\r\n     *  @param {String} [option.colModel.align] 设置单元格对齐方式,框架建议规则是:<strong>数字靠右,文本居左，相同位数居中</strong>,可选值\"left\", \"center\", \"right\",默认值\"left\"\r\n     *  @param {String} [option.colModel.classes] 设置列的css。多个class之间用空格分隔,如：'class1 class2',表格默认的css属性是ui-ellipsis\r\n     *  @param {Boolean} [option.colModel.hidden] 在初始化表格时是否要隐藏此列,默认值false\r\n     *  @param {Boolean} [option.colModel.hidedlg] 是否显示隐藏此列,若设置为true,且hidden为false时,一开始不显示,但是可通过筛选按钮显示出来,默认值false\r\n     *  @param {Boolean} [option.colModel.frozen] 是否冻结列,若要设置固定列，则必须包含从第一列开始设置(隐藏的也要设置\"frozen\"为true),默认值false\r\n     *  @param {Boolean} [option.colModel.fixed] 列宽度是否要固定不可变,默认值true\r\n     *  @param {Number} [option.colModel.width] 默认列的宽度,只能是象素值,不能是百分比,默认值150\r\n     *  @param {Boolean} [option.colModel.sortable] 是否可排序,默认值true\r\n     *  @param {Boolean} [option.colModel.formatDate] 当formatter为\"date\"或\"dateRange\"时,显示列显示内容格式,日期格式， p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy 的任意组合,默认是\"yyyy-mm-dd\"。 <br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <tr>\r\n                    <td>p : 选中值表示为 'am' or 'pm'</td>\r\n                    <td>P : 选中值表示为 'AM' or 'PM'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>s : 秒数表示，不填充'0'</td>\r\n                    <td>ss : 秒数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>i :分数表示，不填充'0'</td> \r\n                    <td>ii : 分数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>h : 24小时制，不填充'0'</td> \r\n                    <td>hh : 24小时制，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>H : 12小时制，不填充'0'</td> \r\n                    <td>HH : 12小时制，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>d : 每月天数表示，不填充'0'</td> \r\n                    <td>dd : 每月天数表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>m : 月份表示，不填充'0'</td> \r\n                    <td>mm : 月份表示，填充'0'</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>M : 一个月的短文本表示，例如一或三</td> \r\n                    <td>MM : 一个月的全文，例如一月或三月</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>yy : 年份的两位数表示法</td> \r\n                    <td>yyyy : 年份的全数字表示法(4位数)</td>\r\n                </tr>\r\n            </table>\r\n     *  @param {Boolean} [option.colModel.search] 在搜索模式下,定义此列是否可以作为搜索列,默认值false\r\n     *  @param {String/Function} [option.colModel.formatter] 对列进行格式化时设置的函数或者类型,默认是\"\"<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td style=\"width: 80px\"> 参数值 </td>\r\n                        <td> 搜索关联词(\"sopt\"参数可选值) </td>\r\n                        <td style=\"width: 300px\"> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Function</td> <td>参考\"wstype\"参数</td>\r\n                        <td>表格显示内容渲染为方法返回值;<br/>搜索栏参考\"wstype\"参数</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"string\"</td> <td>可选: 'eq', 'ne', 'bw', 'bn', 'ew', 'en', 'cn', 'nc', 'nu', 'nn', 'in', 'ni';<br/>默认值\"cn\"</td>\r\n                        <td>表格显示内容渲染为字符串;<br/>搜索栏为输入框</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"boolean\"</td> <td>可选: 'eq', 'ne';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为复选框;<br/>搜索栏为复选框</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"date\"</td> <td>可选: 'eq','ne', 'lt', 'le', 'gt', 'ge';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为日期字符串;<br/>搜索栏为wui.date</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"dateRange\"</td> <td>可选: 'lt', 'le', 'gt', 'ge'其中两个组合的数组;<br/>默认值[\"ge\", \"le\"]</td>\r\n                        <td>表格显示内容渲染为日期字符串;<br/>搜索栏为日期范围选择</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"number\"</td> <td>可选: 'eq','ne', 'lt', 'le', 'gt', 'ge', 'nu', 'nn', 'in', 'ni';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为数字;<br/>搜索栏为数字输入框</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"numRange\"</td> <td>可选: 'lt', 'le', 'gt', 'ge'其中两个组合的数组;<br/>默认值[\"ge\", \"le\"]</td>\r\n                        <td>表格显示内容渲染为数字;<br/>搜索栏为数字范围选择</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"integer\"</td> <td>可选: 'eq','ne', 'lt', 'le', 'gt', 'ge', 'nu', 'nn', 'in', 'ni';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为整数;<br/>搜索栏为整数输入框</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"intRange\"</td> <td>可选: 'lt', 'le', 'gt', 'ge'其中两个组合的数组;<br/>默认值[\"ge\", \"le\"]</td>\r\n                        <td>表格显示内容渲染为整数;<br/>搜索栏为整数范围选择</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"double\"</td> <td>可选: 'eq','ne', 'lt', 'le', 'gt', 'ge', 'nu', 'nn', 'in', 'ni';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为浮点数;<br/>搜索栏为浮点数输入框</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"doubleRange\"</td> <td>可选: 'lt', 'le', 'gt', 'ge'其中两个组合的数组;<br/>默认值[\"ge\", \"le\"]</td>\r\n                        <td>表格显示内容渲染为浮点数;<br/>搜索栏为浮点数范围选择</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"checkbox\"</td> <td>可选: 'eq';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为字符串: \"是\"/\"否\"/空;<br/>搜索栏为普通下拉选择框,可选择: \"全部\"/\"是\"/\"否\"</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"select\"</td> <td>可选: 'eq';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为字符串;<br/>搜索栏为普通下拉选择框</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"selectBox\"</td> <td>可选: 'eq', 'cn', 'nc';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为字符串;<br/>搜索栏为wui.selectBox</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"chooseBox\"</td> <td>可选: 'eq', 'cn', 'nc';<br/>默认值\"eq\"</td>\r\n                        <td>表格显示内容渲染为字符串;<br/>搜索栏为wui.chooseBox</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n     *  @param {String} [option.colModel.wstype] 定义搜索元素的类型,默认和formatter一致,但当formatter为Function但搜索类型为其他类型时,可通过此参数设置,默认值是\"text\"\r\n     *  @param {String} [option.colModel.formatterOption] 定义渲染列数据对应的数据字典数据，字符串格式以\"开头,以\"结尾，键值之间用\":\"分隔(;key:title;....)，如:\";:全部;1:启用;0:禁用;\"\r\n     *  @param {String} [option.colModel.sopt] #@default:参考\"formatter\"参数# 说明搜索条件的关联词,可选值及其含义为:<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 参数值 </td>\r\n                        <td> 搜索关联词 </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\"eq\"</td> <td>\"==\"</td> <td>等于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"ne\"</td> <td>\"!\"</td> <td>不等于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"lt\"</td> <td>\"<\"</td> <td>小于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"le\"</td> <td>\"<=\"</td> <td>小于或等于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"gt\"</td> <td>\">\"</td> <td>大于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"ge\"</td> <td>\">=\"</td> <td>大于或等于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"bw\"</td> <td>\"^\"</td> <td>开始于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"bn\"</td> <td>\"!^\"</td> <td>不开始于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"in\"</td> <td>\"=\"</td> <td>属于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"ni\"</td> <td>\"!=\"</td> <td>不属于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"ew\"</td> <td>\"|\"</td> <td>结束于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"en\"</td> <td>\"!@\"</td> <td>不结束于</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"cn\"</td> <td>\"~\"</td> <td>包含</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"nc\"</td> <td>\"!~\"</td> <td>不包含</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"nu\"</td> <td>\"#\"</td> <td>不存在</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"nn\"</td> <td>\"!#\"</td> <td>存在</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"bt\"</td> <td>\"...\"</td> <td>两者之间</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n     *  @param {Mix} [option.colModel.searchDefVal] #@default:空# 搜索栏查询字段默认值\r\n     *  @param {Boolean} [option.colModel.searchSort] #@default:8# 搜索栏排序值\r\n     *  @param {JSON} [option.colModel.searchoptions] 当设置search=true时的搜索参数设置,可配置参数、默认值及其含义如下:<br/>\r\n<pre class=\"language-js\"><code class=\"language-js\">{\r\n    // {Boolean} 隐藏是否可选\r\n    searchhidden: true, \r\n    // {String} 自定义搜索字段名,默认同列配置的name值\r\n    customSearchName: \"\",\r\n    // {String/Function} 当且仅当stype为\"select\"时,\r\n    // 设置下拉选项数据。如果为string则格式为value:label,且以“;”结尾；如果为object格式为{1:'One';2:'Two'}\r\n    value: \":全部;1:是;0:否\", \r\n    // {String} 当且仅当wstype为\"select\"时。下拉加载服务\r\n    dataSource: \"\", \r\n    // {String} 当且仅当wstype为\"select\"时。key值字段名\r\n    name: \"id\", \r\n    // {String} 当且仅当wstype为\"select\"时。text值字段名\r\n    text: \"name\", \r\n    // {Number} 当且仅当wstype为\"select\"时。下拉可选个数\r\n    maxNumber: 1,\r\n    // 当wstype为组件时,可传递组件参数,具体参考各个组件配置\r\n    ...\r\n}</code></pre>\t\r\n     *  @param {JSON} [option.singleColSetting]   #@default:{}# 单选列配置@@@###单选列配置项\r\n     *  @param {String} [option.singleColSetting.label]  #@default:\"选择\"# 列头显示文本\r\n     *  @param {String} [option.singleColSetting.name]   #@default:\"jqg_ElementId_radio\"# 单选列字段名\r\n     *  @param {Int} [option.singleColSetting.width]   #@default:50# 列宽度\r\n     *  @param {String} [option.singleColSetting.align]   #@default:\"center\"# 列文本对齐方向\r\n     *  @param {String} [option.singleColSetting.fixed]   #@default:true# 列宽度是否要固定不可变\r\n     *  @param {string} [option.sortname=\"\"]   排序字段名称,当出现把数字当成了字符串排序,在colModel中的排序字段里加了sorttype:'integer'排序就正常  \r\n     *  @param {string} [option.sortorder=\"asc\"]   排序方式 asc/desc\r\n     *  @param {Number/String} [option.rowNum=10]   每页数据条数，当设置为\"all\"时，展示全部数据(注意,当设置为\"all\"时，后台接收参数值为\"all\",后台要修改接收类型)\r\n     *  @param {Array} [option.rowList=[5,10,50,100]]   分页时，每一页展示数据的可选选项   \r\n     *  @param {Number} [option.exportUrl]   导出事件处理URL,默认是\"\" \r\n     *  @param {JSON} [option.toolBarSetting]   工具栏参数配置\r\n     *  @param {String} [option.toolBarSetting.btnResetText]   重置按钮文本,默认是\"&lt;i class=\\\"fa fa-refresh\\\"&gt;&lt;/i&gt; 重置\"\r\n     *  @param {String} [option.toolBarSetting.btnShowFilterText]   数据过滤按钮文本,默认是\"&lt;i class=\\\"fa fa-filter\\\"&gt;&lt;/i&gt; 显示数据过滤\"\r\n     *  @param {String} [option.toolBarSetting.btnShowSearchText]   高级搜索按钮文本,默认是\"&lt;i class=\\\"fa fa-search\\\"&gt;&lt;/i&gt; 高级搜索\"\r\n     *  @param {String} [option.toolBarSetting.btnExportText]   导出按钮文本,默认是\"&lt;i class=\\\"fa fa-sign-out\\\"&gt;&lt;/i&gt; 导出\"\r\n     *  @param {String} [option.toolBarSetting.btnImportText]   导入按钮文本,默认是\"&lt;i class=\\\"fa fa-sign-in\\\"&gt;&lt;/i&gt; 导入\"\r\n     *  @param {String} [option.toolBarSetting.btnScreenText]   筛选按钮文本,默认是\"&lt;i class=\\\"fa fa-filter\\\"&gt;&lt;/i&gt; 筛选\"\r\n     *  @param {String} [option.toolBarSetting.btnFilterShowText]   切换数据过滤按钮为显示的文本,默认是\"显示\"\r\n     *  @param {String} [option.toolBarSetting.btnFilterHideText]   切换数据过滤按钮为隐藏的文本,默认是\"隐藏\"\r\n     *  @param {Number} [option.toolBarSetting.maxShowNumber]   最多显示按钮个数,多的用下拉框显示,默认是6\r\n     *  @param {String} [option.modalWindow]   自定义工具栏确认框弹出的窗口层级,默认是\"self\": self(本窗口,默认)/parent(父窗口)/top(顶层窗口)\r\n     *  @param {Boolean} [option.btnReset]   是否显示重置按钮,默认是false     \r\n     *  @param {Boolean} [option.btnShowSearch]   是否显示高级搜索按钮,默认是false     \r\n     *  @param {Boolean} [option.btnShowFilter]   是否显示过滤数据按钮,默认是false     \r\n     *  @param {Boolean} [option.btnScreen]   是否显示筛选按钮,默认是false     \r\n     *  @param {Boolean} [option.btnExport]   是否显示导出按钮,默认是false       \r\n     *  @param {Boolean} [option.btnImport]   是否显示导入按钮,默认是false        \r\n     *  @param {JSON} [option.importSetting]   数据导入设置      \r\n     *  @param {String} [option.importSetting.pageUrl]   数据导入公共弹出页面地址,默认是wui.commonPageBasePath + \"wui.grid.import.html\"\r\n     *  @param {String} [option.importSetting.pageHeight]   弹出导入页面高度,默认是\"700px\"   \r\n     *  @param {String} [option.importSetting.pageWidth]   弹出导入页面宽度,默认是\"400px\"\r\n     *  @param {String} [option.importSetting.pageTitle]   弹出导入页面标题,默认是\"列表数据导入\"\r\n     *  @param {String} [option.importSetting.fileUploadUrl]   列表数据文件上传服务接口地址,默认是wui.serviceInterface.gridFileUploadServiceAPI\r\n     *  @param {String} [option.importSetting.importUrl]   数据导入处理URL,默认是wui.serviceInterface.gridImportServiceAPI\r\n     *  @param {String} [option.importSetting.otherParam]   传递给上传接口的其他参数,默认为空\r\n     *  @param {Number} [option.importSetting.maxFilesize]   最大允许上传文件大小,单位MB,默认是40\r\n     *  @param {String} [option.importSetting.acceptedFiles]   允许上传文件后缀,默认是\".xlsx,.xls\"\r\n     *  @param {JSON} [option.importSetting.jsonReader]   文件解析配置\r\n     *  @param {Function} [option.importSetting.onSuccess]   导入成功关闭弹窗执行事件,参数serviceData由弹出窗页面返回       \r\n     *  @param {JSON} [option.exportSetting]   数据导出设置\r\n     *  @param {JSON} [option.exportSetting.defaultMode=null]   默认导出方式,若设置值,则不会弹出导出确认框,直接采用此方式导出,可选'all'|'page'|'select'\r\n     *  @param {String} [option.groupOp]   顶部搜索栏条件运算符,可选'AND'和'OR',默认是\"AND\" \r\n     *  @param {JSON} [option.prmNames]   默认传递到服务器端参数名设置集合,当参数为null时不会被发到服务器端,如下设置之后传递到后台参数集为<br />\r\n     *  ?_search=false&nd=1524898622517&rows=10&page=1&sidx=name&sord=asc\r\n     *  @param {String} [option.prmNames.page]   表示请求页码的参数名称,默认是\"page\"\r\n     *  @param {String} [option.prmNames.rows]   表示请求行数的参数名称,默认是\"rows\"\r\n     *  @param {String} [option.prmNames.sort]   表示用于排序的列名的参数名称,默认是\"sidx\"\r\n     *  @param {String} [option.prmNames.order]   表示采用的排序方式的参数名称,默认是\"sord\"\r\n     *  @param {String} [option.prmNames.search]   表示是否是搜索请求的参数名称,默认是\"_search\"\r\n     *  @param {String} [option.prmNames.nd]   表示已经发送请求的次数的参数名称,默认是\"nd\"\r\n     *  @param {String} [option.prmNames.id]   表示当在编辑数据模块中发送数据时,使用的id的名称,默认是\"id\"\r\n     *  @param {String} [option.prmNames.oper]   operation参数名称,默认是\"oper\"\r\n     *  @param {String} [option.prmNames.subgridid]   当点击以载入数据到子表时,传递的数据名称,默认是\"id\"\r\n     *  @param {String} [option.prmNames.totalrows]   表示需从Server得到总共多少行数据的参数名称,默认是\"totalrows\"\r\n     *  @param {JSON} [option.jsonReader]   默认从服务器端返回数据参数名称设置集合,如下参数设置之后,服务器返回数据格式为<br/>\r\n     *  <pre class=\"language-js\"><code class=\"language-js\">{   \r\n    total: \"xxx\",\r\n    page: \"yyy\",\r\n    records: \"zzz\",\r\n    rows : [\r\n        {id:\"1\", cell:[\"cell11\", \"cell12\", \"cell13\"]},\r\n        {id:\"2\", cell:[\"cell21\", \"cell22\", \"cell23\"]}\r\n    ]\r\n}</code></pre> \r\n\t\t\r\n     *  @param {String} [option.jsonReader.root]   json中代表实际模型数据的入口,默认是\"rows\"\r\n     *  @param {String} [option.jsonReader.page]   json中代表当前页码的数据,默认是\"page\"\r\n     *  @param {String} [option.jsonReader.total]   json中代表页码总数的数据,默认是\"total\"\r\n     *  @param {String} [option.jsonReader.records]   json中代表数据行总数的数据,若不返回此参数值对应的属性,则按当前接口返回的总记录数作为总数据条数,默认是\"records\"\r\n     *  @param {Boolean} [option.jsonReader.repeatitems]   如果设为false,则jqGrid在解析json时,会根据name来搜索对应的数据元素(即可以json中元素可以不按顺序);而所使用的name是来自于colModel中的name设定,默认是true\r\n     *  @param {String} [option.jsonReader.cell]   当前行的所有单元格,默认是\"cell\"\r\n     *  @param {String} [option.jsonReader.id]   行id,默认是\"id\"\r\n     *  @param {JSON} [option.lazySetting]   懒加载参数配置\r\n     *  @param {String} [option.lazySetting.lazyField]   懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"id\"\r\n     *  @param {String} [option.lazySetting.otherParam]   懒加载请求后台服务时传递的参数,默认是{}\r\n     *  @param {String} [option.lazySetting.dataType]   懒加载返回数据格式,默认是\"json\"\r\n     *  @param {String} [option.lazySetting.contentType]   懒加载请求数据类型,默认为\"application/json\"\r\n     *  @param {Boolean} [option.isTreeGrid]   启用或者禁用treegrid模式,默认是false\r\n     *  @param {String} [option.treeGridModel] treeGrid模式，跟json元数据有关,默认是\"adjacency\"\r\n     *  @param {String} [option.treeExpandColumn] 当启用treeGrid模式时,设置展开列字段名,一般设置第一列,默认是\"\"\r\n     *  @param {Boolean} [option.isClickNodeExpandCol]   当启用treeGrid模式时,是否点击展开行的文本时，treeGrid就能展开或者收缩，不仅仅是点击图片,默认是true\r\n     *  @param {String} [option.treeIconsSetting]   当启用treeGrid模式时,树结构图标设置\r\n     *  @param {String} [option.treeIconsSetting.plus]   行展开之前的图标,默认是'fa fa-angle-right wui-fa-middle'\r\n     *  @param {String} [option.treeIconsSetting.minus]   行展开之后的图标,默认是'fa fa-angle-down wui-fa-middle'\r\n     *  @param {String} [option.treeIconsSetting.leaf]   不可展开的行的图标,默认是'wui-text-primary'\r\n     *  @param {String} [option.treeReader]   当启用treeGrid模式时,设置解析服务器端返回的树结构参数字段\r\n     *  @param {String} [option.treeReader.level_field]   属性层级字段名称,默认是\"level\"\r\n     *  @param {String} [option.treeReader.parent_id_field]   父级rowid字段名称,默认是\"parent\"\r\n     *  @param {String} [option.treeReader.leaf_field]   是否还有子级菜单字段名称,默认是\"isLeaf\"\r\n     *  @param {String} [option.treeReader.expanded_field]   是否加载完毕要展开字段名称,默认是\"expanded\"\r\n     *  @param {Boolean} [option.grouping]   是否设置分组,默认是false\r\n     *  @param {String} [option.groupingView]   当grouping设置为true时,分组参数配置\r\n     *  @param {Array} [option.groupingView.groupField]   设置分组的列,默认是['Currency']\r\n     *  @param {Array} [option.groupingView.groupColumnShow]   是否显示分组列,与\"groupField\"字段一一对应, 默认是[true]\r\n     *  @param {String} [option.groupingView.groupText]   设置表头显示的数据。（{0}：分组的值，{1}总数据量，以及{Amount}:汇总字段的值）,默认是['<b>{0} - {1} 条记录{Amount}</b>']\r\n     *  @param {Boolean} [option.groupingView.groupCollapse]   加载数据时是否只显示分组的组信息。true：收缩，false：展开,默认是false\r\n     *  @param {Boolean} [option.groupingView.groupDataSorted]   分组中的数据是否排序,默认是true\r\n     *  @param {Array} [option.groupingView.groupOrder]   分组后的排序,与\"groupField\"字段一一对应,默认是['asc']\r\n     *  @param {Array} [option.groupingView.groupSummary]   是否显示汇总.如果为true需要在colModel中进行配置,与\"groupField\"字段一一对应,默认是[true]\r\n     *  @param {String} [option.groupingView.summaryType]   运算类型，可以为max,sum,avg,默认是'max'\r\n     *  @param {String} [option.groupingView.summaryTpl]   运算显示模板,默认是'<b>Max: {0}</b>'\r\n     *  @param {Array} [option.groupingView.groupSummaryPos]   汇总数据显示位置，footer或header,与\"groupField\"字段一一对应,默认是['footer']\r\n     *  @param {Boolean} [option.groupingView.showSummaryOnHide]   是否显示汇总信息并且当收起表格时是否隐藏下面的分组,默认是false\r\n     *  @param {JSON} [option.defaultText]   表格默认显示文本设置 \r\n     *  @param {String} [option.defaultText.emptyrowstext]   返回数据为空时表格显示文本,默认是\"&ltdiv&gt** 暂无数据 **&lt/div&gt\" \r\n     *  @param {String} [option.defaultText.recordtext]   返回数据的页码记录显示文本,默认是\"{0} - {1}\\u3000共 {2} 条\".共字前是全角空格 \r\n     *  @param {String} [option.defaultText.emptyrecords]   返回数据为空时页码总记录显示文本,默认是\"\" \r\n     *  @param {String} [option.defaultText.loadtext]   请求数据加载提示文本,默认是一张gif图 \r\n     *  @param {String} [option.defaultText.pgtext]   页码导航总记录数不为空显示文本,默认是\" {0} 共 {1} 页\" \r\n     *  @param {String} [option.defaultText.pgfirst]   页码导航首页按钮文本,默认是\"首页\" \r\n     *  @param {String} [option.defaultText.pglast]   页码导航尾页按钮文本,默认是\"尾页\" \r\n     *  @param {String} [option.defaultText.pgnext]   页码导航下一页按钮文本,默认是\"下一页\" \r\n     *  @param {String} [option.defaultText.pgprev]   页码导航上一页按钮文本,默认是\"上一页\" \r\n     *  @param {JSON/Function} [option.formatParams]  (此参数属性设置按照第三方插件配置参数命名)为了弥补组件对第三方插件的拓展的不足,此参数若为JSON对象,则将会直接拓展到组件初始化参数配置中,直接对第三方插件进行初始化设置,设置之前,请必须了解清楚是否会覆盖默认参数,默认是null,也可传递一个方法，传递的参数为第三方插件初始化参数,动态修改并返回一个参数对象作为最终初始化配置\r\n     *  @param {Function} [option.onBeforePage]   当点击翻页按钮填充数据之前触发此事件,同样当输入页码跳转页面时也会触发此事件,当返回false时不会执行此次页码跳转,参数pgButton可能值:first,last,prev,next,user\r\n     *  @param {Function} [option.onBeforeExport]   当表格数据导出之前触发此事件,参数pdata表示打印的数据   \r\n     *  @param {Function} [option.onGridComplete]   当表格所有数据都加载完成而且其他的处理也都完成时触发此事件,排序,翻页同样也会触发此事件,无参数  \r\n     *  @param {Function} [option.onLoadComplete]   当从服务器返回响应时执行,参数data：服务器返回的XMLHttpRequest 对象\r\n     *  @param {Function} [option.onSelectedAll]   当表格点击全选按钮时触发,传递三个参数,rowids:触发复选框行的id值, rows:触发复选框行的全部数据, status:是否选中状态\r\n     *  @param {Function} [option.onBeforeSelectedRow]   当用户点击当前行在未选择此行时触发。rowid：此行id。返回值为ture或者false。如果返回true则选择完成,如果返回false则不会选择此行也不会触发其他事件\r\n     *  @param {Function} [option.onSelectedRow]   点击行复选框之后触发,传递三个参数:rowid: 当前行id值, row:当前行数据, status:是否选中状态\r\n     *  @param {Function} [option.onBeforeExpandTreeGridNode]   当启用treegrid模式时,树节点展开之前触发。两个参数,id:当前行id, row:当前行数据\r\n     *  @param {Function} [option.onAfterExpandTreeGridNode]   当启用treegrid模式时,树节点展开之后触发。两个参数,id:当前行id, row:当前行数据\r\n     *  @param {Function} [option.onBeforeCollapseTreeGridNode]   当启用treegrid模式时,树节点收缩之前触发。两个参数,id:当前行id, row:当前行数据\r\n     *  @param {Function} [option.onAfterCollapseTreeGridNode]   当启用treegrid模式时,树节点收缩之后触发。两个参数,id:当前行id, row:当前行数据\r\n     *  @param {Function} [option.onBeforeSearchGrid]   执行搜索列表操作之前触发,参数postData: 传递到后台服务的搜索字段数据,若返回postData参数,会修改传递到后台服务数据\r\n     *  @param {Function} [option.onOverMaxNumber]   当限制可选行数的时候,当达到最大可选行数时触发,两个参数:selectedRowIds:已经选中的行id, maxNumber:最大可选个数\r\n     *  @param {Function} [option.onClickGroup]   当设置grouping为true,点击切换显隐分组时触发,两个参数:hid:分组头ID, collapsed:是否展开\r\n     *  @param {Function} [option.onResizeStart]   当开始改变一个列宽度时触发此事件。event：event对象；index：当前列在colModel中位置索引\r\n     *  @param {Function} [option.onResizeStop]   当列宽度改变之后触发此事件。newwidth：列改变后的宽度；index：当前列在colModel中的位置索引\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件样式 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jqGrid_JS_5.1.1/css/ui.jqgrid-bootstrap.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- 配置1：默认配置搜索栏(建议使用此配置) --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;table id=&quot;gridId&quot;&gt;&lt;/table&gt;\r\n\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- 配置2：预置自定义工具栏按钮 --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"wui-grid grid-table\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;div class=\"toolbar w-grid-toolbar\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;a id=\"btnAdd\" href=\"javascript:void(0)\" class=\"wui-btn wui-btn-primary\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;span class=\"ladda-label\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;i class=\"fa fa-plus\"&gt;&lt;/i&gt; 新增\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;/span&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;/a&gt;              \r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;a id=\"btnDeletes\" href=\"javascript:void(0)\" class=\"wui-btn wui-btn-default\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;span class=\"ladda-label\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;i class=\"fa fa-remove\"&gt;&lt;/i&gt; 批量删除\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;/span&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;/a&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;/div&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;table id=\"usersGrid\"&gt;&lt;/table&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;table id=&quot;gridId&quot;&gt;&lt;/table&gt;\r\n\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- 配置3：手动配置搜索条件和增加工具栏按钮 --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"wui-grid grid-table\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;div class=\"wui-grid-searchBar\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;        &lt;!-- wui-attr属性值为\"初始化列表id-searchBar-form\" --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;        &lt;form wui-attr=\"usersGrid-searchBar-form\" role=\"form\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;table class=\"table table-responsive wui-grid-table\" id=\"searchBarTb\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;!--固定百分比布局--&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;thead style=\"visibility: hidden\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;tr&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 9.333333333333334%!important\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 18.666666666666668%!important\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 9.333333333333334%!important\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 18.666666666666668%!important\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 9.333333333333334%!important\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 18.666666666666668%!important\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;th style=\"width: 15%\"&gt;&lt;/th&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;/tr&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;/thead&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;tbody&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;tr&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td class=\"search-title\"&gt;姓名：&lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;input type=\"text\" id=\"name\" data-searchrule='{\"field\":\"name\",\"op\":\"cn\",\"type\":\"string\"}' class=\"wui-input\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td class=\"search-title\"&gt;生日：&lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;div class=\"input-group\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;input type=\"text\" id=\"birthday1\" data-init-wui=\"date\" data-searchrule='{\"field\":\"birthday\",\"op\":\"ge\",\"type\":\"date\"}' /&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;span class=\"input-group-addon\"&gt;-&lt;/span&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;input type=\"text\" id=\"birthday2\" data-init-wui=\"date\" data-searchrule='{\"field\":\"birthday\",\"op\":\"le\",\"type\":\"date\"}' /&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;/div&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td class=\"search-title\"&gt;所属部门：&lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;select id=\"department\" data-init-wui=\"selectBox\" data-wui-loadUrl=\"json/_queryDeparts.json\" \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                                  data-wui-name=\"departmentId\" \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                                  data-wui-maxNumber=1 \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                                  data-wui-text=\"departmentName\" \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                                  data-searchrule='{\"field\":\"departmentId\",\"op\":\"eq\",\"type\":\"text\"}'&gt;&lt;/select&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td class=\"search-button\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;a wui-grid-action=\"search\" href=\"javascript:void(0)\" title=\"查询\" class=\"wui-btn wui-btn-primary\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;i class=\"fa fa-search\"&gt;&lt;/i&gt;    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;/a&gt;    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;a wui-grid-action=\"reset\" href=\"javascript:void(0)\" title=\"刷新\" class=\"wui-btn wui-btn-default\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;i class=\"fa fa-refresh\"&gt;&lt;/i&gt;    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;/a&gt;  \r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;a wui-grid-action=\"show\" href=\"javascript:void(0)\" title=\"显示\" class=\"wui-btn wui-btn-warning\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;i class=\"fa fa-chevron-down\"&gt;&lt;/i&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;/a&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;/tr&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;tr&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td class=\"search-title\"&gt;性别：&lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;select type=\"text\" id=\"sex\" data-searchrule='{\"field\":\"sex\",\"op\":\"eq\",\"type\":\"text\"}' class=\"wui-select\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;option value=\"\"&gt;无&lt;/option&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;option value=\"man\"&gt;男&lt;/option&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                             &lt;option value=\"woman\"&gt;女&lt;/option&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                         &lt;/select&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                     &lt;/td&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;/tr&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;/tbody&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;/table&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;/form&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;/div&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;div class=\"toolbar w-grid-toolbar\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;a id=\"btnAdd\" href=\"javascript:void(0)\" class=\"wui-btn wui-btn-primary\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;span class=\"ladda-label\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;i class=\"fa fa-plus\"&gt;&lt;/i&gt; 新增\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;/span&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;/a&gt;              \r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;a id=\"btnDeletes\" href=\"javascript:void(0)\" class=\"wui-btn wui-btn-default\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;span class=\"ladda-label\"&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;                 &lt;i class=\"fa fa-remove\"&gt;&lt;/i&gt; 批量删除\r\n    &nbsp;&nbsp;&nbsp;&nbsp;             &lt;/span&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;         &lt;/a&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;/div&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;     &lt;table id=\"gridId\"&gt;&lt;/table&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;\r\n    <br/>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js\" type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js\" type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件脚本 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jqGrid_JS_5.1.1/js/i18n/grid.locale-cn.js&quot;&gt;&lt;/script>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jqGrid_JS_5.1.1/js/jquery.jqGrid.js&quot;&gt;&lt;/script>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js\" type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js\" type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 操作列格式化\r\n            // @param cellValue: 当前列的值\r\n            // @param options：配置参数\r\n            // @param rowObject：当前行的值\r\n            //\r\n            function _formatOperation(cellValue, options, rowObject) {\r\n                var data = { id: cellValue };\r\n                return template('operation_template', data);\r\n            }\r\n            // 组件初始化配置\r\n            var uiGrid = wui.grid( \"gridId\",{\r\n                \"url\": \"http://hostname:post/UserServer.aspx\",\r\n                // 列配置\r\n                \"colModel\": [\r\n                    { label: '操作', name: 'id', key: true, formatter: _formatOperation}, // 自定义列工具栏\r\n                    { label: 'ID', name: 'id', search: true, sopt: 'cn', hidden: true },\r\n                    { label: '姓名', name: 'name', sortable: true, search: true, sopt: 'cn' },\r\n                    { label: '部门', name: 'departmentName', formatter: 'selectbox', search: true, sopt: 'eq', searchoptions: {\r\n                        \"name\": \"departmentId\",\r\n                        \"text\": \"departmentName\",\r\n                        \"dataSource\": wui.contextPath + \"examples/json/user/_queryDeparts.json\",\r\n                        \"value\": function(fieldId, theName, theText){\r\n                            return \"1:自定义部门1;0:自定义部门3\";\r\n                           //  var $select = $(\"#\" + fieldId);\r\n                           //  wui.getAjax({\r\n                           //     url: wui.contextPath + \"examples/json/user/_queryDeparts.json\",\r\n                           //     onSuccess: function(res){\r\n                           //          // console.info(res);\r\n                           //          $.each(res, function(theIndex, item){\r\n                           //              $select.append('<option value=\"' + item[theName] + '\">' + item[theText] + '</option>')\r\n                           //          })\r\n                           //     }, \r\n                           //     onError: function(res){\r\n                           //         // ui.errorNotice(res);\r\n                           //     }, \r\n                           //     async: false, \r\n                           //     dataType: \"json\"\r\n                           // })\r\n                           //  return false;\r\n                        }\r\n                        // \"value\": \"1:自定义部门1;0:自定义部门2\"    // 测试追加选项\r\n                    }},\r\n                    { label: '生日', name: 'birthday', formatter: 'date', sortable: true, search: true, sopt: 'le' },\r\n                    { label: '体重', name: 'weight', formatter: 'number', search: true, sopt: 'le' },\r\n                    { label: '是否启用', name: 'enable', formatter: 'checkbox', search: true, sopt: 'eq' },\r\n                    { label: '备注', name: 'remark', align: 'left', width: 300 }\r\n                ]\r\n            });\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp; &lt;script id=&quot;operation_template&quot; type=&quot;text/html&quot;&gt;\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;grid-opt&quot;&gt;\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&lt;a action=&quot;view&quot; href=&quot;javascript:void(0)&quot; class=&quot;form-btn wui-bg-primary&quot; title=&quot;查询&quot; _id=&quot;{{id}}&quot;&gt;&lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;&lt;/a&gt;\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&lt;a action=&quot;edit&quot; href=&quot;javascript:void(0)&quot; class=&quot;form-btn wui-bg-warning &quot; title=&quot;编辑&quot; _id=&quot;{{id}}&quot;&gt;&lt;i class=&quot;fa fa-edit&quot; &gt;&lt;/i&gt;&lt;/a&gt;\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&lt;a action=&quot;delete&quot; href=&quot;javascript:void(0)&quot; class=&quot;form-btn wui-bg-default&quot; title=&quot;删除&quot; _id=&quot;{{id}}&quot;&gt;&lt;i class=&quot;fa fa-remove&quot; &gt;&lt;/i&gt;&lt;/a&gt;\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n    \r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.grid = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiGrid\"\r\n\t\t\t_pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"grid\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n\r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n\t\tif(!$(\"#\" + element).exist()){\r\n\t\t\tui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n            // beforePage:参数：pgButton(可选值： first,last,prev,next)点击翻页按钮填充数据之前触发此事件,同样当输入页码跳转页面时也会触发此事件\r\n            // selectedAll:参数: event。当表格点击全选按钮时触发,传递参数event,event.aRowids:触发复选框行的id值, event.rows:触发复选框行的全部数据, event.status:是否选中状态\r\n            // selected:参数: event。当选中行数据时触发,传递参数event,event.rowid:触发行的id值, event.row:触发行的数据\r\n            // unselected:参数: event。当取消选中行数据时触发,传递参数event,event.rowid:触发行的id值, event.row:触发行的数据\r\n            // beforeSelectedRow:参数：rowid, e。当用户点击当前行在未选择此行时触发。rowid：此行id；e：事件对象。返回值为ture或者false。如果返回true则选择完成,如果返回false则不会选择此行也不会触发其他事件\r\n            // selectedRow:参数：event。点击行复选框之后触发,传递参数event,event.rowid: 当前行id值, event.row:当前行数据, event.status:是否选中状态\r\n            // beforeSearchGrid:参数：event。执行搜索列表操作之前触发,参数event.postData: 传递到后台服务的搜索字段数据,若返回postData参数,会修改传递到后台服务数据\r\n            // overMaxNumber:参数：event。当限制可选行数的时候,当达到最大可选行数时触发,两个参数:event.selectedRowIds:已经选中的行id, event.maxNumber:最大可选个数\r\n            // beforeExpandTreeGridNode: 两个参数id:当前行id, rc:当前行数据。当启用treegrid模式时,树节点展开之前触发\r\n            // afterExpandTreeGridNode: 两个参数id:当前行id, rc:当前行数据。当启用treegrid模式时,树节点展开之后触发\r\n            // beforeCollapseTreeGridNode: 两个参数id:当前行id, rc:当前行数据。当启用treegrid模式时,树节点收缩之前触发\r\n            // afterCollapseTreeGridNode: 两个参数id:当前行id, rc:当前行数据。当启用treegrid模式时,树节点收缩之后触发\r\n        \r\n\t\tvar config = { \r\n            // {string} 数据服务地址,默认是空\r\n            url : \"\"  \r\n            // {Array} 加载本地数据\r\n            , localData: []\r\n            // {Boolean} 是否显示页码导航栏,若为false,需要自己写分页导航,默认是true,要是不想分页显示,设置{isShowPageBar: false, rowNum: \"all\"}就会显示接口返回的全部数据且不显示分页导航\r\n\t\t\t, isShowPageBar: true  \t\r\n            // {String} 分页容器ID,若isShowPageBar为true,但不传递此参数,则默认构建一个导航栏\r\n\t\t\t, gridPageId: \"\"   \t\t\r\n            // {String} 工具栏容器ID,若不传递此参数,则根据传递的btn_参数是否为true来增加工具栏\r\n\t\t\t, gridToolbar: \"\"  \t\r\n            // {Boolean} 是否显示复选框\r\n\t\t\t, isShowCheckBox: true \t\r\n            // {Boolean} 当启用复选框时,可选个数,当可选个数为1时，显示为单选框\r\n            , maxNumber: false\r\n            // {Boolean} 当限制个数时是否启用全选,若为true,则选择前maxNumber条数据,若为false,则禁用全选按钮\r\n            , isEnableSelectAll: false\r\n            // {string} 获取数据类型,默认是\"GET\"\r\n\t\t\t, mtype : \"GET\"   \r\n            // 第一次请求后台服务时传递的参数  \r\n            , otherParam: {}      \r\n            // {string} 数据格式,默认是\"json\"\r\n\t\t\t, dataType : \"json\"    \r\n            // {Array} 列配置参数,默认是[]\r\n\t\t\t, colModel : []     \r\n            // {string} 排序字段名称,默认是\"\"\r\n\t\t\t, sortname : \"\"     \r\n            // {string} 排序方式 asc(\"升序\")|desc(\"降序\"),默认是\"asc\"\r\n\t\t\t, sortorder : \"asc\"     \r\n            // {Number/String} 每页数据条数，当设置为\"all\"时，展示全部数据\r\n\t\t\t, rowNum : 10   \r\n            // {Array} 分页时，每一页展示数据的可选选项\r\n\t\t\t, rowList : [5, 10, 50, 100]    \r\n            // {String} 序号列标题\r\n            , rowNumbersTitle: \"序号\"   \r\n            // {Boolean} 是否显示行号\r\n\t\t\t, isShowRowNumbers : false\r\n            // {String} 合并行字段,默认是\"\"\r\n            , mergerRowsField: \"\"\r\n            \r\n            // 隔行变色样式 \r\n            , altclass: 'ui-widget-altclass'    \r\n            // 列标题菜单设置\r\n            , colMenu: true \r\n            // 隔行变色\r\n            , altRows : true     \r\n            // 分页对齐方式\r\n            , pagerpos : 'right' \r\n            // 分页信息对齐方式\r\n            , recordpos : 'left'\r\n            // 合并列字段,默认是\"\"\r\n            // , mergerColsField: \"\"\r\n            // 是否支持多列排序,默认是false\r\n\t\t\t, multiSort : false\r\n            // {Boolean} 是否自动撑满,此属性用来说明当初始化列宽度时候的计算类型,如果为ture,则按比例初始化列宽度。如果为false,则列宽度使用colModel指定的宽度       \r\n            , shrinkToFit: false   \t\r\n            // 高度,默认是\"auto\"\r\n\t\t\t, height : \"auto\"   \r\n            // 宽度,默认是\"100%\"\r\n\t\t\t, width : \"100%\"\r\n            // {Boolean} 如果为ture时，则当表格在首次被创建时会根据父元素比例重新调整表格宽度。如果父元素宽度改变，为了使表格宽度能够自动调整则需要实现函数：setGridWidth\r\n            , autowidth: false\r\n            // {String} 列开始方向,默认是\"left\",可选\"left\"|\"right\"\r\n            , direction: \"left\"\r\n            // {Boolean} 是否开启滚轮\r\n            , scroll: false\r\n            // {Boolean} 是否计算高度(撑满一屏)\r\n\t\t\t, isFullScreen: true   \r\n            // {JSON} 列表计算全屏尺寸的偏移量\r\n            , offset: {\r\n                top: 0\r\n                , bottom: 20\r\n                , left: 0\r\n                , right: 0\r\n            }\r\n            // {number} 自定义搜索栏中,一行显示查询项个数\r\n            , searchColNum: 3\r\n            // {JSON} 搜索栏参数配置\r\n            , searchBarSetting: {\r\n                // 查询按钮文本\r\n                searchText: ui.language.grid.searchBar.searchBtn\r\n\r\n                // 重置按钮文本\r\n                , resetText: ui.language.grid.searchBar.resetBtn\r\n\r\n                // 展开更多搜索条件文本\r\n                , showMoreText: ui.language.grid.searchBar.showMoreBtn\r\n\r\n                // 隐藏更多搜索条件文本\r\n                , hideMoreText: ui.language.grid.searchBar.hideMoreBtn\r\n\r\n                // {String} 搜索栏输入框和选择框id和name的前缀,假如该字段名为\"id\",则生成字段ID属性值为\"wui_grid_searchbar_id\"\r\n                // , fieldIdPrefix: \"wui_grid_searchbar_\"\r\n                , fieldIdPrefix: \"wui_\" + element + \"_searchbar_\"\r\n\r\n                // 搜索条件标题自定义样式类\r\n                , labelClass: \"\"\r\n\r\n                // 搜索条件内容自定义样式类\r\n                , contentClass: \"\"\r\n\r\n                // 搜索条件按钮格自定义样式类\r\n                , btnCellClass: \"\"\r\n\r\n                // {Boolean} 是否设置宽度\r\n                , isSetWidth: true\r\n\r\n                // 搜索条件格中内容格宽度比例\r\n                , titleColWidthRec: 1      \r\n\r\n                // 搜索条件格中内容格宽度比例\r\n                , contentColWidthRec: 2    \r\n\r\n                // 搜索条件格中按钮格占整行比例\r\n                , btnColWidth: \"15%\"        \r\n            }\r\n            // {Array} 自定义搜索栏按钮: [\"search\",\"reset\",\"refresh\",\"showHide\"],默认是[\"search\",\"reset\",\"showHide\"]\r\n            , actions: [\"search\",\"reset\",\"showHide\"]\r\n            // {Boolean} 是否可排序; 此参数为true时,固定列的功能无法使用\r\n\t\t\t, isSortable:false \t\t\r\n            // {string} 表格标题\r\n\t\t\t, caption: \"\"\t\t\r\n            // {string} 导出事件处理URL\r\n\t\t\t, exportUrl: \"\"\r\n            // {JSON} 工具栏参数配置\r\n            , toolBarSetting: {\r\n                // btnSearchText: \"<i class=\\\"fa fa-search\\\"></i> 查询\"\r\n                // 重置按钮文本\r\n                btnResetText: ui.language.grid.toolBar.resetBtn\r\n                // 显示数据过滤文本\r\n                , btnShowFilterText: ui.language.grid.toolBar.showFilterBtn\r\n                // 高级搜索按钮文本\r\n                , btnShowSearchText: ui.language.grid.toolBar.highSearchBtn\r\n                // 导出按钮文本\r\n                , btnExportText: ui.language.grid.toolBar.exportBtn\r\n                // 导入按钮文本\r\n                , btnImportText: ui.language.grid.toolBar.importBtn\r\n                // 筛选按钮文本\r\n                , btnScreenText: ui.language.grid.toolBar.screenBtn\r\n                // 数据过滤文本中,显示控制切换字符串\r\n                , btnFilterShowText: ui.language.grid.toolBar.filterShowString\r\n                // 数据过滤文本中,隐藏控制切换字符串\r\n                , btnFilterHideText: ui.language.grid.toolBar.filterHideString\r\n                // 最多显示按钮个数,多的用下拉框显示\r\n                , maxShowNumber: 6  \r\n            }\r\n\r\n            // 自定义工具栏确认框弹出的窗口层级,默认是\"self\": self(本窗口,默认)/parent(父窗口)/top(顶层窗口)\r\n            , modalWindow: 'self'\r\n\r\n            // {JSON} 页码栏参数配置\r\n            , pageBarSetting: {\r\n                leftCellWidth: \"150px\"\r\n                , centerCellWidth: \"10px\"\r\n                , rightCellWidth: \"\"\r\n            }\r\n            \r\n            // {Boolean} 是否显示重置按钮\r\n\t\t\t, btnReset : false  \t\r\n            // {Boolean} 是否显示高级搜索按钮(在模态框搜索)\r\n\t\t\t, btnShowSearch : false      \r\n            // {Boolean} 是否显示过滤数据按钮\r\n\t\t\t, btnShowFilter : false      \r\n            // {Boolean} 是否显示筛选按钮\r\n\t\t\t, btnScreen : false \r\n            // {Boolean} 是否显示导出按钮\r\n            , btnExport : false      \r\n            // {Boolean} 是否显示导入按钮\r\n            , btnImport : false\r\n            // {JSON} 数据导入设置\r\n            , importSetting: {\r\n                // {String} 数据导入公共弹出页面地址,默认是wui.commonPageBasePath + \"wui.grid.import.html\"\r\n                pageUrl: ui.commonPageBasePath + \"wui.grid.import.html\"\r\n                // {String} 页面高度\r\n                , pageHeight: \"700px\"\r\n                // {String} 页面宽度\r\n                , pageWidth: \"400px\"\r\n                // {String} 页面标题\r\n                , pageTitle: ui.language.grid.importPageTitle\r\n                // {String} 列表数据文件上传服务接口地址,默认是wui.serviceInterface.gridFileUploadServiceAPI\r\n                , fileUploadUrl: ui.serviceInterface.gridFileUploadServiceAPI\r\n                // {string} 数据导入处理URL,默认是wui.serviceInterface.gridImportServiceAPI\r\n                , importUrl: ui.serviceInterface.gridImportServiceAPI\r\n                // {JSON} 传递给选择接口的其他参数\r\n                , otherParam: {}\r\n                // {Number} 可选个数\r\n                , maxNumber: 1\r\n                // {String} 最大允许上传文件大小,单位MB\r\n                , maxFilesize: 40\r\n                // {String} 允许上传文件后缀\r\n                , acceptedFiles: \".xlsx,.xls\"\r\n                // {Stirng} 文件解析配置\r\n                , jsonReader: {}\r\n                // {Function} 导入成功关闭弹窗执行事件\r\n                , onSuccess: ui.CONSTANTS.EMPTYFUNC\r\n            }\r\n            // {JSON} 数据导出设置\r\n            , exportSetting: {\r\n            \t// 默认导出方式,若设置值,则不会弹出导出确认框,直接采用此方式导出,可选'all'|'page'|'select'\r\n            \tdefaultMode: \"\"\r\n            }\r\n            // {Boolean} 是否显示搜索栏(是否搜索列根据colModel的search参数设置),默认是true\r\n            , isShowSearchBar: true  \r\n            // {Boolean} 当开启搜索栏时，是否隐藏超过一行的搜索行,默认是true,若为false,则不隐藏也不添加隐藏按钮\r\n            , isHideSearchRows: true   \r\n            // {Boolean} 搜索栏是否显示运算符(即是否在顶层搜索栏中显示\"<\",\"=\"等运算符),默认是false\r\n\t\t\t, isShowSearchOperator: false  \r\n            // {Boolean} 是否要显示总记录数\r\n\t\t\t, isShowRecords : true \t\r\n            // {Boolean} 只加载一次数据。加载后,datatype就被指定为local,之后的操作都是基于客户端的操作。分页功能会禁止\r\n\t\t\t, isLoadonce : false \r\n            // {Boolean} 启用或者禁用单元格编辑功能\r\n\t\t\t, isEnableCellEdit : false \r\n            // {Boolean} 是否启用点击行选中复选框\r\n            , isClickRow: true\r\n            // {String} 顶部搜索栏条件运算符,可选'AND'和'OR',默认是\"AND\"\r\n            , groupOp: \"AND\"   \r\n            // {JSON} 默认传递到服务端参数名,当参数为null时不会被发到服务器端 \r\n\t\t\t, prmNames: {\r\n\t\t\t\tpage:\"page\",    \t// 表示请求页码的参数名称  \r\n\t\t\t    rows:\"rows\",    \t// 表示请求行数的参数名称  \r\n\t\t\t    sort: \"sidx\", \t\t// 表示用于排序的列名的参数名称  \r\n\t\t\t    order: \"sord\", \t\t// 表示采用的排序方式的参数名称  \r\n\t\t\t    search:\"_search\", \t// 表示是否是搜索请求的参数名称  \r\n\t\t\t    nd:\"nd\", \t\t\t// 表示已经发送请求的次数的参数名称  \r\n\t\t\t    id:\"id\", \t\t\t// 表示当在编辑数据模块中发送数据时,使用的id的名称  \r\n\t\t\t    oper:\"oper\",    \t// operation参数名称（我暂时还没用到）  \r\n\t\t\t    editoper:\"edit\", \t// 当在edit模式中提交数据时,操作的名称  \r\n\t\t\t    addoper:\"add\", \t\t// 当在add模式中提交数据时,操作的名称  \r\n\t\t\t    deloper:\"del\", \t\t// 当在delete模式中提交数据时,操作的名称  \r\n\t\t\t    subgridid:\"id\", \t// 当点击以载入数据到子表时,传递的数据名称  \r\n\t\t\t    npage: null,   \r\n\t\t\t    totalrows:\"totalrows\" // 表示需从Server得到总共多少行数据的参数名称,参见jqGrid选项中的rowTotal\r\n\t\t\t}\t\r\n            // {JSON} 设置如何解析从Server端发回来的json数据\r\n\t\t\t, jsonReader: {\r\n\t\t\t\troot: \"rows\",   \t// json中代表实际模型数据的入口  \r\n\t\t\t    page: \"page\",   \t// json中代表当前页码的数据  \r\n\t\t\t    total: \"total\", \t// json中代表页码总数的数据  \r\n\t\t\t    records: \"records\", // json中代表数据行总数的数据  \r\n\t\t\t    repeatitems: true, \t// 如果设为false,则jqGrid在解析json时,会根据name来搜索对应的数据元素（即可以json中元素可以不按顺序）；而所使用的name是来自于colModel中的name设定。  \r\n\t\t\t    cell: \"cell\",\t\t  \r\n\t\t\t    id: \"id\",  \r\n\t\t\t    userdata: \"userdata\",  \r\n\t\t\t    subgrid: {  \r\n\t\t\t        root:\"rows\",   \r\n\t\t\t        repeatitems: true,   \r\n\t\t\t        cell:\"cell\"  \r\n\t\t\t    }  \r\n\t\t\t}\t\r\n            // {Boolean} 启用或者禁用treegrid模式,默认是false\r\n            , isTreeGrid: false  \r\n            // {String} treeGrid模式，跟json元数据有关  \r\n            , treeGridModel: \"adjacency\"    \r\n            // {String} 展开列,一般设置第一列\r\n            , treeExpandColumn: \"\" \r\n            // {Boolean} 当为true时，点击展开行的文本时，treeGrid就能展开或者收缩，不仅仅是点击图片,默认是true          \r\n            , isClickNodeExpandCol: true  \r\n            // {JSON} 树形结构图标设置\r\n            , treeIconsSetting: {\r\n                // 文件夹展开之前的图标\r\n                plus: ui.language.grid.treeIcon.plus,   \r\n                // 文件夹展开之后的图标\r\n                minus: ui.language.grid.treeIcon.minus,    \r\n                // 文件图标 \r\n                leaf: ui.language.grid.treeIcon.leaf\r\n            }  \r\n            // {JSON} 设置解析服务器端返回的树结构参数字段\r\n            , treeReader : {\r\n                // 属性层级字段名称\r\n                level_field: \"level\",  \r\n                //父级rowid字段名称\r\n                parent_id_field: \"parent\", \r\n                // 是否还有子级菜单字段名称\r\n                leaf_field: \"isLeaf\",   \r\n                //是否加载完毕要展开字段名称\r\n                expanded_field: \"expanded\",\r\n                // 是否懒加载\r\n                lazy_field: \"isLazy\"\r\n            }\r\n            // {JSON} 懒加载设置\r\n            , lazySetting: {\r\n                // {String} 懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"id\"\r\n                lazyField: \"id\"\r\n                // {String} 懒加载重新设置url,若不设置,则采用默认的url参数\r\n                // , url: undefined,\r\n                // {string} 获取数据类型,默认是\"\",若不设置,则采用默认的url参数\r\n                // , mtype : \"\"   \r\n                // 请求后台服务时传递的参数,默认是{}\r\n                , otherParam: {}     \r\n                // {string} 数据格式,默认是\"json\"\r\n                , dataType : \"json\"\r\n                // {string} 请求数据类型,默认为\"application/json\"\r\n                , contentType: \"application/json\"\r\n            }\r\n            // {String} 懒加载时,每一次懒加载传递当前节点key值的字段名,默认是\"id\"\r\n            // , lazyField: \"id\"\r\n            // {Boolean} 是否设置分组\r\n            , grouping: false\r\n            // {JSON} 设置分组属性\r\n            , groupingView : {\r\n                //设置分组的列\r\n                groupField: []\r\n                // 是否显示分组列\r\n                , groupColumnShow: [true]\r\n                // 设置表头显示的数据。（{0}：分组的值，{1}总数据量，以及{Amount}:汇总字段的值）\r\n                , groupText: ['<b>{0} - {1} 条记录{Amount}</b>']\r\n                // 加载数据时是否只显示分组的组信息。true：收缩，false：展开。\r\n                , groupCollapse: false\r\n                // 分组中的数据是否排序\r\n                , groupDataSorted: true\r\n                // 分组后的排序\r\n                , groupOrder: ['asc']\r\n                // 是否显示汇总.如果为true需要在colModel中进行配置\r\n                , groupSummary: [true]\r\n                // 运算类型，可以为max,sum,avg\r\n                , summaryType: 'max'\r\n                // 运算显示模板\r\n                , summaryTpl: '<b>Max: {0}</b>'\r\n                //汇总数据显示位置，footer或header。默认是footer\r\n                , groupSummaryPos: ['footer']\r\n                //是否显示汇总信息并且当收起表格时是否隐藏下面的分组  \r\n                , showSummaryOnHide: false      \r\n            }\r\n            // {JSON} 表格显示文本\r\n            , defaultText: ui.language.grid.defaultText\r\n            // , defaultText: {\r\n            //     // emptyrowstext: \"暂无可显示数据...\",\r\n            //     emptyrowstext: \"<div>** 暂无数据 **</div>\",\r\n            //     recordtext: \"{0} - {1}\\u3000共 {2} 条\", // 共字前是全角空格\r\n            //     emptyrecords: \"\",\r\n            //     // loadtext: \"加载中...\",\r\n            //     loadtext: \"<img src='\" + ui.FRAME_PATH + \"themes/images/loading-1.gif' title='加载中...' />\",\r\n            //     savetext: \"保存中...\",\r\n            //     pgtext : \" {0} 共 {1} 页\",\r\n            //     pgfirst : \"首页\",\r\n            //     pglast : \"尾页\",\r\n            //     pgnext : \"下一页\",\r\n            //     pgprev : \"上一页\",\r\n            //     pgrecs : \"页码记录\",\r\n            //     showhide: \"列表折叠或展开\",\r\n            //     overPageNumberText: \"当前列表最多只有 {0} 页\",\r\n            //     // mobile\r\n            //     pagerCaption : \"Grid::页码设置\",\r\n            //     pageText : \"页码:\",\r\n            //     recordPage : \"每页记录\",\r\n            //     nomorerecs : \"没有更多的记录了...\",\r\n            //     scrollPullup: \"上拉加载更多...\",\r\n            //     scrollPulldown : \"下拉刷新...\",\r\n            //     scrollRefresh : \"释放刷新...\"\r\n            // } \r\n            // {JSON} 单选列配置\r\n            , singleColSetting: {\r\n                // {String} 列头显示文本\r\n                label: ui.language.grid.singleColHead,\r\n                // {String} 列字段名\r\n                name: \"jqg_\" + element + \"_radio\",\r\n                // {Number} 列宽度,默认是50\r\n                width: 50,\r\n                // {String} 列文本对齐方向,默认是\"center\"\r\n                align: \"center\",\r\n                // {Boolean} 列宽度是否要固定不可变,默认是true\r\n                fixed: true,\r\n                resizable: false\r\n            }\r\n            // {function} 当点击翻页按钮填充数据之前触发此事件,同样当输入页码跳转页面时也会触发此事件,当返回false时不会执行此次页码跳转,参数pgButton可能值:first,last,prev,next,user\r\n            , onBeforePage: ui.CONSTANTS.EMPTYFUNC    \r\n            // {function} 表格数据导出之前的执行方法,参数pdata表示打印的数据\r\n\t\t\t, onBeforeExport: ui.CONSTANTS.EMPTYFUNC\t\r\n            // {function} 当表格所有数据都加载完成而且其他的处理也都完成时触发此事件,排序,翻页同样也会触发此事件,无参数\r\n\t\t\t, onGridComplete: ui.CONSTANTS.EMPTYFUNC \t\r\n            // {function} 当从服务器返回响应时执行,参数data：服务器返回的XMLHttpRequest 对象\r\n            , onLoadComplete: ui.CONSTANTS.EMPTYFUNC  \r\n            // {function} 当表格点击全选按钮时触发,传递三个参数,rowids:触发复选框行的id值, rows:触发复选框行的全部数据, status:是否选中状态\r\n            , onSelectedAll: ui.CONSTANTS.EMPTYFUNC   \r\n            // {function} 点击行复选框之前触发,传递两个参数:rowid: 当前行id值, event:触发事件对象\r\n            , onBeforeSelectedRow: ui.CONSTANTS.EMPTYFUNC   \r\n            // {function} 点击行复选框之后触发,传递三个参数:rowid: 当前行id值, row:当前行数据, status:是否选中状态\r\n            , onSelectedRow: ui.CONSTANTS.EMPTYFUNC   \r\n            // {function} 当启用treegrid模式时,树节点展开之前触发:两个参数,id:当前行id, row:当前行数据\r\n            , onBeforeExpandTreeGridNode: ui.CONSTANTS.EMPTYFUNC  \r\n            // {function} 当启用treegrid模式时,树节点展开之后触发:两个参数,id:当前行id, row:当前行数据\r\n            , onAfterExpandTreeGridNode: ui.CONSTANTS.EMPTYFUNC  \r\n            // {function} 当启用treegrid模式时,树节点收缩之前触发:两个参数,id:当前行id, row:当前行数据\r\n            , onBeforeCollapseTreeGridNode: ui.CONSTANTS.EMPTYFUNC  \r\n            // {function} 当启用treegrid模式时,树节点收缩之后触发:两个参数,id:当前行id, row:当前行数据\r\n            , onAfterCollapseTreeGridNode: ui.CONSTANTS.EMPTYFUNC  \r\n            // {function} 执行搜索列表操作之前触发,参数postData: 传递到后台服务的搜索字段数据,若返回postData参数,会修改传递到后台服务数据\r\n            , onBeforeSearchGrid: ui.CONSTANTS.EMPTYFUNC  \r\n            // {function} 当限制可选行数的时候,当达到最大可选行数时触发,两个参数:selectedRowIds:已经选中的行id, maxNumber:最大可选个数\r\n            , onOverMaxNumber: ui.CONSTANTS.EMPTYFUNC\r\n            // {function} 当设置grouping为true,点击切换显隐分组时触发,两个参数:hid:分组头ID, collapsed:是否展开\r\n            , onClickGroup: ui.CONSTANTS.EMPTYFUNC\r\n            // {function} 当开始改变一个列宽度时触发此事件。event：event对象；index：当前列在colModel中位置索引\r\n            , onResizeStart: ui.CONSTANTS.EMPTYFUNC\r\n            // {function} 当列宽度改变之后触发此事件。newwidth：列改变后的宽度；index：当前列在colModel中的位置索引\r\n            , onResizeStop: ui.CONSTANTS.EMPTYFUNC\r\n            // {json/Function} 为了弥补组件对第三方插件的拓展的不足,此参数的包含的属性将会直接替换组件拓展内容,直接对第三方插件进行初始化设置,设置之前,请必须了解清楚是否会覆盖默认参数,默认是null,也可传递一个方法，传递的参数为第三方插件初始化参数,动态修改并返回一个参数对象作为最终初始化配置\r\n            , formatParams: null\r\n        };\r\n\r\n\t\t//默认配置项\r\n\t\tvar defaults = { \r\n            // , isShowRowNumbers: false\t// 是否显示行号\r\n\t\t    responsive: true\r\n            // 符号提示语\r\n\t\t\t, operandTitle: '点击选择搜索符号'\t\r\n            // 查询条件运算符,可选'AND'和'OR',默认是\"AND\"\r\n\t\t\t, groupOp : 'AND'\t\t\r\n            // 默认的查询搜索条件,表示意思见operands参数\r\n\t\t\t, defaultSearch: 'cn'\t\r\n\t\t\t, operands : { \r\n                \"eq\" :\"==\", \r\n                \"ne\":\"!\",\r\n                \"lt\":\"<\",\r\n                \"le\":\"<=\",\r\n                \"gt\":\">\",\r\n                \"ge\":\">=\",\r\n                \"bw\":\"^\",\r\n                \"bn\":\"!^\",\r\n                \"in\":\"=\",\r\n                \"ni\":\"!=\",\r\n                \"ew\":\"|\",\r\n                \"en\":\"!@\",\r\n                \"cn\":\"~\",\r\n                \"nc\":\"!~\",\r\n                \"nu\":\"#\",\r\n                \"nn\":\"!#\", \r\n                \"bt\":\"...\"\r\n            }\r\n            // 默认Grid列配置参数\r\n\t\t\t, defaultColConfig: ui.gridSetting.defaultColConfig\r\n            // {String} 搜索栏表单绑定属性值\r\n            , searchFormAttr: element + \"-searchBar-form\"\r\n\t\t\t// , searchSortFiled: \"searchSort\" // 构建搜索栏时的排序先后顺序,若列数据不包含此字段值,则按照加载顺序追加到搜索排序字段之后\r\n            // 当单元格数据为空且不标注格式时,默认显示内容(包括undefined/null/\"\")\r\n            , cellValueEmpty: \"\"\t\r\n            , colModels: []\r\n            , styleUI : \"wuiUI\"\r\n            , mergerRowsField: \"\"\r\n            , keyField: null\r\n            // , mergerColsField: \"\"\r\n            , windowModal: window\r\n\t\t};\r\n\r\n\t\tfunction uiGrid(element, opt){\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init(opt);\t\r\n\t\t}\r\n\r\n\t\tuiGrid.prototype = {\r\n\t\t\tconstructor: uiGrid,\r\n\r\n\t\t\tinit: function(opt){\r\n\t\t\t\tthis.pluginName = _widgetName;\t//缓存插件名字\r\n\t            this.hasDom = false; \t\t//检查dom树中此节点是否存在\r\n\t\t\t\tthis.element = element;\r\n\t            this.$element = $(\"#\" + element);\r\n\t\t\t\tthis.defaults = defaults;\t// 缓存配置项\r\n\t\t\t\tthis._option = opt;\t\t// 缓存传递进来的配置\r\n\t\t\t\t// this.initDom = $(\"#\" + element).prop(\"outerHTML\");\r\n\t\t\t\t// this._opt = $.extend(false, {}, config, options);\t//覆盖默认配置项\r\n                // 获取元素绑定的参数数据\r\n                var AttributeParams = ui.getAttributeParams(this.$element, config);\r\n                // console.info(AttributeParams);\r\n                this._opt = $.extend(true, {}, config, opt, AttributeParams);   // 覆盖默认配置项\r\n\t\t\t\tthis.colModel = [];\r\n\t\t\t\tthis.container = null;\r\n\t\t\t\tthis._grid = null;\r\n\t\t\t\tthis.btnTemplate = \"<a id='{0}' href='javascript:void(0)' class='wui-btn wui-btn-default'>{1}</a>\";\r\n\t\t\t\tthis.btnDdTemplate = \"<li><a id='{0}' href='javascript:void(0)'>{1}</a></li>\";\r\n\r\n                this.loadData = null;\r\n\r\n\t\t\t\tthis.listeners = []; //自定义事件,用于监听插件的用户交互\r\n            \tthis.handlers = {};\r\n\r\n                this.oNiceScroll = null;\r\n                this.status = \"init\";\r\n                // 格式化组件配置参数\r\n                this._formatParams();\r\n\t\t\t\tthis.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t\t\t},\r\n            _formatParams: function(){\r\n                var self = this, params = this._opt, selectorId = this.element, $selector = this.$element;\r\n                var singleColSetting = params.singleColSetting;\r\n                var maxNumber = ui.formatMaxNumber(params.maxNumber);\r\n                this._opt.maxNumber = maxNumber;\r\n\r\n                self._extendGrid();\r\n                // 语言包\r\n                $.jgrid.regional[\"cn\"].defaults = params.defaultText;\r\n\r\n                this.defaults.colModels = [];\r\n                if(maxNumber == 1 && params.isShowCheckBox){\r\n                    var _formatChooseTmp = function(cellValue, options, row) {\r\n                        // console.info(row);\r\n                        var keyName = $selector.jqGrid(\"getGridParam\", \"keyName\");\r\n                        var radio = '<input type=\"radio\" name=\"' + singleColSetting.name + '\" data-mutex-check=\"false\" value=\"' + row[keyName] + '\" class=\"cbox\" _id=\"' + row[keyName] + '\">';\r\n                        // var radio = '<div class=\"grid-opt\"><a href=\"javascript:void(0)\" name=\"' + singleColSetting.name + '\" class=\"form-btn\" title=\"单选框\" _id=\"' + row[keyName] + '\"><i class=\"fa fa-circle-o\"></i></a></div>';\r\n                        return radio;\r\n                    }\r\n                    this.defaults.colModels.unshift({ \r\n                        label: singleColSetting.label, \r\n                        name: singleColSetting.name, \r\n                        width:singleColSetting.width, \r\n                        formatter: _formatChooseTmp, \r\n                        resizable: singleColSetting.resizable, \r\n                        align: singleColSetting.align, \r\n                        fixed: singleColSetting.fixed,\r\n                        frozen: params.colModel[0].frozen\r\n                    });\r\n                }\r\n\r\n                // console.info(params.colModel);\r\n                var keyField = null, isFrozen = false;\r\n                for(var i = 0; i < params.colModel.length; i++){\r\n                    var theColModel = params.colModel[i];\r\n                    if(typeof(theColModel[\"key\"]) === \"boolean\" && theColModel[\"key\"] === true){\r\n                        keyField = theColModel[\"name\"];\r\n                    }\r\n                    if(theColModel.frozen){\r\n                        isFrozen = theColModel.frozen;\r\n                    }\r\n                    this.defaults.colModels.push(params.colModel[i]);\r\n                }\r\n                this.defaults.isFrozen = isFrozen;\r\n\r\n                if(keyField){\r\n                    this.defaults.keyField = keyField;\r\n                }else{\r\n                    ui.logWarn(\"没有设置行数据的key字段\", \"wui.grid\", true);\r\n                }\r\n\r\n                if(!ui.isEmptyType(params.mergerRowsField)){\r\n                    if(typeof(params.mergerRowsField) === \"string\" && params.mergerRowsField != \"\"){\r\n                        this.defaults.mergerRowsField = params.mergerRowsField.split(\",\");\r\n                    }else{\r\n                        this.defaults.mergerRowsField = params.mergerRowsField;\r\n                    }\r\n                }else{\r\n                    this.defaults.mergerRowsField = \"\";\r\n                }\r\n\r\n                var modalWindowIndex = ui.CONSTANTS.OMODALWINDOW.indexOf(params.modalWindow);\r\n                if(modalWindowIndex > -1){\r\n                    this.defaults.windowModal = window[params.modalWindow];\r\n                }else{\r\n                    if(typeof(ui.modalWindow) === \"function\"){\r\n                        this.defaults.windowModal = ui.modalWindow.call(this, window);\r\n                    }\r\n                }\r\n\r\n                // 如果不展示显隐按钮,则默认显示全部搜索条件\r\n                if(params.actions.indexOf(\"showHide\") == -1){\r\n                    params.isHideSearchRows = false;\r\n                }\r\n            },\r\n\t\t\t_initDom: function() { // 生成DOM节点\r\n\t\t\t\tvar self = this, param = this._opt, $selector = this.$element;\r\n\t            \r\n\t            if(!($selector.parent().hasClass('wui-grid'))){\r\n\t            \tvar parentDiv = '<div class=\"wui-grid grid-table\"></div>';\r\n                \t$selector.wrap(parentDiv);    // 增加父容器\r\n\t            }\r\n\t            self.container = self.$element.parent();\r\n\r\n\t            // 添加工具栏\r\n\t            if(!param.gridToolbar){\r\n\t        \t\t// ui.logMessage(\"没传入工具栏\");\r\n\t        \t\tvar isShowToolbar = param.btnReset || param.btnShowSearch || param.btnShowFilter || param.btnScreen || param.btnExport || param.btnImport;\r\n\r\n\t\t        \tif(isShowToolbar){\r\n\t\t        \t\tvar gridToolbarId = \"grid_\" + ui.guid();\r\n\t\t        \t\tself.$element.before('<div class=\\\"toolbar w-grid-toolbar\\\" id=\"' + gridToolbarId + '\"></div>');\r\n\t\t        \t\tparam.gridToolbar = \"#\" + gridToolbarId;\r\n\t\t        \t}\r\n\t        \t}else{\r\n                    \r\n                    if(!$(param.gridToolbar).exist()){\r\n                        var gridToolbarId = param.gridToolbar.substr(1);\r\n                        self.$element.before('<div class=\\\"toolbar w-grid-toolbar\\\" id=\"' + gridToolbarId + '\"></div>');\r\n                    }\r\n                }\r\n\t            \r\n\t            // 添加页码导航栏\r\n\t            if(param.isShowPageBar){\r\n                    if(!param.gridPageId){\r\n                        if(self.$element.siblings(\".w-grid-page\").length == 0){\r\n                            param.gridPageId = ui.guid();\r\n                            self.$element.after('<div class=\\\"w-grid-page\\\" id=\"' + param.gridPageId + '\"></div>');\r\n                        }\r\n                    }\r\n                    param.gridPage = \"#\" + param.gridPageId;\r\n\t            }else{\r\n                    param.gridPage = null;\r\n                }\r\n\r\n\t            // self.initDom = self.container.prop(\"outerHTML\");\r\n\t            self.initDom = self.container.html();\r\n\r\n\t            self._initGrid();\r\n\t            \r\n                this.hasDom = true;\r\n\r\n                return $selector.prop(\"outerHTML\");\r\n\t        },\r\n            // 拓展Grid默认设置\r\n            _extendGrid: function(){\r\n                if(!$.jgrid.hasOwnProperty(\"regional\")) {\r\n                    $.jgrid.regional = [];\r\n                }\r\n                $.jgrid.regional[\"cn\"] = {\r\n                    defaults : {\r\n                        recordtext: \"{0} - {1}\\u3000共 {2} 条\", // 共字前是全角空格\r\n                        emptyrecords: \"无数据显示\",\r\n                        loadtext: \"读取中...\",\r\n                        savetext: \"保存中...\",\r\n                        pgtext : \" {0} 共 {1} 页\",\r\n                        pgfirst : \"首页\",\r\n                        pglast : \"末页\",\r\n                        pgnext : \"下一页\",\r\n                        pgprev : \"上一页\",\r\n                        pgrecs : \"Records per Page\",\r\n                        showhide: \"Toggle Expand Collapse Grid\",\r\n                        // mobile\r\n                        pagerCaption : \"Grid::Page Settings\",\r\n                        pageText : \"Page:\",\r\n                        recordPage : \"Records per Page\",\r\n                        nomorerecs : \"没有更多记录...\",\r\n                        scrollPullup: \"上拉加载更多...\",\r\n                        scrollPulldown : \"下拉刷新...\",\r\n                        scrollRefresh : \"释放刷新...\"\r\n                    },\r\n                    search : {\r\n                        caption: \"搜索...\",\r\n                        Find: \"查找\",\r\n                        Reset: \"重置\",\r\n                        odata: [\r\n                        { \r\n                            oper:'eq', text:'等于\\u3000\\u3000'\r\n                        },{ \r\n                            oper:'ne', text:'不等于\\u3000'\r\n                        },{ \r\n                            oper:'lt', text:'小于\\u3000\\u3000'\r\n                        },{ \r\n                            oper:'le', text:'小于等于'\r\n                        },{ \r\n                            oper:'gt', text:'大于\\u3000\\u3000'\r\n                        },{ \r\n                            oper:'ge', text:'大于等于'\r\n                        },{ \r\n                            oper:'bw', text:'开始于\\u3000'\r\n                        },{ \r\n                            oper:'bn', text:'不开始于'\r\n                        },{ \r\n                            oper:'in', text:'属于\\u3000\\u3000'\r\n                        },{ \r\n                            oper:'ni', text:'不属于\\u3000'\r\n                        },{ \r\n                            oper:'ew', text:'结束于\\u3000'\r\n                        },{ \r\n                            oper:'en', text:'不结束于'\r\n                        },{ \r\n                            oper:'cn', text:'包含\\u3000\\u3000'\r\n                        },{ \r\n                            oper:'nc', text:'不包含\\u3000'\r\n                        },{ \r\n                            oper:'nu', text:'不存在\\u3000'\r\n                        },{ \r\n                            oper:'nn', text:'存在\\u3000\\u3000'\r\n                        }, {\r\n                            oper:'bt', text:'两者之间'\r\n                        }],\r\n                        groupOps: [ \r\n                            { \r\n                                op: \"AND\", text: \"所有\" \r\n                            },{ \r\n                                op: \"OR\",  text: \"任一\" \r\n                            } \r\n                        ],\r\n                        operandTitle : \"点击选择搜索符号\",\r\n                        resetTitle : \"重置搜索值\"\r\n                    },\r\n                    edit : {\r\n                        addCaption: \"添加记录\",\r\n                        editCaption: \"编辑记录\",\r\n                        bSubmit: \"提交\",\r\n                        bCancel: \"取消\",\r\n                        bClose: \"关闭\",\r\n                        saveData: \"数据已改变,是否保存？\",\r\n                        bYes : \"是\",\r\n                        bNo : \"否\",\r\n                        bExit : \"取消\",\r\n                        msg: {\r\n                            required:\"此字段必需\",\r\n                            number:\"请输入有效数字\",\r\n                            minValue:\"输值必须大于等于 \",\r\n                            maxValue:\"输值必须小于等于 \",\r\n                            email: \"这不是有效的e-mail地址\",\r\n                            integer: \"请输入有效整数\",\r\n                            date: \"请输入有效时间\",\r\n                            url: \"无效网址。前缀必须为 ('http://' 或 'https://')\",\r\n                            nodefined : \" 未定义！\",\r\n                            novalue : \" 需要返回值！\",\r\n                            customarray : \"自定义函数需要返回数组！\",\r\n                            customfcheck : \"必须有自定义函数!\"\r\n                        }\r\n                    },\r\n                    view : {\r\n                        caption: \"查看记录\",\r\n                        bClose: \"关闭\"\r\n                    },\r\n                    del : {\r\n                        caption: \"删除\",\r\n                        msg: \"删除所选记录？\",\r\n                        bSubmit: \"删除\",\r\n                        bCancel: \"取消\"\r\n                    },\r\n                    nav : {\r\n                        edittext: \"\",\r\n                        edittitle: \"编辑所选记录\",\r\n                        addtext:\"\",\r\n                        addtitle: \"添加新记录\",\r\n                        deltext: \"\",\r\n                        deltitle: \"删除所选记录\",\r\n                        searchtext: \"\",\r\n                        searchtitle: \"查找\",\r\n                        refreshtext: \"\",\r\n                        refreshtitle: \"刷新表格\",\r\n                        alertcap: \"注意\",\r\n                        alerttext: \"请选择记录\",\r\n                        viewtext: \"\",\r\n                        viewtitle: \"查看所选记录\",\r\n                        savetext: \"\",\r\n                        savetitle: \"保存行\",\r\n                        canceltext: \"\",\r\n                        canceltitle : \"取消行编辑\",\r\n                        selectcaption : \"Actions...\"\r\n                    },\r\n                    col : {\r\n                        caption: \"选择列\",\r\n                        bSubmit: \"确定\",\r\n                        bCancel: \"取消\"\r\n                    },\r\n                    errors : {\r\n                        errcap : \"错误\",\r\n                        nourl : \"没有设置url\",\r\n                        norecords: \"没有要处理的记录\",\r\n                        model : \"colNames 和 colModel 长度不等！\"\r\n                    },\r\n                    formatter : {\r\n                        integer : {thousandsSeparator: \",\", defaultValue: '0'},\r\n                        number : {decimalSeparator:\".\", thousandsSeparator: \",\", decimalPlaces: 2, defaultValue: '0.00'},\r\n                        currency : {decimalSeparator:\".\", thousandsSeparator: \",\", decimalPlaces: 2, prefix: \"\", suffix:\"\", defaultValue: '0.00'},\r\n                        date : {\r\n                            dayNames:   [\r\n                                \"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\",\r\n                                \"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\",\r\n                            ],\r\n                            monthNames: [\r\n                                \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\", \"十\", \"十一\", \"十二\",\r\n                                \"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"\r\n                            ],\r\n                            AmPm : [\"am\",\"pm\",\"上午\",\"下午\"],\r\n                            S: function (j) {return j < 11 || j > 13 ? ['st', 'nd', 'rd', 'th'][Math.min((j - 1) % 10, 3)] : 'th';},\r\n                            srcformat: 'Y-m-d',\r\n                            newformat: 'Y-m-d',\r\n                            parseRe : /[#%\\\\\\/:_;.,\\t\\s-]/,\r\n                            masks : {\r\n                                // see http://php.net/manual/en/function.date.php for PHP format used in jqGrid\r\n                                // and see http://docs.jquery.com/UI/Datepicker/formatDate\r\n                                // and https://github.com/jquery/globalize#dates for alternative formats used frequently\r\n                                // one can find on https://github.com/jquery/globalize/tree/master/lib/cultures many\r\n                                // information about date, time, numbers and currency formats used in different countries\r\n                                // one should just convert the information in PHP format\r\n                                ISO8601Long:\"Y-m-d H:i:s\",\r\n                                ISO8601Short:\"Y-m-d\",\r\n                                // short date:\r\n                                //    n - Numeric representation of a month, without leading zeros\r\n                                //    j - Day of the month without leading zeros\r\n                                //    Y - A full numeric representation of a year, 4 digits\r\n                                // example: 3/1/2012 which means 1 March 2012\r\n                                ShortDate: \"n/j/Y\", // in jQuery UI Datepicker: \"M/d/yyyy\"\r\n                                // long date:\r\n                                //    l - A full textual representation of the day of the week\r\n                                //    F - A full textual representation of a month\r\n                                //    d - Day of the month, 2 digits with leading zeros\r\n                                //    Y - A full numeric representation of a year, 4 digits\r\n                                LongDate: \"l, F d, Y\", // in jQuery UI Datepicker: \"dddd, MMMM dd, yyyy\"\r\n                                // long date with long time:\r\n                                //    l - A full textual representation of the day of the week\r\n                                //    F - A full textual representation of a month\r\n                                //    d - Day of the month, 2 digits with leading zeros\r\n                                //    Y - A full numeric representation of a year, 4 digits\r\n                                //    g - 12-hour format of an hour without leading zeros\r\n                                //    i - Minutes with leading zeros\r\n                                //    s - Seconds, with leading zeros\r\n                                //    A - Uppercase Ante meridiem and Post meridiem (AM or PM)\r\n                                FullDateTime: \"l, F d, Y g:i:s A\", // in jQuery UI Datepicker: \"dddd, MMMM dd, yyyy h:mm:ss tt\"\r\n                                // month day:\r\n                                //    F - A full textual representation of a month\r\n                                //    d - Day of the month, 2 digits with leading zeros\r\n                                MonthDay: \"F d\", // in jQuery UI Datepicker: \"MMMM dd\"\r\n                                // short time (without seconds)\r\n                                //    g - 12-hour format of an hour without leading zeros\r\n                                //    i - Minutes with leading zeros\r\n                                //    A - Uppercase Ante meridiem and Post meridiem (AM or PM)\r\n                                ShortTime: \"g:i A\", // in jQuery UI Datepicker: \"h:mm tt\"\r\n                                // long time (with seconds)\r\n                                //    g - 12-hour format of an hour without leading zeros\r\n                                //    i - Minutes with leading zeros\r\n                                //    s - Seconds, with leading zeros\r\n                                //    A - Uppercase Ante meridiem and Post meridiem (AM or PM)\r\n                                LongTime: \"g:i:s A\", // in jQuery UI Datepicker: \"h:mm:ss tt\"\r\n                                SortableDateTime: \"Y-m-d\\\\TH:i:s\",\r\n                                UniversalSortableDateTime: \"Y-m-d H:i:sO\",\r\n                                // month with year\r\n                                //    Y - A full numeric representation of a year, 4 digits\r\n                                //    F - A full textual representation of a month\r\n                                YearMonth: \"F, Y\" // in jQuery UI Datepicker: \"MMMM, yyyy\"\r\n                            },\r\n                            reformatAfterEdit : false,\r\n                            userLocalTime : false\r\n                        },\r\n                        baseLinkUrl: '',\r\n                        showAction: '',\r\n                        target: '',\r\n                        checkbox : {disabled:true},\r\n                        idName : 'id'\r\n                    },\r\n                    colmenu : {\r\n                        sortasc : \"Sort Ascending\",\r\n                        sortdesc : \"Sort Descending\",\r\n                        columns : \"Columns\",\r\n                        filter : \"Filter\",\r\n                        grouping : \"Group By\",\r\n                        ungrouping : \"Ungroup\",\r\n                        searchTitle : \"Get items with value that:\",\r\n                        freeze : \"Freeze\",\r\n                        unfreeze : \"Unfreeze\",\r\n                        reorder : \"Move to reorder\"\r\n                    }\r\n                };\r\n\r\n                var wuiUI = {\r\n                    common : {\r\n                        // disabled: \"ui-disabled\",\r\n                        // highlight : \"success\",\r\n                        // hover : \"active\",\r\n                        cornerall: \"ui-corner-all\",\r\n                        // cornertop: \"\",\r\n                        // cornerbottom : \"\",\r\n                        // hidden : \"\",\r\n                        icon_base : \"fa\",\r\n                        // overlay: \"ui-overlay\",\r\n                        // active : \"active\",\r\n                        error : \"wui-bg-danger\",\r\n                        button : \"wui-btn wui-btn-info\",\r\n                        content : \"\"\r\n                    },\r\n                    base : {\r\n                        // entrieBox : \"\",\r\n                        // viewBox : \"table-responsive\",\r\n                        // headerTable : \"table table-striped\",\r\n                        // headerBox : \"\",\r\n                        // rowTable : \"table table-striped\",\r\n                        // rowBox : \"\",\r\n                        // footerTable : \"table table-striped\",\r\n                        // footerBox : \"\",\r\n                        // headerDiv : \"\",\r\n                        // gridtitleBox : \"\",\r\n                        // customtoolbarBox : \"\",\r\n                        // //overlayBox: \"ui-overlay\",\r\n                        // loadingBox : \"row\",\r\n                        // rownumBox :  \"active\",\r\n                        // scrollBox : \"\",\r\n                        // multiBox : \"checkbox\",\r\n                        // pagerBox : \"\",\r\n                        // pagerTable : \"table\",\r\n                        // toppagerBox : \"\",\r\n                        pgInput : \"wui-input\",\r\n                        pgSelectBox : \"wui-select\",\r\n                        // pgButtonBox : \"\",\r\n                        // icon_first : \"fa-step-backward grid-fa-vertical\",\r\n                        // icon_prev : \"fa-backward grid-fa-vertical\",\r\n                        // icon_next: \"fa-forward grid-fa-vertical\",\r\n                        // icon_end: \"fa-step-forward grid-fa-vertical\",\r\n                        icon_asc : \"fa-sort-asc\",\r\n                        icon_desc : \"fa-sort-desc\",\r\n                        icon_caption_open : \"fa-arrow-circle-up\",\r\n                        icon_caption_close : \"fa-arrow-circle-down\"\r\n                    },\r\n                    modal : {\r\n                        // modal : \"modal-content\",\r\n                        // header : \"modal-header\",\r\n                        // title : \"modal-title\",\r\n                        // content :\"modal-body\",\r\n                        // resizable : \"ui-resizable-handle ui-resizable-se\",\r\n                        // icon_close : \"fa-times-circle-o\",\r\n                        icon_close : \"fa-times-close\",\r\n                        icon_resizable : \"ui-icon-gripsmall-diagonal-se\"\r\n                    },\r\n                    celledit : {\r\n                        inputClass : 'wui-input'\r\n                    },\r\n                    inlinedit : {\r\n                        inputClass : 'wui-input',\r\n                        icon_edit_nav : \"fa-edit\",\r\n                        icon_add_nav : \"fa-plus\",\r\n                        icon_save_nav : \"fa-save\",\r\n                        icon_cancel_nav : \"fa-times-circle-o\"\r\n                    },\r\n                    formedit : {\r\n                        inputClass : \"wui-input\",\r\n                        // icon_prev : \"fa-step-backward grid-fa-vertical\",\r\n                        // icon_next : \"fa-step-forward grid-fa-vertical\",\r\n                        icon_save : \"fa-save\",\r\n                        icon_close : \"fa-times-circle-o\",\r\n                        icon_del : \"fa-trash-o\",\r\n                        icon_cancel : \"fa-times-circle-o\"\r\n                    },\r\n                    navigator : {\r\n                        icon_edit_nav : \"fa-edit\",\r\n                        icon_add_nav : \"fa-plus\",\r\n                        icon_del_nav : \"fa-trash-o\",\r\n                        icon_search_nav : \"fa-search\",\r\n                        icon_refresh_nav : \"fa-refresh\",\r\n                        icon_view_nav : \"fa-info-circle\",\r\n                        icon_newbutton_nav : \"fa-external-link\"\r\n                    },\r\n                    grouping : {\r\n                        icon_plus : 'fa-plus-circle',\r\n                        icon_minus : 'fa-minus-circle'\r\n                    },\r\n                    filter : {\r\n                        // table_widget : 'table table-condensed',\r\n                        srSelect : 'wui-select',\r\n                        srInput : 'wui-input',\r\n                        // menu_widget : '',\r\n                        icon_search : 'fa-search',\r\n                        icon_reset : 'fa-refresh',\r\n                        icon_query :'fa-comment'\r\n                    },\r\n                    subgrid : {\r\n                        icon_plus : 'fa-caret-right',\r\n                        icon_minus : 'fa-caret-down',\r\n                        icon_open : 'fa-indent'\r\n                    },\r\n                    treegrid : {\r\n                        icon_plus : 'fa-caret-right',\r\n                        icon_minus : 'fa-caret-down',\r\n                        icon_leaf : 'fa-circle-o'\r\n                    },\r\n                    fmatter : {\r\n                        icon_edit : \"fa-edit\",\r\n                        icon_add : \"fa-plus\",\r\n                        icon_save : \"fa-save\",\r\n                        icon_cancel : \"fa-times-circle-o\",\r\n                        icon_del : \"fa-trash-o\"\r\n                    },\r\n                    colmenu : {\r\n                        // menu_widget : '',\r\n                        // input_checkbox : \"\",\r\n                        filter_select: \"form-control\",\r\n                        filter_input : \"form-control\",\r\n                        // icon_menu : \"fa-bars\",\r\n                        icon_sort_asc : \"fa-sort-alpha-asc\",\r\n                        icon_sort_desc : \"fa-sort-alpha-desc\",\r\n                        icon_columns : \"fa-list-alt\",\r\n                        icon_filter : \"fa-filter\",\r\n                        icon_group : \"fa-align-left\",\r\n                        icon_freeze : \"fa-align-center\",\r\n                        icon_move: \"fa-arrows-alt\"\r\n                    }\r\n                }\r\n\r\n                $.jgrid.styleUI.wuiUI = $.extend(true, {}, $.jgrid.styleUI.jQueryUI, wuiUI);\r\n            },\r\n            /*\r\n             * 初始化列格式,formatter(非function类型且非空) > wstype\r\n             * @Author   Chenzx\r\n             * @DateTime 2019-02-18\r\n             * @param    {[type]}   colModel [description]\r\n             * @return   {[type]}            [description]\r\n             */\r\n            _initFormatter: function(colModel){\r\n                var that = this;\r\n\r\n                var sFormatter = colModel.formatter;\r\n\r\n                // if(!colModel.formatter || typeof(colModel.formatter) === \"function\"){\r\n                //     sFormatter = colModel.wstype;\r\n                // }\r\n                if(!colModel.formatter){\r\n                    sFormatter = colModel.wstype;\r\n                }\r\n                            \r\n                switch (sFormatter) {\r\n                    // 字符串\r\n                    case \"text\":\r\n                    case \"string\":\r\n                        // 设置数据过滤栏显示形式: text: 输入框; select: 下拉框\r\n                        colModel.stype = \"text\";\r\n                        // 设置搜索栏显示形式\r\n                        colModel.wstype = \"string\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        if(!colModel.searchoptions.value){\r\n                            colModel.searchoptions.value = \":全部;1:是;0:否\";\r\n                        }\r\n                        colModel.formatter = \"text\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"left\";\r\n                        }\r\n                        break;\r\n                    // 布尔值\r\n                    case \"boolean\":\r\n                        // 下拉框\r\n                        colModel.stype = \"select\";\r\n                        colModel.wstype = \"boolean\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        if(!colModel.searchoptions.value){\r\n                            colModel.searchoptions.value = \":全部;true:是;false:否\";\r\n                        }\r\n\r\n                        // 复选框展示\r\n                        colModel.formatter = \"checkbox\";\r\n                        \r\n                        \r\n                        // colModel.formatter = function(cellValue, options, rowObject){\r\n                        //     if(cellValue){\r\n                        //         return \"<input type='checkbox' disabled checked value='\"+ cellValue +\"' />\";\r\n                        //     }else{\r\n                        //         return \"<input type='checkbox' disabled value='\"+ cellValue +\"' />\";\r\n                        //     }\r\n                            \r\n                        // }\r\n                        if(!colModel.align){\r\n                            colModel.align = \"center\";\r\n                        }\r\n                        break;\r\n                    // 日期\r\n                    case \"date\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"date\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        // console.info(colModel.formatDate);\r\n                        // 等于,不等于,小于,小于等于,大于,大于等于\r\n                        colModel.searchoptions.dataInit = function(input) {\r\n\r\n                            // $(element).attr(\"readonly\", \"readonly\");\r\n                            var elementId;\r\n                            if(!$(input).attr(\"id\")){\r\n                                elementId = ui.guid();\r\n                                $(input).attr(\"id\", elementId);\r\n                            }else{\r\n                                elementId = $(input).attr(\"id\");\r\n                            }\r\n                            var timer = wui.setInterval(_buildDate, 1000);\r\n                            function _buildDate(){\r\n                                if($(\"#\" + elementId).exist()){\r\n                                    wui.clearInterval(timer);\r\n                                    ui.date(elementId, {\r\n                                        isShowBtnGroup: false,\r\n                                        format : colModel.formatDate ? colModel.formatDate : \"yyyy-mm-dd\"\r\n                                    })\r\n                                }\r\n                            } \r\n                        }\r\n\r\n                        colModel.formatter = function(cellValue, options, rowObject){\r\n                            if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                                return that.defaults.cellValueEmpty;\r\n                            }else{\r\n                                var formatCellValue = ui.formatDate(cellValue, options.colModel.formatDate);\r\n                                if(!formatCellValue){\r\n                                    return cellValue;\r\n                                }else{\r\n                                    return formatCellValue;\r\n                                }\r\n                            }\r\n                        }\r\n                        if(!colModel.align){\r\n                            colModel.align = \"center\";\r\n                        }\r\n                        break;\r\n                    // 日期范围\r\n                    case \"dateRange\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"dateRange\";\r\n                        colModel.searchoptions.sopt = that._getSopt(\"date\");\r\n                        colModel.sopt = colModel.sopt || that._getSopt(colModel.wstype);\r\n\r\n                        colModel.searchoptions.dataInit = function(input) {\r\n\r\n                            // $(element).attr(\"readonly\", \"readonly\");\r\n                            var elementId;\r\n                            if(!$(input).attr(\"id\")){\r\n                                elementId = ui.guid();\r\n                                $(input).attr(\"id\", elementId);\r\n                            }else{\r\n                                elementId = $(input).attr(\"id\");\r\n                            }\r\n                            \r\n                            var timer = wui.setInterval(_buildDate, 1000);\r\n                            function _buildDate(){\r\n                                if($(\"#\" + elementId).exist()){\r\n                                    wui.clearInterval(timer);\r\n                                    ui.date(elementId, {\r\n                                        isShowBtnGroup: false,\r\n                                        format : colModel.formatDate ? colModel.formatDate : \"yyyy-mm-dd\"\r\n                                    })\r\n                                }\r\n                            } \r\n                        }\r\n\r\n                        colModel.formatter = function(cellValue, options, rowObject){\r\n                            if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                                return that.defaults.cellValueEmpty;\r\n                            }else{\r\n                                var formatCellValue = ui.formatDate(cellValue, options.colModel.formatDate);\r\n                                if(!formatCellValue){\r\n                                    return cellValue;\r\n                                }else{\r\n                                    return formatCellValue;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if(!colModel.align){\r\n                            colModel.align = \"center\";\r\n                        }\r\n                        break;\r\n                    // 数字\r\n                    case \"num\" :\r\n                    case \"number\" :\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"number\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype);\r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0]; \r\n                        colModel.searchoptions.dataInit = function (input) {\r\n                            // 输入校验\r\n                            $(input).keyup(function() {\r\n                                var value = $(element).val();\r\n                                $(input).val(value.replace(/[^\\d]/g,''));\r\n                            });\r\n                        }\r\n                        colModel.formatter = \"number\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"right\";\r\n                        }\r\n                        break;\r\n                    // 数字范围\r\n                    case \"numRange\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"numRange\";\r\n                        colModel.searchoptions.sopt = that._getSopt(\"number\");\r\n                        colModel.sopt = colModel.sopt || that._getSopt(colModel.wstype);\r\n                        colModel.searchoptions.dataInit = function (input) {\r\n                            // 输入校验\r\n                            $(input).keyup(function() {\r\n                                var value = $(input).val();\r\n                                $(input).val(value.replace(/[^\\d]/g,''));\r\n                            });\r\n                        }\r\n                        colModel.formatter = \"number\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"right\";\r\n                        }\r\n                        break;\r\n                    // 整数\r\n                    case \"int\" :\r\n                    case \"integer\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"integer\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype);\r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        colModel.searchoptions.dataInit = function (input) {\r\n                            // 输入校验\r\n                            $(input).keyup(function() {\r\n                                var value = $(input).val();\r\n                                $(input).val(value.replace(/^((\\-?[0-9]*)|(\\+?[0-9]*))$/g,''));\r\n                            });\r\n                        }\r\n                        colModel.formatter = \"integer\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"right\";\r\n                        }\r\n                        break;\r\n                    // 整数范围\r\n                    case \"intRange\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"intRange\";\r\n                        colModel.searchoptions.sopt = that._getSopt(\"integer\");\r\n                        colModel.sopt = colModel.sopt || that._getSopt(colModel.wstype);\r\n                        colModel.searchoptions.dataInit = function (input) {\r\n                            // 输入校验\r\n                            $(input).keyup(function() {\r\n                                var value = $(input).val();\r\n                                $(input).val(value.replace(/^((\\-?[0-9]*)|(\\+?[0-9]*))$/g,''));\r\n                            });\r\n                        }\r\n                        colModel.formatter = \"integer\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"right\";\r\n                        }\r\n                        break;\r\n                    // 浮点数\r\n                    case \"double\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"double\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype);\r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        colModel.searchoptions.dataInit = function (input) {\r\n                            // 输入校验\r\n                            $(input).keyup(function() {\r\n                                var value = $(input).val();\r\n                                $(input).val(value.replace(/^((\\-?[0-9]*)|(\\+?[0-9]*))$/g,''));\r\n                            });\r\n                        }\r\n                        colModel.formatter = \"number\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"right\";\r\n                        }\r\n                        break;\r\n                    // 浮点数范围\r\n                    case \"doubleRange\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"doubleRange\";\r\n                        colModel.searchoptions.sopt = that._getSopt(\"double\");\r\n                        colModel.sopt = colModel.sopt || that._getSopt(colModel.wstype);\r\n                        colModel.searchoptions.dataInit = function (input) {\r\n                            // 输入校验\r\n                            $(input).keyup(function() {\r\n                                var value = $(input).val();\r\n                                $(input).val(value.replace(/^((\\-?[0-9]*)|(\\+?[0-9]*))$/g,''));\r\n                            });\r\n                        }\r\n                        colModel.formatter = \"number\";\r\n                        if(!colModel.align){\r\n                            colModel.align = \"right\";\r\n                        }\r\n                        break;\r\n                    // 复选框\r\n                    case \"checkbox\":\r\n                        colModel.stype = \"select\";\r\n                        colModel.wstype = \"checkbox\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        if(!colModel.searchoptions.value){\r\n                            colModel.searchoptions.value = \":全部;1:是;0:否\";\r\n                        }\r\n\r\n                        // 复选框展示\r\n                        colModel.formatter = \"checkbox\";\r\n                        // colModel.formatter = function(cellValue, options, rowObject){\r\n                        //     // console.info(cellValue);\r\n                        //     // console.info(options);\r\n                        //     // console.info(rowObject);\r\n                        //     if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                        //         return that.defaults.cellValueEmpty;\r\n                        //     }else{\r\n                        //         return cellValue;\r\n                        //     }\r\n                        // }\r\n                        if(!colModel.align){\r\n                            colModel.align = \"center\";\r\n                        }\r\n                        break;\r\n                    // 普通下拉框\r\n                    case \"select\":\r\n                        colModel.stype = \"select\";\r\n                        colModel.wstype = \"select\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        colModel.formatter = function(cellValue, options, rowObject){\r\n                            if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                                return that.defaults.cellValueEmpty;\r\n                            }else{\r\n                                return cellValue;\r\n                            }\r\n                        }\r\n                        if(!colModel.align){\r\n                            colModel.align = \"left\";\r\n                        }\r\n                        break;\r\n                    // wui下拉框\r\n                    case \"selectbox\":\r\n                    case \"selectBox\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"selectBox\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        // searchoptions:{\r\n                        //     // 隐藏是否可选\r\n                        //     searchhidden: true,\r\n                        //     // 下拉加载服务\r\n                        //     dataSource: \"\", \r\n                        //     // 只用在搜索类型为checkbox、select下。可以是string或者object,如果为string则格式为value:label,且以“;”结尾；如果为object格式为{1:'One';2:'Two'}   \r\n                        //     value: \":全部;1:是;0:否\", \r\n                        //     // key值字段名  \r\n                        //     name: \"id\", \r\n                        //     // text值字段名\r\n                        //     text: \"name\", \r\n                        //     // 下拉可选个数  \r\n                        //     maxNumber: 0    \r\n                        // }\r\n                        colModel.formatter = function(cellValue, options, rowObject){\r\n                            if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                                return that.defaults.cellValueEmpty;\r\n                            }else{\r\n                                return cellValue;\r\n                            }\r\n                        } \r\n                        if(!colModel.align){\r\n                            colModel.align = \"left\";\r\n                        }\r\n                        break;\r\n                    // 弹出选择\r\n                    case \"choosebox\" :\r\n                    case \"chooseBox\" :\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"chooseBox\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        colModel.formatter = function(cellValue, options, rowObject){\r\n                            if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                                return that.defaults.cellValueEmpty;\r\n                            }else{\r\n                                return cellValue;\r\n                            }\r\n                        }\r\n                        if(!colModel.align){\r\n                            colModel.align = \"left\";\r\n                        }\r\n                        \r\n                        break;\r\n                    // wui数据字典\r\n                    case \"dictCode\":\r\n                        colModel.stype = \"text\";\r\n                        colModel.wstype = \"dictCode\";\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        \r\n                        var searchOptions = colModel.searchoptions;\r\n                        // searchoptions:{\r\n                        //     // 隐藏是否可选\r\n                        //     searchhidden: true,\r\n                        //     // 下拉加载服务\r\n                        //     dataSource: \"\", \r\n                        //     // 只用在搜索类型为checkbox、select下。可以是string或者object,如果为string则格式为value:label,且以“;”结尾；如果为object格式为{1:'One';2:'Two'}   \r\n                        //     value: \":全部;1:是;0:否\", \r\n                        //     // key值字段名  \r\n                        //     name: \"id\", \r\n                        //     // text值字段名\r\n                        //     text: \"name\", \r\n                        //     // 下拉可选个数  \r\n                        //     maxNumber: 0    \r\n                        // }\r\n\r\n                        colModel.formatter = function (cellValue, options, rowObject) {\r\n                            // 将value转化为数据字典项\r\n                            var optionValue, dirctValue;\r\n                            var theName = searchOptions.name ? searchOptions.name : ui.dictCodeSetting.name,\r\n                                theText = searchOptions.text ? searchOptions.text : ui.dictCodeSetting.text;\r\n\r\n                            if(searchOptions.code){\r\n                                if(searchOptions.data){\r\n                                    optionValue = searchOptions.data[searchOptions.code];\r\n                                }else if(ui.dictCodeSetting && ui.dictCodeSetting.items){\r\n                                    optionValue = ui.dictCodeSetting.items[searchOptions.code];\r\n                                }\r\n                            }else{\r\n                                ui.logError(\"【code】参数不能为空\", FRAME_NAME + \".\" + _widgetName, true)\r\n                            }\r\n\r\n                            if(optionValue){\r\n                                $.each(optionValue, function(){\r\n                                    if(this[theName] == cellValue){\r\n                                        dirctValue = this[theText];\r\n\r\n                                        return false;\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            if(dirctValue == undefined){\r\n                                return that.defaults.cellValueEmpty;\r\n                            }else{\r\n                                return dirctValue;\r\n                            }\r\n                        };\r\n                        \r\n                        if(!colModel.align){\r\n                            colModel.align = \"left\";\r\n                        }\r\n                        break;\r\n                    default :\r\n                        if (!colModel.wstype) {\r\n                            colModel.stype = \"text\";\r\n                            colModel.wstype = \"string\";\r\n                        }\r\n                        colModel.searchoptions.sopt = that._getSopt(colModel.wstype); \r\n                        colModel.sopt = colModel.sopt || colModel.searchoptions.sopt[0];\r\n                        if(!colModel.align){\r\n                            colModel.align = \"center\";\r\n                        }\r\n                        break;\r\n                }\r\n\r\n                if (colModel.stype == \"text\" && colModel.formatter == \"\") {\r\n                    colModel.formatter = function(cellValue, options, rowObject){\r\n\r\n                        if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                            return that.defaults.cellValueEmpty;\r\n                        }else{\r\n                            return cellValue;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(colModel.formatterOption){\r\n                    var optionValue = \"\";\r\n                    if(typeof(colModel.formatterOption) === \"string\"){\r\n                        optionValue = colModel.formatterOption;\r\n                    }else if(typeof(colModel.formatterOption) === \"object\"){\r\n                        optionValue = colModel.formatterOption.value;\r\n                    }else if(typeof(colModel.formatterOption) === \"function\"){\r\n                        optionValue = colModel.formatterOption(colModel);\r\n                    }\r\n\r\n                    ui.logParamValue({\r\n                        paramName: \"optionValue\",\r\n                        paramValue: optionValue, \r\n                        methodName: \"grid\", \r\n                        className: FRAME_NAME, \r\n                        isDebug: true\r\n                    });\r\n\r\n                    colModel.formatter = function (cellValue, options, rowObject) {\r\n                        // console.error(cellValue)\r\n                        var matchReg = new RegExp(\"(?<=\\;\" + cellValue + \"\\:).*?(?=\\;)\", \"gim\");\r\n                        // key: 截取字符串\";\"和\":\"之间的内容\r\n                        if(optionValue.indexOf(';' + cellValue + \":\") > -1 || optionValue.indexOf(cellValue + \":\") == 0){\r\n                            \r\n                            // title: 截取字符串\";\"+cellValue+\":和\";\"之间的内容\r\n                            var title = optionValue.match(matchReg);\r\n                            // console.error(title)\r\n                            return title;\r\n                        }\r\n                        if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                            return that.defaults.cellValueEmpty;\r\n                        }else{\r\n                            return cellValue;\r\n                        }\r\n                        \r\n                    };\r\n                }\r\n\r\n                return colModel;\r\n            },\r\n            _createColModel: function(colConfig){\r\n                var that = this,\r\n                    // 默认Grid列配置参数\r\n                    defaultColConfig = ui.deepCopy(that.defaults.defaultColConfig);\r\n            \r\n                var colModel = $.extend(true, {}, defaultColConfig, colConfig );\r\n                // console.info(colModel);\r\n                if(colModel.hidedlg){\r\n                    colModel.hidden = true;\r\n                }\r\n\r\n                if(!ui.isEmptyType(that.defaults.mergerRowsField)){\r\n                    if(that.defaults.mergerRowsField.indexOf(colModel.name) > -1){\r\n                        colModel.cellattr = function(rowId, value, rowObject, colModel, arrData) {\r\n                            //合并单元格\r\n                            return 'id=\\'' + colModel.name + rowId + \"\\'\";\r\n                        }\r\n                    }\r\n                }\r\n\r\n                colModel = this._initFormatter(colModel);\r\n\r\n                // 构建查询条件\r\n                // formatter: \"\"、text\"、\"number\"、\"date\"/\"checkbox\"、\"select\"/\"selectbox\"\r\n                // formatter: \"text\"、\"number\"、\"date\"/\"checkbox\"、\"text\"/\"text\"\r\n                // wstype: \"text\"、\"number\"、\"date\"/\"select\"/\"selectbox\"\r\n                if(!colModel.search){\r\n                    colModel.searchoptions = {};\r\n                }\r\n\r\n                // if (colModel.stype == \"text\" && colModel.formatter == \"\") {\r\n                //     colModel.formatter = function(cellValue, options, rowObject){\r\n\r\n                //         if(cellValue === null || cellValue == undefined || cellValue == \"\"){\r\n                //             return self.defaults.cellValueEmpty;\r\n                //         }else{\r\n                //             return cellValue;\r\n                //         }\r\n                //     }\r\n                // }\r\n\r\n                return colModel;\r\n            },\r\n            _initColModel: function(){\r\n                var self = this, colModels = this.defaults.colModels;\r\n                // 设置Grid列配置初始化值\r\n                for (var i = 0; i < colModels.length; i++) {\r\n                    var colConfig = colModels[i];\r\n                    \r\n                    var colModel = this._createColModel(colConfig);\r\n\r\n                    self.colModel.push(colModel);\r\n                }\r\n                // console.info(self.colModel);\r\n                return self.colModel;\r\n            },\r\n\t        _initGrid: function(){\r\n\t        \tvar self = this, params = this._opt, $selector = this.$element, selectorId = this.element;\r\n\t        \tvar _target = self.container;\r\n\r\n                // console.info(params);\r\n\t        \tvar colModels = self._initColModel();\r\n                // console.error(colModels)\r\n                \r\n                // 构建搜索栏\r\n                self.buildSearchBar();\r\n                // 构建工具栏\r\n                self.buildToolbar();\r\n                \r\n                var defaultText = params.defaultText;\r\n                // console.info(params);\r\n                var theGridParams = {\r\n                    // 获取数据类型\r\n                    mtype : params.mtype,       \r\n                    // 数据格式\r\n                    datatype : params.dataType, \r\n                    // 数据服务地址\r\n                    url : params.url, \r\n                    // 传递的参数          \r\n                    postData: params.otherParam,\r\n                    // 加载本地数据\r\n                    data: params.localData,\r\n                    // 列配置参数\r\n                    colModel : colModels, \r\n                    // 排序字段名称\r\n                    sortname : params.sortname, \r\n\r\n                    direction: params.direction === \"right\" ? \"rtl\" : \"ltl\",\r\n                    // 排序方式 asc/desc\r\n                    sortorder : params.sortorder, \r\n                    defaultColWidth: params.defaultColWidth,\r\n                    // 表格题目\r\n                    // caption: params.caption,            \r\n                    // 每页数据条数\r\n                    rowNum : params.rowNum,     \r\n                    // 分页列表\r\n                    rowList : params.rowList,   \r\n                    // 是否显示行号\r\n                    rownumbers : params.isShowRowNumbers, \r\n                    // 是否多选,显示checkbox\r\n                    multiselect : params.isShowCheckBox,    \r\n                    // 是否支持多列排序\r\n                    multiSort : params.multiSort,    \r\n                    height : params.height, // 高度\r\n                    width : params.width, // 宽度\r\n                    scrollOffset: \"5px\",\r\n                    autowidth: params.autowidth,\r\n                    // 是否自动撑满\r\n                    shrinkToFit : params.shrinkToFit, \r\n                    //是否可排序; 此参数为true时,固定列的功能无法使用\r\n                    sortable: params.isSortable,\r\n                    scroll: params.scroll,\r\n                    \r\n                    viewrecords : params.isShowRecords,\r\n                    // 只加载一次数据。加载后,datatype就被指定为local,之后的操作都是基于客户端的操作。分页功能会禁止\r\n                    loadonce : params.isLoadonce,   \r\n                    cellEdit : params.isEnableCellEdit,\r\n                    // 隔行变色\r\n                    altRows : params.altRows,    \r\n                    // 隔行变色样式\r\n                    altclass : params.altclass, \r\n                    // 分页容器\r\n                    pager : params.gridPage,  \r\n                    // 分页对齐方式\r\n                    pagerpos : params.pagerpos, \r\n                    // 分页信息对齐方式\r\n                    recordpos : params.recordpos, \r\n                    // 列标题菜单设置\r\n                    colMenu : params.colMenu, \r\n                    //是否计算高度(撑满一屏)\r\n                    // auto: self.defaults.auto,     \r\n                    // 默认传递到后台参数名,当参数为null时不会被发到服务器端\r\n                    prmNames: params.prmNames,  \r\n                    // 默认从服务器端返回数据参数名称设置集合\r\n                    jsonReader : params.jsonReader, \r\n                    // 解析数据设置\r\n                    localReader: params.localReader,\r\n                    // 启用或者禁用treegrid模式\r\n                    treeGrid: params.isTreeGrid,  \r\n                    // treeGrid模式，跟json元数据有关 \r\n                    treeGridModel: params.treeGridModel,     \r\n                    // 展开列,一般设置第一列\r\n                    ExpandColumn: params.treeExpandColumn,      \r\n                    // 是否可以点击\r\n                    ExpandColClick: params.isClickNodeExpandCol,  \r\n                    // 树图标设置\r\n                    treeIcons: params.treeIconsSetting,\r\n                    // 设置解析服务器端返回的树结构参数字段\r\n                    treeReader: params.treeReader,  \r\n                    grouping: params.grouping,\r\n                    groupingView : params.groupingView,\r\n                    onClickGroup: function(hid, collapsed){\r\n\r\n                        if(params.isFullScreen){\r\n                            // console.error(\"123\")\r\n                            self._setGridFullScreen();\r\n                        }else{\r\n                            self._setGridSize();\r\n                        }\r\n\r\n                        if(params.onClickGroup && typeof(params.onClickGroup) === \"function\"){\r\n                            params.onClickGroup.call(this, hid, collapsed);\r\n                        }\r\n                    },\r\n                    // 设置图标\r\n                    styleUI: self.defaults.styleUI,\r\n                    // {Function} 分页回调方法\r\n                    onPaging: function(pgButton, _this){\r\n                        // 自定义跳转\r\n                        if(pgButton == \"user\"){\r\n                            // var jumpPageNumber = ui.parseInt($(_this).val(), 1);\r\n                            // var totalPageNumber = ui.parseInt($(\"#sp_1_\" + params.gridPageId).text(), 1);\r\n                            // var total = $selector.jqGrid(\"getGridParam\", \"total\");\r\n                            // console.error(jumpPageNumber);\r\n                            // console.error(totalPageNumber);\r\n                            var jumpPageNumber = ui.parseInt($(_this).val().replace(/[^0-9]/ig, \"\"), 1);\r\n                            // var totalPageNumber = ui.parseInt($(\"#sp_1_\" + params.gridPageId).text().replace(/[^0-9]/ig, \"\"), 1);\r\n                            var totalPageNumber = this.p.lastpage;\r\n                            if(jumpPageNumber > totalPageNumber){\r\n                                ui.notice(params.defaultText.overPageNumberText.replace(\"{0}\", totalPageNumber));\r\n                                $(_this).val(totalPageNumber);\r\n                            }\r\n                        }\r\n                        \r\n                        var isContinue = true;\r\n                        if(params.onBeforePage && typeof(params.onBeforePage) === \"function\"){\r\n                            isContinue = params.onBeforePage.call(this, pgButton, _this);\r\n                        }\r\n\r\n                        if(self.listeners.indexOf('beforePage') > -1) {\r\n                            if(self.emit({type:'beforePage', target: _target, _this: _this, pgButton: pgButton}) === false) return \"stop\";\r\n                        }\r\n\r\n                        if(isContinue === false){\r\n                            return \"stop\";\r\n                        }\r\n                        // return \"stop\";\r\n                    },\r\n                    // 当从服务器返回响应时执行,data：XMLHttpRequest 对象\r\n                    loadComplete : function(data) {  // 加载数据完成回调函数\r\n                        self.loadData = data[params.jsonReader.root];\r\n\r\n                        // console.error(data)\r\n                        if(!self.isLocalData()){\r\n                            if (!data[params.jsonReader.records]) { // 没数据\r\n\r\n                                var num = $selector.jqGrid('getGridParam', 'colModel').length;\r\n\r\n                                var html = \"<tr class='jqgird-no-text'>\"\r\n                                             + \"<td colspan ='\" + num + \" '>\" + params.defaultText.emptyrowstext + \"</td>\"\r\n                                         + \"</tr>\";\r\n\r\n                                if($selector.children(\"tbody\") && $selector.children(\"tbody\").length > 1){\r\n                                    $selector.children(\"tbody\").append(html);\r\n                                }else{\r\n                                    $selector.append(html);\r\n                                }\r\n\r\n                            } else {\r\n                                $selector.find('.jqgird-no-text').remove();\r\n                            }\r\n                        }\r\n                            \r\n\r\n                        // 执行绑定事件\r\n                        if(params.onLoadComplete && typeof(params.onLoadComplete) == \"function\"){\r\n                            return params.onLoadComplete.call(this, data);\r\n                        }\r\n                    },\r\n                    // 如果请求服务器失败则调用此方法。xhr：XMLHttpRequest 对象；satus：错误类型,字符串类型；error：exception对象\r\n                    // loadError: function(xhr,status,error){\r\n\r\n                    // },\r\n                    // 构建完成回调函数\r\n                    gridComplete : function() {\r\n                        \r\n                        $(\"#\" + params.gridPageId + \"_left\").width(params.pageBarSetting.leftCellWidth);\r\n                        $(\"#\" + params.gridPageId + \"_center\").width(params.pageBarSetting.centerCellWidth);\r\n                        $(\"#\" + params.gridPageId + \"_right\").width(params.pageBarSetting.rightCellWidth);\r\n\r\n                        if(self.isLocalData()){\r\n                            if(self.isNoneData()){ // 没数据\r\n                                var num = $selector.jqGrid('getGridParam', 'colModel').length;\r\n\r\n                                var html = \"<tr class='jqgird-no-text'>\"\r\n                                             + \"<td colspan ='\" + num + \" '>\" + params.defaultText.emptyrowstext + \"</td>\"\r\n                                         + \"</tr>\";\r\n\r\n                                if($selector.children(\"tbody\") && $selector.children(\"tbody\").length > 1){\r\n                                    $selector.children(\"tbody\").append(html);\r\n                                }else{\r\n                                    $selector.append(html);\r\n                                }\r\n                            }else{\r\n                                $selector.find('.jqgird-no-text').remove();\r\n                            }\r\n                        }\r\n                            \r\n\r\n                        // 配置单选按钮\r\n                        if(params.maxNumber == 1){\r\n                            // 隐藏多选框\r\n                            $selector.jqGrid('hideCol','cb');\r\n                            // alert(1)\r\n                            var radios = self.container.find('[name=\"' + self._opt.singleColSetting.name + '\"]');\r\n                            radios.each(function(i, radio){\r\n                                // $(radio).on(\"change\", function(){\r\n                                //     ui.dangerNotice(this.checked)\r\n                                // })\r\n                                $(radio).off(\"click\").on(\"click\", function(e){\r\n                                    e.stopPropagation();\r\n                                    // 获取当前行key\r\n                                    var rowid = $(this).val();\r\n\r\n                                    // 清除原先旧的数据\r\n                                    // 获取当前选择的行数据\r\n                                    var selectedIDs = $selector.getGridParam(\"selarrrow\");\r\n\r\n                                    var check = $(this).attr(\"data-mutex-check\");\r\n                                    // ui.errorNotice(check)\r\n                                    if (check == \"true\") {\r\n                                        // 手动触发选中之前的事件\r\n                                        if(params.onBeforeSelectedRow && typeof(params.onBeforeSelectedRow) == \"function\"){\r\n                                            params.onBeforeSelectedRow.call(this, rowid, e);\r\n                                        }\r\n\r\n                                        if(self.listeners.indexOf('beforeSelectedRow') > -1) {\r\n                                            if(!self.emit({type:'beforeSelectedRow',target: _target, rowid: rowid})) return false;\r\n                                        }\r\n\r\n                                        $.each(selectedIDs, function(i, selectedId){\r\n                                            $selector.jqGrid(\"setSelection\", selectedId, true);\r\n                                        })\r\n                                        $(this).prop(\"checked\", false).change();\r\n                                        $(this).attr(\"data-mutex-check\", \"false\");\r\n                                    } else {\r\n                                        // 反选已选的行数据,并触发行选中事件\r\n                                        $.each(selectedIDs, function(i, selectedId){\r\n                                            $selector.jqGrid(\"setSelection\", selectedId, true);\r\n                                        })\r\n\r\n                                        //找到已经选择的项目,当其中一个click时, 标记click之前选中项属性为false.当前click项属性true\r\n                                        radios.each(function(){\r\n\r\n                                            if ($(this).attr(\"data-mutex-check\") == 'true') {\r\n\r\n                                                $(this).attr(\"data-mutex-check\", \"false\").change();\r\n                                            }                            \r\n                                        });\r\n\r\n                                        // 手动触发选中之前的事件\r\n                                        if(params.onBeforeSelectedRow && typeof(params.onBeforeSelectedRow) == \"function\"){\r\n                                            params.onBeforeSelectedRow.call(this, rowid, e);\r\n                                        }\r\n\r\n                                        if(self.listeners.indexOf('beforeSelectedRow') > -1) {\r\n                                            if(!self.emit({type:'beforeSelectedRow',target: _target, rowid: rowid})) return false;\r\n                                        }\r\n\r\n                                        // 选中当前行\r\n                                        $selector.jqGrid(\"setSelection\", rowid);\r\n\r\n                                        $(this).attr(\"data-mutex-check\", \"true\");\r\n                                    }\r\n\r\n\r\n                                    // var selectedIDs = $selector.getGridParam(\"selarrrow\");\r\n                                    // var rowid = $(this).val();\r\n                                    // var rowData = self.getRowDataById(rowid, true);\r\n                                    // // alert(rowid)\r\n                                    // if(params.onBeforeSelectedRow && typeof(params.onBeforeSelectedRow) == \"function\"){\r\n                                    //     params.onBeforeSelectedRow.call(this, rowid, e);\r\n                                    // }\r\n\r\n                                    // if(self.listeners.indexOf('beforeSelectedRow') > -1) {\r\n                                    //     if(!self.emit({type:'beforeSelectedRow',target: _target, rowid: rowid})) return false;\r\n                                    // }\r\n                                    \r\n                                    // $.each(selectedIDs, function(i, selectedId){\r\n                                    //     $selector.jqGrid(\"setSelection\", selectedId, true);\r\n                                    // })\r\n\r\n                                    // $selector.jqGrid(\"setSelection\", rowid);\r\n                                });\r\n                            })\r\n                        }\r\n\r\n                        if(params.maxNumber !== false && params.isShowCheckBox){\r\n                            // 禁用全选按钮\r\n                            // var keyName = selectorId + \"_cb\";  // 获取关键字段名\r\n                            if(!params.isEnableSelectAll){\r\n                                var keyName = \"cb_\" + selectorId;  // 获取关键字段名\r\n                                $('#' + keyName).attr(\"disabled\", true);\r\n                            } \r\n                        }\r\n\r\n                        // 给序号列添加标题\r\n                        if(params.isShowRowNumbers){\r\n                            $selector.jqGrid('setLabel','rn', params.rowNumbersTitle, {'text-align':'center'},'');\r\n                        }\r\n\r\n                        if(!ui.isEmptyType(self.defaults.mergerRowsField)){\r\n                            // mergerRows(self, self.defaults.mergerRowsField)\r\n                            self.mergerRows(self.defaults.mergerRowsField);\r\n                        }\r\n                        \r\n                        if(params.isFullScreen){\r\n                            // console.error(\"123\")\r\n                            self._setGridFullScreen();\r\n                            ui.onresize(function(w, h){\r\n                                self._setGridFullScreen();\r\n                            });\r\n                        }else{\r\n                            self._setGridSize();\r\n                            ui.onresize(function(w, h){\r\n                                self._setGridSize();\r\n                            });\r\n                        }\r\n                        self._gridplueFrozen();// 修复高度不对齐\r\n\r\n                        // 操作列设置特定样式\r\n                        $selector.find(\".grid-opt\").each(function(i, elem){\r\n                            $(this).parent().css(\"overflow\", \"visible\");\r\n                            $(this).parent().attr(\"title\", \"操作列\");\r\n                        })\r\n                        self.status = \"complete\";\r\n                        \r\n                        // 执行绑定事件\r\n                        if(params.onGridComplete && typeof(params.onGridComplete) == \"function\"){\r\n                            params.onGridComplete.call(this);\r\n                        }else if(params.gridComplete && typeof(params.gridComplete) == \"function\"){\r\n                            params.gridComplete.call(this);\r\n                        }\r\n\r\n                        if(self.listeners.indexOf('gridComplete') > -1) {\r\n                            if(!self.emit({type:'gridComplete', target: _target})) return ;\r\n                        }\r\n                        // console.info($selector.jqGrid(\"getGridParam\", \"postData\"));\r\n                    },\r\n                    // 全选回调方法\r\n                    onSelectAll: function(aRowids,status){\r\n                        var rowsData = [];\r\n                        // console.info(aRowids);\r\n\r\n                        for(var i = 0; i < aRowids.length; i++){\r\n                            var rowData = self.getRowDataById(aRowids[i], true);\r\n                            // var rowData = $selector.jqGrid(\"getRowData\", aRowids[i], true);\r\n                            rowsData.push(rowData);\r\n                        }\r\n\r\n                        if(params.onSelectedAll && typeof(params.onSelectedAll) == \"function\"){\r\n                            params.onSelectedAll.call(this, aRowids, rowsData, status);\r\n                        }\r\n\r\n                        if(self.listeners.indexOf('selectedAll') > -1) {\r\n                            if(!self.emit({type:'selectedAll',target: _target, aRowids: aRowids, rows: rowsData, status: status})) return ;\r\n                        }else if(self.listeners.indexOf('onSelectedAll') > -1) {\r\n                            if(!self.emit({type:'onSelectedAll',target: _target, aRowids: aRowids, rows: rowsData, status: status})) return ;\r\n                        }\r\n                    },\r\n                    // 当用户点击当前行在未选择此行时触发。rowid：此行id；e：事件对象。返回值为ture或者false。如果返回true则选择完成,如果返回false则不会选择此行也不会触发其他事件\r\n                    beforeSelectRow: function (rowid, e) {\r\n                        var isContinue = self.onBeforeSelectedRow(rowid, e, this);\r\n                        return isContinue;\r\n                    },\r\n                    onSelectRow: function(rowid, status){\r\n                        self.onSelectedRow(rowid, status);\r\n                    },\r\n                    // 当插入每行时触发。rowid插入当前行的id；rowdata插入行的数据,格式为name: value,name为colModel中的名字\r\n                    afterInsertRow: function(rowid, rowData){\r\n                        // console.info(\"插入行\" + rowid);\r\n                    },\r\n                    // 向服务器端发起请求之前触发此事件但如果datatype是一个function时例外\r\n                    beforeRequest: function(ts){\r\n                        // console.info(\"beforeRequest\");\r\n                        if(self.status == \"init\"){\r\n                            var colFilters = self.getSearchFiltersData();\r\n                            // console.info(colFilters);\r\n                            var ruleGroup = self._buildFilters(colFilters);\r\n                            // console.info(ruleGroup);\r\n                            var postData = $selector.jqGrid(\"getGridParam\", \"postData\");\r\n                            // console.info(postData);\r\n                            if(!ui.isEmptyType(ruleGroup)){\r\n                                if(postData){\r\n                                    // 如果在初始化时通过otherParam传递了filters字段,则合并解析\r\n                                    if(postData.hasOwnProperty(\"filters\")){\r\n                                        if(typeof(postData.filters) === \"string\"){\r\n                                            var ruleTemp1 = ui.parseToObj(postData.filters),\r\n                                                ruleTemp2 = ui.parseToObj(ruleGroup);\r\n                                            // console.info(ruleTemp1);\r\n                                            // console.info(ruleTemp2);\r\n                                            if(ruleTemp1){\r\n                                                ruleGroup = JSON.stringify($.extend(true, {}, ruleTemp2, ruleTemp1));\r\n                                            }\r\n                                            // console.info(ruleGroup);\r\n                                        }\r\n                                    }\r\n                                }else{\r\n                                    postData = {};\r\n                                }\r\n                                    \r\n                                postData.filters = ruleGroup;\r\n                                $selector.jqGrid(\"setGridParam\", {\r\n                                    \"postData\": postData\r\n                                });\r\n                            }\r\n                        }\r\n                    },\r\n                    // 树节点展开之前触发:两个参数id:当前行id, rc:当前行数据\r\n                    beforeExpandTreeGridNode: function(rowid, rc){\r\n                        // console.info(\"beforeExpandTreeGridNode\");\r\n\r\n                        // console.info(rowid);\r\n                        // console.info(rc);\r\n                        \r\n                        var isLazy = params.treeReader.lazy_field,\r\n                            lazyField = params.lazySetting.lazyField;\r\n\r\n                        if(typeof(rc[isLazy]) === \"boolean\" && rc[isLazy] == true){\r\n                            // 首次点击展开，懒加载\r\n                            // self._onLazyLoad();\r\n                        }\r\n                        \r\n                        if(params.onBeforeExpandTreeGridNode && typeof(params.onBeforeExpandTreeGridNode) == \"function\"){\r\n                            params.onBeforeExpandTreeGridNode.call(this, rowid, rc);\r\n                        }\r\n                        if(self.listeners.indexOf('beforeExpandTreeGridNode') > -1) {\r\n                            if(!self.emit({type:'beforeExpandTreeGridNode',target: _target, rowid: rowid, row: rc})) return ;\r\n                        }\r\n                    },\r\n                    // 树节点展开之后触发:两个参数id:当前行id, rc:当前行数据\r\n                    afterExpandTreeGridNode: function(rowid, rc){\r\n                        // console.info(\"afterExpandTreeGridNode\");\r\n                        // console.info(rowid);\r\n                        // console.info(rc);\r\n                        if(params.isFullScreen){\r\n                            self._setGridFullScreen();\r\n                        }else{\r\n                            self._setGridSize();\r\n                        }\r\n                        if(params.onAfterExpandTreeGridNode && typeof(params.onAfterExpandTreeGridNode) == \"function\"){\r\n                            params.onAfterExpandTreeGridNode.call(this, rowid, rc);\r\n                        }\r\n                        if(self.listeners.indexOf('afterExpandTreeGridNode') > -1) {\r\n                            if(!self.emit({type:'afterExpandTreeGridNode',target: _target, rowid: rowid, row: rc})) return ;\r\n                        }\r\n                    },\r\n                    // 树节点收缩之前触发:两个参数id:当前行id, rc:当前行数据\r\n                    beforeCollapseTreeGridNode: function(rowid, rc){\r\n                        // console.info(\"beforeCollapseTreeGridNode\");\r\n                        // console.info(rowid);\r\n                        // console.info(rc);\r\n                        if(params.onBeforeCollapseTreeGridNode && typeof(params.onBeforeCollapseTreeGridNode) == \"function\"){\r\n                            params.onBeforeCollapseTreeGridNode.call(this, rowid, rc);\r\n                        }\r\n                        if(self.listeners.indexOf('beforeCollapseTreeGridNode') > -1) {\r\n                            if(!self.emit({type:'beforeCollapseTreeGridNode',target: _target, rowid: rowid, row: rc})) return ;\r\n                        }\r\n                    },\r\n                    // 树节点收缩之后触发:两个参数id:当前行id, rc:当前行数据\r\n                    afterCollapseTreeGridNode: function(rowid, rc){\r\n                        // console.info(\"afterCollapseTreeGridNode\");\r\n                        // console.info(rowid);\r\n                        // console.info(rc);\r\n                        if(params.isFullScreen){\r\n                            self._setGridFullScreen();\r\n                        }else{\r\n                            self._setGridSize();\r\n                        }\r\n                        if(params.onAfterCollapseTreeGridNode && typeof(params.onAfterCollapseTreeGridNode) == \"function\"){\r\n                            params.onAfterCollapseTreeGridNode.call(this, rowid, rc);\r\n                        }\r\n                        if(self.listeners.indexOf('afterCollapseTreeGridNode') > -1) {\r\n                            if(!self.emit({type:'afterCollapseTreeGridNode',target: _target, rowid: rowid, row: rc})) return ;\r\n                        }\r\n                    },\r\n                    resizeStart: function(event, index){\r\n\r\n                        if(params.onResizeStart && typeof(params.onResizeStart) === \"function\"){\r\n                            params.onResizeStart.call(this, event, index);\r\n                        }\r\n                    },\r\n                    resizeStop: function(){\r\n                        if(params.isFullScreen){\r\n                            // console.error(\"123\")\r\n                            self._setGridFullScreen();\r\n                        }else{\r\n                            self._setGridSize();\r\n                        }\r\n                        if(params.onResizeStop && typeof(params.onResizeStop) === \"function\"){\r\n                            params.onResizeStop.call(this, newwidth, index);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if(params.formatParams){\r\n                    if(typeof(params.formatParams) === \"object\"){\r\n                        $.extend(true, theGridParams, params.formatParams);\r\n                    }else if(typeof(params.formatParams) === \"function\"){\r\n                        var returnParams = params.formatParams(theGridParams);\r\n                        if(typeof(returnParams) === \"object\"){\r\n                            $.extend(true, theGridParams, returnParams);\r\n                        }\r\n                    }\r\n                }\r\n                ui.logParamValue({\r\n                    paramName: \"options\",\r\n                    paramValue: theGridParams,\r\n                    methodName: \"_initGrid\",\r\n                    className: \"wui.grid\",\r\n                    isDebug: true\r\n                });\r\n\t        \t// 初始化jqGrid\r\n\t        \tself._grid = $selector.jqGrid(theGridParams);\r\n\r\n                if(params.isShowPageBar){\r\n                    $selector.navGrid(\"#\" + params.gridPageId, {\r\n                        search : true, // 高级查询\r\n                        add : false,\r\n                        edit : false,\r\n                        del : false,\r\n                        refresh : true // 刷新grid\r\n                    },{// edit options\r\n                    },{// add options\r\n                    },{// delete options\r\n                    },{\r\n                        multipleSearch : true // 多查询\r\n                    });\r\n                }\r\n\r\n\t        \t// console.info(this._grid);\r\n\t\t\t\t// 激活冻结列\r\n\t\t\t\t// $selector.jqGrid(\"setFrozenColumns\").trigger(\"reloadGrid\");\r\n\t\t\t\t// $selector.jqGrid('setFrozenColumns').triggerHandler(\"jqGridAfterGridComplete\");\r\n\r\n\t\t\t\t// // 激活过滤工具栏查询\r\n\t\t\t\t// $selector.jqGrid('filterToolbar', {\r\n\t\t\t\t// \t//stringResult : true,\r\n\t\t\t\t// \tsearchOnEnter: true,\r\n\t\t\t\t// \tsearchOperators:true\r\n\t\t\t\t// });\r\n\t\t\t\t// self.showFilterSearch();\r\n\t\t\t\t// self.buildToolbar();\r\n\t\t\t\t// self.buildSearchBar();\r\n\r\n                if(!!params.caption){\r\n                    self.container.prepend('<div class=\"grid-caption\">' + \r\n                        '<h4 id=\"gridTitle\">' + params.caption + '</h4>' + \r\n                    '</div>');\r\n                }\r\n\r\n\t\t\t\t$(\"#gbox_\" + self.element).find(\".navtable\").hide();\r\n\t        },\r\n            isLocalData: function(){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n\r\n                if($selector.jqGrid('getGridParam', 'datatype') == 'local' || $selector.jqGrid('getGridParam', 'treedatatype') == 'local'){\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            isNoneData: function(){\r\n                // var rows = this.$element.jqGrid('getRowData');\r\n                var rows = this.getRowData();\r\n                // console.error(rows)\r\n                return (rows && rows.length) > 0 ? false : true;\r\n            },\r\n            onBeforeSelectedRow: function(rowid, event, that){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var _target = self.container;\r\n\r\n                var selectedRowIds = $selector.getGridParam(\"selarrrow\");\r\n                // console.info(e);\r\n                var selectedRowNumber = selectedRowIds.length;\r\n                if(typeof(params.maxNumber) === \"number\" && $(event.toElement).prop(\"checked\") && selectedRowNumber >= params.maxNumber){\r\n                    $(event.toElement).removeAttr(\"checked\");   // 取消复选框选中状态\r\n                    if(params.onOverMaxNumber && typeof(params.onOverMaxNumber) === \"function\"){\r\n                        params.onOverMaxNumber.call(that, selectedRowIds, params.maxNumber);\r\n                    }\r\n\r\n                    if(self.listeners.indexOf('overMaxNumber') > -1) {\r\n                        if(!self.emit({type:'overMaxNumber',target: _target, selectedRowIds: selectedRowIds, maxNumber: params.maxNumber})) return false;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                if(params.onBeforeSelectedRow && typeof(params.onBeforeSelectedRow) == \"function\"){\r\n                    var isContinue = params.onBeforeSelectedRow.call(that, rowid, event);\r\n                    if(isContinue === false){\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if(self.listeners.indexOf('beforeSelectedRow') > -1) {\r\n                    if(!self.emit({type:'beforeSelectedRow',target: _target, rowid: rowid})) return false;\r\n                }\r\n\r\n                if(!rowid || params.maxNumber !== false || !params.isClickRow){\r\n                    var $myGrid = $(that),\r\n                        i = $.jgrid.getCellIndex($(event.target).closest('td')[0]),\r\n                        cm = $myGrid.jqGrid('getGridParam', 'colModel');\r\n                    return (cm[i].name === 'cb');\r\n                }\r\n                return true;\r\n            },\r\n            onSelectedRow: function(rowid, status){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var _target = self.container;\r\n\r\n                var rowData = self.getRowDataById(rowid, true);\r\n\r\n                if(status){\r\n                    if(self.listeners.indexOf('selected') > -1) {\r\n                        if(!self.emit({type:'selected',target: _target, rowid: rowid, row: rowData, status: status})) return ;\r\n                    }\r\n                }else{\r\n                    if(self.listeners.indexOf('unselected') > -1) {\r\n                        if(!self.emit({type:'unselected',target: _target, rowid: rowid, row: rowData, status: status})) return ;\r\n                    }\r\n                }\r\n\r\n                if(params.onSelectedRow && typeof(params.onSelectedRow) == \"function\"){\r\n                    params.onSelectedRow.call(this, rowid, rowData, status);\r\n                }\r\n                // ui.notice(status)\r\n                if(self.listeners.indexOf('selectedRow') > -1) {\r\n                    if(!self.emit({type:'selectedRow',target: _target, rowid: rowid, row: rowData, status: status})) return ;\r\n                }else if(self.listeners.indexOf('onSelectedRow') > -1) {\r\n                    if(!self.emit({type:'onSelectedRow',target: _target, rowid: rowid, row: rowData, status: status})) return ;\r\n                }\r\n            },\r\n            _onLazyLoad: function(rowid, row){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var lazySetting = params.lazySetting;\r\n                // var lazyParam = $.extend(true, {}, params, lazySetting);\r\n\r\n                var url = !lazySetting.url ? params.url : lazySetting.url,\r\n                    mtype = !lazySetting.mtype ? params.mtype : lazySetting.mtype,\r\n                    dataType = !lazySetting.dataType ? params.dataType : lazySetting.dataType\r\n\r\n\r\n                var lazyData = lazySetting.otherParam;\r\n                if(lazyData){\r\n                    lazyData[params.lazySetting.lazyField] = rowid;\r\n                }else{\r\n                    lazyData = {}\r\n                    lazyData[params.lazySetting.lazyField] = rowid;\r\n                }\r\n                \r\n                ui.ajax({\r\n                    url: url, \r\n                    data: lazyData, \r\n                    async: true,\r\n                    dataType: dataType, \r\n                    method: mtype,\r\n                    contentType: lazySetting.contentType,\r\n                    onSuccess: function(res){\r\n                        ui.logMessage(res, \"wui.grid._onLazyLoad\", true);\r\n                        var rootField = jsonReader.root;\r\n                        var lazyRes = [];\r\n                        if(ui.isArray(res)){\r\n                            lazyRes = res;\r\n                        }else if(ui.isJson(res)){\r\n                            if(typeof(res[rootField]) === \"undefined\"){\r\n                                lazyRes.push(res);\r\n                            }else{\r\n                                lazyRes = res[rootField];\r\n                            }\r\n                        }\r\n\r\n                        for(var i = 0; i < lazyRes.length; i++){\r\n                            $selector.jqGrid(\"addChildNode\", nodeid, rowid, data, expandData );\r\n                        }\r\n                    }, \r\n                    onError: function(res){\r\n                        ui.logError(res);\r\n                    }\r\n                })\r\n            },\r\n            /*\r\n             * 合并行\r\n             * @param  {String} cellName 合并行字段名,多个用逗号分隔\r\n             * @return {[type]}          [description]\r\n             */\r\n            mergerRows: function(cellName){\r\n                var self = this;\r\n                //得到显示到界面的id集合\r\n                var mya = self.$element.getDataIDs();\r\n                //当前显示多少条\r\n                var length = mya.length;\r\n                var cellNames;\r\n                if(ui.isEmptyType(cellName)){\r\n                    return false;\r\n                }else if(typeof(cellName) === \"string\"){\r\n                    cellNames = cellName.split(\",\");\r\n                }else{\r\n                    cellNames = cellName;\r\n                }  \r\n                    // 合并行数目\r\n                var mergerRowsObject = {},\r\n                    // 合并行开始行数\r\n                    mergerRowsStart = {};\r\n                for (var i = 0; i < cellNames.length; i++){\r\n                    mergerRowsObject[cellNames[i]] = 1;\r\n                    mergerRowsStart[cellNames[i]] = 0;\r\n                }\r\n\r\n                for (var i = 0; i < length; i++) {\r\n                    //从上到下获取当前行和下一行数据\r\n                    var before = self.$element.jqGrid('getRowData', mya[i]),\r\n                        end = self.$element.jqGrid('getRowData', mya[i+1]);\r\n\r\n                    // 和上边的信息对比 如果值一样就合并行数+1 然后设置rowspan 让当前单元格隐藏\r\n                    for (var n = 0; n < cellNames.length; n++) {\r\n                        var theCellName = cellNames[n];\r\n                        if (before[theCellName] == end[theCellName] ) {\r\n                            mergerRowsObject[theCellName]++;\r\n                            self.$element.setCell(mya[i+1], theCellName, '', { display: 'none' });\r\n                        } else {\r\n                            mergerRowsObject[theCellName] = 1;\r\n                            mergerRowsStart[theCellName] = i+1;\r\n                            continue;\r\n                        }\r\n                        $(\"#\" + theCellName + mya[mergerRowsStart[theCellName]]).attr(\"rowspan\", mergerRowsObject[theCellName]);//最后合并需要合并的行与合并的行数\r\n                    }\r\n                }\r\n            },\r\n            scroll: function(){\r\n                var self = this, element = this.element;\r\n                if(this.oNiceScroll){\r\n                    // console.error(this.oNiceScroll)\r\n                    // this.oNiceScroll.resize();\r\n                }else{\r\n                    this.oNiceScroll = ui.scroll($(\"#gview_\" + element).children(\".ui-jqgrid-bdiv\").eq(0));\r\n                }\r\n            },\r\n\t        _setGridSize: function(){\r\n\t        \t// console.info(this);\r\n\t        \tvar self = this, element = this.element, $selector = this.$element, \r\n\t        \t\trowHeight = 40, rowNum = 10, tbodyHei = 0, gridHeight = 0, gridWidth = 0;\r\n\r\n                // console.info($selector.find(\".jqgird-no-text\").get(0))\r\n                if(this._opt.height == \"auto\"){\r\n                    if(self._opt.grouping){\r\n                        self.scroll();\r\n                        // ui.scroll($(\"#gview_\" + element).children(\".ui-jqgrid-bdiv\").eq(0));\r\n                        return;\r\n                    }else{\r\n                        var theRows = $selector.children('tbody').children('.jqgrow');  // 获取第一行高度\r\n                        \r\n                        theRows.each(function(i, elem){\r\n                            tbodyHei += elem.offsetHeight;\r\n                        });\r\n\r\n                        if(theRows.length > 0 && tbodyHei == 0){\r\n                            rowNum = $selector.jqGrid(\"getGridParam\", \"rowNum\");    // 获取关键字段名\r\n                            tbodyHei = parseInt(rowNum) * rowHeight;    // 表格主体所需高度\r\n                        }\r\n                        // console.error(tbodyHei);\r\n                        if(tbodyHei == 0){\r\n                            tbodyHei = rowHeight;\r\n                        }\r\n\r\n                        // 做判断:是否下方有滚动条\r\n                        var obj = $(\"#gview_\" + element).children(\".ui-jqgrid-bdiv\").get(0);    // ui-jqgrid-bdiv\r\n                        \r\n                        if(obj){\r\n                            var scrollHeight = obj.scrollHeight,    // 内容实际高度(滚动条高度)\r\n                                clientHeight = obj.clientHeight,    // 内容高度+padding高度\r\n                                offsetHeight = obj.offsetHeight;    // 内容高度+padding高度+边框宽度：\r\n\r\n                            var horizontalScrollbarHeight = offsetHeight-clientHeight;  // 水平滚动条高度\r\n\r\n                            gridHeight = tbodyHei + horizontalScrollbarHeight + 2;\r\n                        }else{\r\n                            gridHeight = tbodyHei + 2;\r\n                        } \r\n                    }\r\n                        \r\n                }else{\r\n                    gridHeight = this._opt.height;\r\n                }\r\n\r\n                if(this._opt.width == \"auto\"){\r\n                    // console.info(\"auto width\");\r\n                    gridWidth = $selector.parent().width();\r\n                }else{\r\n                    // console.info(\"param width\");\r\n                    gridWidth = this._opt.width;\r\n                }\r\n\r\n                $selector.width(gridWidth);\r\n                $(\"#gbox_\" + element).find(\"table.ui-jqgrid-htable\").eq(0).width(gridWidth);\r\n                self.$element.width(gridWidth);\r\n                // console.error(gridWidth);\r\n                this.$element\r\n                    .jqGrid('setGridWidth', gridWidth)\r\n                    .jqGrid('setGridHeight', gridHeight);\r\n\r\n                self.scroll();\r\n                // ui.scroll($(\"#gview_\" + element).children(\".ui-jqgrid-bdiv\").eq(0));\r\n\t        },\r\n\t\t\t_setGridFullScreen: function() {\r\n\t\t\t\tvar self = this, element = this.element, offset = this._opt.offset;\r\n\r\n\t\t\t\tvar obj = $(\"#gview_\" + element).children(\".ui-jqgrid-bdiv\");    // ui-jqgrid-bdiv\r\n                // console.error(obj)\r\n                if(obj.length > 0){\r\n                    var fullScreenSize = ui.getFullScreenSize(obj.eq(0));\r\n                    // console.info(fullScreenSize);\r\n                    if(fullScreenSize){\r\n                        // console.error(fullScreenSize);\r\n                        var pageHeight = 0;\r\n                        self.container.find(\".ui-jqgrid-pager\").each(function(i, elem){\r\n                            pageHeight += $(elem).outerHeight(true);\r\n                        })\r\n                        // console.error(pageHeight);\r\n                        var offssetHeight = 0;\r\n                        // console.error(offset);\r\n                        if(ui.isJson(offset)){\r\n                            offssetHeight = parseFloat(offset.top) + parseFloat(offset.bottom);\r\n                        }else{\r\n                            offssetHeight = parseFloat(offset);\r\n                        }\r\n                        // console.error(offssetHeight);\r\n                        // console.error(fullScreenSize.height);\r\n                        // console.error(pageHeight);\r\n                        var gridHeight = fullScreenSize.height - pageHeight - offssetHeight;\r\n                        var gridWidth = fullScreenSize.width - parseInt(offset.left) - parseInt(offset.right);\r\n                        // console.info(\"fullScreenSize\");\r\n                        // console.error(gridHeight);\r\n                        this.$element\r\n                            .jqGrid('setGridWidth', gridWidth)\r\n                            .jqGrid('setGridHeight', gridHeight); // ss.WinH-100\r\n\r\n                        self.scroll();\r\n                    }\r\n                }\r\n                \r\n\r\n\t\t\t\t$(\"#gview_\" + element).find(\".ui-jqgrid-htable\").eq(0).width(\"100%\");\r\n\t\t\t\tself.$element.width(\"100%\");\r\n\t\t\t},\r\n\t        // 构建工具栏\r\n\t        buildToolbar: function(){\r\n\t        \tvar self = this, params = this._opt, $selector = this.$element, gridTableId = self.element, btnTemplate = self.btnTemplate;\r\n\t        \tvar toolBarSetting = params.toolBarSetting, maxShowNumber = toolBarSetting.maxShowNumber, toolbarBtnIndex = 0;\r\n\t        \t\r\n\t        \tif(!$(params.gridToolbar).exist()){\r\n\t        \t\t// ui.logMessage(\"不存在传递的工具栏对象\");\r\n\t        \t\treturn false;\r\n\t        \t}\r\n\r\n                $(params.gridToolbar).addClass(\"clearfix\");\r\n\r\n\t\t\t\t// 新增筛选按钮\r\n\t\t\t\tif(params.btnScreen == true){\r\n\t\t\t\t\tvar id = gridTableId + \"-\" + \"btnScreen\";\r\n\t\t\t\t\tvar text = toolBarSetting.btnScreenText;\r\n\r\n                    // var template = \"<div id='{0}' class='btn-group'><button class='wui-btn wui-btn-default dropdown-toggle' data-toggle='dropdown'>{1} <i class='fa fa-angle-down'></i></button></div>\";\r\n\t\t\t\t\tvar template = \"<div id='{0}' class='btn-group'><button class='wui-btn wui-btn-default dropdown-toggle' data-toggle='dropdown'>{1}</button></div>\";\r\n\t\t\t\t\tvar btn = template.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t$(params.gridToolbar).append(btn);\r\n\t\t\t\t\ttoolbarBtnIndex++;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 给按钮添加点击事件\r\n\t\t\t\t\t$(\"#\" + id).click(function (){\r\n\t\t\t\t\t\tself._screenGrid($(this));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t        \tvar toolbarDdMenu = $('<ul class=\"dropdown-menu\"></ul>'),\r\n\t        \t\ttoolbarBtnGroup = $('<div class=\"btn-group\">'\r\n\t        \t\t\t\t+'<button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">更多操作 ' \r\n\t        \t\t\t\t+ '<span class=\"caret\"></span></button></div>').append(toolbarDdMenu);\r\n\t   \r\n\t\t\t\t// 添加按钮下拉组\r\n\t\t\t\t// $(params.gridToolbar).append(toolbarBtnGroup);\r\n\r\n\t        \t// 新增刷新按钮\r\n\t\t\t\tif(params.btnReset == true){\r\n\t\t\t\t\tvar id = gridTableId + \"-\" + \"btnReset\";\r\n\t\t\t\t\tvar text = toolBarSetting.btnResetText;\r\n\t\t\t\t\tif(toolbarBtnIndex == maxShowNumber){\r\n\t\t\t\t\t\t// 添加按钮下拉组\r\n\t\t\t\t\t\t$(params.gridToolbar).append(toolbarBtnGroup);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(toolbarBtnIndex >= maxShowNumber){\r\n\t\t\t\t\t\tbtnTemplate = self.btnDdTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加到下拉菜单\r\n\t\t\t\t\t\ttoolbarDdMenu.append(btn);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbtnTemplate = self.btnTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t\t$(params.gridToolbar).append(btn);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t// $(params.gridToolbar).append(btn);\r\n\t\t\t\t\ttoolbarBtnIndex++;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 给按钮添加点击事件\r\n\t\t\t\t\t$(\"#\" + id).click(function (){\r\n\t\t\t\t\t\tself.resetGrid();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 新增显示过滤栏按钮\r\n\t\t\t\t// if(!(params.isShowSearchBar) && params.btnShowFilter){\r\n                if(params.btnShowFilter){\r\n                    // // 激活过滤工具栏查询\r\n                    // $selector.jqGrid('filterToolbar', {\r\n                    //     //stringResult : true,\r\n                    //     searchOnEnter: true,\r\n                    //     searchOperators:true\r\n                    // });\r\n                    // self.showFilterSearch();\r\n\r\n\t\t\t\t\tvar id = gridTableId + \"-\" + \"btnShowFilter\";\r\n\t\t\t\t\tvar text = toolBarSetting.btnShowFilterText;\r\n\t\t\t\t\tif(toolbarBtnIndex == maxShowNumber){\r\n\t\t\t\t\t\t// 添加按钮下拉组\r\n\t\t\t\t\t\t$(params.gridToolbar).append(toolbarBtnGroup);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(toolbarBtnIndex >= maxShowNumber){\r\n\t\t\t\t\t\tbtnTemplate = self.btnDdTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加到下拉菜单\r\n\t\t\t\t\t\ttoolbarDdMenu.append(btn);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbtnTemplate = self.btnTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t\t$(params.gridToolbar).append(btn);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t// $(params.gridToolbar).append(btn);\r\n\t\t\t\t\ttoolbarBtnIndex++;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 给按钮添加点击事件\r\n\t\t\t\t\t$(\"#\" + id).click(function (){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tchangeShowOrHideText(this);\r\n\t\t\t\t\t\tself.showFilterSearch(gridTableId);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 新增显示高级搜索按钮\r\n\t\t\t\tif(params.btnShowSearch == true){\r\n\t\t\t\t\tvar id = gridTableId + \"-\" + \"btnShowSearch\";\r\n\t\t\t\t\tvar text = toolBarSetting.btnShowSearchText;\r\n\t\t\t\t\tif(toolbarBtnIndex == maxShowNumber){\r\n\t\t\t\t\t\t// 添加按钮下拉组\r\n\t\t\t\t\t\t$(params.gridToolbar).append(toolbarBtnGroup);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(toolbarBtnIndex >= maxShowNumber){\r\n\t\t\t\t\t\tbtnTemplate = self.btnDdTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加到下拉菜单\r\n\t\t\t\t\t\ttoolbarDdMenu.append(btn);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbtnTemplate = self.btnTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t\t$(params.gridToolbar).append(btn);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t// $(params.gridToolbar).append(btn);\r\n\t\t\t\t\ttoolbarBtnIndex++;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 给按钮添加点击事件\r\n\t\t\t\t\t$(\"#\" + id).click(function (){\r\n\t\t\t\t\t\tself.showSearchGrid(gridTableId);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n                // 数据导入按钮\r\n                if(params.btnImport == true){\r\n                    var id = gridTableId + \"-\" + \"btnImport\";\r\n                    var text = toolBarSetting.btnImportText;\r\n                    if(toolbarBtnIndex == maxShowNumber){\r\n                        // 添加按钮下拉组\r\n                        $(params.gridToolbar).append(toolbarBtnGroup);\r\n                    }\r\n                    if(toolbarBtnIndex >= maxShowNumber){\r\n                        btnTemplate = self.btnDdTemplate;\r\n                        var btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n                        // 添加到下拉菜单\r\n                        toolbarDdMenu.append(btn);\r\n                    }else{\r\n                        btnTemplate = self.btnTemplate;\r\n                        var btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n                        // 添加按钮到dom树\r\n                        $(params.gridToolbar).append(btn);\r\n                    }\r\n                    // 添加按钮到dom树\r\n                    // $(params.gridToolbar).append(btn);\r\n                    toolbarBtnIndex++;\r\n                    \r\n                    // 给按钮添加点击事件\r\n                    $(\"#\" + id).click(function (){\r\n                        var importSetting = params.importSetting;\r\n                        var data = {\r\n                            // {String} 列表数据文件上传服务接口地址,默认是\"\"\r\n                            url: importSetting.fileUploadUrl\r\n                            // {String} 列表数据导入服务接口地址,默认是\"\"\r\n                            , importUrl: importSetting.importUrl\r\n                            // {JSON} 传递给选择接口的其他参数\r\n                            , otherParam: JSON.stringify(importSetting.otherParam)\r\n                            // {Number} 可选个数\r\n                            , maxNumber: importSetting.maxNumber\r\n                            // {String} 选项页页面导航标题\r\n                            , maxFilesize: importSetting.maxFilesize\r\n                            // {String} 选项页页面地址集\r\n                            , acceptedFiles: importSetting.acceptedFiles\r\n                            // {Stirng} 树结构服务地址\r\n                            , jsonReader: JSON.stringify(importSetting.jsonReader)\r\n                        }\r\n                        // console.info(data);\r\n                        var url = ui.buildUrl(importSetting.pageUrl, data);\r\n                        ui.openModalDialog(url, function(serviceData){\r\n                            if(importSetting.onSuccess && typeof(importSetting.onSuccess) === \"function\"){\r\n                                importSetting.onSuccess(serviceData);\r\n                            }else{\r\n                                self.resetGrid();\r\n                            }\r\n                        }, importSetting.pageHeight, importSetting.pageWidth, importSetting.pageTitle);\r\n                    });\r\n                }\r\n                \r\n\t\t\t\t// 新增导出按钮\r\n\t\t\t\tif(params.btnExport == true){\r\n\t\t\t\t\tvar id = gridTableId + \"-\" + \"btnExport\";\r\n\t\t\t\t\tvar text = toolBarSetting.btnExportText;\r\n\t\t\t\t\tif(toolbarBtnIndex == maxShowNumber){\r\n\t\t\t\t\t\t// 添加按钮下拉组\r\n\t\t\t\t\t\t$(params.gridToolbar).append(toolbarBtnGroup);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(toolbarBtnIndex >= maxShowNumber){\r\n\t\t\t\t\t\tbtnTemplate = self.btnDdTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加到下拉菜单\r\n\t\t\t\t\t\ttoolbarDdMenu.append(btn);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbtnTemplate = self.btnTemplate;\r\n\t\t\t\t\t\tvar btn = btnTemplate.replace(\"{0}\",id).replace(\"{1}\",text);\r\n\t\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t\t$(params.gridToolbar).append(btn);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 添加按钮到dom树\r\n\t\t\t\t\t// $(params.gridToolbar).append(btn);\r\n\t\t\t\t\ttoolbarBtnIndex++;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 给按钮添加点击事件\r\n\t\t\t\t\t$(\"#\" + id).click(function() {\r\n\t\t\t\t\t\t// _exportGrid(gridTableId, params.btnExportUrl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 执行导出\r\n\t\t\t\t\t\tvar doExport = function(exportType, selectedIds){\r\n\t\t\t\t\t\t\tvar data = {};\r\n\t\t\t\t\t\t\tdata.exportType = exportType || \"page\";\r\n\t\t\t\t\t\t\tif(selectedIds){\r\n\t\t\t\t\t\t\t\tdata.SelectedIds = selectedIds;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar url = ui.buildUrl(params.exportUrl, data);\r\n\t\t\t\t\t\t\tself.exportGrid({url: url});\r\n\t\t\t\t\t\t}\r\n                        var ids = $selector.getGridParam(\"selarrrow\");\r\n\t\t\t\t\t\t// var ids = self.getSelectedRows();\r\n\t\t\t\t\t\tswitch(params.exportSetting.defaultMode){\r\n\t\t\t\t\t\t\tcase 'all':\r\n\t\t\t\t\t\t\t\tdoExport(\"all\");\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'page':\r\n\t\t\t\t\t\t\t\tdoExport(\"page\");\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'select':\r\n\t\t\t\t\t\t\t\tif (ids.length == 0){\r\n\t\t\t\t\t\t\t\t\tself.defaults.windowModal.wui.warnNotice(\"请至少选择一条数据\");\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tdoExport(\"select\", ids);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tif (ids.length == 0) {\r\n\t\t\t\t\t\t\t\t\tself.defaults.windowModal.wui.confirm('请您确定导出方式？', {\r\n\t\t\t\t\t\t\t\t\t\ttitle : '导出确认',\r\n\t\t\t\t\t\t\t\t\t\tbtn : ['当前页', '全部', '取消']\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tdoExport(\"page\");\r\n\t\t\t\t\t\t\t\t\t\tui.closeAll('dialog');\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tdoExport(\"all\");\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tui.closeAll('dialog');\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tself.defaults.windowModal.wui.confirm('请您确定导出方式？', {\r\n\t\t\t\t\t\t\t\t\t\ttitle : '导出确认',\r\n\t\t\t\t\t\t\t\t\t\tbtn : ['所选数据', '当前页', '全部', '取消']\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tdoExport(\"select\",ids);\r\n\t\t\t\t\t\t\t\t\t\tui.closeAll('dialog');\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tdoExport(\"page\");\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tdoExport(\"all\");\r\n\t\t\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t\t\tui.closeAll('dialog');\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 替换显示/隐藏\r\n\t\t\t\tvar changeShowOrHideText = function(obj){\r\n\t\t\t\t\tvar text = $(obj).text();\r\n\t\t\t\t\tif(text.indexOf(toolBarSetting.btnFilterShowText) >= 0){\r\n\t\t\t\t\t\ttext = text.replace(toolBarSetting.btnFilterShowText,toolBarSetting.btnFilterHideText);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttext = text.replace(toolBarSetting.btnFilterHideText,toolBarSetting.btnFilterShowText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(obj).text(text);\r\n\t\t\t\t}\r\n\t        },\r\n\t        // 模拟Grid构建查询过滤条件\r\n\t        // colFilters:[\r\n\t        // \t{name:\"id\", \"stype\":\"text\", \"sopt\":\"cn\", data:\"1234-5678\"}\r\n\t        // ]\r\n\t        reloadGridByFilters: function(colFilters, groupOp) {\r\n\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n\r\n                var ruleGroup = self._buildFilters(colFilters, groupOp);         \r\n\r\n                // $selector.jqGrid(\"setGridParam\",{postData: {}})\r\n\t\t\t\tvar postData = $selector.jqGrid(\"getGridParam\", \"postData\");\r\n                // 调用setGridParam设置postdata值之前先清空表格postData属性的值\r\n                $.each(postData, function (k, v) {  \r\n                    delete postData[k];  \r\n                }); \r\n                // console.info(\"1:\", postData);\r\n                var newPostData = {\r\n                    filters: ruleGroup\r\n                };\r\n\r\n                // console.info(newPostData);\r\n                if(params.onBeforeSearchGrid && typeof(params.onBeforeSearchGrid) === \"function\"){\r\n                    var returnPostData = params.onBeforeSearchGrid.call(this.$element.get(0), newPostData);\r\n                    if(returnPostData && ui.isJson(returnPostData)){\r\n                        // console.info(returnPostData);\r\n                        newPostData = returnPostData;\r\n                    }\r\n                }\r\n                // console.info(newPostData);\r\n\r\n\t            //每次提出新的查询都转到第一页  \r\n\t            $selector.jqGrid(\"setGridParam\",{postData: newPostData, page:1}).trigger(\"reloadGrid\");\r\n\t\t\t},\r\n            /*\r\n             * 获取自定义搜索构建的filter字段值\r\n             * @param  {Array} colFilters [搜索条件]\r\n             * @param  {[type]} groupOp    [搜索关联词,默认是\"AND\"]\r\n             * @return {JSON}            [filter字段值]\r\n             */\r\n            _buildFilters: function(colFilters, groupOp){\r\n                var self = this, $selector = this.$element;\r\n                groupOp = groupOp || self._opt.groupOp;\r\n                var nm, sop, type, ruleGroup = \"{\\\"groupOp\\\":\\\"\" + groupOp + \"\\\",\\\"rules\\\":[\", gi=0, so;\r\n\r\n                $.each(colFilters,function(i, rule){\r\n                    // console.info(colFilters);\r\n                    if(typeof(rule) == \"string\"){\r\n                        // console.info(rule);\r\n                        if (gi > 0) {\r\n                            ruleGroup += \",\";\r\n                        }\r\n                        ruleGroup += rule;\r\n                        gi++;\r\n                    }else{\r\n                        nm = this.name || this.field || this.index;\r\n                        sop = this.searchoptions || {};\r\n                        // so  = p.defaultSearch ? p.defaultSearch : (sop.sopt) ? sop.sopt[0] : p.defaultSearch;\r\n                        // so = this.sopt ? this.sopt: (p.defaultSearch ? p.defaultSearch : sop.sopt[0]);\r\n                        so = (this.sopt || this.op) ? (this.sopt || this.op): (sop.sopt ? sop.sopt[0] : self.defaults.defaultSearch);\r\n                        type = this.type || 'text';\r\n                        if (this.data) {\r\n                            if (gi > 0) {ruleGroup += \",\";}\r\n                            ruleGroup += \"{\\\"field\\\":\\\"\" + nm + \"\\\",\";\r\n                            ruleGroup += \"\\\"op\\\":\\\"\" + so + \"\\\",\";\r\n                            ruleGroup += \"\\\"type\\\":\\\"\" + type + \"\\\",\";\r\n                            ruleGroup += \"\\\"data\\\":\\\"\" + this.data.replace(/\\\\/g,'\\\\\\\\').replace(/\\\"/g,'\\\\\"') + \"\\\"}\";\r\n                            gi++;\r\n                        }\r\n                    }   \r\n                });         \r\n                ruleGroup += \"]}\";\r\n                // console.info(ruleGroup);\r\n\r\n                // var postData = $selector.jqGrid(\"getGridParam\", \"postData\");\r\n                // $.extend(postData,{ filters:ruleGroup });\r\n                // $.each(['searchField', 'searchString', 'searchOper'], function(i, n){\r\n                //     if(postData.hasOwnProperty(n)) { delete postData[n];}\r\n                // });\r\n\r\n                // //每次提出新的查询都转到第一页  \r\n                // $selector.jqGrid(\"setGridParam\",{page:1}).trigger(\"reloadGrid\");\r\n                // console.info({filters:ruleGroup});\r\n                return ruleGroup;\r\n            },\r\n\t\t\t// 构建搜索符号选择菜单\r\n\t\t\tbuildRuleMenu: function( elem, theSearchCol, left, top ){\r\n\t\t\t\tvar self = this;\r\n\t\t\t\t// var p = {\r\n\t\t\t\t// \tdefaultSearch : 'cn',\r\n\t\t\t\t// \tgroupOp : 'AND',\r\n\t\t\t\t// \toperands : { \"eq\" :\"==\", \"ne\":\"!\",\"lt\":\"<\",\"le\":\"<=\",\"gt\":\">\",\"ge\":\">=\",\"bw\":\"^\",\"bn\":\"!^\",\"in\":\"=\",\"ni\":\"!=\",\"ew\":\"|\",\"en\":\"!@\",\"cn\":\"~\",\"nc\":\"!~\",\"nu\":\"#\",\"nn\":\"!#\", \"bt\":\"...\"},\r\n\t\t\t\t// \toperandTitle: '点击选择搜索符号'\r\n\t\t\t\t// };\r\n\t\t\t\t$(\"#sopt_menu\").remove();\r\n\r\n\t\t\t\tleft=parseInt(left,10);\r\n\t\t\t\ttop=parseInt(top,10) + 18;\r\n\r\n\t\t\t\tvar fs =  $('.ui-jqgrid-view').css('font-size') || '11px';\r\n\t\t\t\tvar str = '<ul id=\"sopt_menu\" class=\"ui-search-menu modal-content\" role=\"menu\" tabindex=\"0\" style=\"font-size:'+fs+';left:'+left+'px;top:'+top+'px;\">',\r\n\t\t\t\t\tselected = $(elem).attr(\"soper\"), selclass,\r\n\t\t\t\t\taoprs = [], ina;\r\n\t\t\t\tvar i=0, nm =$(elem).attr(\"colname\");\r\n\t\t\t\t\t// len = self.searchCol.length;\r\n\t\t\t\t// while(i<len) {\r\n\t\t\t\t// \tif(self.searchCol[i].name === nm) {\r\n\t\t\t\t// \t\tbreak;\r\n\t\t\t\t// \t}\r\n\t\t\t\t// \ti++;\r\n\t\t\t\t// }\r\n\t\t\t\tvar soptions = theSearchCol.searchoptions;\r\n\t\t\t\tif(!soptions.sopt) {\r\n\t\t\t\t\tsoptions.sopt = [];\r\n\t\t\t\t\tsoptions.sopt[0]= cm.stype==='select' ?  'eq' : p.defaultSearch;\r\n\t\t\t\t}\r\n\t\t\t\t// $.each(p.odata, function() { aoprs.push(this.oper); });\r\n\t\t\t\tfor ( i = 0 ; i < theSearchCol.sopt.length; i++) {\r\n\t\t\t\t\tina = $.inArray(theSearchCol.sopt[i],aoprs);\r\n\t\t\t\t\tif(ina !== -1) {\r\n\t\t\t\t\t\tselclass = selected === p.odata[ina].oper ? common.highlight : \"\";\r\n\t\t\t\t\t\tstr += '<li class=\"ui-menu-item '+selclass+'\" role=\"presentation\"><a class=\"'+ common.cornerall+' g-menu-item\" tabindex=\"0\" role=\"menuitem\" value=\"'+p.odata[ina].oper+'\" oper=\"'+p.operands[p.odata[ina].oper]+'\"><table class=\"ui-common-table\"><tr><td width=\"25px\">'+p.operands[p.odata[ina].oper]+'</td><td>'+ p.odata[ina].text+'</td></tr></table></a></li>';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"</ul>\";\r\n\t\t\t\t$('body').append(str);\r\n\t\t\t\t$(\"#sopt_menu\").addClass(\"ui-menu \" + classes.menu_widget);\r\n\t\t\t\t$(\"#sopt_menu > li > a\").hover(\r\n\t\t\t\t\tfunction(){ $(this).addClass(common.hover); },\r\n\t\t\t\t\tfunction(){ $(this).removeClass(common.hover); }\r\n\t\t\t\t).click(function() {\r\n\t\t\t\t\tvar v = $(this).attr(\"value\"),\r\n\t\t\t\t\toper = $(this).attr(\"oper\");\r\n\t\t\t\t\t$($t).triggerHandler(\"jqGridToolbarSelectOper\", [v, oper, elem]);\r\n\t\t\t\t\t$(\"#sopt_menu\").hide();\r\n\t\t\t\t\t$(elem).text(oper).attr(\"soper\",v);\r\n\t\t\t\t\tif(p.autosearch===true){\r\n\t\t\t\t\t\tvar inpelm = $(elem).parent().next().children()[0];\r\n\t\t\t\t\t\tif( $(inpelm).val() || v===\"nu\" || v ===\"nn\") {\r\n\t\t\t\t\t\t\ttriggerToolbar();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n            _createSearchElement: function($parent, searchCol){\r\n                var that = this, fieldIdPrefix = this._opt.searchBarSetting.fieldIdPrefix;\r\n\r\n                searchCol.fieldId = fieldIdPrefix + searchCol.name;\r\n                var wstype = searchCol.wstype,\r\n                    formValidate = ui.validate(\"[wui-attr='\" + this.defaults.searchFormAttr + \"']\"),\r\n                    fieldName = searchCol.name;\r\n                // 当自定义查询没有添加表单时,给rules定义为方法,避免出错\r\n                if(!formValidate){\r\n                    formValidate = {\r\n                        rules: function(){}\r\n                    }\r\n                }\r\n\r\n                if(searchCol.searchoptions && searchCol.searchoptions.customSearchName){\r\n                    fieldName = searchCol.searchoptions.customSearchName;\r\n                }\r\n\r\n                switch (wstype) {\r\n                    // 字符串\r\n                    case \"text\":\r\n                    case \"string\":\r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInput.off(\"keyup\").on(\"keyup\", function(event) {\r\n                            var keynum = window.event ? event.keyCode : event.which;\r\n                            if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                that.searchGridFromSearchBar();\r\n                            }\r\n                        })\r\n\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            $theInput.val(searchCol.searchDefVal)\r\n                        }\r\n                        break;\r\n                    // 布尔值\r\n                    case \"boolean\":\r\n                        // var rangeHtml = '';\r\n                        // rangeHtml += '<div class=\"wui-form-check\">';\r\n                        // rangeHtml += '    <input type=\"checkbox\" data-searchrule=\\'{\"field\":\"' + fieldName + '\", \"op\":\"' + searchCol.sopt + '\", \"type\":\"' + wstype + '\"}\\' value=\"true\" id=\"' + searchCol.fieldId + '\" name=\"' + searchCol.fieldId + '\" />';\r\n                        // rangeHtml += '    <label for=\"' + searchCol.fieldId + '\">';\r\n                        // rangeHtml += '    </label>';\r\n                        // rangeHtml += '    <span>' + searchCol.label + '</span>';\r\n                        // rangeHtml += '</div>';\r\n                        // $parent.append(rangeHtml);\r\n                        // 下拉框\r\n                        var $select = $('<select data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"' + wstype + '\"}\\' ' \r\n                                    + 'class=\"wui-select\" ' \r\n                                    + 'id=\"' + searchCol.fieldId + '\">' \r\n                                    + '</select>').appendTo($parent);\r\n                        var theName = searchCol.searchoptions.name ? searchCol.searchoptions.name : \"id\",\r\n                            theText = searchCol.searchoptions.text ? searchCol.searchoptions.text : \"name\";\r\n\r\n                        var optionArr = searchCol.searchoptions.value.split(\";\"),\r\n                            _loadData = [];\r\n\r\n                        for(var _i = 0; _i < optionArr.length; _i++){\r\n                            var temp = optionArr[_i].split(\":\");\r\n                            var json = {}\r\n                            json[theName] = temp[0];\r\n                            json[theText] = temp[1];\r\n                            _loadData.push(json);\r\n                        }\r\n\r\n                        var selectBoxSetting = {\r\n                            loadData: _loadData,\r\n                            isEnabledLiveSearch: false,\r\n                            maxNumber: 1\r\n                        }\r\n                        selectBoxSetting = $.extend(true, {}, selectBoxSetting, searchCol.searchoptions);\r\n                        ui.logParamValue({\r\n                            paramName: \"selectBoxSetting\",\r\n                            paramValue: selectBoxSetting, \r\n                            methodName: \"grid\", \r\n                            className: FRAME_NAME, \r\n                            isDebug: true\r\n                        });\r\n                        var uiPlugin = ui.selectBox(searchCol.fieldId, selectBoxSetting);\r\n\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            uiPlugin.set(searchCol.searchDefVal.toString());\r\n                        }\r\n                        \r\n                        break;\r\n                    // 日期\r\n                    case \"date\":\r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"' + wstype + '\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n                        var dateParams = {\r\n                            format: searchCol.formatDate,\r\n                            value: searchCol.searchDefVal\r\n                        }\r\n\r\n                        if(searchCol.searchoptions.customConfig){\r\n                            dateParams = $.extend(true, {}, dateParams, searchCol.searchoptions.customConfig);\r\n                        }\r\n                        delete searchCol.searchoptions[\"customConfig\"];\r\n\r\n                        dateParams = $.extend(true, {}, dateParams, searchCol.searchoptions);\r\n                        \r\n                        ui.date(searchCol.fieldId, dateParams)\r\n                        \r\n                        break;\r\n                    // 日期范围\r\n                    case \"dateRange\":\r\n                        // searchoptions:{\r\n                        //     searchhidden: true, // 隐藏是否可选\r\n                        //     format : 'yyyy-mm-dd',\r\n                        //     minuteStep: 5,\r\n                        //     startDate: \"\",\r\n                        //     endDate: \"\",\r\n                        //     startFieldName: searchCol.name,    // 开始时间搜索字段名\r\n                        //     endFieldName: searchCol.name         // 结束时间搜索字段名\r\n                        // }\r\n                        // searchCol.sopt = [\"ge\", \"le\"]\r\n                        // 日期范围选择\r\n                        var startFieldName = searchCol.startFieldName ? searchCol.startFieldName : fieldName,\r\n                            endFieldName = searchCol.endFieldName ? searchCol.endFieldName : fieldName,\r\n                            startFieldId = searchCol.fieldId + '_start',\r\n                            endFieldId = searchCol.fieldId + '_end';\r\n                        var rangeHtml = '';\r\n                        rangeHtml += '<div class=\"input-group date-range\">';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + startFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + startFieldName + '\",\"op\":\"' + searchCol.sopt[0] + '\",\"type\":\"date\"}\\' />';\r\n                        rangeHtml += '    <span class=\"input-group-addon date-range-addon\" title=\"清空日期\">-</span>';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + endFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + endFieldName + '\",\"op\":\"' + searchCol.sopt[1] + '\",\"type\":\"date\"}\\' />';\r\n                        rangeHtml += '</div>';\r\n                        var $theInput = $(rangeHtml).appendTo($parent);\r\n                        var dateConfig = {\r\n                            isShowBtnGroup: false,\r\n                            format: searchCol.formatDate\r\n                        }\r\n                        if(searchCol.searchoptions.customConfig){\r\n                            dateConfig = $.extend(true, {}, dateConfig, searchCol.searchoptions.customConfig)\r\n                        }\r\n                        delete searchCol.searchoptions[\"customConfig\"];\r\n\r\n                        dateConfig = $.extend(true, {}, dateConfig, searchCol.searchoptions);\r\n\r\n                        var uiPlugin1 = ui.date(startFieldId, dateConfig).on(\"changeDate\", function(){\r\n                            // 设置结束时间的开始可选时间为所选日期\r\n                            ui.date(endFieldId).option({\r\n                                startDate: ui.date(startFieldId).get()\r\n                            })\r\n                        });\r\n                        var uiPlugin2 = ui.date(endFieldId, dateConfig).on(\"changeDate\", function(){\r\n                            // 设置结束时间的开始可选时间为所选日期\r\n                            ui.date(startFieldId).option({\r\n                                endDate: ui.date(endFieldId).get()\r\n                            })\r\n                        });\r\n\r\n                        $theInput.find(\".date-range-addon\").on(\"click\", function(){\r\n                            ui.date(endFieldId).empty();\r\n                            ui.date(startFieldId).empty();\r\n                        })\r\n                        \r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            if(ui.isArray(searchCol.searchDefVal)){\r\n                                // searchDefVal = [\"2018-12-25\", \"2019-01-10\"]\r\n                                uiPlugin1.set(searchCol.searchDefVal[0]);\r\n                                uiPlugin2.set(searchCol.searchDefVal[1]);\r\n                            }else{\r\n                                // searchDefVal = \"2018-12-25\"\r\n                                uiPlugin1.set(searchCol.searchDefVal);\r\n                            }\r\n                        }\r\n                        \r\n                        break;\r\n                    // 数字\r\n                    case \"num\" :\r\n                    case \"number\" :\r\n                        var $theInput = $('<input type=\"number\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"number\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n\r\n                        // 添加校验\r\n                        formValidate.rules(\"#\" + searchCol.fieldId, \"add\", { \"number\": true });\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInput.off(\"keyup\").on(\"keyup\", function(event) {\r\n                            var keynum = window.event ? event.keyCode : event.which;\r\n                            if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                that.searchGridFromSearchBar();\r\n                            }\r\n                        })\r\n\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            $theInput.val(searchCol.searchDefVal)\r\n                        }\r\n                        break;\r\n                    // 数字范围\r\n                    case \"numRange\":\r\n                        var startFieldName = searchCol.startFieldName ? searchCol.startFieldName : fieldName,\r\n                            endFieldName = searchCol.endFieldName ? searchCol.endFieldName : fieldName,\r\n                            startFieldId = searchCol.fieldId + '_start',\r\n                            endFieldId = searchCol.fieldId + '_end';\r\n                        var rangeHtml = '';\r\n                        rangeHtml += '<div class=\"input-group date-range\">';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + startFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + startFieldName + '\",\"op\":\"' + searchCol.sopt[0] + '\",\"type\":\"number\"}\\' />';\r\n                        rangeHtml += '    <span class=\"input-group-addon date-range-addon\" title=\"清空日期\">-</span>';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + endFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + endFieldName + '\",\"op\":\"' + searchCol.sopt[1] + '\",\"type\":\"number\"}\\' />';\r\n                        rangeHtml += '</div>';\r\n                        var $theInputs = $(rangeHtml).appendTo($parent);\r\n\r\n                        // 添加校验\r\n                        formValidate.rules(\"#\" + startFieldId, \"add\", { \"number\": true });\r\n                        formValidate.rules(\"#\" + endFieldId, \"add\", { \"number\": true });\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInputs.find(\"input\").each(function(){\r\n                            $(this).off(\"keyup\").on(\"keyup\", function(event) {\r\n                                var keynum = window.event ? event.keyCode : event.which;\r\n                                if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                    that.searchGridFromSearchBar();\r\n                                }\r\n                            })\r\n                        })\r\n\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            if(ui.isArray(searchCol.searchDefVal)){\r\n                                // searchDefVal = [2, 10]\r\n                                $(\"#\" + startFieldId).val(searchCol.searchDefVal[0]);\r\n                                $(\"#\" + endFieldId).val(searchCol.searchDefVal[1]);\r\n                            }else{\r\n                                // searchDefVal = 3\r\n                                $(\"#\" + startFieldId).val(searchCol.searchDefVal);\r\n                            }\r\n                        }\r\n                        break;\r\n                    // 整数\r\n                    case \"int\" :\r\n                    case \"integer\":\r\n                        var $theInput = $('<input type=\"number\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"integer\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n                        // 添加校验\r\n                        formValidate.rules(\"#\" + searchCol.fieldId, \"add\", { \"integer\": true });\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInput.off(\"keyup\").on(\"keyup\", function(event) {\r\n                            var keynum = window.event ? event.keyCode : event.which;\r\n                            if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                that.searchGridFromSearchBar();\r\n                            }\r\n                        })\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            $theInput.val(searchCol.searchDefVal)\r\n                        }\r\n                        break;\r\n                    // 整数范围\r\n                    case \"intRange\":\r\n                        var startFieldName = searchCol.startFieldName ? searchCol.startFieldName : fieldName,\r\n                            endFieldName = searchCol.endFieldName ? searchCol.endFieldName : fieldName,\r\n                            startFieldId = searchCol.fieldId + '_start',\r\n                            endFieldId = searchCol.fieldId + '_end';\r\n                        var rangeHtml = '';\r\n                        rangeHtml += '<div class=\"input-group date-range\">';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + startFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + startFieldName + '\",\"op\":\"' + searchCol.sopt[0] + '\",\"type\":\"integer\"}\\' />';\r\n                        rangeHtml += '    <span class=\"input-group-addon date-range-addon\" title=\"清空日期\">-</span>';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + endFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + endFieldName + '\",\"op\":\"' + searchCol.sopt[1] + '\",\"type\":\"integer\"}\\' />';\r\n                        rangeHtml += '</div>';\r\n                        var $theInputs = $(rangeHtml).appendTo($parent);\r\n                        \r\n                        // 添加校验\r\n                        formValidate.rules(\"#\" + startFieldId, \"add\", { \"integer\": true });\r\n                        formValidate.rules(\"#\" + endFieldId, \"add\", { \"integer\": true });\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInputs.find(\"input\").each(function(){\r\n                            $(this).off(\"keyup\").on(\"keyup\", function(event) {\r\n                                var keynum = window.event ? event.keyCode : event.which;\r\n                                if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                    that.searchGridFromSearchBar();\r\n                                }\r\n                            })\r\n                        })\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            if(ui.isArray(searchCol.searchDefVal)){\r\n                                // searchDefVal = [2, 10]\r\n                                $(\"#\" + startFieldId).val(searchCol.searchDefVal[0]);\r\n                                $(\"#\" + endFieldId).val(searchCol.searchDefVal[1]);\r\n                            }else{\r\n                                // searchDefVal = 3\r\n                                $(\"#\" + startFieldId).val(searchCol.searchDefVal);\r\n                            }\r\n                        }\r\n                        break;\r\n                    // 浮点数\r\n                    case \"double\":\r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"' + wstype + '\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n                        \r\n                        // 添加校验\r\n                        formValidate.rules(\"#\" + searchCol.fieldId, \"add\", { \"number\": true });\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInput.off(\"keyup\").on(\"keyup\", function(event) {\r\n                            var keynum = window.event ? event.keyCode : event.which;\r\n                            if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                that.searchGridFromSearchBar();\r\n                            }\r\n                        })\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            $theInput.val(searchCol.searchDefVal)\r\n                        }\r\n                        break;\r\n                    // 浮点数范围\r\n                    case \"doubleRange\":\r\n                        var startFieldName = searchCol.startFieldName ? searchCol.startFieldName : fieldName,\r\n                            endFieldName = searchCol.endFieldName ? searchCol.endFieldName : fieldName,\r\n                            startFieldId = searchCol.fieldId + '_start',\r\n                            endFieldId = searchCol.fieldId + '_end';\r\n                        var rangeHtml = '';\r\n                        rangeHtml += '<div class=\"input-group date-range\">';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + startFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + startFieldName + '\",\"op\":\"' + searchCol.sopt[0] + '\",\"type\":\"double\"}\\' />';\r\n                        rangeHtml += '    <span class=\"input-group-addon date-range-addon\" title=\"清空日期\">-</span>';\r\n                        rangeHtml += '    <input type=\"text\" class=\"date-range-input\" id=\"' + endFieldId + '\" data-init-wui=\"date\" data-searchrule=\\'{\"field\":\"' + endFieldName + '\",\"op\":\"' + searchCol.sopt[1] + '\",\"type\":\"double\"}\\' />';\r\n                        rangeHtml += '</div>';\r\n                        var $theInputs = $(rangeHtml).appendTo($parent);\r\n                        \r\n                        // 添加校验\r\n                        formValidate.rules(\"#\" + startFieldId, \"add\", { \"number\": true });\r\n                        formValidate.rules(\"#\" + endFieldId, \"add\", { \"number\": true });\r\n\r\n                        // 绑定输入框keyup事件\r\n                        $theInputs.find(\"input\").each(function(){\r\n                            $(this).off(\"keyup\").on(\"keyup\", function(event) {\r\n                                var keynum = window.event ? event.keyCode : event.which;\r\n                                if (keynum == ui.CONSTANTS.KEYS.ENTER || keynum == ui.CONSTANTS.KEYS.OTHER) {\r\n                                    that.searchGridFromSearchBar();\r\n                                }\r\n                            })\r\n                        })\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            if(ui.isArray(searchCol.searchDefVal)){\r\n                                // searchDefVal = [2, 10]\r\n                                $(\"#\" + startFieldId).val(searchCol.searchDefVal[0]);\r\n                                $(\"#\" + endFieldId).val(searchCol.searchDefVal[1]);\r\n                            }else{\r\n                                // searchDefVal = 3\r\n                                $(\"#\" + startFieldId).val(searchCol.searchDefVal);\r\n                            }\r\n                        }\r\n                        break;\r\n                    // 复选框\r\n                    case \"checkbox\":\r\n                        var rangeHtml = '';\r\n                        rangeHtml += '<div class=\"wui-form-check\">';\r\n                        rangeHtml += '    <input type=\"checkbox\" data-searchrule=\\'{\"field\":\"' + fieldName + '\", \"op\":\"' + searchCol.sopt + '\", \"type\":\"boolean\"}\\' value=\"1\" id=\"' + searchCol.fieldId + '\" name=\"' + searchCol.fieldId + '\" />';\r\n                        rangeHtml += '    <label for=\"' + searchCol.fieldId + '\">';\r\n                        rangeHtml += '    </label>';\r\n                        rangeHtml += '    <span>' + searchCol.label + '</span>';\r\n                        rangeHtml += '</div>';\r\n                        $parent.append(rangeHtml);\r\n                        \r\n                        // 设置初始值\r\n                        // if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                        //     if(ui.isArray(searchCol.searchDefVal)){\r\n                        //         // searchDefVal = [2, 10]\r\n                        //         $(\"#\" + startFieldId).val(searchCol.searchDefVal[0]);\r\n                        //         $(\"#\" + endFieldId).val(searchCol.searchDefVal[1]);\r\n                        //     }else{\r\n                        //         // searchDefVal = 3\r\n                        //         $(\"#\" + startFieldId).val(searchCol.searchDefVal);\r\n                        //     }\r\n                        // }\r\n                        break;\r\n                    // 普通下拉框\r\n                    case \"select\":\r\n                        // searchoptions:{\r\n                        //     searchhidden: true, // 隐藏是否可选\r\n                        //     dataSource: \"\", // 下拉加载服务\r\n                        //     value: \":全部;1:是;0:否\",   // 只用在搜索类型为checkbox、select下。可以是string或者object,如果为string则格式为value:label,且以“;”结尾；如果为object格式为{1:'One';2:'Two'}\r\n                        //     name: \"id\", // key值字段名\r\n                        //     text: \"name\",   // text值字段名\r\n                        //     maxNumber: 0    // 下拉可选个数\r\n                        // }\r\n                        // 下拉框\r\n                        var $select = $('<select data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' ' \r\n                                    + 'class=\"wui-select\" ' \r\n                                    + 'id=\"' + searchCol.fieldId + '\">' \r\n                                    + '</select>').appendTo($parent);\r\n                        var theName = searchCol.searchoptions.name ? searchCol.searchoptions.name : \"id\",\r\n                            theText = searchCol.searchoptions.text ? searchCol.searchoptions.text : \"name\";\r\n\r\n                        if(searchCol.searchoptions.value){\r\n                            var optionValue = searchCol.searchoptions.value;\r\n                            var _loadData = [];\r\n                            if(typeof(optionValue) == \"function\"){\r\n                                var _optionValue = optionValue(searchCol.fieldId, theName, theText);\r\n                                if(_optionValue){\r\n                                    // 渲染数据\r\n                                    // var optionValue = searchCol.searchoptions.value;\r\n                                    // var _loadData = [];\r\n                                    if(ui.isJson(_optionValue)){\r\n                                        for(var key in _optionValue){\r\n                                            var json = {}\r\n                                            json[theName] = key;\r\n                                            json[theText] = _optionValue[key];\r\n                                            _loadData.push(json);\r\n                                        }\r\n                                    }else if(typeof(_optionValue) === \"string\"){\r\n                                        var optionArr = _optionValue.split(\";\");\r\n                                        for(var _i = 0; _i < optionArr.length; _i++){\r\n                                            var temp = optionArr[_i].split(\":\");\r\n                                            var json = {}\r\n                                            json[theName] = temp[0];\r\n                                            json[theText] = temp[1];\r\n                                            _loadData.push(json);\r\n                                        }\r\n                                    }else if(ui.isArray(_optionValue)){\r\n                                        _loadData = _optionValue;\r\n                                    }\r\n                                }else{\r\n                                    console.info(\"您自己渲染,我不参与\");\r\n                                }\r\n                            }else if(ui.isJson(optionValue)){\r\n                                for(var key in optionValue){\r\n                                    var json = {}\r\n                                    json[theName] = key;\r\n                                    json[theText] = optionValue[key];\r\n                                    _loadData.push(json);\r\n                                }\r\n                            }else if(typeof(optionValue) === \"string\"){\r\n                                var optionArr = optionValue.split(\";\");\r\n                                for(var _i = 0; _i < optionArr.length; _i++){\r\n                                    var temp = optionArr[_i].split(\":\");\r\n                                    var json = {}\r\n                                    json[theName] = temp[0];\r\n                                    json[theText] = temp[1];\r\n                                    _loadData.push(json);\r\n                                }\r\n                            }else if(ui.isArray(optionValue)){\r\n                                _loadData = optionValue;\r\n                            }\r\n\r\n                            // console.info(_loadData);\r\n                            $.each(_loadData, function(theIndex, item){\r\n                                $select.append('<option value=\"' + item[theName] + '\">' + item[theText] + '</option>')\r\n                            })\r\n                        }\r\n\r\n                        if(searchCol.searchoptions.dataSource){\r\n                            var _dataSource = searchCol.searchoptions.dataSource;\r\n\r\n                            if(typeof(_dataSource) == \"string\" && _dataSource != \"\"){\r\n                                ui.getAjax({\r\n                                   url: _dataSource,\r\n                                   onSuccess: function(res){\r\n                                        // console.info(res);\r\n                                        $.each(res, function(theIndex, item){\r\n                                            $select.append('<option value=\"' + item[theName] + '\">' + item[theText] + '</option>')\r\n                                        })\r\n                                   }, \r\n                                   onError: function(res){\r\n                                       // ui.errorNotice(res);\r\n                                   }, \r\n                                   async: false, \r\n                                   dataType: \"json\"\r\n                               })\r\n                            }\r\n                        }\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            $select.val(searchCol.searchDefVal)\r\n                        }\r\n                        break;\r\n                    // wui下拉框\r\n                    case \"selectbox\":\r\n                    case \"selectBox\":\r\n                        // searchoptions:{\r\n                        //     searchhidden: true, // 隐藏是否可选\r\n                        //     dataSource: \"\",    // 下拉加载服务\r\n                        //     value: \":全部;1:是;0:否\",   // 只用在搜索类型为checkbox、select下。可以是string或者object,如果为string则格式为value:label,且以“;”结尾；如果为object格式为{1:'One';2:'Two'}\r\n                        //     name: \"id\", // key值字段名\r\n                        //     text: \"name\",   // text值字段名\r\n                        //     maxNumber: 1    // 下拉可选个数\r\n                        //     jsonReader: null\r\n                        // }\r\n                        \r\n                        var $select = $('<select data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' ' \r\n                                    + 'class=\"wui-select\" ' \r\n                                    + 'id=\"' + searchCol.fieldId + '\">' \r\n                                    + '</select>').appendTo($parent);\r\n                        var theName = searchCol.searchoptions.name ? searchCol.searchoptions.name : \"id\",\r\n                            theText = searchCol.searchoptions.text ? searchCol.searchoptions.text : \"name\";\r\n                            \r\n                        var _loadUrl = \"\", _loadData = []; \r\n                        if(searchCol.searchoptions.value){\r\n                            var optionValue = searchCol.searchoptions.value;\r\n                            if(typeof(optionValue) == \"function\"){\r\n                                var _optionValue = optionValue(searchCol.fieldId, theName, theText);\r\n                                if(_optionValue){\r\n                                    // 渲染数据\r\n                                    // var optionValue = searchCol.searchoptions.value;\r\n                                    // var _loadData = [];\r\n                                    if(ui.isJson(_optionValue)){\r\n                                        for(var key in _optionValue){\r\n                                            var json = {}\r\n                                            json[theName] = key;\r\n                                            json[theText] = _optionValue[key];\r\n                                            _loadData.push(json);\r\n                                        }\r\n                                    }else if(typeof(_optionValue) === \"string\"){\r\n                                        var optionArr = _optionValue.split(\";\");\r\n                                        for(var _i = 0; _i < optionArr.length; _i++){\r\n                                            var temp = optionArr[_i].split(\":\");\r\n                                            var json = {}\r\n                                            json[theName] = temp[0];\r\n                                            json[theText] = temp[1];\r\n                                            _loadData.push(json);\r\n                                        }\r\n                                    }else if(ui.isArray(_optionValue)){\r\n                                        _loadData = _optionValue;\r\n                                    }\r\n                                }else{\r\n                                    ui.logMessage(\"您自己渲染,我不参与\", \"wui.grid._addSearchCondition\", true);\r\n                                }\r\n                            }else if(ui.isJson(optionValue)){\r\n                                for(var key in optionValue){\r\n                                    var json = {}\r\n                                    json[theName] = key;\r\n                                    json[theText] = optionValue[key];\r\n                                    _loadData.push(json);\r\n                                }\r\n                            }else if(typeof(optionValue) === \"string\"){\r\n                                var optionArr = optionValue.split(\";\");\r\n                                for(var _i = 0; _i < optionArr.length; _i++){\r\n                                    var temp = optionArr[_i].split(\":\");\r\n                                    var json = {}\r\n                                    json[theName] = temp[0];\r\n                                    json[theText] = temp[1];\r\n                                    _loadData.push(json);\r\n                                }\r\n                            }\r\n                        }\r\n                        if(searchCol.searchoptions.dataSource){\r\n                            _loadUrl = searchCol.searchoptions.dataSource;\r\n                        }\r\n                        var selectBoxSetting = {\r\n                            loadUrl: _loadUrl,\r\n                            loadData: _loadData,\r\n                            maxNumber: 1\r\n                        }\r\n                        if(searchCol.searchoptions.customConfig){\r\n                            selectBoxSetting = $.extend(true, {}, selectBoxSetting, searchCol.searchoptions.customConfig);\r\n                        }\r\n                        delete searchCol.searchoptions[\"customConfig\"];\r\n\r\n                        selectBoxSetting = $.extend(true, {}, selectBoxSetting, searchCol.searchoptions);\r\n                        ui.logParamValue({\r\n                            paramName: \"selectBoxSetting\",\r\n                            paramValue: selectBoxSetting, \r\n                            methodName: \"grid\", \r\n                            className: FRAME_NAME, \r\n                            isDebug: true\r\n                        });\r\n                        var uiPlugin = ui.selectBox(searchCol.fieldId, selectBoxSetting);\r\n\r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            uiPlugin.set(searchCol.searchDefVal);\r\n                        }\r\n                        \r\n                        break;\r\n                    // 弹出选择\r\n                    case \"choosebox\" :\r\n                    case \"chooseBox\" :\r\n                        \r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n\r\n                        var chooseBoxSetting = {\r\n                            maxNumber: 1\r\n                        }\r\n                        if(searchCol.searchoptions.customConfig){\r\n                            chooseBoxSetting = $.extend(true, {}, chooseBoxSetting, searchCol.searchoptions.customConfig);\r\n                        }\r\n                        delete searchCol.searchoptions[\"customConfig\"];\r\n\r\n                        chooseBoxSetting = $.extend(true, {}, chooseBoxSetting, searchCol.searchoptions);\r\n                        ui.logParamValue({\r\n                            paramName: \"chooseBoxSetting\",\r\n                            paramValue: chooseBoxSetting, \r\n                            methodName: \"grid\", \r\n                            className: FRAME_NAME, \r\n                            isDebug: true\r\n                        });\r\n\r\n                        var uiPlugin = ui.chooseBox(searchCol.fieldId, chooseBoxSetting); \r\n                        \r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            uiPlugin.set(searchCol.searchDefVal);\r\n                        }\r\n                        break;\r\n                    case \"dictCode\" :\r\n                        \r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n\r\n                        var dictCodeSetting = {}\r\n                        if(searchCol.searchoptions.customConfig){\r\n                            $.extend(true, dictCodeSetting, searchCol.searchoptions.customConfig);\r\n                        }\r\n                        delete searchCol.searchoptions[\"customConfig\"];\r\n\r\n                        dictCodeSetting = $.extend(true, {}, dictCodeSetting, searchCol.searchoptions);\r\n                        ui.logParamValue({\r\n                            paramName: \"dictCodeSetting\",\r\n                            paramValue: dictCodeSetting, \r\n                            methodName: \"grid\", \r\n                            className: FRAME_NAME, \r\n                            isDebug: true\r\n                        });\r\n\r\n                        var uiPlugin = ui.dictionaryCode(searchCol.fieldId, dictCodeSetting); \r\n                        \r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            uiPlugin.set(searchCol.searchDefVal);\r\n                        }\r\n                        break;\r\n                    case \"userChooseBox\":\r\n                    case \"orgChooseBox\":\r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n\r\n                        var chooseBoxSetting = {\r\n                            maxNumber: 1\r\n                        }\r\n                        if(searchCol.searchoptions.customConfig){\r\n                            $.extend(true, chooseBoxSetting, searchCol.searchoptions.customConfig);\r\n                        }\r\n                        delete searchCol.searchoptions[\"customConfig\"];\r\n\r\n                        chooseBoxSetting = $.extend(true, {}, chooseBoxSetting, searchCol.searchoptions);\r\n                        ui.logParamValue({\r\n                            paramName: \"chooseBoxSetting\",\r\n                            paramValue: chooseBoxSetting, \r\n                            methodName: \"grid\", \r\n                            className: FRAME_NAME, \r\n                            isDebug: true\r\n                        });\r\n\r\n                        var uiPlugin = ui[wstype](searchCol.fieldId, chooseBoxSetting); \r\n                        \r\n                        // 设置初始值\r\n                        if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                            uiPlugin.set(searchCol.searchDefVal);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        var $theInput = $('<input type=\"text\" ' \r\n                                    + 'data-searchrule=\\'{\"field\":\"' + fieldName + '\",' \r\n                                    + '\"op\":\"' + searchCol.sopt + '\",' \r\n                                    + '\"type\":\"string\"}\\' id=\"' + searchCol.fieldId + '\" ' \r\n                                    + 'class=\"wui-input\" />').appendTo($parent);\r\n                        \r\n                        if(ui._hasOwnProperty(ui, wstype)){\r\n                            try{\r\n                                var widgetSetting = {\r\n                                    maxNumber: 1\r\n                                }\r\n                                if(searchCol.searchoptions.customConfig){\r\n                                    widgetSetting = $.extend(true, {}, widgetSetting, searchCol.searchoptions.customConfig);\r\n                                }\r\n                                delete searchCol.searchoptions[\"customConfig\"];\r\n    \r\n                                widgetSetting = $.extend(true, {}, widgetSetting, searchCol.searchoptions);\r\n                                ui.logParamValue({\r\n                                    paramName: \"widgetSetting\",\r\n                                    paramValue: widgetSetting, \r\n                                    methodName: \"grid\", \r\n                                    className: FRAME_NAME, \r\n                                    isDebug: true\r\n                                });\r\n    \r\n                                var uiPlugin = ui[wstype](searchCol.fieldId, widgetSetting); \r\n                                \r\n                                // 设置初始值\r\n                                if(!ui.isEmptyType(searchCol.searchDefVal)){\r\n                                    uiPlugin.set(searchCol.searchDefVal);\r\n                                }\r\n                            }catch(ex){\r\n                                ui.logError(\"该类型无法进行初始化控件和set赋值\", \"wui.grid\", true);\r\n                                $theInput.val(searchCol.searchDefVal);\r\n                            }\r\n                        }\r\n                            \r\n                        break;\r\n                }\r\n            },\r\n            // 搜索栏添加一项搜索项\r\n            // buildSearchBar、customSearchBar时用到\r\n\t\t\t_addSearchCondition: function($tr, theSearchCol){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n\t\t\t\t// var fieldIdPrefix = params.searchBarSetting.fieldIdPrefix;\r\n\r\n\t\t\t\t// var theSearchCol = searchCol[theIndex];\r\n    \t\t\tvar soptions = {}, so, st;\r\n                \r\n                // $tr.append('<td class=\"td-title\" style=\"text-align: right\">' + theSearchCol.label + '：</td>\\n');\r\n    \t\t\t$tr.append('<td class=\"search-title ' + params.searchBarSetting.labelClass + '\">' + theSearchCol.label + '：</td>\\n');\r\n\r\n    \t\t\tif(params.isShowSearchOperator){\r\n        \t\t\t// var $tdSopt = $('<td class=\"td-search-oper\" headers=\"\" colindex=\"' + theIndex + '\"></td>').appendTo($tr);\r\n    \t\t\t\tvar $tdSopt = $('<td class=\"td-search-oper\" headers=\"\"></td>').appendTo($tr);\r\n    \t\t\t\tif(theSearchCol.sopt || theSearchCol.searchoptions) {\r\n        \t\t\t\tsoptions = theSearchCol.searchoptions || {};\r\n\t\t\t\t\t\t// so  = (soptions.sopt) ? soptions.sopt[0] : theSearchCol.stype==='select' ?  'eq' : self.defaults.defaultSearch;\r\n\t\t\t\t\t\tso = theSearchCol.sopt ? theSearchCol.sopt : ((soptions.sopt) ? soptions.sopt[0] : (theSearchCol.stype==='select' ?  'eq' : self.defaults.defaultSearch));\r\n\t\t\t\t\t\tst = soptions.searchtitle != null ? soptions.searchtitle : self.defaults.operandTitle;\r\n\t\t\t\t\t\t// select = this.searchoptions.searchOperMenu ? \"<a title='\"+st+\"' style='padding-right: 0.5em;' soper='\"+so+\"' class='soptclass' colname='\"+this.name+\"'>\"+sot+\"</a>\" : \"\";\r\n\t\t\t\t\t\t\r\n        \t\t\t\tvar $sopt = $('<a title=\"' + st + '\" style=\"padding-right: 0.5em;\" soper=\"' + so + '\" class=\"soptclass\" colname=\"' + theSearchCol.label + '\">' + self.defaults.operands[so] + '</a>').appendTo($tdSopt);\r\n        \t\t\t\t// $sopt.click(function(e){\r\n        \t\t\t\t\t// console.info(\"sopt\");\r\n\t\t\t\t\t\t\t// var offset = $(this).offset(),\r\n\t\t\t\t\t\t\t// \tleft = ( offset.left ),\r\n\t\t\t\t\t\t\t// \ttop = ( offset.top);\r\n\t\t\t\t\t\t\t// self.buildRuleMenu(this, theSearchCol, left, top );\r\n\t\t\t\t\t\t\t// e.stopPropagation();\r\n\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t// $(\"body\").on('click', function(e){\r\n\t\t\t\t\t\t\t// if(e.target.className !== \"soptclass\") {\r\n\t\t\t\t\t\t\t// \t$(\"#sopt_menu\").remove();\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n    \t\t\t                      \r\n                // var $tdContent = $('<td class=\"td-content\"></td>\\n').appendTo($tr);\r\n    \t\t\tvar $tdContent = $('<td class=\"search-content ' + params.searchBarSetting.contentClass + '\"></td>\\n').appendTo($tr);\r\n                \r\n                this._createSearchElement($tdContent, theSearchCol);\r\n\t\t\t},\r\n            // 显示搜索栏所有搜索行\r\n            showSearchBarRow: function(searchBar){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n\r\n                if(!searchBar){\r\n                    if(self.container.children(\".wui-grid-searchBar\").length > 0){\r\n                        searchBar = self.container.children(\".wui-grid-searchBar\");\r\n                    }else{\r\n                        ui.logWarn(\"搜索栏无法检测到,可能是因为没有添加 .wui-grid-searchBar 样式类\", FRAME_NAME + \".\" + _widgetName, true);\r\n                        return false;\r\n                    }\r\n                }\r\n                \r\n                var $tbody = searchBar.find(\"tbody\").eq(0).eq(0);\r\n                $tbody.find('tr').show();\r\n                // self._setSearchBarColsWidth($tbody);\r\n                if(params.isFullScreen){\r\n                    self._setGridFullScreen();\r\n                }else{\r\n                    self._setGridSize();\r\n                }\r\n            },\r\n            // 隐藏搜索栏除了第一行之外的搜索行\r\n            hideSearchBarRow: function(searchBar){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n\r\n                if(!searchBar){\r\n                    if(self.container.children(\".wui-grid-searchBar\").length > 0){\r\n                        searchBar = self.container.children(\".wui-grid-searchBar\");\r\n                    }else{\r\n                        ui.logWarn(\"搜索栏无法检测到,可能是因为没有添加 .wui-grid-searchBar 样式类\", FRAME_NAME + \".\" + _widgetName, true);\r\n                        return false;\r\n                    }\r\n                }\r\n                \r\n                var $tbody = searchBar.find(\"tbody\").eq(0).eq(0);\r\n\r\n                $tbody.find('tr:not(:first)').hide();\r\n                // self._setSearchBarColsWidth($tbody);\r\n                if(params.isFullScreen){\r\n                    self._setGridFullScreen();\r\n                }else{\r\n                    self._setGridSize();\r\n                }\r\n            },\r\n            /*\r\n             * 构建搜索栏基本布局\r\n             * @Author   Chenzx\r\n             * @DateTime 2018-09-17\r\n             * @param    {[type]}   $table 搜索栏表格对象\r\n             * @return   {[type]}          [description]\r\n             */\r\n            buildSearchBarLayout: function($table){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var $tbody = null, searchColNum = params.searchColNum, \r\n                    searchBarSetting = params.searchBarSetting;\r\n\r\n                // 改布局 开始\r\n                var recordWidth = Math.ceil((100-parseInt(searchBarSetting.btnColWidth))/searchColNum) - 1;\r\n                var theTitleColsWidth = (recordWidth * searchBarSetting.titleColWidthRec / (searchBarSetting.titleColWidthRec + searchBarSetting.contentColWidthRec)) + \"%\",\r\n                    theContentColWidth = (recordWidth * searchBarSetting.contentColWidthRec / (searchBarSetting.titleColWidthRec + searchBarSetting.contentColWidthRec)) + \"%\";\r\n\r\n                // var titleColgroup = '<colgroup style=\"width: ' + theTitleColsWidth + '!important\"></colgroup>',\r\n                //     contentColgroup = '<colgroup style=\"width: ' + theContentColWidth + '!important\"></colgroup>';\r\n                // for(var i = 0; i < searchColNum; i++){\r\n                //     $table.prepend(contentColgroup);\r\n                //     $table.prepend(titleColgroup);\r\n                // }\r\n                \r\n                \r\n\r\n                \r\n                if(searchBarSetting.isSetWidth){\r\n                    var $thead = $table.children(\"thead\");\r\n                    if($thead && $thead.length > 0){\r\n\r\n                    }else{\r\n                        $thead = $('<thead style=\"visibility: hidden\"><tr></tr></thead>').prependTo($table);\r\n                        // $thead = $('<thead><tr></tr></thead>').prependTo($table);\r\n                        // var recordWidth = Math.ceil((100-parseInt(searchBarSetting.btnColWidth))/searchColNum) - 1;\r\n\r\n                        // var theTitleColsWidth = (recordWidth * searchBarSetting.titleColWidthRec / (searchBarSetting.titleColWidthRec + searchBarSetting.contentColWidthRec)) + \"%\",\r\n                        //     theContentColWidth = (recordWidth * searchBarSetting.contentColWidthRec / (searchBarSetting.titleColWidthRec + searchBarSetting.contentColWidthRec)) + \"%\";\r\n                        var sTh = '';\r\n                        sTh += '<th style=\"width: ' + theTitleColsWidth + '!important\"></th>';\r\n                        sTh += '<th style=\"width: ' + theContentColWidth + '!important\"></th>';\r\n                        for(var i = 0; i < searchColNum; i++){\r\n                            $thead.children(\"tr\").append(sTh);\r\n                        }\r\n\r\n                        $thead.children(\"tr\").append('<th style=\"width: ' + searchBarSetting.btnColWidth + '\"></th>');\r\n                    }\r\n\r\n                    // var $tbody = $table.children(\"tbody\");\r\n                    \r\n                }\r\n\r\n                if($table.children(\"tbody\") && $table.children(\"tbody\").length > 0){\r\n                    $tbody = $table.children(\"tbody\");\r\n                }else{\r\n                    $tbody = $('<tbody></tbody>');\r\n                    // $thead.after($tbody);\r\n                    $table.append($tbody)\r\n                }\r\n\r\n                return $tbody;\r\n            },\r\n            buildSearchBarDOMByData: function(searchCol, searchUrl){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var searchColNum = params.searchColNum, searchBarSetting = params.searchBarSetting;\r\n                // var fieldIdPrefix = searchBarSetting.fieldIdPrefix;\r\n                var searchBar = null, $table = null, \r\n                    // 传递进来的查询列总数目\r\n                    searchColLength = searchCol.length,\r\n                    // 除了补全页面已有的列数之后剩余的需添加的查询列总个数\r\n                    searchColCount = 0;\r\n\r\n                // searchCol:[\r\n                //  {name:\"id\", \"stype\":\"text\", \"sopt\":\"cn\", data:\"1234-5678\"}\r\n                // ]\r\n                if(self.container.children(\".wui-grid-searchBar\").length == 0){\r\n                    searchBar = $('<div class=\"wui-grid-searchBar\"></div>');\r\n                    self.container.prepend(searchBar);\r\n                }else{\r\n                    searchBar = self.container.children(\".wui-grid-searchBar\").eq(0);\r\n                }\r\n\r\n                if(searchBar.find(\"table\").length == 0){\r\n                    searchBar.html('<table class=\"table table-responsive wui-grid-table\"></table>');\r\n                    $table = searchBar.children(\"table\");\r\n                }else{\r\n                    $table = searchBar.children(\"table\").eq(0);\r\n                }\r\n\r\n                if(searchBar.find(\"form\").length == 0){\r\n                    var formHtml = '<form wui-attr=\"' + this.defaults.searchFormAttr + '\" role=\"form\"></form>';\r\n                    $table.wrap(formHtml);    // 增加表单容器\r\n                }else{\r\n                    searchBar.find(\"form\").first().attr(\"wui-attr\", this.defaults.searchFormAttr);\r\n                }\r\n\r\n                ui.validate(\"[wui-attr='\" + this.defaults.searchFormAttr + \"']\");\r\n\r\n                var $tbody = self.buildSearchBarLayout($table);\r\n\r\n                var suppleSearchColCount = 0; // 最后一行补充搜索列个数\r\n\r\n                // 补充完成最后一行搜索条件\r\n                // table下是否有内容,若是有,找到最后一行,判断是否列数已满,若未满,则添加到满,否则另起一行添加\r\n                if($tbody.find(\"tr\").length > 0){\r\n                    var $theLastTr = $tbody.find(\"tr\").last();\r\n                    var lastRowTdNumber = 0;\r\n                    $theLastTr.children(\"td\").each(function(i, elem){\r\n                        if($(elem).attr(\"colspan\")){\r\n                            lastRowTdNumber += parseInt($(elem).attr(\"colspan\"));\r\n                        }else{\r\n                            lastRowTdNumber++;\r\n                        }\r\n                    })\r\n                    // var lastRowTdNumber = $theLastTr.children(\".td-content\").length;\r\n                    if(Math.ceil(lastRowTdNumber/2) < searchColNum){\r\n                        suppleSearchColCount = searchColNum - Math.ceil(lastRowTdNumber/2);\r\n                        // console.error(suppleSearchColCount);\r\n                        searchColCount = searchColLength - suppleSearchColCount;    // 除了补全页面已有的列数之后剩余的需添加的查询列总个数\r\n                        // console.error(searchColCount);\r\n                        if(searchColCount < 0){\r\n                            suppleSearchColCount = searchColLength;\r\n                        }\r\n                        // console.error(suppleSearchColCount);\r\n\r\n                        for(var i = 0; i < suppleSearchColCount; i++){\r\n                            var theSearchCol = searchCol[i];\r\n                            self._addSearchCondition($theLastTr, theSearchCol);\r\n                        }\r\n                    }\r\n                }else{\r\n                    searchColCount = searchColLength;\r\n                }\r\n\r\n                if(searchColCount > 0){\r\n                    // 追加搜索行\r\n                    var searchRowCount = Math.ceil(searchColCount/searchColNum);    // 查询行数总数\r\n                    for(var i = 0; i < searchRowCount; i++){\r\n                        var $tr = $('<tr></tr>');\r\n                        $tbody.append($tr);\r\n                        // if 最后一行个数判断\r\n                        // 当前行的假设最大列索引+1 < 搜索列总数 ? \r\n                        // searchColCount: 5, searchRowCount:2, searchColNum:3, i:0,1, \r\n                        var theMaxColNum = (i == (searchRowCount - 1)) ? (searchColCount - (i * searchColNum)) : searchColNum;\r\n                        for(var j = 0; j < theMaxColNum; j++){\r\n                            var theIndex = i * searchColNum + j + suppleSearchColCount;\r\n                            var theSearchCol = searchCol[theIndex];\r\n                            self._addSearchCondition($tr, theSearchCol);\r\n                        }\r\n                    }\r\n                }else if(searchColCount < 0){\r\n\r\n                }\r\n\r\n\r\n                if($table.find(\".search-button\").length == 0){\r\n                    self._setSearchBarButtons(searchBar, $tbody);\r\n                }\r\n\r\n                if(params.isHideSearchRows){\r\n                    self.hideSearchBarRow(searchBar);\r\n                }\r\n            },\r\n\t        // 构建搜索栏\r\n\t        buildSearchBar: function(groupOp){\r\n\t        \tvar self = this, params = this._opt, $selector = this.$element;\r\n\t        \tvar searchCol = [], searchColNum = params.searchColNum, searchBarSetting = params.searchBarSetting;\r\n\t        \t// var fieldIdPrefix = searchBarSetting.fieldIdPrefix;\r\n\t        \tvar searchBar = null, $table = null, \r\n                    // 传递进来的查询列总数目\r\n                    searchColLength = 0,\r\n                    // 除了补全页面已有的列数之后剩余的需添加的查询列总个数\r\n                    searchColCount = 0;\r\n\r\n\t\t\t\tif(!params.isShowSearchBar){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupOp = groupOp || params.groupOp;\r\n\r\n\t\t\t\tvar colgrid= self.colModel, currentIndex = 0;\r\n\r\n\t        \tfor (var i = 0; i < colgrid.length; i++) {\r\n\t\t\t\t\tvar theColModel = colgrid[i];\r\n\t\t\t\t\tif(theColModel.searchoptions.searchhidden && theColModel.search ){\r\n\t\t\t\t\t\tsearchCol.push(theColModel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                var len = searchCol.length;\r\n                for (var i = 0; i < len - 1; i++) {\r\n                    // if(searchCol[i].searchSort > defaultColConfig.searchSort){\r\n                    //     // 从后往前排\r\n                    //     for()\r\n                    // }else if(searchCol[i].searchSort < defaultColConfig.searchSort){\r\n                    //     // 从前往后排\r\n\r\n                    // }\r\n                    for (var j = 0; j < len - 1 - i; j++) {\r\n                        if (searchCol[j].searchSort > searchCol[j+1].searchSort) {        // 相邻元素两两对比\r\n                            var temp = searchCol[j+1];        // 元素交换\r\n                            searchCol[j+1] = searchCol[j];\r\n                            searchCol[j] = temp;\r\n                        }\r\n                    }\r\n                }\r\n                // 搜索排序\r\n                // colModel.searchSort = 8;\r\n                // console.error(searchCol);\r\n\r\n                searchColLength = searchCol.length;\r\n                // console.info(searchCol);\r\n                if(searchColLength == 0){\r\n                    ui.logMessage(\"没有传入可搜索列\", \"wui.grid\", true);\r\n                    return;\r\n                }\r\n\r\n                self.buildSearchBarDOMByData(searchCol);\r\n\t        },\r\n            // 根据搜索栏数据搜索表格:搜索栏被.wui-grid-searchBar包含,且输入字段中包含属性\"data-searchrule\"存放过滤条件\r\n            getSearchFiltersData: function(){\r\n                var self = this;\r\n\r\n                if(self.container.children(\".wui-grid-searchBar\").length > 0){\r\n                    var searchBar = self.container.children(\".wui-grid-searchBar\");\r\n                    // 获取搜索条件\r\n                    var searchToolValue = ui.getForm(searchBar.children().get(0), \"\", \"value\");\r\n                    // console.error(searchToolValue)\r\n                    var colFilters = [];\r\n                    for(var key in searchToolValue){\r\n                        // console.info(ui.isEmptyType(searchToolValue[key]));\r\n                        if(ui.isEmptyType(searchToolValue[key])){\r\n                            continue;\r\n                        }\r\n                        if($(\"#\" + key).attr(\"data-searchrule\")){\r\n                            var theSearchRule = $(\"#\" + key).attr(\"data-searchrule\");\r\n                            var theSearchValue = searchToolValue[key];\r\n                            if(ui.isArray(theSearchValue)){\r\n                                theSearchValue = theSearchValue.join(\",\");\r\n                            }else if(ui.isJson(theSearchValue)){\r\n                                theSearchValue = JSON.stringify(theSearchValue);\r\n                            }\r\n\r\n                            var insertResult = \"\";\r\n                            if(ui.isString(theSearchValue)){\r\n                                insertResult = theSearchRule.insert(\",\\\"data\\\":\\\"\" + theSearchValue.replace(/\\\\/g,'\\\\\\\\').replace(/\\\"/g,'\\\\\"')  + \"\\\"\", (theSearchRule.length - 1));\r\n                            }else{\r\n                                insertResult = theSearchRule.insert(\",\\\"data\\\":\\\"\" + theSearchValue  + \"\\\"\", (theSearchRule.length - 1));\r\n                            }\r\n\r\n                            // var insertResult = theSearchRule.insert(\",\\\"data\\\":\\\"\" + theSearchValue.replace(/\\\\/g,'\\\\\\\\').replace(/\\\"/g,'\\\\\"')  + \"\\\"\", (theSearchRule.length - 1));\r\n                            colFilters.push(insertResult);\r\n                        }\r\n                    }\r\n                    // console.error(colFilters);\r\n                    return colFilters;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            getRowData: function(rowid, usedata){\r\n\r\n                var rows = this.$element.jqGrid('getRowData', rowid, usedata);\r\n\r\n                if(rowid == null){\r\n                    // 修复插件\"getRowData\"方法获取行数据,缺少最后一条数据的问题\r\n                    var allCountID = this.$element.jqGrid('getDataIDs'); //这里获取所有行 主键id 是全的 \r\n                    if(allCountID && allCountID.length > 0){\r\n                        rows.push(this.$element.jqGrid('getRowData', allCountID[allCountID.length-1], usedata)); \r\n                    }\r\n                }\r\n\r\n                return rows;\r\n            },\r\n            // localFilterData: function(colFilters, groupOp, row){\r\n            //     var that = this, result = false;\r\n\r\n            //     groupOp = groupOp || that._opt.groupOp;\r\n\r\n            //     // console.error(colFilters)\r\n            //     // console.error(groupOp)\r\n            //     // console.error(row)\r\n\r\n            //     $.each(colFilters, function(index, filter){\r\n            //         // console.error(filter)\r\n            //         var temp = ui.parseToObj(filter);\r\n            //         // console.error(temp);\r\n            //         if(row[temp.field].indexOf(temp.data) > -1){\r\n            //             result = true;\r\n            //             if(groupOp.toLowerCase() === \"or\"){\r\n            //                 result = true;\r\n            //                 return false;\r\n            //             }\r\n            //         }else{\r\n            //             if(groupOp.toLowerCase() === \"and\"){\r\n            //                 result = false;\r\n            //                 return false;\r\n            //             }\r\n            //         }\r\n            //     })\r\n\r\n            //     console.error(result)\r\n\r\n            //     return result;\r\n            // },\r\n            searchGridFromSearchBar: function(groupOp, searchUrl){\r\n                var self = this, params = this._opt,\r\n                    formValidate = ui.validate(\"[wui-attr='\" + this.defaults.searchFormAttr + \"']\");\r\n\r\n                if(!formValidate){\r\n                    formValidate = {\r\n                        valid: function(){\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if(formValidate.valid()){\r\n                    var colFilters = self.getSearchFiltersData();\r\n\r\n                    if(self.isLocalData()){\r\n                        // wui.notice(\"本地搜索\");\r\n                        \r\n                        // $t.p.search = true;\r\n                        // console.info(this.$element)\r\n                        // console.info(this.$element[0])\r\n                        // console.info(this.$element[0].p)\r\n\r\n                        // 构建过滤条件并搜索\r\n                        var ruleGroup = self._buildFilters(colFilters);\r\n\r\n                        var $t = this.$element[0];\r\n                        $t.p.search = true;\r\n                        sdata = {\r\n                            filters: ruleGroup,\r\n                            searchField: \"\",\r\n                            searchOper: \"\",\r\n                            searchString: \"\"\r\n                        }\r\n\r\n                        $.extend($t.p.postData, sdata);\r\n                        // console.error($t.p.postData)\r\n                        $($t).trigger(\"reloadGrid\",[{\r\n                            page: 1\r\n                        }]);\r\n                    }else{\r\n                        var oldSearchUrl = this.$element.jqGrid(\"getGridParam\", \"url\");\r\n                        if(searchUrl)  {\r\n                            this.$element.jqGrid(\"setGridParam\",{url: searchUrl});\r\n                        }\r\n\r\n                        if(colFilters){\r\n                            // 构建过滤条件并搜索\r\n                            self.reloadGridByFilters(colFilters, groupOp);\r\n                        }\r\n\r\n                        this.$element.jqGrid(\"setGridParam\",{\r\n                            url: oldSearchUrl\r\n                        });\r\n                    }\r\n                        \r\n                }\r\n            },\r\n            _setSearchBarButtons: function(searchBar, $element){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var searchBarSetting = params.searchBarSetting;\r\n\r\n                // 添加查询和重置按钮\r\n                var tdButton = '';\r\n                tdButton += '<td class=\"search-button ' + params.searchBarSetting.btnCellClass + '\">';\r\n                tdButton += '    <a wui-grid-action=\"search\" href=\"javascript:void(0)\" title=\"查询\" class=\"wui-btn wui-btn-primary\">';\r\n                tdButton += searchBarSetting.searchText;\r\n                tdButton += '    </a>';\r\n                tdButton += '    <a wui-grid-action=\"reset\" href=\"javascript:void(0)\" title=\"刷新\" class=\"wui-btn wui-btn-default\">';\r\n                tdButton += searchBarSetting.resetText;\r\n                tdButton += '    </a>';\r\n                if(params.isHideSearchRows){\r\n                    var rowsCount = $element.find(\"tr\").length;\r\n                    if(rowsCount > 1){\r\n                        tdButton += '    <a wui-grid-action=\"show\" href=\"javascript:void(0)\" title=\"展开\" class=\"wui-btn wui-btn-warning\">';\r\n                        tdButton += searchBarSetting.showMoreText;\r\n                        tdButton += '    </a>';\r\n                    }\r\n                }\r\n                    \r\n                tdButton += '</td>';\r\n\r\n                $element.find(\"tr\").eq(0).append(tdButton); \r\n                \r\n                $element.find('[wui-grid-action]').each(function(index, elem){\r\n                    $(elem).on(\"click\", function(){\r\n                        var action = $(this).attr(\"wui-grid-action\");\r\n                        if(action == \"search\"){\r\n                            self.searchGridFromSearchBar();\r\n                        }else if(action == \"reset\"){\r\n                            self.resetGrid();\r\n                        }else if(action == \"refresh\"){\r\n                            self.refreshGrid();\r\n                        }else if(action == \"show\"){\r\n                            $(this).attr(\"wui-grid-action\", \"hide\");\r\n                            $(this).html(searchBarSetting.hideMoreText);\r\n\r\n                            self.showSearchBarRow(searchBar);\r\n                        }else if(action == \"hide\"){\r\n                            $(this).attr(\"wui-grid-action\", \"show\");\r\n                            $(this).html(searchBarSetting.showMoreText);\r\n\r\n                            self.hideSearchBarRow(searchBar);\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            // 自定义构建搜索列\r\n            customSearchBar: function(searchCol, searchUrl){\r\n\r\n                if(searchCol.length == 0){\r\n                    ui.logMessage(\"没有传入可搜索列\", \"wui.grid\", true);\r\n                    return;\r\n                }\r\n\r\n                this.buildSearchBarDOMByData(searchCol, searchUrl);\r\n            },\r\n            /*\r\n             * 终极hack列冻结导致的高度问题\r\n             */\r\n            _hackHeight: function() {\r\n                var self = this, element = this.element;\r\n\r\n                $('#' + element + '_frozen tr').slice(1).each(function() {\r\n             \r\n                    var rowId = $(this).attr('id');\r\n             \r\n                    var frozenTdHeight = parseFloat($('td:first', this).height());\r\n                    var normalHeight = parseFloat($('#' + element + ' #' + $(this).attr('id')).find('td:first').height());\r\n             \r\n                    // 如果冻结的列高度小于未冻结列的高度则hack之\r\n                    if (frozenTdHeight < normalHeight) {\r\n             \r\n                        $('td', this).each(function() {\r\n             \r\n                            /*\r\n                             浏览器差异高度hack\r\n                             */\r\n                            var space = 0; // opera默认使用0就可以\r\n                            if (ui.CONSTANTS.isChrome()) {\r\n                                space = 0.6;\r\n                            } else if (ui.CONSTANTS.isIE()) {\r\n                                space = -0.2;\r\n                            } else if (ui.CONSTANTS.isMozila()) {\r\n                                space = 0.5;\r\n                            }\r\n             \r\n                            if (!$(this).attr('style') || $(this).attr('style').indexOf('height:') == -1) {\r\n                                $(this).attr('style', $(this).attr('style') + \";height:\" + (normalHeight + space) + \"px !important\");\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n\t\t\t// 修复冻结列的高度不对齐\r\n\t\t\t_gridplueFrozen: function(){\r\n                var self = this, params = this._opt, element = this.element, $selector = this.$element;\r\n\r\n                if(self.defaults.isFrozen){\r\n                    $selector.jqGrid('setFrozenColumns');\r\n\r\n                    var divTop = -1;\r\n                    var bdivTop = -1;\r\n                    var $frozenBDiv = $('#gview_' + element + ' .frozen-bdiv'),\r\n                        $frozenDiv = $('#gview_' + element + ' .frozen-div'),\r\n                        $jqgridBDiv = $('#gview_' + element + ' .ui-jqgrid-bdiv').eq(0);\r\n\r\n                    // opera 不需要hack\r\n                    if (ui.CONSTANTS.isOpera()) {\r\n                        divTop = 0;\r\n                        bdivTop = 0;\r\n                    }\r\n\r\n                    // console.info(divTop)\r\n                    if($frozenDiv){\r\n                        $frozenDiv.each(function(i, elem){\r\n                            $(elem).css({\r\n                                // top: $(elem).position().top + divTop\r\n                            });\r\n                        })\r\n                            \r\n                    }\r\n                    \r\n                    if($frozenBDiv){\r\n                        $frozenBDiv.each(function(i, elem){\r\n                            $(elem).css({\r\n                                // top: $(elem).position().top + bdivTop,\r\n                                height: $jqgridBDiv.height()\r\n                            });\r\n                        })\r\n                        // $frozenBDiv.css({\r\n                        //     top: $frozenBDiv.position().top + bdivTop,\r\n                        //     height: $jqgridBDiv.height()\r\n                        // });\r\n                    }\r\n                        \r\n                    self._hackHeight();\r\n                }\r\n                    \r\n\t\t\t},\r\n\t\t\t// 筛选Grid:colmenu:true,hidden:false,!key\r\n\t\t\t_screenGrid: function(obj){\r\n\t\t\t\tvar self = this, param = this._opt, $selector = this.$element;\r\n\r\n\t\t\t\tvar btnhtml = \"<ul class='dropdown-menu checkbox-menu'></ul>\";\r\n\t\t\t\tvar colgrid = $selector.jqGrid('getGridParam','colModel');\r\n                // console.info(colgrid);\r\n\t\t\t\tvar lihtml = '';\r\n\t\t\t\tif(obj.children('.dropdown-menu').length == 0){\r\n\t\t\t\t\tobj.append(btnhtml);\r\n\t\t\t\t\tfor (var i=0; i< colgrid.length;i++){\r\n                        var theGridCol = colgrid[i];\r\n\t\t\t\t\t\t// console.info(colgrid[i]);\r\n                        // hidedlg是否隐藏筛选列,hidden是否隐藏\r\n                        var isScreenCol = (theGridCol.colmenu && !(theGridCol.key) && !(theGridCol.frozen) && ((theGridCol.hidden && theGridCol.hidedlg) || !(theGridCol.hidden)));\r\n\t\t\t\t\t\tif(isScreenCol){\r\n                            var input ='';\r\n                            if(!theGridCol.hidedlg){\r\n                                input = \"<input type='checkbox' checked value='\"+ theGridCol.name +\"' />\" \r\n                            }else{\r\n                                input = \"<input type='checkbox' value='\"+ theGridCol.name +\"' />\" \r\n                            }\r\n                            lihtml += \"<li data-stopPropagation='true'><label class='checkbox'>\"+ input + \" \" + theGridCol.label + \"</label></li>\"\r\n\t\t\t\t\t\t\t// lihtml += \"<li data-stopPropagation='true'><label class='checkbox'><input type='checkbox' checked value='\"+ colgrid[i].name +\"' /> \"+ colgrid[i].label + \"</label></li>\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobj.find('.checkbox-menu').append(lihtml);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//阻止事件冒泡\r\n\t\t\t\t$(\"ul.dropdown-menu\").bind(\"click\", \"[data-stopPropagation]\", function(e) {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t });\r\n\r\n\t\t\t\t//绑定事件\r\n\t\t\t\t$('.checkbox-menu li input:checkbox').bind('change',function(e){\r\n\t\t\t\t\tvar name = $(this).val();\r\n\t\t\t\t\tif( $(this).prop('checked') == true ){\r\n\t\t\t\t\t\t$selector.jqGrid().showCol(name).trigger('reloadGrid');\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t$selector.jqGrid().hideCol(name).trigger('reloadGrid');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar pWidth = $selector.parent().parent().width();\r\n\t\t\t\t\t$selector.width(pWidth);\r\n\t\t\t\t\t$selector.parent().parent().prev().find('.ui-jqgrid-hbox').width(pWidth);\r\n\t\t\t\t\t$selector.parent().parent().prev().find('.ui-jqgrid-htable').width(pWidth);\r\n\t\t\t\t\t// console.info($selector.html());\r\n\t\t\t\t\t// $selector.jqGrid().updateColumns();\r\n\t\t\t\t\t// self._fillWidth();\r\n\t\t\t\t\t// $selector.setGridWidth(300);\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tresetGrid: function(){\r\n\t\t\t\tvar self = this, $selector = this.$element;\r\n\r\n                if(self.container.children(\".wui-grid-searchBar\").length > 0){\r\n                    var searchBar = self.container.children(\".wui-grid-searchBar\").eq(0);\r\n                    ui.emptyForm(searchBar.children().get(0));\r\n                }\r\n\r\n                if(self.isLocalData()){\r\n                    wui.notice(\"本地重置\");\r\n\r\n                    var $t = this.$element[0];\r\n                    $t.p.search = true;\r\n                    sdata = {\r\n                        filters: \"\",\r\n                        searchField: \"\",\r\n                        searchOper: \"\",\r\n                        searchString: \"\"\r\n                    }\r\n                    $.extend($t.p.postData, sdata);\r\n                    $($t).trigger(\"reloadGrid\",[{page:1}]);\r\n                }else{\r\n                    var postData = $selector.jqGrid(\"getGridParam\", \"postData\");\r\n                    // 调用setGridParam设置postdata值之前先清空表格postData属性的值\r\n                    $.each(postData, function (k, v) {  \r\n                        delete postData[k];  \r\n                    });\r\n                    \r\n                    $selector.jqGrid(\"setGridParam\",{page:1}).trigger(\"reloadGrid\");\r\n                }\r\n\r\n\r\n                \r\n\t\t\t\t// $(\"#refresh_\" + selector).click();\r\n\t\t\t},\r\n            refreshGrid: function(){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var thePage = $selector.jqGrid('getGridParam','page');//获取当前页\r\n                // var postData = $selector.jqGrid(\"getGridParam\", \"postData\");\r\n                // console.info(postData);\r\n                $selector.jqGrid('setGridParam',{\r\n                        url : params.url,\r\n                        datatype : params.dataType,\r\n                        page : thePage\r\n                }).trigger(\"reloadGrid\");\r\n            },\r\n\t\t\trefreshData: function(){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n\t\t\t\tvar thePage = $selector.jqGrid('getGridParam','page');//获取当前页\r\n\t\t\t\t$selector.jqGrid('setGridParam',{\r\n\t\t\t\t\t\turl : params.url,\r\n\t\t\t\t        datatype : params.dataType,\r\n\t\t\t\t        page : thePage\r\n\t\t\t\t}).trigger(\"reloadGrid\");\r\n\t\t\t},\r\n\t\t\t// 返回指定行的数据,返回数据类型为name:value,name为colModel中的名称,value为所在行的列的值\r\n\t\t\t// 如果根据rowid找不到则返回空。\r\n\t\t\t// 注意：在编辑模式下不能用此方法来获取数据,它得到的并不是编辑后的值\r\n\t\t\tgetSelectedRows: function(name, isRealData){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n                if(isRealData === undefined){\r\n                    isRealData = false;\r\n                }\r\n\r\n\t\t\t\tvar keyName = $selector.jqGrid(\"getGridParam\", \"keyName\");\t// 获取关键字段名\r\n\t\t\t\t// return keyName;\r\n\t\t\t\tvar rowDatas = [], selectedIDs = $selector.getGridParam(\"selarrrow\");\r\n                var len = selectedIDs.length;\r\n                // console.info(selectedIDs);\r\n                if(isRealData){\r\n                    if(!name){\r\n                        for(var i = 0; i < len; i++){\r\n                            var rowid = selectedIDs[i];\r\n                            var rowData = self.getRowDataById(rowid, true);\r\n                            // console.info(rowData);\r\n                            rowDatas.push(rowData);\r\n                        }\r\n                    }else{\r\n                        for(var i = 0; i < len; i++){\r\n                            var rowid = selectedIDs[i];\r\n                            // console.info(rowid);\r\n                            var row = self.getRowDataById(rowid, true);\r\n                            // console.info(row)\r\n                            if(ui.isArray(name)){\r\n                                var rowData = {};\r\n                                for(var j = 0; j < name.length; j++){\r\n                                    var key = name[j];\r\n                                    rowData[key] = row[key];\r\n                                }\r\n                                rowDatas.push(rowData);\r\n                            }else{\r\n                                // var rowData = $selector.jqGrid(\"getRowData\", selectedIDs[i]);\r\n                                var rowData = row[name];\r\n                                // rowData.rowid = selectedIDs[i];\r\n                                rowDatas.push(rowData);\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    if(!name){   // 默认返回选中行的Key集合\r\n                        // rowDatas = selectedIDs;\r\n                        for(var i = 0; i < len; i++){\r\n                            var rowData = self.getRowDataById(selectedIDs[i], false);\r\n                            rowDatas.push(rowData);\r\n                        }\r\n                    }else{\r\n                        var len = selectedIDs.length;\r\n\r\n                        for(var i = 0; i < len; i++){\r\n                            var rowid = selectedIDs[i];\r\n                            if(ui.isArray(name)){\r\n                                var rowData = {};\r\n                                for(var j = 0; j < name.length; j++){\r\n                                    var key = name[j];\r\n                                    if(key == keyName){\r\n                                        rowData[key] = rowid;\r\n                                    }else{\r\n                                        rowData[key] = $selector.jqGrid(\"getCell\", rowid, key);\r\n                                    }\r\n                                }\r\n                                rowDatas.push(rowData);\r\n                            }else{\r\n                                // var rowData = $selector.jqGrid(\"getRowData\", selectedIDs[i]);\r\n                                var rowData = $selector.jqGrid(\"getCell\", selectedIDs[i], name);\r\n                                // rowData.rowid = selectedIDs[i];\r\n                                rowDatas.push(rowData);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\t\t\t\t// if(!name || name == keyName){\t// 默认返回选中行的Key集合\r\n\t\t\t\t// \trowDatas = selectedIDs;\r\n\t\t\t\t// }else{\r\n\t\t\t\t// \tvar len = selectedIDs.length;\r\n\r\n\t\t\t\t// \tfor(var i = 0; i < len; i++){\r\n\t\t\t\t// \t\tvar rowid = selectedIDs[i];\r\n\t\t\t\t// \t\tif(ui.isArray(name)){\r\n\t\t\t\t// \t\t\tvar rowData = {};\r\n\t\t\t\t// \t\t\tfor(var j = 0; j < name.length; j++){\r\n\t\t\t\t// \t\t\t\tvar key = name[j];\r\n\t\t\t\t// \t\t\t\tif(key == keyName){\r\n\t\t\t\t// \t\t\t\t\trowData[key] = rowid;\r\n\t\t\t\t// \t\t\t\t}else{\r\n\t\t\t\t// \t\t\t\t\trowData[key] = $selector.jqGrid(\"getCell\", rowid, key);\r\n\t\t\t\t// \t\t\t\t}\r\n\t\t\t\t// \t\t\t}\r\n\t\t\t\t// \t\t\trowDatas.push(rowData);\r\n\t\t\t\t// \t\t}else{\r\n\t\t\t\t// \t\t\t// var rowData = $selector.jqGrid(\"getRowData\", selectedIDs[i]);\r\n\t\t\t\t// \t\t\tvar rowData = $selector.jqGrid(\"getCell\", selectedIDs[i], name);\r\n\t\t\t\t// \t\t\t// rowData.rowid = selectedIDs[i];\r\n\t\t\t\t// \t\t\trowDatas.push(rowData);\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t}\r\n\t\t\t\t// }\r\n\t\t\t\treturn rowDatas;\r\n\t\t\t},\r\n            // 根据行id获取该行数据\r\n            // return {JSON}\r\n            getRowDataById: function(rowid, isRealData){\r\n                var rowData = null, loadData = this.loadData, $selector = this.$element;\r\n                if(isRealData === undefined){\r\n                    isRealData = false;\r\n                }\r\n\r\n                if(isRealData){\r\n                    var keyName = $selector.jqGrid(\"getGridParam\", \"keyName\");  // 获取关键字段名\r\n                    // console.info(keyName);\r\n                    $.each(loadData, function(i, row){\r\n                        if(row[keyName] == rowid){\r\n                            rowData = row;\r\n                            return false;\r\n                        }\r\n                    })\r\n                }else{\r\n                    rowData = $selector.jqGrid(\"getRowData\", rowid);\r\n                }\r\n\r\n                return rowData;\r\n            },\r\n\t\t\t// 通过rowid获取行数据\r\n\t\t\tgetRowsDataById: function(rowids, isRealData){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element, loadData = this.loadData;\r\n                if(isRealData === undefined){\r\n                    isRealData = false;\r\n                }\r\n                if(!rowids){\r\n                    if(isRealData){\r\n                        return loadData;\r\n                    }else{\r\n                        // var results = $selector.jqGrid(\"getRowData\");\r\n                        // // 修复插件\"getRowData\"方法获取行数据,缺少最后一条数据的问题\r\n                        // var allCountID = $selector.jqGrid('getDataIDs'); //这里获取所有行 主键id 是全的  \r\n                        // results.push($selector.jqGrid('getRowData', allCountID[allCountID.length-1]));\r\n\r\n                        var results = this.getRowData();\r\n                        return results;\r\n                    }\r\n                    \r\n                }else{\r\n                    if(typeof rowids === \"string\"){\r\n                        rowids = rowids.split(\",\");\r\n                    }\r\n\r\n                    var _len = rowids.length, rowsData = [];\r\n                    for(var i = 0; i < _len; i++){\r\n                        var rowData = self.getRowDataById(rowids[i], isRealData);\r\n                        rowsData.push(rowData);\r\n                    }\r\n                    return rowsData;\r\n                }\r\n\r\n\t\t\t\t// if(!rowids){\r\n\t\t\t\t// \treturn $selector.jqGrid(\"getRowData\", null, true);\r\n\t\t\t\t// }else{\r\n\t\t\t\t// \tif(typeof rowids === \"string\"){\r\n\t\t\t\t// \t\trowids = rowids.split(\",\");\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// \tvar _len = rowids.length, rowsData = [];\r\n\t\t\t\t// \tfor(var i = 0; i < _len; i++){\r\n\t\t\t\t// \t\tvar rowData = $selector.jqGrid(\"getRowData\", rowids[i], true);\r\n\t\t\t\t// \t\trowsData.push(rowData);\r\n\t\t\t\t// \t}\r\n\t\t\t\t// \treturn rowsData;\r\n\t\t\t\t// }\r\n\t\t\t},\r\n            // mutexSelectRows: function(){\r\n\r\n            // },\r\n\t\t\t// 选中或反选行:单选时,只操作第一个匹配到值的数据\r\n\t\t\tselectRows: function(rowids, isTriggerOnselectedrow){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element, selectorId = this.element;\r\n\t\t\t\tvar arr = rowids, maxNumber = params.maxNumber;\r\n\t\t\t\tisTriggerOnselectedrow = isTriggerOnselectedrow || false;\r\n                // console.info(rowids);\r\n\t\t\t\tif(typeof(rowids) === \"string\"){\r\n\t\t\t\t\tarr = rowids.split(\",\");\r\n\t\t\t\t}\r\n\r\n                if(maxNumber == 1){\r\n                    for(var i = 0; i < arr.length; i++){\r\n                        var rowid = arr[i];\r\n                        var theRadio = self.container.find('[name=\"' + self._opt.singleColSetting.name + '\"][value=\"' + rowid + '\"]');\r\n                        if(theRadio && theRadio.length > 0){\r\n                            var that = theRadio.last();\r\n                            var isChecked = that.prop(\"checked\");\r\n                            if(isChecked){\r\n                                that.prop('checked', false);\r\n                                that.removeAttr('checked');\r\n                            }else{\r\n                                that.prop('checked', true);\r\n\r\n                                var selectedIDs = $selector.getGridParam(\"selarrrow\");\r\n                                $.each(selectedIDs, function(j, selectedId){\r\n                                    $selector.jqGrid(\"setSelection\", selectedId, false);\r\n                                })\r\n                            }\r\n                            $selector.jqGrid(\"setSelection\", rowid, isTriggerOnselectedrow);\r\n                            break;\r\n                        }\r\n                    }\r\n                }else{\r\n                    for(var i = 0; i < arr.length; i++){\r\n                        $selector.jqGrid(\"setSelection\", arr[i], isTriggerOnselectedrow);\r\n                    }\r\n                }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n            // 选中行\r\n            select: function(rowids, isTriggerOnselectedrow){\r\n                var self = this, params = this._opt, $selector = this.$element, selectorId = this.element;\r\n                var arr = rowids, maxNumber = params.maxNumber;\r\n                isTriggerOnselectedrow = isTriggerOnselectedrow || false;\r\n\r\n                var selectedIds = $selector.getGridParam(\"selarrrow\");\r\n                var selectedRowids = [];\r\n\r\n                if(rowids && typeof(rowids) === \"string\"){\r\n                    arr = rowids.split(\",\");\r\n                    for(var i = 0; i < arr.length; i++){\r\n                        if(selectedIds.indexOf(arr[i]) == -1){\r\n                            selectedRowids.push(arr[i]);\r\n                        }\r\n                    }\r\n                }else if(typeof(arr) === \"object\"){\r\n                    for(var i = 0; i < arr.length; i++){\r\n                        if(selectedIds.indexOf(arr[i]) == -1){\r\n                            selectedRowids.push(arr[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(maxNumber == 1){\r\n                    for(var i = 0; i < selectedRowids.length; i++){\r\n                        var rowid = selectedRowids[i];\r\n                        // var theRadio = $selector.find('[name=\"' + self.defaults.singleColSetting.name + '\"][value=\"' + rowid + '\"]').eq(0);\r\n                        var theRadio = self.container.find('[name=\"' + self._opt.singleColSetting.name + '\"][value=\"' + rowid + '\"]');\r\n                        if(theRadio && theRadio.length > 0){\r\n\r\n                            var that = theRadio.last();\r\n                            var isChecked = that.prop(\"checked\");\r\n                            if(!isChecked){\r\n                                that.prop('checked', true);\r\n                                \r\n                                var selectedIDs = $selector.getGridParam(\"selarrrow\");\r\n                                $.each(selectedIDs, function(j, selectedId){\r\n                                    // console.info(selectedId);\r\n                                    $selector.jqGrid(\"setSelection\", selectedId, false);\r\n                                })\r\n                                $selector.jqGrid(\"setSelection\", rowid, isTriggerOnselectedrow);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }else{\r\n                    for(var i = 0; i < selectedRowids.length; i++){\r\n                        var rowid = selectedRowids[i];\r\n                        $selector.jqGrid(\"setSelection\", rowid, isTriggerOnselectedrow);\r\n                    }\r\n                }\r\n            },\r\n            // 取消选中行\r\n            unselect: function(rowids, isTriggerOnselectedrow){\r\n                var self = this, params = this._opt, $selector = this.$element, selectorId = this.element;\r\n                var arr = rowids, maxNumber = params.maxNumber;\r\n                isTriggerOnselectedrow = isTriggerOnselectedrow || false;\r\n\r\n                var selectedIds = $selector.getGridParam(\"selarrrow\");\r\n                var selectedRowids = [];\r\n\r\n                if(rowids && typeof(rowids) === \"string\"){\r\n                    arr = rowids.split(\",\");\r\n                    for(var i = 0; i < arr.length; i++){\r\n                        if(selectedIds.indexOf(arr[i]) > -1){\r\n                            selectedRowids.push(arr[i]);\r\n                        }\r\n                    }\r\n                }else if(typeof(arr) === \"object\"){\r\n                    for(var i = 0; i < arr.length; i++){\r\n                        if(selectedIds.indexOf(arr[i]) > -1){\r\n                            selectedRowids.push(arr[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if(maxNumber == 1){\r\n                    for(var i = 0; i < selectedRowids.length; i++){\r\n                        var rowid = selectedRowids[i];\r\n                        var theRadio = self.container.find('[name=\"' + self._opt.singleColSetting.name + '\"][value=\"' + rowid + '\"]');\r\n                        if(theRadio && theRadio.length > 0){\r\n                            var that = theRadio.last();\r\n                            var isChecked = that.prop(\"checked\");\r\n                            if(isChecked){\r\n                                that.removeAttr('checked');\r\n                                $selector.jqGrid(\"setSelection\", rowid, isTriggerOnselectedrow);\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    for(var i = 0; i < selectedRowids.length; i++){\r\n                        var rowid = selectedRowids[i];\r\n                        $selector.jqGrid(\"setSelection\", rowid, isTriggerOnselectedrow);\r\n                    }\r\n                }\r\n            },\r\n            selectAllRows: function(isChecked, isTriggerOnselectedrow){\r\n                var self = this, params = this._opt, $selector = this.$element, selectorId = this.element;\r\n                // var arr = rowids;\r\n                isChecked = isChecked || false;\r\n                isTriggerOnselectedrow = isTriggerOnselectedrow || false;\r\n                if(!isChecked){ // 取消选中\r\n                    $selector.jqGrid('resetSelection');\r\n                }else{\r\n                    // 触发全选按钮\r\n                    var keyName = \"cb_\" + selectorId;  // 获取关键字段名\r\n                    if(!($('#' + keyName).prop(\"checked\"))){\r\n                        $('#' + keyName).trigger(\"change\");\r\n                    }\r\n                    \r\n                }\r\n            },\r\n            // 禁用行可选\r\n            disableRows: function(rowids){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                if(rowids){\r\n                    if(typeof(rowids) === \"string\"){\r\n                        rowids = rowids.split(\",\");\r\n                    }\r\n                }else{\r\n                    rowids = $selector.jqGrid('getDataIDs'); //获取jqgrid中所有数据行的id\r\n                }\r\n                for(var i = 0; i < rowids.length; i++) {\r\n                    $selector.jqGrid(\"setSelection\", rowids[i], false); // 设置该行不能被选中。\r\n                }\r\n            },\r\n            // 启用行可选\r\n            enableRows: function(rowids){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                if(rowids){\r\n                    if(typeof(rowids) === \"string\"){\r\n                        rowids = rowids.split(\",\");\r\n                    }\r\n                }else{\r\n                    rowids = $selector.jqGrid('getDataIDs'); //获取jqgrid中所有数据行的id\r\n                }\r\n                for(var i = 0; i < rowids.length; i++) {\r\n                    $selector.jqGrid(\"setSelection\", rowids[i], true); // 设置该行不能被选中。\r\n                }\r\n            },\r\n\t\t\t// 删除选中行\r\n\t\t\tdeleteSelectedRows: function(param, isLocal){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n                \r\n\t\t\t\tvar rowDatas = [], selectedIDs = $selector.getGridParam(\"selarrrow\");\r\n\t\t\t\tif (selectedIDs && selectedIDs.length > 0) {\r\n\r\n                    if(!isLocal){\r\n                        var successCallback = param.onSuccess || param.successCallback,\r\n                            errorCallback = param.onError || param.errorCallback;      \r\n                        \r\n                        if(!param.url){\r\n                            ui.errorNotice(\"url不能为空\");\r\n                            return false;\r\n                        }\r\n\r\n                        var onSuccess = function(res){\r\n                            if(successCallback && (typeof successCallback === \"function\")){\r\n                                successCallback(res);\r\n                            }else{\r\n                                self.refreshData();\r\n                            }\r\n                            // console.info(res);\r\n                            ui.deleteDialog('dialog');\r\n                        }\r\n                        var onError = function(res){\r\n                            if(errorCallback && (typeof errorCallback === \"function\")){\r\n                                errorCallback(res);\r\n                            }\r\n                            // console.info(res);\r\n                            ui.deleteDialog('dialog');\r\n                        }\r\n                        var len = selectedIDs.length;\r\n                        var content = '您当前选择了' + len + '条数据,您确定要删除选择数据吗？';\r\n                        self.defaults.windowModal.wui.confirm(content, {title:'删除确认'}, function() {\r\n                            // deleteCallback(ids);\r\n                            var urlParam = {\r\n                                \"rowids\": selectedIDs.join(\",\")\r\n                            };\r\n                            // data[keyName] = selectedIDs.join(\",\");\r\n                            var deleteUrl = ui.buildUrl(param.url, urlParam);\r\n                            ui.ajax({\r\n                                method : param.method,\r\n                                url : deleteUrl,\r\n                                data : param.data,\r\n                                dataType : param.dataType,\r\n                                contentType : param.contentType,\r\n                                onSuccess: onSuccess,\r\n                                onError: onError\r\n                            })\r\n                        });\r\n                    }else{\r\n                        var len = selectedIDs.length;\r\n                        var content = '您当前选择了' + len + '条数据,您确定要删除选择数据吗？';\r\n                        self.defaults.windowModal.wui.confirm(content, {title:'删除确认'}, function() {\r\n                            for(var rowIndex = 0; rowIndex < len; rowIndex++){\r\n                                // 当你删除一条数据时，下一条数据的下标会往前移,所以每次删除的都是索引为0\r\n                                $selector.jqGrid(\"delRowData\", selectedIDs[0]);\r\n                            }\r\n                            ui.deleteDialog('dialog');\r\n                        });\r\n                            \r\n                    }\r\n\t\t\t\t}else{\r\n\t\t\t\t\tui.warnNotice(\"请至少选择一条数据\");\r\n\t\t\t\t}\t\t\r\n\t\t\t},\r\n\t\t\t// 显示过滤工具栏\r\n\t\t\tshowFilterSearch: function(){\r\n\t\t\t\tvar self = this, params = this._opt, selector = this.element;\r\n\t\t\t\tvar gridTableId = \"#gview_\" + selector;\r\n\t\t\t\tvar searchLine = null,\r\n\t\t\t\t\tgridDiv = $(gridTableId + ' .ui-jqgrid-bdiv'),\r\n\t\t\t\t\tsearchLineHei = null,\r\n\t\t\t\t\tgridDivHei = null;\r\n\r\n                if($(gridTableId + ' .ui-search-toolbar').length == 0){\r\n                    // 激活过滤工具栏查询\r\n                    this.$element.jqGrid('filterToolbar', {\r\n                        //stringResult : true,\r\n                        searchOnEnter: true,\r\n                        searchOperators:true\r\n                    });\r\n\r\n                    $(gridTableId + ' .ui-search-toolbar').hide();\r\n                }\r\n\r\n                searchLine = $(gridTableId + ' .ui-search-toolbar');\r\n                gridDiv = $(gridTableId + ' .ui-jqgrid-bdiv');\r\n                searchLineHei = searchLine.outerHeight();\r\n                gridDivHei = gridDiv.outerHeight();\r\n                // console.error(searchLine.is(':hidden'))\r\n\t\t\t\t\t\r\n\t\t\t\tif(searchLine.is(':hidden')){\r\n\t\t\t\t\tsearchLine.show();\r\n\t\t\t\t\tvar gridDivHei = gridDivHei - searchLineHei;\r\n\t\t\t\t\tgridDiv.height(gridDivHei);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsearchLine.hide();\r\n\t\t\t\t\tvar gridDivHei = gridDivHei + searchLineHei;\r\n\t\t\t\t\tgridDiv.height(gridDivHei);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tself._gridplueFrozen();\r\n\t\t\t},\r\n\t\t\t// 显示高级搜索\r\n\t\t\tshowSearchGrid: function(){\r\n\t\t\t\t$(\"#search_\" + this.element).click();\r\n\t\t\t},\r\n\t\t\t// 导出表格\r\n\t\t\texportGrid: function(exportConfig){\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n\t\t\t\texportConfig = exportConfig || {};\r\n\t\t\t\tonBeforeExport = exportConfig.onBeforeExport || params.onBeforeExport;\r\n\t\t\t\tvar exportUrl = exportConfig.url || params.exportUrl;\r\n\t\t\t\t$selector.jqGrid('excelExport', { url: exportUrl, beforeExport: onBeforeExport });\r\n\t\t\t},\r\n\t\t\t_getSopt: function(wstype){\r\n\t\t\t\twstype = wstype || \"text\";\r\n\r\n\t\t\t\tvar sopt;\r\n\t\t\t\tswitch (wstype) {\r\n                    // 字符串\r\n                    case \"text\":\r\n                    case \"string\":\r\n                        sopt = ['cn', 'eq', 'ne', 'bw', 'bn', 'ew', 'en', 'nc', 'nu', 'nn', 'in', 'ni'];\r\n                        break;\r\n                    // 布尔值\r\n                    case \"boolean\":\r\n                        sopt = ['eq', 'ne'];\r\n                        break;\r\n                    // 日期\r\n                    case \"date\":\r\n                        sopt = ['eq','ne', 'lt', 'le', 'gt', 'ge'];\r\n                        break;\r\n                    // 日期范围\r\n                    case \"dateRange\":\r\n                        // sopt = ['cn', 'nc'];\r\n                        sopt = ['ge', 'le'];\r\n                        break;\r\n                    // 数字\r\n                    case \"num\" :\r\n                    case \"number\" :\r\n                        sopt = ['eq','ne', 'lt', 'le', 'gt', 'ge', 'nu', 'nn', 'in', 'ni'];\r\n                        break;\r\n                    // 数字范围\r\n                    case \"numRange\":\r\n                        // sopt = ['cn', 'nc'];\r\n                        sopt = ['ge', 'le'];\r\n                        break;\r\n                    // 整数\r\n                    case \"int\" :\r\n                    case \"integer\":\r\n                        sopt = ['eq','ne', 'lt', 'le', 'gt', 'ge', 'nu', 'nn', 'in', 'ni'];\r\n                        break;\r\n                    // 整数范围\r\n                    case \"intRange\":\r\n                        // sopt = ['cn', 'nc'];\r\n                        sopt = ['ge', 'le'];\r\n                        break;\r\n                    // 浮点数\r\n                    case \"double\":\r\n                        sopt = ['eq','ne', 'lt', 'le', 'gt', 'ge', 'nu', 'nn', 'in', 'ni'];\r\n                        break;\r\n                    // 浮点数范围\r\n                    case \"doubleRange\":\r\n                        // sopt = ['cn', 'nc'];\r\n                        sopt = ['ge', 'le'];\r\n                        break;\r\n                    // 复选框\r\n                    case \"checkbox\":\r\n                        sopt = ['eq'];\r\n                        break;\r\n                    // 普通下拉框\r\n                    case \"select\":\r\n                    // 数据字典项\r\n                    case \"dictCode\":\r\n                        sopt = ['eq'];\r\n                        break;\r\n                    // wui下拉框\r\n                    case \"selectbox\":\r\n                    case \"selectBox\":\r\n                        sopt = ['eq', 'cn', 'nc'];\r\n                        break;\r\n                    // 弹出选择\r\n                    case \"choosebox\" :\r\n                    case \"chooseBox\" :\r\n                        sopt = ['eq', 'cn', 'nc'];\r\n                        break;\r\n                    default: \r\n                        // 包含\r\n                        sopt = ['cn'];\r\n                        break;\r\n\t\t\t\t}\r\n\t\t\t\treturn sopt;\r\n\t\t\t},\r\n            /*\r\n             * Grid搜索并刷新\r\n             * @param  {JSON} postSearchJson [自定义的搜索JSON对象,格式: {\"nameKeyWord\": \"陈\", \"enable\": \"1\"}]\r\n             * @param  {Array} colFilters     [自定义的搜索的条件列表,格式: [{\"field\": \"enable\", op: \"cn\", \"data\": \"1\", \"type\": \"text\"},...]]\r\n             * @param  {String} searchUrl      [重新定义搜索地址]\r\n             * @return NULL\r\n             */\r\n\t\t\tsearchGrid: function(colFilters, postSearchJson, searchUrl, groupOp) {\r\n                ui.logParamValue({\r\n                    paramName: \"colFilters\",\r\n                    paramValue: colFilters, \r\n                    methodName: \"grid.searchGrid\", \r\n                    className: FRAME_NAME, \r\n                    isDebug: true\r\n                });\r\n                ui.logParamValue({\r\n                    paramName: \"postSearchJson\",\r\n                    paramValue: postSearchJson, \r\n                    methodName: \"grid.searchGrid\", \r\n                    className: FRAME_NAME, \r\n                    isDebug: true\r\n                });\r\n\t\t\t\tvar self = this, params = this._opt, $selector = this.$element;\r\n                var newPostData = {};\r\n                colFilters = colFilters || null;\r\n                postSearchJson = postSearchJson || null;\r\n                groupOp = groupOp || null;\r\n\r\n\t         \t// postSearchJson = postSearchJson || {};\r\n\r\n                var oldSearchUrl = $selector.jqGrid(\"getGridParam\", \"url\");\r\n                if(searchUrl)  {\r\n                    $selector.jqGrid(\"setGridParam\",{url: searchUrl});\r\n                }\r\n\r\n                if(postSearchJson && ui.isJson(postSearchJson)){\r\n                    newPostData = postSearchJson;\r\n                }\r\n\r\n                if(colFilters && ui.isArray(colFilters)){\r\n                    var ruleGroup = self._buildFilters(colFilters, groupOp);\r\n                    newPostData.filters = ruleGroup;\r\n                }\r\n\r\n                var postData = $selector.jqGrid(\"getGridParam\", \"postData\");\r\n                // 调用setGridParam设置postdata值之前先清空表格postData属性的值\r\n                $.each(postData, function (k, v) {  \r\n                    delete postData[k];  \r\n                });\r\n\r\n                if(params.onBeforeSearchGrid && typeof(params.onBeforeSearchGrid) === \"function\"){\r\n                    var returnPostData = params.onBeforeSearchGrid.call(this.$element.get(0), newPostData);\r\n                    if(returnPostData && ui.isJson(returnPostData)){\r\n                        // console.info(returnPostData);\r\n                        newPostData = returnPostData;\r\n                    }\r\n                    // newPostData = params.onBeforeSearchGrid.call(this.$element.get(0), newPostData);\r\n                }\r\n\r\n                //每次提出新的查询都转到第一页  \r\n                $selector.jqGrid(\"setGridParam\", {\r\n                    postData: newPostData, \r\n                    page:1\r\n                }).trigger(\"reloadGrid\");\r\n\r\n                $selector.jqGrid(\"setGridParam\",{\r\n                    url: oldSearchUrl\r\n                });\r\n\t\t\t},\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t\r\n\t        \tif(!!newOptions){\r\n\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis._resetOption(newOptions);\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t\t        \t\t\r\n\t        \t}else{\r\n\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n\t        _resetOption: function(newOptions){\r\n\t        \tvar self = this, params = this._opt;\r\n\r\n\t        \t// $.jgrid.gridUnload(self.element);\r\n\t        \tif($(self._opt.gridToolbar) && $(self._opt.gridToolbar).length > 0){\r\n\t        \t\t$(self._opt.gridToolbar).remove();\r\n\t        \t}\r\n\r\n\t        \t$(self._grid[0].p.pager).remove();\r\n\t        \ttry {\r\n\t\t\t\t\t$.jgrid.clearBeforeUnload( self.element );\r\n\t\t\t\t\t$(\"#gbox_\" + self.element).remove();\r\n\t\t\t\t} catch (_) {}\r\n\t        \t\r\n\t        \tself.container.html(self.initDom);\r\n\t\t\t\t$.data(document.getElementById(self.element), _pluginDataName, this);\r\n\r\n                var opt = $.extend(true, {}, params, newOptions); //覆盖默认配置项\r\n                this.init(opt);\r\n\t\t\t\t// this.hasDom = false; \t\t//检查dom树中此节点是否存在\r\n\t         //    this.$element = $(\"#\" + self.element);\r\n\t         //    this.colModel = [];\r\n\t        \t// this._option = newOptions;\r\n\t        \t// this._opt = $.extend(false, {}, params, newOptions);\t//覆盖默认配置项\r\n          //       this._formatParams();\r\n\t\t\t\t// this.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t        },\r\n            addRowsData: function(rows){\r\n                var self = this, params = this._opt, $selector = this.$element;\r\n                var keyField = self.defaults.keyField;\r\n\r\n                $selector.find('.jqgird-no-text').remove();\r\n                if(!keyField){\r\n                    ui.logError(\"没有设置行数据的key字段,无法添加行数据\", \"wui.grid\", true);\r\n                    return false;\r\n                }     \r\n                \r\n                for(var i = 0;i < rows.length; i++){\r\n                    var row = rows[i];\r\n                    $selector.jqGrid('addRowData', row[keyField], rows[i]);  \r\n                }\r\n            },\r\n            setGroupHeaders: function(opt){\r\n                opt = $.extend({\r\n                    //没有表头的列是否与表头所在行的空单元格合并\r\n                    useColSpanStyle :  false,\r\n                    groupHeaders: [\r\n                        // {\r\n                        //     //合并列的起始位置 colModel中的name\r\n                        //     startColumnName : \"name1\",\r\n                        //     //合并列数 包含起始列\r\n                        //     numberOfColumns : 2,\r\n                        //     // 合并后的表头标题\r\n                        //     titleText : \"合并表头一\"\r\n                        // }\r\n                    ]\r\n                }, opt  || {})\r\n                this.$element.jqGrid('setGroupHeaders', opt);\r\n            },\r\n\t        destroy: function(){\r\n\t        \tvar self = this;\r\n                \r\n                this.$element.removeAttr(\"ui-type\");\r\n\t        \tself.$element.removeData(_pluginDataName);\r\n\t        \t$.jgrid.gridDestroy(self.element);\r\n\t        \tif($(self._opt.gridToolbar) && $(self._opt.gridToolbar).length > 0){\r\n\t        \t\t$(self._opt.gridToolbar).remove();\r\n\t        \t}\r\n\t        \tself.container.html(self.initDom);\r\n\t        },\r\n\t\t\ton: function(type, handler){\r\n                if(typeof this.handlers[type] === 'undefined') {\r\n                    this.handlers[type] = [];\r\n                    this.listeners.push(type);\r\n                }\r\n                this.handlers[type].push(handler);\r\n\t\t\t\t// if(_widgetEventType.indexOf(type) > -1){\t// WUI组件事件监听\r\n\t            // \tif(typeof this.handlers[type] === 'undefined') {\r\n\t\t           //      this.handlers[type] = [];\r\n\t\t           //      this.listeners.push(type);\r\n\t\t           //  }\r\n\t\t           //  this.handlers[type].push(handler);\r\n\t            // }\r\n\t            return this;\r\n\t        },\r\n\t        off: function(type, handler){\r\n\t        \tvar _i, _j, _listeners, _handlers, _len;\r\n\r\n                if(this.handlers[type] instanceof Array) {\r\n                    _handlers = this.handlers[type];\r\n                    _listeners = this.listeners;\r\n\r\n                    for(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n                        if(_listeners[_i] === type) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(handler === undefined){\r\n                        this.listeners.splice(_i, 1);\r\n                        delete this.handlers[type];\r\n                    }else{\r\n                        for(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n                            if(_handlers[_j] === handler) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if(_j < _len){\r\n                            this.handlers[type].splice(_j, 1);\r\n                            if(this.handlers[type].length == 0){\r\n                                this.listeners.splice(_i, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\t        \t// if(_widgetEventType.indexOf(type) > -1){\t// 取消WUI组件事件监听\r\n\t        \t// \tif(this.handlers[type] instanceof Array) {\r\n\t        \t// \t\t_handlers = this.handlers[type];\r\n\t        \t// \t\t_listeners = this.listeners;\r\n\r\n\t        \t// \t\tfor(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n\t\t        //             if(_listeners[_i] === type) {\r\n\t\t        //                 break;\r\n\t\t        //             }\r\n\t\t        //         }\r\n\r\n\t\t        //         if(handler === undefined){\r\n\t\t        //         \tthis.listeners.splice(_i, 1);\r\n\t\t        //         \tdelete this.handlers[type];\r\n\t\t        //         }else{\r\n\t\t        //         \tfor(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n\t\t\t       //              if(_handlers[_j] === handler) {\r\n\t\t\t       //                  break;\r\n\t\t\t       //              }\r\n\t\t\t       //          }\r\n\t\t\t       //          if(_j < _len){\r\n\t\t\t       //          \tthis.handlers[type].splice(_j, 1);\r\n\t\t\t       //          \tif(this.handlers[type].length == 0){\r\n\t\t\t\t      //           \tthis.listeners.splice(_i, 1);\r\n\t\t\t\t      //           }\r\n\t\t\t       //          }\r\n\t\t        //         }\r\n\t\t        //     }\r\n\t        \t// }\r\n\t\t        return this;\r\n\t        },\r\n\t        emit: function(event){\r\n\t        \t// console.info(event);\r\n\t            if(!event.target) {\r\n                    if(!this.$Maxcontainer){\r\n                        event.target = this;\r\n                    }else{\r\n                        event.target = this.$Maxcontainer;\r\n                    }\r\n                }\r\n\t            if(this.handlers[event.type] instanceof Array) {\r\n\t                var handlers = this.handlers[event.type];\r\n\t                for(var i = 0, len = handlers.length; i < len; i++) {\r\n\t                    return handlers[i](event);\r\n\t                }\r\n\t            }else{\r\n\t            \treturn false;\r\n\t            }\r\n\t            \r\n\t        },\r\n            component: function(){\r\n                return this;\r\n            }\r\n\t\t}\r\n\r\n\t\t//fn就是prototype\r\n\t\t$.fn[_pluginName] = function(param1){\r\n\t\t\t//each表示对多个元素调用,用return 是为了返回this,进行链式调用\r\n\t\t\t// console.info(param1);\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(document.getElementById(element), _pluginDataName, new uiGrid(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\t\t\t// console.info(element);\r\n\t\t\t// console.info(_pluginDataName);\r\n\t\t\t// console.info($.data(document.getElementById(element), _pluginDataName));\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"wui.grid 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('wui.grid 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 增加组件事件监听\r\n         * @event on\r\n\t\t * @param eventType {string} 可监听事件类型如下：<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 事件类型 </td>\r\n\t\t\t\t\t\t<td> 参数 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforePage\"</td>\r\n\t\t\t\t\t\t<td> event </td>\r\n\t\t\t\t\t\t<td> 点击翻页按钮填充数据之前触发此事件,同样当输入页码跳转页面时也会触发此事件,参数event.pgButton可选值:\"user\",\"first\",\"last\",\"prev\",\"next\" </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"selectedAll\"</td>\r\n\t\t\t\t\t\t<td> event </td>\r\n\t\t\t\t\t\t<td> 当表格点击全选按钮时触发,传递参数event,event.aRowids:触发复选框行的id值, event.rows:触发复选框行的全部数据, event.status:是否选中状态 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"beforeSelectedRow\"</td>\r\n\t\t\t\t\t\t<td> event </td>\r\n\t\t\t\t\t\t<td> 当用户点击当前行在未选择此行时触发。event.rowid：此行id。返回值为ture或者false。如果返回true则选择完成,如果返回false则不会选择此行也不会触发其他事件</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\"selectedRow\"</td>\r\n\t\t\t\t\t\t<td> event </td>\r\n\t\t\t\t\t\t<td> 点击行复选框之后触发,传递参数event,event.rowid: 当前行id值, event.row:当前行数据, event.status:是否选中状态 </td>\r\n\t\t\t\t\t</tr>\r\n                    <tr>\r\n                        <td>\"beforeSearchGrid\"</td>\r\n                        <td> event </td>\r\n                        <td> 当启用treegrid模式时,树节点收缩之后触发。event.rowid：当前行id；event.row:当前行数据 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"overMaxNumber\"</td>\r\n                        <td> event </td>\r\n                        <td> 当启用treegrid模式时,树节点收缩之后触发。event.rowid：当前行id；event.row:当前行数据 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeExpandTreeGridNode\"</td>\r\n                        <td> event </td>\r\n                        <td> 当启用treegrid模式时,树节点展开之前触发。event.rowid：当前行id；event.row:当前行数据 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"afterExpandTreeGridNode\"</td>\r\n                        <td> event </td>\r\n                        <td> 当启用treegrid模式时,树节点展开之后触发。event.rowid：当前行id；event.row:当前行数据 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"beforeCollapseTreeGridNode\"</td>\r\n                        <td> event </td>\r\n                        <td> 当启用treegrid模式时,树节点收缩之前触发。event.rowid：当前行id；event.row:当前行数据 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"afterCollapseTreeGridNode\"</td>\r\n                        <td> event </td>\r\n                        <td> 当启用treegrid模式时,树节点收缩之后触发。event.rowid：当前行id；event.row:当前行数据 </td>\r\n                    </tr>\r\n\t\t\t\t</tbody>\r\n            </table>\r\n\t\t * @param func {function} 事件类型触发之后的执行方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 选中一条数据时被触发\r\nuiGrid.on(\"selectedRow\", function(e){\r\n    console.log(\"selectedRow\");\r\n});</code></pre>\r\n\t\t */\r\n\t\tfunction _on(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"on\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 取消组件事件监听\r\n         * @event off\r\n\t\t * @param eventType {string} 可监听事件类型同\"on\"方法的eventType参数\r\n\t\t * @param func {function} 选填,事件类型触发之后的执行方法,不传则默认取消该类型绑定的全部事件方法\r\n\t\t * @return 组件对象\r\n         * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">// 取消组件事件监听\r\n    uiGrid.off(\"selectedRow\");</code></pre>\r\n\t\t */\r\n\t\tfunction _off(eventType, func){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\t_executeMethod(\"off\", eventType, func);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n        /**\r\n        * 选择或反选指定行(单选时,只操作第一个匹配到值的数据)\r\n        * @method selectRows\r\n\t\t* @param rowids {string/object} 选中选项的key值,多个数据用\",\"分隔或者数组封装传递\r\n\t\t* @param isTriggerOnselectedrow {Boolean} 是否触发onSelectedRow事件,默认是false\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 选择或反选指定行(单选时,只操作第一个匹配到值的数据)\r\n    uiGrid.selectRows(\"01,010101\");</code></pre>\r\n        */\r\n\t\tfunction _selectRows(rowids, isTriggerOnselectedrow){\r\n\t\t\treturn _executeMethod(\"selectRows\", rowids, isTriggerOnselectedrow);\r\n\t\t}\r\n\r\n        /*\r\n        * 选择或反选全部行\r\n        * @method selectAllRows \r\n        * @param isChecked {Boolean} 是否选中,默认是false\r\n        * @param isTriggerOnselectedrow {Boolean} 是否触发onSelectedAll事件,默认是false\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 全选\r\n    uiGrid.selectAllRows(true);</code></pre>\r\n        */\r\n        function _selectAllRows(isChecked, isTriggerOnselectedrow){\r\n            return _executeMethod(\"selectAllRows\", isChecked, isTriggerOnselectedrow);\r\n        }\r\n\r\n        /**\r\n        * 选择指定行(单选时,只操作第一个匹配到值的数据)\r\n        * @method select\r\n        * @param rowids {string/object} 选中选项的key值,多个数据用\",\"分隔或者数组封装传递\r\n        * @param isTriggerOnselectedrow {Boolean} 是否触发onSelectedRow事件,默认是false\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 设置选中行\r\n    uiGrid.select(\"01,010101\");</code></pre>\r\n        */\r\n        function _select(rowids, isTriggerOnselectedrow){\r\n            return _executeMethod(\"select\", rowids, isTriggerOnselectedrow);\r\n        }\r\n\r\n        /**\r\n        * 取消选中指定行(单选时,只操作第一个匹配到值的数据)\r\n        * @method unselect\r\n        * @param rowids {string/object} 选中选项的key值,多个数据用\",\"分隔或者数组封装传递\r\n        * @param isTriggerOnselectedrow {Boolean} 是否触发onSelectedRow事件,默认是false\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 取消选中行\r\n    uiGrid.unselect(\"01,010101\");</code></pre>\r\n        */\r\n        function _unselect(rowids, isTriggerOnselectedrow){\r\n            return _executeMethod(\"unselect\", rowids, isTriggerOnselectedrow);\r\n        }\r\n\r\n        /**\r\n    \t * 删除选中行\r\n         * @method deleteSelectedRows\r\n\t\t * @param args {JSON} 删除行配置\r\n         * @param args.url {string} 请求删除行操作的地址,后台获取到rowids参数\r\n    \t * @param args.data {json} 请求参数对象,默认为空\r\n    \t * @param args.onSuccess {function} 执行成功回调函数,默认为记录返回对象日志\r\n\t\t * @param args.onError {function} 执行失败回调函数,默认为弹出返回错误信息\r\n    \t * @param args.dataType {string} 返回数据类型,默认为\"json\"\r\n    \t * @param args.method {string} 请求方法,默认为\"post\"\r\n    \t * @param args.contentType {string} 请求数据类型,默认为\"application/json\"\r\n         * @param isLocal {Boolean} 是否本地删除,默认是false,若为true,则只会删除前端,而不会请求后台删除\r\n         * @since 0.0.1\r\n         * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 删除选中行\r\n    uiGrid.deleteSelectedRows({\r\n        url: \"/delete.aspx\"\r\n    });</code></pre>\r\n         */\r\n\t\tfunction _deleteSelectedRows(params, isLocal){\r\n\t\t\treturn _executeMethod(\"deleteSelectedRows\", params, isLocal);\r\n\t\t}\r\n\r\n        /**\r\n        * 获取选择行值\r\n        * @method getSelectedRows\r\n        * @since 0.0.1\r\n\t\t* @param [name] {string} 要获取选中行的某个字段名,不填则默认是返回整行数据\r\n        * @param isRealData {Boolean} 是否获取行的真实数据,即服务器返回的数据,若为false,则返回页面表格显示内容,默认是false\r\n        * @return 传递的类型参数的组件值\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取选择行key值\r\n    var value = uiGrid.getSelectedRows([\"id\",\"name\"]);   \r\n    // [\r\n    //  {\r\n    //      id :\"09892589-7831-4752-8112-d69e48ff4815\",\r\n    //      name :\"赵四\"\r\n    //  },\r\n    //  {\r\n    //      id :\"0e7d8ee1-c10d-436f-a4b5-4584dd8f8c67\",\r\n    //      name :\"周小涵\"\r\n    //  }\r\n    // ]</code></pre>\r\n        */\r\n\t\tfunction _getSelectedRows(name, isRealData){\r\n\t\t\treturn _executeMethod(\"getSelectedRows\", name, isRealData);\r\n\t\t}\r\n\r\n        /**\r\n        * 根据 rowid 获取行数据\r\n        * @method getRowsDataById\r\n        * @since 0.0.1\r\n\t\t* @param rowids {string} 行的Key值(若没设置key,则表示行号),多个行数据key值用逗号分隔或者数组表示,若为空表示返回当前页全部数据\r\n        * @param isRealData {Boolean} 是否获取行的真实数据,即服务器返回的数据,若为false,则返回页面表格显示内容,默认是false\r\n        * @return {Array} 行数据\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">var value = uiGrid.getRowsDataById(\"05b0f1cd-b530-4bec-9111-a4f225e130b9\");   // [{id :\"05b0f1cd-b530-4bec-9111-a4f225e130b9\",name :\"李文\",birthday :\"2000-07-09\",weight :\"107.00\",enable :\"No\",remark :\"第一名\"}]</code></pre>       \r\n        */\r\n\t\tfunction _getRowsDataById(rowids, isRealData){\r\n\t\t\treturn _executeMethod(\"getRowsDataById\", rowids, isRealData);\r\n\t\t}\r\n\r\n        /**\r\n        * 添加行数据\r\n        * @method addRowsData\r\n        * @since 0.0.1\r\n        * @param rows {Array} 要添加的行数据\r\n        * @return \r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">var rows = [\r\n    {\r\n        \"ROWNUMBER\": 1,\r\n        \"id\": \"libai\",\r\n        \"departmentId\": \"010101\",\r\n        \"departmentName\": \"销售部\",\r\n        \"name\": \"李白\",\r\n        \"birthday\": \"\\/Date(804988800000+0800)\\/\",\r\n        \"weight\": 78,\r\n        \"enable\": 0,\r\n        \"remark\": \"诗人\",\r\n        \"CreateTime\": \"2018-04-18T11:28:11\"\r\n    },\r\n    {\r\n        \"ROWNUMBER\": 2,\r\n        \"id\": \"wangwu\",\r\n        \"departmentId\": \"010101\",\r\n        \"departmentName\": \"销售部\",\r\n        \"name\": \"王五\",\r\n        \"birthday\": \"\\/Date(646502400000+0800)\\/\",\r\n        \"weight\": 1,\r\n        \"enable\": 1,\r\n        \"remark\": \"123\",\r\n        \"CreateTime\": \"2018-04-13T19:07:37\"\r\n    }\r\n]\r\n// [{id :\"05b0f1cd-b530-4bec-9111-a4f225e130b9\",name :\"李文\",birthday :\"2000-07-09\",weight :\"107.00\",enable :\"No\",remark :\"第一名\"}]\r\nvar value = uiGrid.addRowsData(rows);</code></pre>        \r\n        */\r\n        function _addRowsData(rows){\r\n            return _executeMethod(\"addRowsData\", rows);\r\n        }\r\n\r\n        /**\r\n        * 自定义搜索栏\r\n        * @method customSearchBar\r\n        * @param searchColModel {Array} 自定义搜索栏列配置,默认是[],每条数据可配置项如下表:<br/>\r\n     *  @param {String} searchColModel.label 设置该列表头名称\r\n     *  @param {String} searchColModel.name 表格列的名称,所有关键字,保留字都不能作为名称使用包括subgrid, cb and rn,默认值\"\"\r\n     *  @param {String} [searchColModel.wstype] 定义搜索元素的类型,默认值\"text\",可选参数\"text\"/\"select\"/\"selectbox\"/\"date\"/\"number\"\r\n     *  @param {String} [searchColModel.sopt] 搜索关联词,默认值\"cn\",可选值及其含义为:<br/>\r\n            {\r\n                \"eq\" :\"==\", \"ne\":\"!\",\"lt\":\"<\",\"le\":\"<=\",\"gt\":\">\",\"ge\":\">=\",\r\n                \"bw\":\"^\",\"bn\":\"!^\",\"in\":\"=\",\"ni\":\"!=\",\"ew\":\"|\",\"en\":\"!@\",\r\n                \"cn\":\"~\",\"nc\":\"!~\",\"nu\":\"#\",\"nn\":\"!#\", \"bt\":\"...\"\r\n            }\r\n     *  @param {String} [searchColModel.searchoptions] 当设置search=true时的搜索参数设置,可配置参数、默认值及其含义如下:<br/>\r\n     *  <pre class=\"language-js\"><code class=\"language-js\">{\r\n    \"searchhidden\": true, // {Boolean} 隐藏是否可选\r\n    \"value\": \":全部;1:是;0:否\", // {String/Function} 当且仅当stype为\"select\"时,设置下拉选项数据。\r\n       // 如果为string则格式为value:label,且以“;”结尾；如果为object格式为{1:'One';2:'Two'}\r\n    \"dataSource\": \"\", // {String} 当且仅当stype为\"select\"时。下拉加载服务\r\n    \"name\": \"id\", // {String} 当且仅当stype为\"select\"时。key值字段名\r\n    \"text\": \"name\", // {String} 当且仅当stype为\"select\"时。text值字段名\r\n    \"maxNumber\": 0 // {Number} 当且仅当stype为\"select\"时。下拉可选个数\r\n}</code></pre>\r\n        * @param [searchUrl] {String} 修改的查询的后台地址,不填则默认使用Grid的url地址\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">var _searchoptions = {\r\n    dataSource: \"http://xxx:xx/departmentServer\", // {String} 当且仅当stype为\"select\"时。下拉加载服务\r\n    name: \"departmentId\", // {String} 当且仅当stype为\"select\"时。key值字段名\r\n    text: \"departmentName\" // {String} 当且仅当stype为\"select\"时。text值字段名\r\n}\r\n// 查询Grid\r\nvar searchColModel = [\r\n    { label: '姓名', name: 'name' },\r\n    { label: '部门', name: 'departmentId', wstype: 'selectbox', sopt: 'eq', searchoptions: _searchoptions },     // departmentId\r\n    { label: '生日', name: 'birthday', wstype: 'date', sopt: 'eq' },  // birthday\r\n    { label: '状态', name: 'status', wstype: 'select', sopt: 'eq', searchoptions: {\r\n        value: \":全部;1:启用;0:禁用\"\r\n    }}\r\n]\r\nuiGrid.customSearchBar(searchColModel);</code></pre>\r\n        */\r\n        function _customSearchBar(searchColModel, searchUrl){\r\n            return _executeMethod(\"customSearchBar\", searchColModel, searchUrl);\r\n        }\r\n\r\n        /**\r\n        * Grid搜索并刷新\r\n        * @method searchGrid\r\n        * @param  colFilters {Array}  自定义的搜索的条件列表(拼凑到\"filters\"字段中),格式: [{\"field\": \"searchFieldName\", op: \"searchFieldOp\", \"data\": \"searchFieldName\", \"type\": \"fieldType\"},...],默认为null\r\n        * @param colFilters.field {String} 搜索字段名\r\n        * @param [colFilters.op] {String} 搜索该字段关联词,默认是\"cn\"\r\n        * @param colFilters.data {String} 搜索改字段的值\r\n        * @param [colFilters.type] {String} 该搜索字段的类型,默认是\"text\"\r\n        * @param  postSearchJson {JSON} 自定义的搜索JSON对象(不会把搜索条件拼凑到\"filters\"字段中的,后台要自己根据键值对接收),格式: {\"enable\": \"1\", \"searchFieldName\": \"searchFieldName\", ...},默认为null\r\n        * @param [searchUrl] {String} 修改搜索请求的后台地址(只在此方法生效,若要永久生效,请通过option方法修改),不填则默认使用Grid的url地址\r\n        * @param [groupOp] {String} 查询条件运算符,可选'AND'和'OR',默认是'AND'\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 拼凑到filter搜索\r\nuiGrid.searchGrid([{\"field\": \"departmentName\", op: \"eq\", \"data\": \"财务\"}])\r\n// 自定义数据搜索\r\nuiGrid.searchGrid(null, {departmentName: \"财务\", enable: \"1\"});</code></pre>\r\n        */\r\n        function _searchGrid(colFilters, postSearchJson, searchUrl){\r\n            return _executeMethod(\"searchGrid\", colFilters, postSearchJson, searchUrl);\r\n        }\r\n\r\n        /**\r\n        * 当列表宽高发生改变时，手动刷新滚动条\r\n        * @method scroll\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 刷新滚动条\r\nuiGrid.scroll();</code></pre>\r\n        */\r\n        function _scroll(){\r\n            return _executeMethod(\"scroll\");\r\n        }\r\n\r\n        /**\r\n        * 获取搜索栏的搜索数据:搜索栏被(.wui-grid-searchBar)包含,且输入字段中包含属性\"data-searchrule\"存放过滤条件,举例:data-searchrule='{\"field\":\"name\",\"op\":\"cn\",\"type\":\"text\"}'\r\n        * @method getSearchFiltersData\r\n        * @since v0.1.9\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取搜索栏的搜索数据\r\nuiGrid.getSearchFiltersData();</code></pre>\r\n        */\r\n        function _getSearchFiltersData(){\r\n            return _executeMethod(\"getSearchFiltersData\");\r\n        }\r\n\r\n        /**\r\n        * 根据搜索栏数据搜索表格:搜索栏被(.wui-grid-searchBar)包含,且输入字段中包含属性\"data-searchrule\"存放过滤条件,举例:data-searchrule='{\"field\":\"name\",\"op\":\"cn\",\"type\":\"text\"}'\r\n        * @method searchGridFromSearchBar\r\n        * @param [groupOp] {String} 查询条件运算符,可选'AND'和'OR',默认是'AND'\r\n        * @param [searchUrl] {String} 修改搜索请求的后台地址(只在此方法生效,若要永久生效,请通过option方法修改),不填则默认使用Grid的url地址\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 搜索栏搜索按钮触发\r\nuiGrid.searchGridFromSearchBar();</code></pre>\r\n        */\r\n        function _searchGridFromSearchBar(groupOp, searchUrl){\r\n            return _executeMethod(\"searchGridFromSearchBar\", groupOp, searchUrl);\r\n        }\r\n\r\n        /**\r\n        * 显示搜索栏全部搜索行\r\n        * @method showSearchBarRow\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.showSearchBarRow();</code></pre>\r\n        */\r\n        function _showSearchBarRow(){\r\n            return _executeMethod(\"showSearchBarRow\");\r\n        }\r\n\r\n        /**\r\n        * 隐藏搜索栏除了第一行之外的搜索行\r\n        * @method hideSearchBarRow\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.hideSearchBarRow();</code></pre>\r\n        */\r\n        function _hideSearchBarRow(){\r\n            return _executeMethod(\"hideSearchBarRow\");\r\n        }\r\n\r\n        /**\r\n        * 重置Grid,刷新整个列表的数据\r\n        * @method resetGrid\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.resetGrid();</code></pre>\r\n        */\r\n        function _resetGrid(){\r\n            return _executeMethod(\"resetGrid\");\r\n        }\r\n\r\n        /**\r\n        * 刷新当前列表页的数据(保留查询条件刷新)\r\n        * @method refreshGrid\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.refreshGrid();</code></pre>\r\n        */\r\n        function _refreshGrid(){\r\n            return _executeMethod(\"refreshGrid\");\r\n        }\r\n\r\n        /**\r\n        * 刷新当前列表页的数据\r\n        * @method refreshData\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.refreshData();</code></pre>\r\n        */\r\n        function _refreshData(){\r\n            return _executeMethod(\"refreshData\");\r\n        }\r\n\r\n        /**\r\n        * 禁用行可选\r\n        * @method disableRows\r\n        * @since 0.0.1\r\n        * @param rowids {string} 行的Key值(若没设置key,则表示行号),多个行数据key值用逗号分隔或者数组表示,若为空表示禁用当前页全部数据\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.disableRows();</code></pre>\r\n        */\r\n        function _disableRows(rowids){\r\n            return _executeMethod(\"disableRows\", rowids);\r\n        }\r\n\r\n        /**\r\n        * 启用行可选\r\n        * @method enableRows\r\n        * @since 0.0.1\r\n        * @param rowids {string} 行的Key值(若没设置key,则表示行号),多个行数据key值用逗号分隔或者数组表示,若为空表示禁用当前页全部数据\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.enableRows();</code></pre>\r\n        */\r\n        function _enableRows(rowids){\r\n            return _executeMethod(\"enableRows\", rowids);\r\n        }\r\n\r\n        /**\r\n        * 合并行\r\n        * @method mergerRows\r\n        * @since 0.0.1\r\n        * @param cellName {string} 要合并的行字段名,多个用逗号分隔\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.mergerRows(\"cellName\");</code></pre>\r\n        */\r\n        function _mergerRows(cellName){\r\n            return _executeMethod(\"mergerRows\", cellName);\r\n        }\r\n\r\n        /**\r\n        * 导出Grid\r\n        * @method exportGrid\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.exportGrid();</code></pre>\r\n        */\r\n        function _exportGrid(){\r\n            return _executeMethod(\"exportGrid\");\r\n        }\r\n\r\n        /**\r\n        * 显示高级搜索\r\n        * @method showSearchGrid\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.showSearchGrid();</code></pre>\r\n        */\r\n        function _showSearchGrid(){\r\n            return _executeMethod(\"showSearchGrid\");\r\n        }\r\n\r\n        /**\r\n        * 显示过滤工具栏\r\n        * @method showFilterSearch\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.showFilterSearch();</code></pre>\r\n        */\r\n        function _showFilterSearch(){\r\n            return _executeMethod(\"showFilterSearch\");\r\n        }\r\n\r\n        /**\r\n        * 合并表头\r\n        * @method setGroupHeaders\r\n        * @since 0.1.9\r\n        * @param params {JSON} 合并的配置\r\n        * @param [params.useColSpanStyle=false] {Boolean} 没有表头的列是否与表头所在行的空单元格合并\r\n        * @param params.groupHeaders {Array} 合并表头字段\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 参数名 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 类型 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> startColumnName </td>\r\n                        <td> 合并列的起始位置, colModel中的name </td>\r\n                        <td> String </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> numberOfColumns </td>\r\n                        <td> 合并列数 包含起始列 </td>\r\n                        <td> Number </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> titleText </td>\r\n                        <td> 合并后的表头标题 </td>\r\n                        <td> String </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table> \r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">uiGrid.setGroupHeaders({\r\n    groupHeaders: [\r\n        { startColumnName: 'trainPlanId', numberOfColumns: 1, titleText: \"操作\" },\r\n        { startColumnName: 'status', numberOfColumns: 3, titleText: '合并表头1' },\r\n        { startColumnName: 'trainBeginTime', numberOfColumns: 2, titleText: 'Shiping' }\r\n    ]\r\n});</code></pre>       \r\n        */\r\n        function _setGroupHeaders(params){\r\n            return _executeMethod(\"setGroupHeaders\", params);\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n            <table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数类型 </td>\r\n                        <td> 含义 </td>\r\n                        <td> 返回值 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> undefined </td>\r\n                        <td> 获取组件的配置参数 </td>\r\n                        <td> JSON 组件的配置参数 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> String </td>\r\n                        <td> 获取传入字符串对应的参数值 </td>\r\n                        <td> 传递的字符串对应的组件配置值 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> JSON </td>\r\n                        <td> 重置组件参数配置 </td>\r\n                        <td> 组件对象 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 获取组件参数\r\nuiGrid.option();</code></pre>\r\n        */\r\n\t\tfunction _option(params){\r\n\t\t\treturn _executeMethod(\"option\", params);\r\n\t\t}\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">// 销毁组件：销毁之后可通过重新初始化组件启用组件\r\nuiGrid.destroy();</code></pre>\r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n        * <pre class=\"language-js\"><code class=\"language-js\">var component = uiGrid.component();</code></pre>\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n         * <pre class=\"language-js\"><code class=\"language-js\">var myGrid = uiGrid.init();</code></pre>\r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t$('#' + element)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\t\treturn {\r\n            // 初始化\r\n            init: _init,\r\n            // 增加监听事件\r\n\t\t\ton: _on,\t\r\n            // 删除监听事件\r\n\t\t\toff: _off,\t\r\n            // 选择或反选指定行。如果onselectrow为ture则会触发事件onSelectRow，onselectrow默认为ture\r\n            select: _select,\r\n            // 选择或反选指定行。如果onselectrow为ture则会触发事件onSelectRow，onselectrow默认为ture\r\n            unselect: _unselect,\r\n            // 选择或反选指定行。如果onselectrow为ture则会触发事件onSelectRow，onselectrow默认为ture\r\n\t\t\tselectRows: _selectRows,\r\n            // 选择或反选全部行。如果onselectrow为ture则会触发事件onSelectRow，onselectrow默认为ture\r\n\t\t\tselectAllRows: _selectAllRows,\r\n            // 获取选择行key值\r\n            getSelectedRows : _getSelectedRows,\r\n            // 根据行数据key值获取行数据\r\n            getRowsDataById: _getRowsDataById,\r\n            // 获取搜索栏的搜索数据\r\n            getSearchFiltersData: _getSearchFiltersData,\r\n            // 删除选中行\r\n\t\t\tdeleteSelectedRows: _deleteSelectedRows,\r\n            // 搜索栏搜索方法\r\n            searchGridFromSearchBar: _searchGridFromSearchBar,\r\n            // 显示搜索栏的全部搜索行\r\n            showSearchBarRow: _showSearchBarRow,\r\n            // 隐藏搜索栏除了第一行之外的搜索行\r\n            hideSearchBarRow: _hideSearchBarRow,\r\n            // 查询Grid\r\n\t\t\tsearchGrid : _searchGrid,\r\n            // 自定义搜索栏\r\n            customSearchBar: _customSearchBar,\r\n            // 重置Grid,刷新整个列表的数据\r\n            resetGrid : _resetGrid,\t\t\t\t\t\r\n            // 刷新当前列表页的数据\r\n            refreshData : _refreshData,\t\r\n            // 刷新当前列表页的数据(保留查询条件)\r\n            refreshGrid: _refreshGrid,\r\n            // 导出Grid\r\n            exportGrid : _exportGrid,\r\n            // 显示高级搜索\r\n            showSearchGrid : _showSearchGrid,\r\n            // 显示过滤工具栏\r\n            showFilterSearch : _showFilterSearch,\r\n            // 设置或获取组件配置\t\r\n\t\t\toption: _option,\r\n            // 禁用行可选\r\n            disableRows: _disableRows,\r\n            // 启用行可选\r\n            enableRows: _enableRows,    \r\n            // 添加行数据\r\n            addRowsData: _addRowsData,\r\n            // 合并表头  \r\n            setGroupHeaders: _setGroupHeaders,\r\n            // 当列表宽高发生改变时，手动刷新滚动条\r\n            scroll: _scroll,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n            // 合并行\r\n            mergerRows: _mergerRows,\r\n            // 销毁组件\r\n\t\t\tdestroy: _destroy\t\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );","/**\r\n * <h3>WUI 弹出选择组件</h3>\r\n * @module Components\r\n */\r\n;(function (ui,$, undefined) {\r\n\r\n    /**\r\n     * <h3>富文本框组件</h3>\r\n     * <ol>\r\n     * <li>1、所见即所得富文本web编辑器;</li>\r\n     * <li>2、通过简单配置即可初始化;</li>\r\n     * <li>3、丰富的工具栏操作。</li>\r\n     * </ol>\r\n     * <h3>依赖插件</h3>\r\n     * <ul>\r\n     * <li><a href=\"https://ueditor.baidu.com/website/\" target=\"_blank\">ueditor</a></li>\r\n     * </ul>\r\n     * <h3>需引入插件</h3>\r\n     * <pre class=\"language-html\"><code class=\"language-html\">&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/ueditor/ueditor.config.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/ueditor/ueditor.all.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/ueditor/lang/zh-cn/zh-cn.js&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/plugins/ueditor/ueditor.parse.min.js&quot;&gt;&lt;/script&gt;</code></pre>\r\n     * <h3>预览地址：<a href=\"../../examples/index.html?isShowMenu=1&rootId=wuiUeditor\" target=\"_blank\">demo</a></h3>\r\n     * <h3 style=\"display:none\">方法说明：</h3>\r\n     * <ol style=\"display:none\">\r\n     * <li>{{#crossLink \"wui.ueditor/init\"}}{{/crossLink}}: 初始化 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/set\"}}{{/crossLink}}: 设置组件值 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/get\"}}{{/crossLink}}: 获取组件值 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/enabled\"}}{{/crossLink}}: 启用工具栏操作和输入 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/disabled\"}}{{/crossLink}}: 禁用工具栏操作和输入 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/option\"}}{{/crossLink}}: 设置或者获取组件配置 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/reset\"}}{{/crossLink}}: 重置组件 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/empty\"}}{{/crossLink}}: 清空组件内容 </li>\r\n     * <li>{{#crossLink \"wui.ueditor/destroy\"}}{{/crossLink}}: 销毁组件 </li>\r\n     * </ol>\r\n     *  @namespace wui\r\n     *  @class ueditor\r\n     *  @constructor \r\n     *  @param {string} id  初始化组件元素ID名  \r\n     *  @param {object} option  \r\n     *  @param {Array} [option.toolbars] 工具栏菜单,COMMAND列表如下<br />\r\n     \t\t<div class=\"command-list\">\r\n\t\t\t    <fileset>\r\n\t\t\t        <table class=\"table table-bordered table-condensed\">\r\n\t\t\t            <thead>\r\n\t\t\t                <tr>\r\n\t\t\t                    <th>#</th>\r\n\t\t\t                    <th>命令</th>\r\n\t\t\t                    <th>描述</th>\r\n\t\t\t                </tr>\r\n\t\t\t            </thead>\r\n\t\t\t            <tbody>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>1</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::anchor\">anchor</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入锚点\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>2</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::autosubmit\">autosubmit</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        提交表单\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>3</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::autotypeset\">autotypeset</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        对当前编辑器的内容执行自动排版， 排版的行为根据config配置文件里的“autotypeset”选项进行控制。\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>4</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::bold\">bold</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体加粗\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>5</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::italic\">italic</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体倾斜\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>6</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::subscript\">subscript</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        下标文本，与“superscript”命令互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>7</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::superscript\">superscript</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        上标文本，与“subscript”命令互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>8</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::blockquote\">blockquote</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        添加引用\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>9</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::cleardoc\">cleardoc</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        清空文档\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>10</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::touppercase\">touppercase</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        把选区内文本变大写，与“tolowercase”命令互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>11</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::tolowercase\">tolowercase</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        把选区内文本变小写，与“touppercase”命令互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>12</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::customstyle\">customstyle</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        根据config配置文件里“customstyle”选项的值对匹配的标签执行样式替换。\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>13</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::directionality\">directionality</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        文字输入方向\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>14</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::forecolor\">forecolor</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体颜色\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>15</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::backcolor\">backcolor</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体背景颜色\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>16</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::fontsize\">fontsize</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体大小\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>17</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::fontfamily\">fontfamily</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体样式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>18</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::underline\">underline</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体下划线,与删除线互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>19</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::strikethrough\">strikethrough</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体删除线,与下划线互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>20</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::fontborder\">fontborder</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        字体边框\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>21</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::formatmatch\">formatmatch</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        格式刷\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>22</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::horizontal\">horizontal</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入分割线\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>23</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::imagefloat\">imagefloat</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        图片对齐方式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>24</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::insertimage\">insertimage</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入图片\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>25</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::indent\">indent</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        缩进\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>26</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::insertcode\">insertcode</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入代码\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>27</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::inserthtml\">inserthtml</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入html代码\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>28</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::insertparagraph\">insertparagraph</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入段落\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>29</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::justify\">justify</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        段落对齐方式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>30</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::lineheight\">lineheight</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        行距\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>31</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::link\">link</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入超链接\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>32</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::unlink\">unlink</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        取消超链接\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>33</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::insertorderedlist\">insertorderedlist</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        有序列表，与“insertunorderedlist”命令互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>34</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::insertunorderedlist\">insertunorderedlist</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        无序列表，与“insertorderedlist”命令互斥\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>35</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::music\">music</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入音乐\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>36</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::pagebreak\">pagebreak</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入分页符\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>37</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::paragraph\">paragraph</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        段落格式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>38</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::preview\">preview</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        预览\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>39</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::print\">print</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        打印\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>40</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::pasteplain\">pasteplain</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        启用或取消纯文本粘贴模式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>41</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::removeformat\">removeformat</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        清除文字样式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>42</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::rowspacing\">rowspacing</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        设置段间距\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>43</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::selectall\">selectall</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        选中所有内容\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>44</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::source\">source</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        切换源码模式和编辑模式\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>45</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::time\">time</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入时间，默认格式：12:59:59\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>46</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::date\">date</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入日期，默认格式：2013-08-30\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>47</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::undo\">undo</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        撤销上一次执行的命令\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>48</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::redo\">redo</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        重做上一次执行的命令\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>49</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::insertvideo\">insertvideo</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入视频\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t                <tr>\r\n\t\t\t                    <td>50</td>\r\n\t\t\t                    <td><a href=\"#COMMAND::webapp\">webapp</a></td>\r\n\t\t\t                    <td>\r\n\t\t\t                        插入百度应用\r\n\t\t\t                    </td>\r\n\t\t\t                </tr>\r\n\t\t\t            </tbody>\r\n\t\t\t        </table>\r\n\t\t\t    </fileset>\r\n\t\t\t</div>\r\n     *  @param {boolean} [option.elementPathEnabled] 是否启用元素路径,默认是false\r\n     *  @param {boolean} [option.wordCount] 是否开启字数统计,默认是true\r\n     *  @param {boolean} [option.maximumWords]   允许的最大字符数,默认是500\r\n     *  @param {Number} [option.initialFrameWidth]   初始化编辑器宽度,默认是\"100%\"\r\n     *  @param {Number} [option.initialFrameHeight]  初始化编辑器宽度,默认是320\r\n     *  @param {boolean} [option.allHtmlEnabled]  提交到后台的数据是否包含整个html字符串,默认是false\r\n     *  @param {boolean} [option.autoSyncData]  是否自动同步编辑器要提交的数据,默认是true\r\n     *  @param {String} [option.initialContent]   初始化编辑器的内容,也可以通过textarea/script/input的value赋值,默认是\"\"\r\n     *  @param {String} [option.wordOverFlowMsg]   超出字数限制提示\r\n     *  @example\r\n     * \r\n<pre class=\"language-markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"zh-CN\"&gt;\r\n  &nbsp;&nbsp;&lt;head&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta charset=&quot;utf-8&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;WUI框架组件模板&lt;/title&gt;\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件布局文件 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/layout/wui.min.css&quot;/&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 框架主题样式 --&gt;</span>\r\n    <span class=\"code-bold\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;link rel=&quot;stylesheet&quot; id=&quot;wuiSkin&quot; type=&quot;text/css&quot; href=&quot;http://platform.depts.bingosoft.net/wui/dist/themes/default/style.css&quot;/&gt;</span>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- IE兼容性文件引入--&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;!--[if lt IE 9]&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/html5shiv.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/respond.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/excanvas.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/placeholder.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-shim.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/es5-sham.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/json3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]--&gt;\r\n  &nbsp;&nbsp;&lt;/head&gt;\r\n  &nbsp;&nbsp;&lt;body&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;Date: &lt;input type=\"text\" id=\"ueditorId\" /&gt;\r\n    \r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-warm\">&lt;!-- jQuery (WUI框架的所有 组件都依赖 jQuery，所以必须放在前边) --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 公共插件脚本 <span class=\"code-warm\">(必选)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.plugins.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- 组件引用的第三方插件脚本 --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/ueditor/ueditor.config.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/ueditor/ueditor.all.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/ueditor/lang/zh-cn/zh-cn.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot; src=&quot;http://platform.depts.bingosoft.net/wui/dist/plugins/ueditor/ueditor.parse.min.js&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI框架完整配置文件 <span class=\"code-warm\">(不作为公共文件,每个项目根据自己的实际需求配置,加载在组件脚本前面)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"code-bold\">&lt;!-- WUI组件脚本 <span class=\"code-warm\">(这一项包含在前面几项之后引入)</span> --&gt;</span>\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script src=&quot;http://platform.depts.bingosoft.net/wui/dist/wui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;\r\n            // 组件初始化配置\r\n            var uiUeditor = wui.ueditor( \"ueditorId\",{\r\n\t\t\t\tinitialFrameWidth: 200\r\n\t\t\t});\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;\r\n  &nbsp;&nbsp;&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n     *\r\n     */\r\n\tui.ueditor = function(element, options){\r\n        // 控件常规配置\r\n        var _pluginName = \"uiUeditor\",\r\n            _pluginDataName = 'plugin_'+_pluginName,\r\n            _widgetName = \"ueditor\";\r\n\r\n        ui.logMethodCalled({\r\n            className: FRAME_NAME,\r\n            methodName: _widgetName,\r\n            isDebug: true,\r\n            id: element\r\n        });\r\n        // ui.logMethodCalled(_widgetName, FRAME_NAME, element);\r\n        \r\n        if(!ui.checkIsLoadPlugins(_widgetName)){\r\n            return false;\r\n        }\r\n        \r\n\t\tif(!$(\"#\" + element).exist()){\r\n\t\t\tui.logError(\"【\" + _widgetName + \"】\" + \"当前页面不存在 ID 为\" + element + \" 的DOM节点\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\r\n\t\t//需要设置为控件的名字\r\n\t\tvar _widgetEventType = [\"overMaxWords\"],\t// wui组件监听事件类型\r\n\t\t\t_pluginEventType = [];\t// 传递到wui组件内部使用插件监听事件类型\r\n\r\n\t\tvar config = {\r\n            toolbars: [[\r\n            \t'undo','redo','|',\r\n            \t'bold','italic','underline','strikethrough','superscript', 'subscript','insertorderedlist','insertunorderedlist','rowspacingtop','rowspacingbottom', 'lineheight','|',\r\n            \t'fontfamily','fontsize','|',\r\n            \t// 'simpleupload','insertimage','pagebreak','|',\r\n            \t'insertimage','pagebreak','|',\r\n            \t'date', 'time','spechars','|',\r\n            \t'inserttable','deletetable','insertparagraphbeforetable','insertrow', 'deleterow','insertcol','deletecol','mergecells','mergeright','mergedown','splittocells', 'splittorows','splittocols','|',\r\n            \t'preview','searchreplace'\r\n            ]],\r\n            // [[\r\n            //     'fullscreen', 'source', '|', 'undo', 'redo', '|',\r\n            //     'bold', 'italic', 'underline', 'fontborder', 'strikethrough', 'superscript', 'subscript', 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', '|', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'selectall', 'cleardoc', '|',\r\n            //     'rowspacingtop', 'rowspacingbottom', 'lineinitialFrameHeight', '|',\r\n            //     'customstyle', 'paragraph', 'fontfamily', 'fontsize', '|',\r\n            //     'directionalityltr', 'directionalityrtl', 'indent', '|',\r\n            //     'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify', '|', 'touppercase', 'tolowercase', '|',\r\n            //     'link', 'unlink', 'anchor', '|', 'imagenone', 'imageleft', 'imageright', 'imagecenter', '|',\r\n            //     'simpleupload', 'insertimage', 'emotion', 'scrawl', 'insertvideo', 'music', 'attachment', 'map', 'gmap', 'insertframe', 'insertcode', 'webapp', 'pagebreak', 'template', 'background', '|',\r\n            //     'horizontal', 'date', 'time', 'spechars', 'wordimage', '|',\r\n            //     'inserttable', 'deletetable', 'insertparagraphbeforetable', 'insertrow', 'deleterow', 'insertcol', 'deletecol', 'mergecells', 'mergeright', 'mergedown', 'splittocells', 'splittorows', 'splittocols', 'charts', '|',\r\n            //     'print', 'preview', 'searchreplace', 'help', 'drafts'\r\n            // ]], // 工具栏菜单\r\n            // {Boolean} 是否启用元素路径,默认是false\r\n            elementPathEnabled : false, \r\n            // {Boolean} 是否开启字数统计,默认是true\r\n            wordCount : true, \r\n            // {Number} 允许的最大字符数,默认是500\r\n            maximumWords: 500,\r\n            // {Number} 初始化编辑器宽度,默认是\"100%\"\r\n            initialFrameWidth: \"100%\",  \r\n            // {Number} 初始化编辑器高度,默认是320\r\n            initialFrameHeight: 320,  \r\n            // {Boolean} 提交到后台的数据是否包含整个html字符串,默认是false\r\n            allHtmlEnabled: false, \r\n            // {Boolean} 是否自动同步编辑器要提交的数据,默认是true\r\n            autoSyncData: true, \r\n            // {String} 初始化编辑器的内容,也可以通过textarea/script/input的value赋值,默认是\"\"\r\n            initialContent: ui.language.ueditor.initialContent,    \r\n            // {String} 超出字数限制提示  留空支持多语言自动切换,否则按此配置显示\r\n            wordOverFlowMsg: ui.language.ueditor.wordOverFlowMsg \r\n\t\t}\r\n\r\n\t\t//默认配置项\r\n\t\tvar defaults = {\r\n\t\t\t// valid\r\n\t\t\tpostfix: \"_ueditor\"  // 节点及属性命名后缀\r\n        };\r\n\r\n\t\tfunction uiUeditor(element, options){\r\n\t\t\t//调用初始函数\r\n\t\t\tthis.init();\t\r\n\t\t}\r\n\r\n\t\tuiUeditor.prototype = {\r\n\t\t\tconstructor: uiUeditor,\r\n\r\n\t\t\tinit: function(){\r\n                // 初始化对象静态属性\r\n\t\t\t\tthis.pluginName = _widgetName;      // 缓存插件名字\r\n\t\t\t\tthis.element = element;             // 保存初始化标签id\r\n\t\t\t\tthis.$element = $(\"#\" + element);\t// 保存初始化标签jQuery\r\n\t\t\t\tthis.defaults = defaults;           // 保存静态默认配置项\r\n\r\n\t\t\t\t// wui.config.js\r\n\t\t\t\t// UEDITOR_CONFIG = window.UEDITOR_CONFIG || {};\r\n\r\n                // 初始化对象动态属性\r\n                this.hasDom = false;        // 保存是否已经初始化此页面结构\r\n\t\t\t\tthis.initDom = this.$element.prop(\"outerHTML\");\r\n\t\t\t\t// 获取元素绑定的参数数据\r\n\t\t\t\tvar AttributeParams = ui.getAttributeParams(this.$element, config);\r\n\t\t\t\t// console.info(AttributeParams);\r\n\t\t\t\toptions = $.extend(true, {}, options, AttributeParams);\r\n\t\t\t\tthis._opt = $.extend(true, {}, config, options);\t// 覆盖默认配置项\r\n\t\t\t\t// console.info(options);\r\n\t\t\t\tif(options.toolbars !== undefined){\r\n\t\t\t\t\tthis._opt.toolbars = options.toolbars;\r\n\t\t\t\t}\r\n                // 初始化对象页面结构模板\r\n\r\n\t\t\t\t// 初始化对象页面结构\r\n                this.ueElement = $('<textarea></textarea>');\r\n\t\t\t\tthis.$Maxcontainer = null; // 组件最外层容器(.wui-ueditor): $element + $viewBox\r\n                this.$viewBox = null;   // 组件可视框(.tag-container):$tag + $input\r\n                // this.$input = null;\t\t// 组件内部标签块输入框([wui-widget-hidden=\"true\"])\r\n\t\t\t\tthis.ueditor = null;\r\n\r\n\t\t\t\t// 初始化对象监听事件容器\r\n                this.listeners = []; //自定义事件,用于监听插件的用户交互\r\n            \tthis.handlers = {};\r\n\r\n\t\t\t\t// 格式化组件配置参数\r\n                this._formatParams();\r\n                // 构建组件页面容器结构\r\n                this.dom = this._buildContainer();  // 创建DOM节点,并返回$Maxcontainer的HTML字符串\r\n\t\t\t\t// this.dom = this._initDom(); \t// 创建DOM节点,并返回DOM节点的HTML字符串\r\n\t\t\t\t// console.info(this);\r\n\t\t\t},\r\n            _initUeditor: function(){\r\n                var self = this, ueSetting = this._opt, id = this.element;\r\n\r\n                // var ueSetting = {\r\n                //     toolbars: params.toolbars, // 工具栏菜单\r\n                //     elementPathEnabled : params.elementPathEnabled, // 是否启用元素路径,默认是false\r\n                //     wordCount : params.wordCount, // 是否开启字数统计\r\n                //     maximumWords: params.maximumWords,      //允许的最大字符数\r\n                //     initialFrameWidth: params.initialFrameWidth, \t//初始化编辑器宽度,默认1000\r\n                //     initialFrameHeight: params.initialFrameHeight,  //初始化编辑器高度,默认320\r\n                //     allHtmlEnabled: params.allHtmlEnabled, //提交到后台的数据是否包含整个html字符串\r\n                //     autoSyncData: params.autoSyncData, \t//自动同步编辑器要提交的数据\r\n                //     initialContent: params.initialContent,    \t//初始化编辑器的内容,也可以通过textarea/script给值,看官网例子\r\n                //     wordOverFlowMsg: params.wordOverFlowMsg    //超出字数限制提示  留空支持多语言自动切换,否则按此配置显示\r\n                // }\r\n                // console.info(ueSetting);\r\n                // 初始化插件\r\n                this.ueditor = UE.getEditor(id, ueSetting);\r\n\r\n                this._bindEvent();\r\n            },\r\n            _buildContainer: function(){\r\n                var self = this, param = this._opt, $selector = this.$element;\r\n\r\n                if(!($selector.parent().hasClass('wui-ueditor'))){\r\n                    var parentDiv = '<div class=\"wui-ueditor\"></div>';\r\n                    $selector.wrap(parentDiv);    // 增加父容器\r\n                }\r\n\r\n                this.$Maxcontainer = $selector.parent(); // 组件最外层容器(.wui-tagsbox): $element + $viewBox\r\n\r\n                var tagName = $selector.get(0).tagName.toLowerCase();\r\n                // console.info(tagName);\r\n                // 规范化初始化标签内容\r\n                if(tagName == \"script\"){\r\n                    this.ueElement = $selector;\r\n                }else if(tagName == \"textarea\"){\r\n                    this.ueElement = $selector;\r\n                }else if(tagName == \"input\"){\r\n                    $selector.hide();\r\n                    $selector.after(this.ueElement);\r\n                    this.element = self.element + self.defaults.postfix;\r\n                    this.ueElement.attr(\"id\", this.element);\r\n                    var value = $selector.val();\r\n                    this.ueElement.val(value);\r\n                }else if(tagName == \"div\"){\r\n                    $selector.hide();\r\n                    $selector.after(this.ueElement);\r\n                    this.element = self.element + self.defaults.postfix;\r\n                    this.ueElement.attr(\"id\", this.element);\r\n                    var value = $selector.val();\r\n                    this.ueElement.val(value);\r\n                }\r\n\r\n                // 绑定name属性(可供wui.getForm调用)\r\n                if(!(this.ueElement.attr('name'))){\r\n                    this.ueElement.attr('name', this.ueElement.attr(\"id\"));\r\n                }\r\n                this.name = this.ueElement.attr('name'); //  保存name属性值\r\n\r\n                this._initUeditor();\r\n\r\n                $selector.attr(\"ui-type\", _widgetName);\r\n\r\n                this.hasDom = true;\r\n                return this.$Maxcontainer.prop(\"outerHTML\");\r\n            },\r\n            // 格式化参数\r\n            _formatParams: function(){\r\n                var param = this._opt;\r\n\r\n                this._opt.maximumWords = ui.formatMaxNumber(param.maximumWords);\r\n\r\n                var value = param.value;\r\n                if(ui.parseToObj(value)){\r\n                    this._opt.value = ui.parseToObj(value);\r\n                }\r\n            },\r\n            // 绑定事件\r\n            _bindEvent: function(){\r\n                var self = this, param = this._opt, ueditor = this.ueditor;\r\n                var maximumWordsContent = \"\";\r\n\t\t\t    var content = \"\";\r\n\t\t\t    var contentTxt = \"\";\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n                ueditor.ready(function() {\r\n\t\t\t        // 绑定事件\r\n\t\t\t\t\tueditor.addListener('contentchange', function() {\r\n\t\t\t\t\t\t// 获取输入的内容（含格式文本）\r\n\t\t\t\t\t\tcontent = ueditor.getContent();\r\n\t\t\t\t\t\t// console.info(content)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 获取字符长度\r\n\t\t\t\t\t\tvar contentLength = ueditor.getContentLength(true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(contentLength <= param.maximumWords){\r\n\t\t\t\t\t\t\tmaximumWordsContent = content;\r\n\t\t\t\t\t\t\t// 获取纯文本内容\r\n\t\t\t\t\t\t\tcontentTxt = ueditor.getContentTxt();\r\n\t\t\t\t\t\t\t// ui.validElement(self.$element);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t                var elem = self.$element.get(0);\r\n\t\t\t                if(elem.form && $.data( elem.form, \"validator\" ) && !ui.isEmptyType(self.$element.rules())){\r\n\t\t\t                    ui.validElement(self.$element);\r\n\t\t\t                }\r\n\t\t\t                  \r\n\t\t\t\t\t\t\t// self._validate();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// console.info(self.listeners.indexOf('overMaxWords'));\r\n\t\t\t\t\t\t\tif(param.onOverMaxWords && typeof(param.onOverMaxWords) === \"function\"){\r\n\t\t\t\t\t\t\t\tparam.onOverMaxWords(param.maximumWords, contentLength);\r\n\t\t\t\t\t\t\t}else if(self.listeners.indexOf('overMaxWords') > -1) {\r\n\t\t\t\t                if(!self.emit({type:'overMaxWords', maxWords: param.maximumWords, contentLength: contentLength})) return ;\r\n\t\t\t\t            }\r\n\t\t\t\t\t\t\t// ueditor.execCommand('undo');\r\n\t\t\t\t\t\t\t// ueditor.setContent(maximumWordsContent);\r\n\t\t\t\t\t\t\t// wui.errorNotice(\"允许输入字符数不能超过\" + param.maximumWords);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t    });\r\n            },\r\n\t        option: function(newOptions){\r\n\t        \tvar params = this._opt;\r\n\t        \t\r\n\t        \tif(!!newOptions){\r\n\r\n\t        \t\tif(typeof newOptions === \"object\"){\r\n\t        \t\t\t// this._resetOption(newOptions);\r\n\t        \t\t}else if(typeof newOptions === \"string\"){\r\n\t        \t\t\tif(newOptions === \"getDefOpt\"){\r\n\t        \t\t\t\treturn config;\r\n\t        \t\t\t}else{\r\n\t        \t\t\t\treturn params[newOptions] == undefined ? ui.logWarn(\"查找的属性值不存在\", FRAME_NAME + \".\" + _widgetName, true) : params[newOptions];\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t\t        \t\t\r\n\t        \t}else{\r\n\r\n\t        \t\treturn params;\r\n\t        \t}\r\n\t        },\r\n\t        // 待完成\r\n\t        _resetOption: function(newOptions){\r\n\t        \tvar self = this, param = this._opt, newTagsParam = {};\r\n\t        \t// {string} 弹出页面URL\r\n\t        \tif(newOptions.popPageUrl != undefined && newOptions.popPageUrl != param.popPageUrl){\r\n\t        \t\tif(newOptions.popPageUrl != \"\"){\r\n\t        \t\t\tthis._opt.popPageUrl = newOptions.popPageUrl;\r\n\t        \t\t}\r\n\t        \t}\r\n\t        },\r\n\t        // type: \"html\"(默认,获取编辑器的html内容)\r\n\t        // \t\t \"text\"(获取编辑器中的纯文本内容,没有段落格式)\r\n\t        // \t\t \"plain\"(得到编辑器的纯文本内容,但会保留段落格式)\r\n\t        // \t\t \"all\"(取得完整的html代码,可以直接显示成完整的html文档)\r\n\t        /*\r\n\t         * 获取组件值\r\n\t         * @param  {String} type 要获取的内容类型,可选值:<br/>\r\n\t         \t<table class=\"table table-bordered table-condensed\">\r\n\t                <thead>\r\n\t                    <tr>\r\n\t                        <td> 传递参数 </td>\r\n\t                        <td> 含义 </td>\r\n\t                    </tr>\r\n\t                </thead>\r\n\t                <tbody>\r\n\t                    <tr>\r\n\t                        <td> \"html\" </td>\r\n\t                        <td> 默认,获取编辑器的html内容 </td>\r\n\t                    </tr>\r\n\t                    <tr>\r\n\t                        <td>\"text\"</td>\r\n\t                        <td> 获取编辑器中的纯文本内容,没有段落格式 </td>\r\n\t                    </tr>\r\n\t                    <tr>\r\n\t                        <td>\"plain\"</td>\r\n\t                        <td> 得到编辑器的纯文本内容,但会保留段落格式 </td>\r\n\t                    </tr>\r\n\t                    <tr>\r\n\t                        <td>\"all\"</td>\r\n\t                        <td> 取得完整的html代码,可以直接显示成完整的html文档 </td>\r\n\t                    </tr>\r\n\t                </tbody>\r\n\t            </table>\r\n\t         * @return {String}      编辑器内容\r\n\t         */\r\n\t        get: function(type){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \ttype = type || \"html\";\r\n\t        \t\r\n\t        \tvar contents = '';\r\n\t        \tif(type == \"all\"){\r\n\t        \t\tcontents = ueditor.getAllHtml();\r\n\t        \t}else if(type == \"text\"){\r\n\t        \t\tcontents = ueditor.getContentTxt();\r\n\t        \t}else if(type == \"plain\"){\r\n\t        \t\tcontents = ueditor.getPlainTxt();\r\n\t        \t}else if(type == \"html\"){\r\n\t        \t\tcontents = ueditor.getContent();\r\n\t        \t}else{\r\n\t        \t\tcontents = ueditor.getContent();\r\n\t        \t}\r\n\r\n\t        \treturn contents;\r\n\t        },\r\n\t        /*\r\n\t         * 设置编辑器内容\r\n\t         * @param {String}  htmlString 要设置的html内容\r\n\t         * @param {Boolean} isAppendTo 若传入true,不清空原来的内容,在最后插入内容,否则,清空内容再插入,默认是false\r\n\t         */\r\n\t        set: function(htmlString, isAppendTo){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \thtmlString = htmlString || \"\";\r\n\t        \tisAppendTo = isAppendTo || false;\r\n\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.setContent(htmlString, isAppendTo);\r\n\t        \t})\r\n\t        },\r\n\t        /*\r\n\t         * 设置当前编辑区域不可编辑,except中的命令除外\r\n\t         * @param  {String/Array} except 工具栏中例外命令的字符串,多个命令用数组表示\r\n\t         * @return this\r\n\t         */\r\n            disabled: function(except){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \texcept = except || \"\";\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.setDisabled(except); //禁用工具栏中除加粗之外的所有功能\r\n\t        \t\t$(ueditor.iframe).parent().addClass(\"disabled\");\r\n\t        \t})\r\n\t        \t\r\n\t        \treturn this;\r\n            },\r\n            /*\r\n             * 设置当前编辑区域可以编辑\r\n\t         * @return this\r\n             */\r\n            enabled: function(){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.setEnabled();\r\n\t        \t\t$(ueditor.iframe).parent().removeClass(\"disabled\");\r\n\t        \t})\r\n\t        \t\r\n\t        \treturn this;\r\n            },\r\n\t        /*\r\n\t         * 设置当前编辑区域不可编辑,except中的命令除外\r\n\t         * @param  {String/Array} except 工具栏中例外命令的字符串,多个命令用数组表示\r\n\t         * @return this\r\n\t         */\r\n            readonly: function(except){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \texcept = except || \"\";\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.setDisabled(except); //禁用工具栏中除加粗之外的所有功能\r\n\t        \t})\r\n\t        \t\r\n\t        \treturn this;\r\n            },\r\n            /*\r\n             * 设置当前编辑区域可以编辑\r\n\t         * @return this\r\n             */\r\n            readwrite: function(){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.setEnabled();\r\n\t        \t})\r\n\t        \t\r\n\t        \treturn this;\r\n            },\r\n            /*\r\n             * 清空编辑器内容(此方法会清空编辑器内容，清空回退列表，会触发reset事件)\r\n             * @return {[type]} [description]\r\n             */\r\n\t        reset: function(){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.reset();\r\n\t        \t})\r\n\t        \t \r\n\t            return this;\r\n\t        },\r\n\t        /*\r\n\t         * 清空编辑器内容(此方法仅清空编辑器内容)\r\n\t         * @return {[type]}              [description]\r\n\t         */\r\n\t        empty: function(){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.setContent(\"\");\r\n\t        \t})\r\n\t        },\r\n\t        /*\r\n\t         * 渲染编辑器的DOM到指定容器\r\n\t         * @param  {String/DOM} containerDom [可传入容器ID或者直接指定容器对象]\r\n\t         * @return {[type]}              [description]\r\n\t         */\r\n\t        render: function(containerDom){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.render(containerDom);\r\n\t        \t})\r\n\t        \t\r\n\t        },\r\n\t        destroy: function(){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\r\n\t        \tueditor.ready(function(){\r\n\t        \t\tueditor.destroy();\r\n\t\t            self.$element.removeData(_pluginDataName);\r\n                \tthis.$element.removeAttr(\"ui-type\");\r\n\t\t            self.$Maxcontainer.replaceWith(self.initDom);\r\n\t        \t})\r\n\t            return this;\r\n\t        },\r\n\t\t\ton: function(type, handler){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t\t\t\tif(_widgetEventType.indexOf(type) > -1){\t// WUI组件事件监听\r\n\t\t\t\t\t// console.info(type);\r\n\t            \tif(typeof this.handlers[type] === 'undefined') {\r\n\t\t                this.handlers[type] = [];\r\n\t\t                this.listeners.push(type);\r\n\t\t            }\r\n\t\t            this.handlers[type].push(handler);\r\n\t            }else{\r\n\t            \tueditor.addListener(type, handler);\r\n\t            }\r\n\t            \r\n\t            return this;\r\n\t        },\r\n\t        off: function(type, handler){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \tvar _i, _j, _listeners, _handlers, _len;\r\n\t        \tif(_widgetEventType.indexOf(type) > -1){\t// 取消WUI组件事件监听\r\n\t        \t\tif(this.handlers[type] instanceof Array) {\r\n\t        \t\t\t_handlers = this.handlers[type];\r\n\t        \t\t\t_listeners = this.listeners;\r\n\r\n\t        \t\t\tfor(_i = 0, _len = _listeners.length; _i < _len; _i++) {\r\n\t\t                    if(_listeners[_i] === type) {\r\n\t\t                        break;\r\n\t\t                    }\r\n\t\t                }\r\n\r\n\t\t                if(handler === undefined){\r\n\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t                \tdelete this.handlers[type];\r\n\t\t                }else{\r\n\t\t                \tfor(_j = 0, _len = _handlers.length; _j < _len; _j++) {\r\n\t\t\t                    if(_handlers[_j] === handler) {\r\n\t\t\t                        break;\r\n\t\t\t                    }\r\n\t\t\t                }\r\n\t\t\t                if(_j < _len){\r\n\t\t\t                \tthis.handlers[type].splice(_j, 1);\r\n\t\t\t                \tif(this.handlers[type].length == 0){\r\n\t\t\t\t                \tthis.listeners.splice(_i, 1);\r\n\t\t\t\t                }\r\n\t\t\t                }\r\n\t\t                }\r\n\t\t            }\r\n\t        \t}else{\r\n\t            \tueditor.removeListener(type, handler);\r\n\t            }\r\n\t        \t\r\n\t\t        return this;\r\n\t        },\r\n\t        emit: function(event){\r\n\t        \tvar self = this, ueditor = this.ueditor;\r\n\t        \t\r\n\t            if(!event.target) {\r\n\t            \tif(!this.$Maxcontainer){\r\n\t            \t\tevent.target = this;\r\n\t            \t}else{\r\n\t            \t\tevent.target = this.$Maxcontainer;\r\n\t            \t}\r\n\t            }\r\n\t            if(this.handlers[event.type] instanceof Array) {\r\n\t                var handlers = this.handlers[event.type];\r\n\t                for(var i = 0, len = handlers.length; i < len; i++) {\r\n\t                    handlers[i](event);\r\n\t                    return true;\r\n\t                }\r\n\t            }else{\r\n\t            \treturn ueditor.fireEvent(event.type);\r\n\t            }\r\n\t            return false;\r\n\t        },\r\n            component: function(){\r\n                return this;\r\n            }\r\n\t\t}\r\n\r\n\t\t$.fn[_pluginName] = function(param1, param2, param3){\r\n\t\t\t//each表示对多个元素调用,用return 是为了返回this,进行链式调用\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\t//判断有没有插件名字 如果你不愿意加if 直接new就好了\r\n\t\t\t\tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t\t//生成插件类实例。\r\n\t\t\t\t\t$.data(document.getElementById(element), _pluginDataName, new uiUeditor(this, param1));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n        // 执行组件的拓展方法\r\n        // @method _executeMethod\r\n        // @param funcName {string} 组件的拓展方法名\r\n        // @param params {Array} 组件的拓展方法传递参数\r\n        // @return 组件拓展方法的返回值\r\n\t\tfunction _executeMethod(funcName, params){\r\n\t\t\tvar data = $.data(document.getElementById(element), _pluginDataName);\r\n\t\t\tif(!data){\r\n\t\t\t\tui.logError(\"wui.ueditor 未初始化或已被销毁\", FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = Array.prototype.slice.call(arguments,1);\r\n\r\n\t\t\tif(typeof (data[funcName]) === \"function\"){\r\n\t\t\t\treturn data[funcName].apply(data, args);\r\n\t\t\t}else{\r\n\t\t\t\tui.logWarn('wui.ueditor 中不存在 ' + funcName + '() 方法', FRAME_NAME + \".\" + _widgetName, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        /**\r\n         * 增加组件事件监听\r\n         *  @event on\r\n         *  @param eventType {string} 可监听事件类型如下：<br/>\r\n         \t<table class=\"table table-bordered table-condensed\">\r\n\t\t        <thead>\r\n\t\t            <tr>\r\n\t\t                <th>事件名</th>\r\n\t\t                <th>描述</th>\r\n\t\t            </tr>\r\n\t\t        </thead>\r\n\t\t        <tbody>\r\n\t\t            <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:ready\">ready</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    编辑器准备就绪后会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:destroy\">destroy</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    执行destroy()方法,会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:reset\">reset</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    执行reset()方法,会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:focus\">focus</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    执行focus方法,会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:langReady\">langReady</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    语言加载完成会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:beforeExecCommand\">beforeExecCommand</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    运行命令之后会触发该命令\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:afterExecCommand\">afterExecCommand</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    运行命令之后会触发该命令\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:firstBeforeExecCommand\">firstBeforeExecCommand</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    运行命令之前会触发该命令\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:beforeGetContent\">beforeGetContent</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在get(\"html\")方法执行之前会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:afterGetContent\">afterGetContent</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在get(\"html\")方法执行之后会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:getAllHtml\">getAllHtml</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在get(\"all\")方法执行时会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:beforeSetContent\">beforeSetContent</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在set()方法执行之前会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:afterSetContent\">afterSetContent</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在set()方法执行之后会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:selectionchange\">selectionchange</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    每当编辑器内部选区发生改变时，将触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:beforeSelectionChange\">beforeSelectionChange</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在所有selectionchange的监听函数执行之前，会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:afterSelectionChange\">afterSelectionChange</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    在所有selectionchange的监听函数执行完之后，会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:contentChange\">contentChange</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    编辑器内容发生改变时会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t                <tr>\r\n\t\t                <td>\r\n\t\t                    <a href=\"#wui.editor:overMaxWords\">overMaxWords</a>\r\n\t\t                </td>\r\n\t\t                <td>\r\n\t\t                    编辑器文本超过限制个数时会触发该事件\r\n\t\t                </td>\r\n\t\t            </tr>\r\n\t\t        </tbody>\r\n\t\t    </table>\r\n         *  @param func {function} 事件类型触发之后的执行方法\r\n         *  @example \r\n            \r\n            // 编辑器内容发生改变时触发\r\n            uiUeditor.on(\"contentChange\", function(){\r\n                console.log(\"contentChange\");\r\n            });\r\n                \r\n         */\r\n        function _on(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"on\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 取消组件事件监听\r\n         * @event off\r\n         * @param eventType {string} 可取消监听事件类型同\"on\"方法的eventType参数\r\n         * @param [func] {function} 事件类型触发之后的执行方法,不传则默认取消该类型绑定的全部事件方法\r\n         * @example \r\n            \r\n            // 取消组件事件监听\r\n            uiUeditor.off(\"contentChange\");\r\n                \r\n         */\r\n        function _off(eventType, func){\r\n            var data = $.data(document.getElementById(element), _pluginDataName);\r\n            _executeMethod(\"off\", eventType, func);\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * 设置编辑器内容\r\n         * @method set\r\n         * @since 0.0.1\r\n         * @param {String}  htmlString 要设置的html内容\r\n         * @param {Boolean} isAppendTo 若传入true,不清空原来的内容,在最后插入内容,否则,清空内容再插入,默认是false\r\n         * @example  \r\n            \r\n            // 设置组件值\r\n            uiUeditor.set('<p>编辑器内容</p>');\r\n           \r\n         */\r\n\t\tfunction _set(htmlString, isAppendTo){\r\n\t\t\treturn _executeMethod(\"set\", htmlString, isAppendTo);\r\n\t\t}\r\n\r\n       \t/**\r\n         * 获取组件值\r\n\t     * @method get\r\n\t     * @since 0.0.1\r\n         * @param  {String} type 要获取的内容类型,可选值:<br/>\r\n         \t<table class=\"table table-bordered table-condensed\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> 传递参数 </td>\r\n                        <td> 含义 </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> \"html\" </td>\r\n                        <td> 默认,获取编辑器的html内容 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"text\"</td>\r\n                        <td> 获取编辑器中的纯文本内容,没有段落格式 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"plain\"</td>\r\n                        <td> 得到编辑器的纯文本内容,但会保留段落格式 </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\"all\"</td>\r\n                        <td> 取得完整的html代码,可以直接显示成完整的html文档 </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n         * @return {String}      编辑器内容\r\n         * @example \r\n            \r\n            // 获取组件值\r\n            uiUeditor.get();   // \"<p>编辑器内容</p>\"\r\n            uiUeditor.get(\"text\");   // \"编辑器内容\"\r\n            uiUeditor.get(\"plain\");   // \"编辑器内容\"\r\n                \r\n         */\r\n        function _get(type){\r\n            return _executeMethod(\"get\", type);\r\n        }\r\n\r\n        /**\r\n         * 设置当前编辑区域不可编辑,except中的命令除外\r\n         * @method disabled\r\n         * @since 0.0.1\r\n         * @param  {String/Array} [except] 工具栏中例外命令的字符串,多个命令用数组表示,默认是\"\"\r\n         * @return this\r\n         * @example \r\n            \r\n            // 阻止点击弹出层和删除标签\r\n            uiUeditor.disabled(\"bold\");\t// 禁用工具栏中除加粗之外的所有功能\r\n                \r\n        */\r\n        function _disabled(except){\r\n            return _executeMethod(\"disabled\", except);\r\n        }\r\n\r\n        /**\r\n        * 设置当前编辑区域可以编辑\r\n        * @method enabled\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置当前编辑区域可以编辑\r\n            uiUeditor.enabled();\r\n                \r\n        */\r\n        function _enabled(){\r\n            return _executeMethod(\"enabled\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件只读\r\n        * @method readonly\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件只读\r\n            uiUeditor.readonly();\r\n                \r\n        */\r\n        function _readonly(){\r\n            return _executeMethod(\"readonly\");\r\n        }\r\n\r\n        /**\r\n        * 设置组件可读可写\r\n        * @method readwrite\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 设置组件可读可写\r\n            uiUeditor.readwrite();\r\n                \r\n        */\r\n        function _readwrite(){\r\n            return _executeMethod(\"readwrite\");\r\n        }\r\n\r\n        /**\r\n        * 设置或者获取组件参数\r\n        * @method option\r\n        * @param params {More} 可传递参数类型如下表,传递不同的参数类型含义不同<br/>\r\n\t\t \t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> 传递参数类型 </td>\r\n\t\t\t\t\t\t<td> 含义 </td>\r\n\t\t\t\t\t\t<td> 返回值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> undefined </td>\r\n\t\t\t\t\t\t<td> 获取组件的配置参数 </td>\r\n\t\t\t\t\t\t<td> JSON 组件的配置参数 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> String </td>\r\n\t\t\t\t\t\t<td> 获取传入字符串对应的参数值 </td>\r\n\t\t\t\t\t\t<td> 传递的字符串对应的组件配置值 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> JSON </td>\r\n\t\t\t\t\t\t<td> 重置组件参数配置 </td>\r\n\t\t\t\t\t\t<td> 组件对象 </td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t \t</table>\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 获取组件参数\r\n            uiUeditor.option();\r\n                \r\n        */\r\n\t\tfunction _option(params){\r\n\t\t\treturn _executeMethod(\"option\", params);\r\n\t\t}\r\n\r\n        /**\r\n        * 清空编辑器内容(此方法仅清空编辑器内容)\r\n        * @method empty\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空编辑器内容\r\n            uiUeditor.empty();\r\n                \r\n        */\r\n\t\tfunction _empty(){\r\n\t\t\treturn _executeMethod(\"empty\");\r\n\t\t}\r\n\r\n        /**\r\n        * 清空编辑器内容(此方法会清空编辑器内容，清空回退列表，会触发reset事件)\r\n        * @method reset\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 清空编辑器内容\r\n            uiUeditor.reset();\r\n                \r\n        */\r\n\t\tfunction _reset(){\r\n\t\t\treturn _executeMethod(\"reset\");\r\n\t\t}\r\n\r\n        /**\r\n        * 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n        * @method destroy\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            // 销毁组件：销毁之后可通过重新初始化组件启用组件\r\n            uiUeditor.destroy();\r\n                \r\n        */\r\n\t\tfunction _destroy(){\r\n\t\t\treturn _executeMethod(\"destroy\");\r\n\t\t}\r\n\r\n        /**\r\n        * 获取wui组件的内部定义组件,可自定义拓展,不建议修改默认属性值,除非你清楚该属性含义\r\n        * @method component\r\n        * @since 0.0.1\r\n        * @example \r\n            \r\n            var component = uiUeditor.component();\r\n            console.info(component);\r\n        */\r\n        function _component(){\r\n            return _executeMethod(\"component\");\r\n        }\r\n\r\n        /**\r\n         * 初始化方法\r\n         * @method init\r\n         * @param [options] {json} 组件配置参数\r\n         * @return {Object} 若是已经初始化过,则根据传递参数重新配置参数,并返回该组件对象,否则初始化并返回该组件对象\r\n         * @since 0.0.1\r\n         * @example \r\n            // 重新初始化组件,若是传递参数,则\r\n            var myUeditor = uiUeditor.init();\r\n                \r\n         */\r\n        function _init(opt){\r\n        \tif(!$.data(document.getElementById(element), _pluginDataName)){\r\n\t\t\t\t$('#' + element)[_pluginName](opt);\r\n\t\t\t}else{\r\n\t\t\t\tif(opt && ui.isJson(opt)){\r\n\t\t\t\t\treturn _executeMethod(\"option\", opt);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n\r\n\r\n        //执行初始化\r\n        _init(options);\r\n\r\n\t\treturn {\r\n            init: _init,            // 初始化\r\n\t\t\ton: _on,\r\n\t\t\toff: _off,\r\n\t\t\tget: _get,\r\n\t\t\tset: _set,\r\n            enabled: _enabled,\r\n            disabled: _disabled,\r\n            readwrite: _readwrite,\r\n            readonly: _readonly,\r\n\t\t\tdestroy: _destroy,\r\n\t\t\toption: _option,\r\n\t\t\treset: _reset,\r\n            // 获取wui组件的内部定义组件\r\n            component: _component,\r\n\t\t\tempty: _empty\r\n\t\t}\r\n\t}\r\n\r\n\treturn ui;\r\n})( wui || {}, libs );"]}